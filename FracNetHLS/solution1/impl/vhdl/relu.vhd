-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu is
port (
    ap_ready : OUT STD_LOGIC;
    norm_V : IN STD_LOGIC_VECTOR (13 downto 0);
    shiftx_V : IN STD_LOGIC_VECTOR (10 downto 0);
    shifty_V : IN STD_LOGIC_VECTOR (10 downto 0);
    weight_V : IN STD_LOGIC_VECTOR (10 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of relu is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_1FFF : STD_LOGIC_VECTOR (13 downto 0) := "01111111111111";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal lhs_V_fu_86_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_fu_90_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_fu_86_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_fu_98_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_fu_106_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_V_fu_120_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_fu_102_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_V_fu_120_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_1_fu_126_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_112_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_164_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln388_fu_172_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_2_fu_180_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_3_fu_198_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_3_fu_194_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_1_fu_206_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_1_fu_214_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_1_fu_210_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_4_fu_228_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_4_fu_250_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_583_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_fu_285_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_7_fu_269_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln415_fu_292_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_8_fu_296_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_3_fu_302_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_278_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_330_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_345_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal carry_1_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_fu_234_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_220_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_366_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_262_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_1_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_431_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln340_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln388_1_fu_439_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln388_2_fu_527_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln340_1_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln340_1_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1_fu_404_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln340_4_fu_541_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln340_4_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1494_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln340_2_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_519_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln340_5_fu_555_p3 : STD_LOGIC_VECTOR (13 downto 0);

    component pgconv32_2bit_macdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;



begin
    pgconv32_2bit_macdEe_U18 : component pgconv32_2bit_macdEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 14,
        din2_WIDTH => 19,
        dout_WIDTH => 25)
    port map (
        din0 => weight_V,
        din1 => p_Val2_2_fu_180_p3,
        din2 => rhs_V_4_fu_250_p3,
        dout => grp_fu_583_p3);




    Range1_all_ones_fu_354_p2 <= "1" when (tmp_2_fu_345_p4 = ap_const_lv4_F) else "0";
    Range1_all_zeros_fu_360_p2 <= "1" when (tmp_2_fu_345_p4 = ap_const_lv4_0) else "0";
    Range2_all_ones_fu_339_p2 <= "1" when (tmp_1_fu_330_p4 = ap_const_lv3_7) else "0";
    and_ln340_1_fu_549_p2 <= (or_ln340_1_fu_398_p2 and icmp_ln1494_fu_188_p2);
    and_ln340_2_fu_569_p2 <= (xor_ln1494_fu_563_p2 and or_ln340_4_fu_513_p2);
    and_ln340_fu_535_p2 <= (underflow_1_fu_380_p2 and icmp_ln1494_fu_188_p2);
    and_ln779_fu_425_p2 <= (xor_ln779_fu_419_p2 and Range2_all_ones_fu_339_p2);
    and_ln781_fu_447_p2 <= (carry_1_fu_316_p2 and Range1_all_ones_fu_354_p2);
    and_ln786_fu_477_p2 <= (p_Result_6_fu_322_p3 and deleted_ones_fu_431_p3);
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        select_ln340_2_fu_519_p3 when (and_ln340_2_fu_569_p2(0) = '1') else 
        select_ln340_5_fu_555_p3;
    carry_1_fu_316_p2 <= (xor_ln416_fu_310_p2 and p_Result_5_fu_278_p3);
    deleted_ones_fu_431_p3 <= 
        and_ln779_fu_425_p2 when (carry_1_fu_316_p2(0) = '1') else 
        Range1_all_ones_fu_354_p2;
    deleted_zeros_fu_366_p3 <= 
        Range1_all_ones_fu_354_p2 when (carry_1_fu_316_p2(0) = '1') else 
        Range1_all_zeros_fu_360_p2;
    icmp_ln1494_fu_188_p2 <= "1" when (signed(p_Val2_2_fu_180_p3) > signed(ap_const_lv14_0)) else "0";
    lhs_V_3_fu_194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_2_fu_180_p3),15));
    lhs_V_fu_86_p0 <= norm_V;
        lhs_V_fu_86_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_86_p0),15));

    or_ln340_1_fu_398_p2 <= (xor_ln340_1_fu_392_p2 or p_Result_3_fu_234_p3);
    or_ln340_2_fu_501_p2 <= (underflow_2_fu_495_p2 or overflow_fu_471_p2);
    or_ln340_3_fu_507_p2 <= (xor_ln785_1_fu_465_p2 or and_ln786_fu_477_p2);
    or_ln340_4_fu_513_p2 <= (or_ln340_3_fu_507_p2 or and_ln781_fu_447_p2);
    or_ln340_fu_158_p2 <= (xor_ln340_fu_152_p2 or p_Result_1_fu_126_p3);
    or_ln785_fu_459_p2 <= (xor_ln785_fu_453_p2 or p_Result_6_fu_322_p3);
    or_ln786_fu_483_p2 <= (and_ln786_fu_477_p2 or and_ln781_fu_447_p2);
    overflow_fu_471_p2 <= (xor_ln785_1_fu_465_p2 and or_ln785_fu_459_p2);
    p_Result_1_fu_126_p3 <= tmp_V_fu_120_p2(13 downto 13);
    p_Result_2_fu_220_p3 <= ret_V_1_fu_214_p2(14 downto 14);
    p_Result_3_fu_234_p3 <= p_Val2_4_fu_228_p2(13 downto 13);
    p_Result_4_fu_262_p3 <= grp_fu_583_p3(24 downto 24);
    p_Result_5_fu_278_p3 <= grp_fu_583_p3(20 downto 20);
    p_Result_6_fu_322_p3 <= p_Val2_8_fu_296_p2(13 downto 13);
    p_Result_s_fu_112_p3 <= ret_V_fu_106_p2(14 downto 14);
    p_Val2_2_fu_180_p3 <= 
        select_ln340_fu_164_p3 when (or_ln340_fu_158_p2(0) = '1') else 
        select_ln388_fu_172_p3;
    p_Val2_4_fu_228_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_210_p1) + signed(p_Val2_2_fu_180_p3));
    p_Val2_7_fu_269_p4 <= grp_fu_583_p3(20 downto 7);
    p_Val2_8_fu_296_p2 <= std_logic_vector(unsigned(p_Val2_7_fu_269_p4) + unsigned(zext_ln415_fu_292_p1));
    ret_V_1_fu_214_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_194_p1) + unsigned(sext_ln728_1_fu_206_p1));
    ret_V_fu_106_p2 <= std_logic_vector(signed(lhs_V_fu_86_p1) + signed(sext_ln728_fu_98_p1));
    rhs_V_3_fu_198_p3 <= (shifty_V & ap_const_lv1_0);
    rhs_V_4_fu_250_p3 <= (shifty_V & ap_const_lv8_0);
    rhs_V_fu_90_p3 <= (shiftx_V & ap_const_lv1_0);
    select_ln340_1_fu_404_p3 <= 
        ap_const_lv14_1FFF when (xor_ln340_3_fu_386_p2(0) = '1') else 
        p_Val2_4_fu_228_p2;
    select_ln340_2_fu_519_p3 <= 
        ap_const_lv14_1FFF when (or_ln340_2_fu_501_p2(0) = '1') else 
        p_Val2_8_fu_296_p2;
    select_ln340_4_fu_541_p3 <= 
        select_ln388_1_fu_439_p3 when (and_ln340_fu_535_p2(0) = '1') else 
        select_ln388_2_fu_527_p3;
    select_ln340_5_fu_555_p3 <= 
        select_ln340_1_fu_404_p3 when (and_ln340_1_fu_549_p2(0) = '1') else 
        select_ln340_4_fu_541_p3;
    select_ln340_fu_164_p3 <= 
        ap_const_lv14_1FFF when (xor_ln340_2_fu_146_p2(0) = '1') else 
        tmp_V_fu_120_p2;
    select_ln388_1_fu_439_p3 <= 
        ap_const_lv14_2000 when (underflow_1_fu_380_p2(0) = '1') else 
        p_Val2_4_fu_228_p2;
    select_ln388_2_fu_527_p3 <= 
        ap_const_lv14_2000 when (underflow_2_fu_495_p2(0) = '1') else 
        p_Val2_8_fu_296_p2;
    select_ln388_fu_172_p3 <= 
        ap_const_lv14_2000 when (underflow_fu_140_p2(0) = '1') else 
        tmp_V_fu_120_p2;
        sext_ln1192_1_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_3_fu_198_p3),14));

        sext_ln1192_fu_102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_90_p3),14));

        sext_ln728_1_fu_206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_3_fu_198_p3),15));

        sext_ln728_fu_98_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_90_p3),15));

    tmp_1_fu_330_p4 <= grp_fu_583_p3(24 downto 22);
    tmp_2_fu_345_p4 <= grp_fu_583_p3(24 downto 21);
    tmp_3_fu_302_p3 <= p_Val2_8_fu_296_p2(13 downto 13);
    tmp_5_fu_412_p3 <= grp_fu_583_p3(21 downto 21);
    tmp_V_fu_120_p0 <= norm_V;
    tmp_V_fu_120_p2 <= std_logic_vector(signed(tmp_V_fu_120_p0) + signed(sext_ln1192_fu_102_p1));
    tmp_fu_285_p3 <= grp_fu_583_p3(6 downto 6);
    underflow_1_fu_380_p2 <= (xor_ln786_1_fu_374_p2 and p_Result_2_fu_220_p3);
    underflow_2_fu_495_p2 <= (xor_ln786_2_fu_489_p2 and p_Result_4_fu_262_p3);
    underflow_fu_140_p2 <= (xor_ln786_fu_134_p2 and p_Result_s_fu_112_p3);
    xor_ln1494_fu_563_p2 <= (icmp_ln1494_fu_188_p2 xor ap_const_lv1_1);
    xor_ln340_1_fu_392_p2 <= (p_Result_2_fu_220_p3 xor ap_const_lv1_1);
    xor_ln340_2_fu_146_p2 <= (p_Result_s_fu_112_p3 xor p_Result_1_fu_126_p3);
    xor_ln340_3_fu_386_p2 <= (p_Result_3_fu_234_p3 xor p_Result_2_fu_220_p3);
    xor_ln340_fu_152_p2 <= (p_Result_s_fu_112_p3 xor ap_const_lv1_1);
    xor_ln416_fu_310_p2 <= (tmp_3_fu_302_p3 xor ap_const_lv1_1);
    xor_ln779_fu_419_p2 <= (tmp_5_fu_412_p3 xor ap_const_lv1_1);
    xor_ln785_1_fu_465_p2 <= (p_Result_4_fu_262_p3 xor ap_const_lv1_1);
    xor_ln785_fu_453_p2 <= (deleted_zeros_fu_366_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_374_p2 <= (p_Result_3_fu_234_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_489_p2 <= (or_ln786_fu_483_p2 xor ap_const_lv1_1);
    xor_ln786_fu_134_p2 <= (p_Result_1_fu_126_p3 xor ap_const_lv1_1);
    zext_ln415_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_285_p3),14));
end behav;
