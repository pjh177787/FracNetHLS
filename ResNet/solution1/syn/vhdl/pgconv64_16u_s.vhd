-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pgconv64_16u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bottom1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bottom1_V_ce0 : OUT STD_LOGIC;
    bottom1_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    bottom1_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bottom1_V_ce1 : OUT STD_LOGIC;
    bottom1_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    top_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_0_V_ce0 : OUT STD_LOGIC;
    top_0_V_we0 : OUT STD_LOGIC;
    top_0_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_1_V_ce0 : OUT STD_LOGIC;
    top_1_V_we0 : OUT STD_LOGIC;
    top_1_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_2_V_ce0 : OUT STD_LOGIC;
    top_2_V_we0 : OUT STD_LOGIC;
    top_2_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_3_V_ce0 : OUT STD_LOGIC;
    top_3_V_we0 : OUT STD_LOGIC;
    top_3_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_4_V_ce0 : OUT STD_LOGIC;
    top_4_V_we0 : OUT STD_LOGIC;
    top_4_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_5_V_ce0 : OUT STD_LOGIC;
    top_5_V_we0 : OUT STD_LOGIC;
    top_5_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_6_V_ce0 : OUT STD_LOGIC;
    top_6_V_we0 : OUT STD_LOGIC;
    top_6_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_7_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_7_V_ce0 : OUT STD_LOGIC;
    top_7_V_we0 : OUT STD_LOGIC;
    top_7_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_8_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_8_V_ce0 : OUT STD_LOGIC;
    top_8_V_we0 : OUT STD_LOGIC;
    top_8_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_9_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_9_V_ce0 : OUT STD_LOGIC;
    top_9_V_we0 : OUT STD_LOGIC;
    top_9_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_10_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_10_V_ce0 : OUT STD_LOGIC;
    top_10_V_we0 : OUT STD_LOGIC;
    top_10_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_11_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_11_V_ce0 : OUT STD_LOGIC;
    top_11_V_we0 : OUT STD_LOGIC;
    top_11_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_12_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_12_V_ce0 : OUT STD_LOGIC;
    top_12_V_we0 : OUT STD_LOGIC;
    top_12_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_13_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_13_V_ce0 : OUT STD_LOGIC;
    top_13_V_we0 : OUT STD_LOGIC;
    top_13_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_14_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_14_V_ce0 : OUT STD_LOGIC;
    top_14_V_we0 : OUT STD_LOGIC;
    top_14_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_15_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_15_V_ce0 : OUT STD_LOGIC;
    top_15_V_we0 : OUT STD_LOGIC;
    top_15_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of pgconv64_16u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv64_FFFF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000001111111111111111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_393 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_0_reg_404 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_0_reg_415 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln103_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_778 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln103_reg_778_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln103_fu_504_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln103_reg_782 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln109_fu_516_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_reg_787 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln109_6_fu_556_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln109_6_reg_792 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln109_8_fu_562_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_8_reg_797 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_9_fu_576_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_9_reg_804 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln109_8_fu_590_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln109_8_reg_810 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln110_fu_605_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln110_reg_821 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln112_fu_642_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln112_reg_832 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal col_fu_658_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_reg_843 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln111_fu_663_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln111_reg_848 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln115_6_fu_705_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln115_6_reg_859 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal zext_ln113_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln113_reg_864 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln113_reg_864_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln116_fu_719_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln116_reg_889 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln117_fu_733_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln117_reg_899 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_engine_64_fu_426_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_s_reg_904 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_compute_engine_64_fu_436_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp1_V_reg_909 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp2_V_reg_924 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp3_V_reg_929 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp4_V_reg_939 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp5_V_reg_944 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp6_V_reg_949 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp7_V_reg_954 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_V_ret_sum_engine_fu_467_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_V_ret_reg_959 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_120_reg_965 : STD_LOGIC_VECTOR (4 downto 0);
    signal norm_V_batch_norm_fu_481_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal norm_V_reg_970 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal grp_compute_engine_64_fu_426_ap_start : STD_LOGIC;
    signal grp_compute_engine_64_fu_426_ap_done : STD_LOGIC;
    signal grp_compute_engine_64_fu_426_ap_idle : STD_LOGIC;
    signal grp_compute_engine_64_fu_426_ap_ready : STD_LOGIC;
    signal grp_compute_engine_64_fu_436_ap_start : STD_LOGIC;
    signal grp_compute_engine_64_fu_436_ap_done : STD_LOGIC;
    signal grp_compute_engine_64_fu_436_ap_idle : STD_LOGIC;
    signal grp_compute_engine_64_fu_436_ap_ready : STD_LOGIC;
    signal op_V_assign_relu_fu_446_ap_ready : STD_LOGIC;
    signal op_V_assign_relu_fu_446_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal sum_V_ret_sum_engine_fu_467_ap_ready : STD_LOGIC;
    signal norm_V_batch_norm_fu_481_ap_ready : STD_LOGIC;
    signal norm_V_batch_norm_fu_481_sum_V : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_397_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_row_0_phi_fu_408_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_col_0_phi_fu_419_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_engine_64_fu_426_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal grp_compute_engine_64_fu_436_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln109_9_fu_600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_3_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln112_6_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_3_fu_672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_fu_728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln115_6_fu_738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_fu_742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln117_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln104_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln109_fu_486_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_7_fu_524_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_532_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_115_fu_544_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln109_fu_540_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln109_7_fu_552_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_fu_492_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln115_fu_570_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln109_3_fu_584_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln109_7_fu_594_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln110_fu_609_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_116_fu_620_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_117_fu_631_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln112_fu_627_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln112_5_fu_638_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln112_3_fu_648_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln111_3_fu_667_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_118_fu_677_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_119_fu_688_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln115_fu_684_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln115_5_fu_695_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln115_5_fu_699_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln113_fu_710_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln114_fu_724_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1494_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln700_fu_765_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component compute_engine_64 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        b_V : IN STD_LOGIC_VECTOR (63 downto 0);
        w_V : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component relu IS
    port (
        ap_ready : OUT STD_LOGIC;
        norm_V : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component sum_engine IS
    port (
        ap_ready : OUT STD_LOGIC;
        t0_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t1_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t2_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t3_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t4_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t5_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t6_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t7_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t8_V : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component batch_norm IS
    port (
        ap_ready : OUT STD_LOGIC;
        sum_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    grp_compute_engine_64_fu_426 : component compute_engine_64
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_engine_64_fu_426_ap_start,
        ap_done => grp_compute_engine_64_fu_426_ap_done,
        ap_idle => grp_compute_engine_64_fu_426_ap_idle,
        ap_ready => grp_compute_engine_64_fu_426_ap_ready,
        ap_ce => ap_const_logic_1,
        b_V => bottom1_V_q0,
        w_V => ap_const_lv64_FFFF,
        ap_return => grp_compute_engine_64_fu_426_ap_return);

    grp_compute_engine_64_fu_436 : component compute_engine_64
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_engine_64_fu_436_ap_start,
        ap_done => grp_compute_engine_64_fu_436_ap_done,
        ap_idle => grp_compute_engine_64_fu_436_ap_idle,
        ap_ready => grp_compute_engine_64_fu_436_ap_ready,
        ap_ce => ap_const_logic_1,
        b_V => bottom1_V_q1,
        w_V => ap_const_lv64_FFFF,
        ap_return => grp_compute_engine_64_fu_436_ap_return);

    op_V_assign_relu_fu_446 : component relu
    port map (
        ap_ready => op_V_assign_relu_fu_446_ap_ready,
        norm_V => norm_V_reg_970,
        ap_return => op_V_assign_relu_fu_446_ap_return);

    sum_V_ret_sum_engine_fu_467 : component sum_engine
    port map (
        ap_ready => sum_V_ret_sum_engine_fu_467_ap_ready,
        t0_V => p_s_reg_904,
        t1_V => tmp1_V_reg_909,
        t2_V => tmp2_V_reg_924,
        t3_V => tmp3_V_reg_929,
        t4_V => tmp4_V_reg_939,
        t5_V => tmp5_V_reg_944,
        t6_V => tmp6_V_reg_949,
        t7_V => tmp7_V_reg_954,
        t8_V => grp_compute_engine_64_fu_426_ap_return,
        ap_return => sum_V_ret_sum_engine_fu_467_ap_return);

    norm_V_batch_norm_fu_481 : component batch_norm
    port map (
        ap_ready => norm_V_batch_norm_fu_481_ap_ready,
        sum_V => norm_V_batch_norm_fu_481_sum_V,
        ap_return => norm_V_batch_norm_fu_481_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_engine_64_fu_426_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_engine_64_fu_426_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln103_fu_498_p2 = ap_const_lv1_0)))) then 
                    grp_compute_engine_64_fu_426_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_engine_64_fu_426_ap_ready = ap_const_logic_1)) then 
                    grp_compute_engine_64_fu_426_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_engine_64_fu_436_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_engine_64_fu_436_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln103_fu_498_p2 = ap_const_lv1_0)))) then 
                    grp_compute_engine_64_fu_436_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_engine_64_fu_436_ap_ready = ap_const_logic_1)) then 
                    grp_compute_engine_64_fu_436_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_0_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then 
                col_0_reg_415 <= col_reg_843;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                col_0_reg_415 <= ap_const_lv4_1;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then 
                indvar_flatten_reg_393 <= add_ln103_reg_782;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_393 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    row_0_reg_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then 
                row_0_reg_404 <= select_ln109_8_reg_797;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_0_reg_404 <= ap_const_lv4_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln103_reg_782 <= add_ln103_fu_504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln103_fu_498_p2 = ap_const_lv1_0))) then
                    add_ln109_6_reg_792(7 downto 1) <= add_ln109_6_fu_556_p2(7 downto 1);
                select_ln109_9_reg_804 <= select_ln109_9_fu_576_p3;
                select_ln109_reg_787 <= select_ln109_fu_516_p3;
                    zext_ln109_8_reg_810(3 downto 0) <= zext_ln109_8_fu_590_p1(3 downto 0);
                    zext_ln110_reg_821(3 downto 0) <= zext_ln110_fu_605_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then
                    add_ln112_reg_832(7 downto 1) <= add_ln112_fu_642_p2(7 downto 1);
                    zext_ln111_reg_848(3 downto 0) <= zext_ln111_fu_663_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then
                add_ln115_6_reg_859 <= add_ln115_6_fu_705_p2;
                add_ln116_reg_889 <= add_ln116_fu_719_p2;
                add_ln117_reg_899 <= add_ln117_fu_733_p2;
                    zext_ln113_reg_864(7 downto 0) <= zext_ln113_fu_714_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then
                col_reg_843 <= col_fu_658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln103_reg_778 <= icmp_ln103_fu_498_p2;
                icmp_ln103_reg_778_pp0_iter1_reg <= icmp_ln103_reg_778;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then
                norm_V_reg_970 <= norm_V_batch_norm_fu_481_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then
                p_s_reg_904 <= grp_compute_engine_64_fu_426_ap_return;
                tmp1_V_reg_909 <= grp_compute_engine_64_fu_436_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln103_fu_498_p2 = ap_const_lv1_0))) then
                select_ln109_8_reg_797 <= select_ln109_8_fu_562_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then
                sum_V_ret_reg_959 <= sum_V_ret_sum_engine_fu_467_ap_return;
                tmp_120_reg_965 <= sum_V_ret_sum_engine_fu_467_ap_return(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then
                tmp2_V_reg_924 <= grp_compute_engine_64_fu_426_ap_return;
                tmp3_V_reg_929 <= grp_compute_engine_64_fu_436_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then
                tmp4_V_reg_939 <= grp_compute_engine_64_fu_426_ap_return;
                tmp5_V_reg_944 <= grp_compute_engine_64_fu_436_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then
                tmp6_V_reg_949 <= grp_compute_engine_64_fu_426_ap_return;
                tmp7_V_reg_954 <= grp_compute_engine_64_fu_436_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    zext_ln113_reg_864_pp0_iter1_reg(7 downto 0) <= zext_ln113_reg_864(7 downto 0);
            end if;
        end if;
    end process;
    add_ln109_6_reg_792(0) <= '0';
    zext_ln109_8_reg_810(7 downto 4) <= "0000";
    zext_ln110_reg_821(7 downto 4) <= "0000";
    add_ln112_reg_832(0) <= '0';
    zext_ln111_reg_848(7 downto 4) <= "0000";
    zext_ln113_reg_864(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln113_reg_864_pp0_iter1_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln103_fu_498_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_fu_498_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_fu_498_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln103_fu_504_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_397_p4) + unsigned(ap_const_lv7_1));
    add_ln109_3_fu_584_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(select_ln109_fu_516_p3));
    add_ln109_6_fu_556_p2 <= std_logic_vector(unsigned(zext_ln109_fu_540_p1) + unsigned(zext_ln109_7_fu_552_p1));
    add_ln109_7_fu_594_p2 <= std_logic_vector(unsigned(zext_ln109_8_fu_590_p1) + unsigned(add_ln109_6_fu_556_p2));
    add_ln109_fu_486_p2 <= std_logic_vector(unsigned(ap_phi_mux_row_0_phi_fu_408_p4) + unsigned(ap_const_lv4_F));
    add_ln110_fu_609_p2 <= std_logic_vector(unsigned(zext_ln110_fu_605_p1) + unsigned(add_ln109_6_fu_556_p2));
    add_ln111_3_fu_667_p2 <= std_logic_vector(unsigned(zext_ln111_fu_663_p1) + unsigned(add_ln109_6_reg_792));
    add_ln112_3_fu_648_p2 <= std_logic_vector(unsigned(zext_ln109_8_reg_810) + unsigned(add_ln112_fu_642_p2));
    add_ln112_fu_642_p2 <= std_logic_vector(unsigned(zext_ln112_fu_627_p1) + unsigned(zext_ln112_5_fu_638_p1));
    add_ln113_fu_710_p2 <= std_logic_vector(unsigned(zext_ln110_reg_821) + unsigned(add_ln112_reg_832));
    add_ln114_fu_724_p2 <= std_logic_vector(unsigned(zext_ln111_reg_848) + unsigned(add_ln112_reg_832));
    add_ln115_5_fu_699_p2 <= std_logic_vector(unsigned(zext_ln115_fu_684_p1) + unsigned(zext_ln115_5_fu_695_p1));
    add_ln115_6_fu_705_p2 <= std_logic_vector(unsigned(zext_ln109_8_reg_810) + unsigned(add_ln115_5_fu_699_p2));
    add_ln115_fu_570_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) + unsigned(ap_phi_mux_row_0_phi_fu_408_p4));
    add_ln116_fu_719_p2 <= std_logic_vector(unsigned(zext_ln110_reg_821) + unsigned(add_ln115_5_fu_699_p2));
    add_ln117_fu_733_p2 <= std_logic_vector(unsigned(zext_ln111_reg_848) + unsigned(add_ln115_5_fu_699_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln103_fu_498_p2)
    begin
        if ((icmp_ln103_fu_498_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_col_0_phi_fu_419_p4_assign_proc : process(col_0_reg_415, icmp_ln103_reg_778, ap_CS_fsm_pp0_stage0, col_reg_843, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then 
            ap_phi_mux_col_0_phi_fu_419_p4 <= col_reg_843;
        else 
            ap_phi_mux_col_0_phi_fu_419_p4 <= col_0_reg_415;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_397_p4_assign_proc : process(indvar_flatten_reg_393, icmp_ln103_reg_778, ap_CS_fsm_pp0_stage0, add_ln103_reg_782, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_397_p4 <= add_ln103_reg_782;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_397_p4 <= indvar_flatten_reg_393;
        end if; 
    end process;


    ap_phi_mux_row_0_phi_fu_408_p4_assign_proc : process(row_0_reg_404, icmp_ln103_reg_778, ap_CS_fsm_pp0_stage0, select_ln109_8_reg_797, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_778 = ap_const_lv1_0))) then 
            ap_phi_mux_row_0_phi_fu_408_p4 <= select_ln109_8_reg_797;
        else 
            ap_phi_mux_row_0_phi_fu_408_p4 <= row_0_reg_404;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bottom1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln113_fu_714_p1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, zext_ln109_9_fu_600_p1, zext_ln111_3_fu_672_p1, zext_ln115_6_fu_738_p1, zext_ln117_fu_746_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                bottom1_V_address0 <= zext_ln117_fu_746_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                bottom1_V_address0 <= zext_ln115_6_fu_738_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                bottom1_V_address0 <= zext_ln113_fu_714_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                bottom1_V_address0 <= zext_ln111_3_fu_672_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                bottom1_V_address0 <= zext_ln109_9_fu_600_p1(7 - 1 downto 0);
            else 
                bottom1_V_address0 <= "XXXXXXX";
            end if;
        else 
            bottom1_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    bottom1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln110_3_fu_615_p1, zext_ln112_6_fu_653_p1, zext_ln114_fu_728_p1, zext_ln116_fu_742_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                bottom1_V_address1 <= zext_ln116_fu_742_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                bottom1_V_address1 <= zext_ln114_fu_728_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                bottom1_V_address1 <= zext_ln112_6_fu_653_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                bottom1_V_address1 <= zext_ln110_3_fu_615_p1(7 - 1 downto 0);
            else 
                bottom1_V_address1 <= "XXXXXXX";
            end if;
        else 
            bottom1_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    bottom1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            bottom1_V_ce0 <= ap_const_logic_1;
        else 
            bottom1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bottom1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            bottom1_V_ce1 <= ap_const_logic_1;
        else 
            bottom1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    col_fu_658_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln109_reg_787));
    grp_compute_engine_64_fu_426_ap_start <= grp_compute_engine_64_fu_426_ap_start_reg;
    grp_compute_engine_64_fu_436_ap_start <= grp_compute_engine_64_fu_436_ap_start_reg;
    icmp_ln103_fu_498_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_397_p4 = ap_const_lv7_40) else "0";
    icmp_ln104_fu_510_p2 <= "1" when (ap_phi_mux_col_0_phi_fu_419_p4 = ap_const_lv4_9) else "0";
    icmp_ln1494_fu_760_p2 <= "0" when (tmp_120_reg_965 = ap_const_lv5_0) else "1";
    norm_V_batch_norm_fu_481_sum_V <= 
        shl_ln700_fu_765_p2 when (icmp_ln1494_fu_760_p2(0) = '1') else 
        sum_V_ret_reg_959;
    row_fu_492_p2 <= std_logic_vector(unsigned(ap_phi_mux_row_0_phi_fu_408_p4) + unsigned(ap_const_lv4_1));
    select_ln109_7_fu_524_p3 <= 
        ap_phi_mux_row_0_phi_fu_408_p4 when (icmp_ln104_fu_510_p2(0) = '1') else 
        add_ln109_fu_486_p2;
    select_ln109_8_fu_562_p3 <= 
        row_fu_492_p2 when (icmp_ln104_fu_510_p2(0) = '1') else 
        ap_phi_mux_row_0_phi_fu_408_p4;
    select_ln109_9_fu_576_p3 <= 
        add_ln115_fu_570_p2 when (icmp_ln104_fu_510_p2(0) = '1') else 
        row_fu_492_p2;
    select_ln109_fu_516_p3 <= 
        ap_const_lv4_1 when (icmp_ln104_fu_510_p2(0) = '1') else 
        ap_phi_mux_col_0_phi_fu_419_p4;
    shl_ln700_fu_765_p2 <= std_logic_vector(shift_left(unsigned(sum_V_ret_reg_959),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_115_fu_544_p3 <= (select_ln109_7_fu_524_p3 & ap_const_lv1_0);
    tmp_116_fu_620_p3 <= (select_ln109_8_reg_797 & ap_const_lv3_0);
    tmp_117_fu_631_p3 <= (select_ln109_8_reg_797 & ap_const_lv1_0);
    tmp_118_fu_677_p3 <= (select_ln109_9_reg_804 & ap_const_lv3_0);
    tmp_119_fu_688_p3 <= (select_ln109_9_reg_804 & ap_const_lv1_0);
    tmp_fu_532_p3 <= (select_ln109_7_fu_524_p3 & ap_const_lv3_0);
    top_0_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_0_V_ce0 <= ap_const_logic_1;
        else 
            top_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_0_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_0_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_0_V_we0 <= ap_const_logic_1;
        else 
            top_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_10_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_10_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_10_V_ce0 <= ap_const_logic_1;
        else 
            top_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_10_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_10_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_10_V_we0 <= ap_const_logic_1;
        else 
            top_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_11_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_11_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_11_V_ce0 <= ap_const_logic_1;
        else 
            top_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_11_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_11_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_11_V_we0 <= ap_const_logic_1;
        else 
            top_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_12_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_12_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_12_V_ce0 <= ap_const_logic_1;
        else 
            top_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_12_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_12_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_12_V_we0 <= ap_const_logic_1;
        else 
            top_12_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_13_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_13_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_13_V_ce0 <= ap_const_logic_1;
        else 
            top_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_13_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_13_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_13_V_we0 <= ap_const_logic_1;
        else 
            top_13_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_14_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_14_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_14_V_ce0 <= ap_const_logic_1;
        else 
            top_14_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_14_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_14_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_14_V_we0 <= ap_const_logic_1;
        else 
            top_14_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_15_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_15_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_15_V_ce0 <= ap_const_logic_1;
        else 
            top_15_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_15_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_15_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_15_V_we0 <= ap_const_logic_1;
        else 
            top_15_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_1_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_1_V_ce0 <= ap_const_logic_1;
        else 
            top_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_1_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_1_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_1_V_we0 <= ap_const_logic_1;
        else 
            top_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_2_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_2_V_ce0 <= ap_const_logic_1;
        else 
            top_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_2_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_2_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_2_V_we0 <= ap_const_logic_1;
        else 
            top_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_3_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_3_V_ce0 <= ap_const_logic_1;
        else 
            top_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_3_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_3_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_3_V_we0 <= ap_const_logic_1;
        else 
            top_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_4_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_4_V_ce0 <= ap_const_logic_1;
        else 
            top_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_4_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_4_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_4_V_we0 <= ap_const_logic_1;
        else 
            top_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_5_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_5_V_ce0 <= ap_const_logic_1;
        else 
            top_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_5_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_5_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_5_V_we0 <= ap_const_logic_1;
        else 
            top_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_6_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_6_V_ce0 <= ap_const_logic_1;
        else 
            top_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_6_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_6_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_6_V_we0 <= ap_const_logic_1;
        else 
            top_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_7_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_7_V_ce0 <= ap_const_logic_1;
        else 
            top_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_7_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_7_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_7_V_we0 <= ap_const_logic_1;
        else 
            top_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_8_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_8_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_8_V_ce0 <= ap_const_logic_1;
        else 
            top_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_8_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_8_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_8_V_we0 <= ap_const_logic_1;
        else 
            top_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_9_V_address0 <= zext_ln113_reg_864_pp0_iter1_reg(7 - 1 downto 0);

    top_9_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            top_9_V_ce0 <= ap_const_logic_1;
        else 
            top_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_9_V_d0 <= op_V_assign_relu_fu_446_ap_return;

    top_9_V_we0_assign_proc : process(icmp_ln103_reg_778_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_778_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_9_V_we0 <= ap_const_logic_1;
        else 
            top_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln109_7_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_115_fu_544_p3),8));
    zext_ln109_8_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_3_fu_584_p2),8));
    zext_ln109_9_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_7_fu_594_p2),64));
    zext_ln109_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_532_p3),8));
    zext_ln110_3_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln110_fu_609_p2),64));
    zext_ln110_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln109_fu_516_p3),8));
    zext_ln111_3_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln111_3_fu_667_p2),64));
    zext_ln111_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_fu_658_p2),8));
    zext_ln112_5_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_117_fu_631_p3),8));
    zext_ln112_6_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln112_3_fu_648_p2),64));
    zext_ln112_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_116_fu_620_p3),8));
    zext_ln113_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln113_fu_710_p2),64));
    zext_ln114_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_fu_724_p2),64));
    zext_ln115_5_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_fu_688_p3),8));
    zext_ln115_6_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln115_6_reg_859),64));
    zext_ln115_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_118_fu_677_p3),8));
    zext_ln116_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_reg_889),64));
    zext_ln117_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln117_reg_899),64));
end behav;
