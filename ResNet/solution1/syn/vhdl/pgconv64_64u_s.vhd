-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pgconv64_64u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bottom1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bottom1_V_ce0 : OUT STD_LOGIC;
    bottom1_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    bottom1_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bottom1_V_ce1 : OUT STD_LOGIC;
    bottom1_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    c : IN STD_LOGIC_VECTOR (2 downto 0);
    top_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_0_V_ce0 : OUT STD_LOGIC;
    top_0_V_we0 : OUT STD_LOGIC;
    top_0_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_1_V_ce0 : OUT STD_LOGIC;
    top_1_V_we0 : OUT STD_LOGIC;
    top_1_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_2_V_ce0 : OUT STD_LOGIC;
    top_2_V_we0 : OUT STD_LOGIC;
    top_2_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_3_V_ce0 : OUT STD_LOGIC;
    top_3_V_we0 : OUT STD_LOGIC;
    top_3_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_4_V_ce0 : OUT STD_LOGIC;
    top_4_V_we0 : OUT STD_LOGIC;
    top_4_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_5_V_ce0 : OUT STD_LOGIC;
    top_5_V_we0 : OUT STD_LOGIC;
    top_5_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_6_V_ce0 : OUT STD_LOGIC;
    top_6_V_we0 : OUT STD_LOGIC;
    top_6_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_7_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_7_V_ce0 : OUT STD_LOGIC;
    top_7_V_we0 : OUT STD_LOGIC;
    top_7_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_8_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_8_V_ce0 : OUT STD_LOGIC;
    top_8_V_we0 : OUT STD_LOGIC;
    top_8_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_9_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_9_V_ce0 : OUT STD_LOGIC;
    top_9_V_we0 : OUT STD_LOGIC;
    top_9_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_10_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_10_V_ce0 : OUT STD_LOGIC;
    top_10_V_we0 : OUT STD_LOGIC;
    top_10_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_11_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_11_V_ce0 : OUT STD_LOGIC;
    top_11_V_we0 : OUT STD_LOGIC;
    top_11_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_12_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_12_V_ce0 : OUT STD_LOGIC;
    top_12_V_we0 : OUT STD_LOGIC;
    top_12_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_13_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_13_V_ce0 : OUT STD_LOGIC;
    top_13_V_we0 : OUT STD_LOGIC;
    top_13_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_14_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_14_V_ce0 : OUT STD_LOGIC;
    top_14_V_we0 : OUT STD_LOGIC;
    top_14_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_15_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    top_15_V_ce0 : OUT STD_LOGIC;
    top_15_V_we0 : OUT STD_LOGIC;
    top_15_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of pgconv64_64u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_407 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_0_reg_418 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_0_reg_429 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_engine_64_fu_449_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_554 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln103_reg_1297 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln103_reg_1297_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_batch_norm_fu_533_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal reg_560 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal trunc_ln109_fu_565_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln109_reg_1275 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln103_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln103_fu_587_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln103_reg_1301 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln109_fu_599_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_reg_1306 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln109_2_fu_639_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln109_2_reg_1311 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln109_2_fu_645_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_2_reg_1316 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_3_fu_659_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_3_reg_1323 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln109_2_fu_673_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln109_2_reg_1329 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln110_fu_688_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln110_reg_1340 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln112_fu_725_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln112_reg_1351 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_fu_741_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_reg_1362 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln111_fu_746_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln111_reg_1367 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln115_2_fu_876_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln115_2_reg_1378 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln113_fu_885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln113_reg_1383 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln113_reg_1383_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln116_fu_890_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln116_reg_1408 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln117_fu_904_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln117_reg_1418 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_compute_engine_64_fu_440_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_s_reg_1423 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_compute_engine_64_fu_458_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_1_reg_1428 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_compute_engine_64_fu_467_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp1_V_0_1_reg_1433 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_compute_engine_64_fu_476_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_reg_1438 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_080_2_reg_1438_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_compute_engine_64_fu_486_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp1_V_0_2_reg_1443 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp1_V_0_2_reg_1443_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_V_reg_1458 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp3_V_reg_1463 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_V_0_1_reg_1468 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp3_V_0_1_reg_1473 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_V_0_2_reg_1478 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp3_V_0_2_reg_1483 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_V_reg_1493 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp5_V_reg_1498 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_V_0_1_reg_1503 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp5_V_0_1_reg_1508 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_V_0_2_reg_1513 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp5_V_0_2_reg_1518 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp6_V_reg_1523 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp7_V_reg_1528 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp6_V_0_1_reg_1533 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp7_V_0_1_reg_1538 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp6_V_0_2_reg_1543 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp7_V_0_2_reg_1548 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sum_engine_fu_519_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_V_ret_reg_1553 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_538_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_106_reg_1559 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp8_V_0_2_reg_1564 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln131_1_fu_1253_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_1_reg_1569 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_2_fu_1267_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_2_reg_1574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_compute_engine_64_fu_440_ap_start : STD_LOGIC;
    signal grp_compute_engine_64_fu_440_ap_done : STD_LOGIC;
    signal grp_compute_engine_64_fu_440_ap_idle : STD_LOGIC;
    signal grp_compute_engine_64_fu_440_ap_ready : STD_LOGIC;
    signal grp_compute_engine_64_fu_440_w_V : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_engine_64_fu_449_ap_start : STD_LOGIC;
    signal grp_compute_engine_64_fu_449_ap_done : STD_LOGIC;
    signal grp_compute_engine_64_fu_449_ap_idle : STD_LOGIC;
    signal grp_compute_engine_64_fu_449_ap_ready : STD_LOGIC;
    signal grp_compute_engine_64_fu_449_b_V : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_engine_64_fu_449_w_V : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_engine_64_fu_458_ap_start : STD_LOGIC;
    signal grp_compute_engine_64_fu_458_ap_done : STD_LOGIC;
    signal grp_compute_engine_64_fu_458_ap_idle : STD_LOGIC;
    signal grp_compute_engine_64_fu_458_ap_ready : STD_LOGIC;
    signal grp_compute_engine_64_fu_458_w_V : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_engine_64_fu_467_ap_start : STD_LOGIC;
    signal grp_compute_engine_64_fu_467_ap_done : STD_LOGIC;
    signal grp_compute_engine_64_fu_467_ap_idle : STD_LOGIC;
    signal grp_compute_engine_64_fu_467_ap_ready : STD_LOGIC;
    signal grp_compute_engine_64_fu_467_w_V : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_engine_64_fu_476_ap_start : STD_LOGIC;
    signal grp_compute_engine_64_fu_476_ap_done : STD_LOGIC;
    signal grp_compute_engine_64_fu_476_ap_idle : STD_LOGIC;
    signal grp_compute_engine_64_fu_476_ap_ready : STD_LOGIC;
    signal grp_compute_engine_64_fu_486_ap_start : STD_LOGIC;
    signal grp_compute_engine_64_fu_486_ap_done : STD_LOGIC;
    signal grp_compute_engine_64_fu_486_ap_idle : STD_LOGIC;
    signal grp_compute_engine_64_fu_486_ap_ready : STD_LOGIC;
    signal grp_relu_fu_498_ap_ready : STD_LOGIC;
    signal grp_relu_fu_498_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sum_engine_fu_519_ap_ready : STD_LOGIC;
    signal grp_sum_engine_fu_519_t0_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sum_engine_fu_519_t1_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sum_engine_fu_519_t2_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sum_engine_fu_519_t3_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sum_engine_fu_519_t4_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sum_engine_fu_519_t5_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sum_engine_fu_519_t6_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sum_engine_fu_519_t7_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sum_engine_fu_519_t8_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_batch_norm_fu_533_ap_ready : STD_LOGIC;
    signal grp_batch_norm_fu_533_sum_V : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_411_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_row_0_phi_fu_422_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_col_0_phi_fu_433_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_compute_engine_64_fu_440_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal select_ln109_4_fu_773_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln111_fu_922_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln113_fu_1018_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln115_fu_1110_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln117_fu_1198_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_engine_64_fu_449_ap_start_reg : STD_LOGIC := '0';
    signal select_ln110_fu_795_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln112_fu_944_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln114_fu_1040_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln116_fu_1132_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln117_1_fu_1220_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_engine_64_fu_458_ap_start_reg : STD_LOGIC := '0';
    signal select_ln109_5_fu_817_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln111_1_fu_966_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln113_1_fu_1062_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln115_1_fu_1154_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_engine_64_fu_467_ap_start_reg : STD_LOGIC := '0';
    signal select_ln110_1_fu_839_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln112_1_fu_988_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln114_1_fu_1084_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln116_1_fu_1176_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_compute_engine_64_fu_476_ap_start_reg : STD_LOGIC := '0';
    signal grp_compute_engine_64_fu_486_ap_start_reg : STD_LOGIC := '0';
    signal select_ln131_fu_1239_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln109_3_fu_683_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_1_fu_698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln112_2_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_1_fu_755_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_fu_899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln115_2_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_fu_1001_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln117_fu_1093_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln104_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln109_fu_569_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_1_fu_607_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_615_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_101_fu_627_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln109_1_fu_635_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln109_fu_623_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_fu_575_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln115_fu_653_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln109_1_fu_667_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln109_3_fu_677_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln110_fu_692_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_102_fu_703_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_103_fu_714_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln112_1_fu_721_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln112_fu_710_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln112_1_fu_731_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln111_1_fu_750_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal weights_0_0_0_V_r_fu_760_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_0_0_1_V_r_fu_782_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_1_0_0_V_r_fu_804_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_1_0_1_V_r_fu_826_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_fu_848_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_105_fu_859_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln115_1_fu_866_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln115_fu_855_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln115_1_fu_870_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln113_fu_881_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln114_fu_895_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal weights_0_0_2_V_r_fu_909_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_0_1_0_V_r_fu_931_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_1_0_2_V_r_fu_953_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_1_1_0_V_r_fu_975_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_0_1_1_V_r_fu_1005_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_0_1_2_V_r_fu_1027_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_1_1_1_V_r_fu_1049_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_1_1_2_V_r_fu_1071_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_0_2_0_V_r_fu_1097_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_0_2_1_V_r_fu_1119_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_1_2_0_V_r_fu_1141_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_1_2_1_V_r_fu_1163_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_0_2_2_V_r_fu_1185_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_1_2_2_V_r_fu_1207_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln700_fu_1234_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln700_16_fu_1247_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln700_17_fu_1261_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_466 : BOOLEAN;
    signal ap_condition_471 : BOOLEAN;
    signal ap_condition_477 : BOOLEAN;
    signal ap_condition_483 : BOOLEAN;
    signal ap_condition_452 : BOOLEAN;

    component compute_engine_64 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        b_V : IN STD_LOGIC_VECTOR (63 downto 0);
        w_V : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component relu IS
    port (
        ap_ready : OUT STD_LOGIC;
        norm_V : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component sum_engine IS
    port (
        ap_ready : OUT STD_LOGIC;
        t0_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t1_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t2_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t3_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t4_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t5_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t6_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t7_V : IN STD_LOGIC_VECTOR (5 downto 0);
        t8_V : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component batch_norm IS
    port (
        ap_ready : OUT STD_LOGIC;
        sum_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component ResNet_mux_42_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_compute_engine_64_fu_440 : component compute_engine_64
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_engine_64_fu_440_ap_start,
        ap_done => grp_compute_engine_64_fu_440_ap_done,
        ap_idle => grp_compute_engine_64_fu_440_ap_idle,
        ap_ready => grp_compute_engine_64_fu_440_ap_ready,
        ap_ce => ap_const_logic_1,
        b_V => bottom1_V_q0,
        w_V => grp_compute_engine_64_fu_440_w_V,
        ap_return => grp_compute_engine_64_fu_440_ap_return);

    grp_compute_engine_64_fu_449 : component compute_engine_64
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_engine_64_fu_449_ap_start,
        ap_done => grp_compute_engine_64_fu_449_ap_done,
        ap_idle => grp_compute_engine_64_fu_449_ap_idle,
        ap_ready => grp_compute_engine_64_fu_449_ap_ready,
        ap_ce => ap_const_logic_1,
        b_V => grp_compute_engine_64_fu_449_b_V,
        w_V => grp_compute_engine_64_fu_449_w_V,
        ap_return => grp_compute_engine_64_fu_449_ap_return);

    grp_compute_engine_64_fu_458 : component compute_engine_64
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_engine_64_fu_458_ap_start,
        ap_done => grp_compute_engine_64_fu_458_ap_done,
        ap_idle => grp_compute_engine_64_fu_458_ap_idle,
        ap_ready => grp_compute_engine_64_fu_458_ap_ready,
        ap_ce => ap_const_logic_1,
        b_V => bottom1_V_q0,
        w_V => grp_compute_engine_64_fu_458_w_V,
        ap_return => grp_compute_engine_64_fu_458_ap_return);

    grp_compute_engine_64_fu_467 : component compute_engine_64
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_engine_64_fu_467_ap_start,
        ap_done => grp_compute_engine_64_fu_467_ap_done,
        ap_idle => grp_compute_engine_64_fu_467_ap_idle,
        ap_ready => grp_compute_engine_64_fu_467_ap_ready,
        ap_ce => ap_const_logic_1,
        b_V => bottom1_V_q1,
        w_V => grp_compute_engine_64_fu_467_w_V,
        ap_return => grp_compute_engine_64_fu_467_ap_return);

    grp_compute_engine_64_fu_476 : component compute_engine_64
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_engine_64_fu_476_ap_start,
        ap_done => grp_compute_engine_64_fu_476_ap_done,
        ap_idle => grp_compute_engine_64_fu_476_ap_idle,
        ap_ready => grp_compute_engine_64_fu_476_ap_ready,
        ap_ce => ap_const_logic_1,
        b_V => bottom1_V_q0,
        w_V => ap_const_lv64_FFFFFFFFFFFFFFFF,
        ap_return => grp_compute_engine_64_fu_476_ap_return);

    grp_compute_engine_64_fu_486 : component compute_engine_64
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_compute_engine_64_fu_486_ap_start,
        ap_done => grp_compute_engine_64_fu_486_ap_done,
        ap_idle => grp_compute_engine_64_fu_486_ap_idle,
        ap_ready => grp_compute_engine_64_fu_486_ap_ready,
        ap_ce => ap_const_logic_1,
        b_V => bottom1_V_q1,
        w_V => ap_const_lv64_FFFFFFFFFFFFFFFF,
        ap_return => grp_compute_engine_64_fu_486_ap_return);

    grp_relu_fu_498 : component relu
    port map (
        ap_ready => grp_relu_fu_498_ap_ready,
        norm_V => reg_560,
        ap_return => grp_relu_fu_498_ap_return);

    grp_sum_engine_fu_519 : component sum_engine
    port map (
        ap_ready => grp_sum_engine_fu_519_ap_ready,
        t0_V => grp_sum_engine_fu_519_t0_V,
        t1_V => grp_sum_engine_fu_519_t1_V,
        t2_V => grp_sum_engine_fu_519_t2_V,
        t3_V => grp_sum_engine_fu_519_t3_V,
        t4_V => grp_sum_engine_fu_519_t4_V,
        t5_V => grp_sum_engine_fu_519_t5_V,
        t6_V => grp_sum_engine_fu_519_t6_V,
        t7_V => grp_sum_engine_fu_519_t7_V,
        t8_V => grp_sum_engine_fu_519_t8_V,
        ap_return => grp_sum_engine_fu_519_ap_return);

    grp_batch_norm_fu_533 : component batch_norm
    port map (
        ap_ready => grp_batch_norm_fu_533_ap_ready,
        sum_V => grp_batch_norm_fu_533_sum_V,
        ap_return => grp_batch_norm_fu_533_ap_return);

    ResNet_mux_42_1_1_1_U608 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_0_0_0_V_r_fu_760_p6);

    ResNet_mux_42_1_1_1_U609 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_0_0_1_V_r_fu_782_p6);

    ResNet_mux_42_1_1_1_U610 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_1_0_0_V_r_fu_804_p6);

    ResNet_mux_42_1_1_1_U611 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_1_0_1_V_r_fu_826_p6);

    ResNet_mux_42_1_1_1_U612 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_0_0_2_V_r_fu_909_p6);

    ResNet_mux_42_1_1_1_U613 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_0_1_0_V_r_fu_931_p6);

    ResNet_mux_42_1_1_1_U614 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_1_0_2_V_r_fu_953_p6);

    ResNet_mux_42_1_1_1_U615 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_1_1_0_V_r_fu_975_p6);

    ResNet_mux_42_1_1_1_U616 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_0_1_1_V_r_fu_1005_p6);

    ResNet_mux_42_1_1_1_U617 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_0_1_2_V_r_fu_1027_p6);

    ResNet_mux_42_1_1_1_U618 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_1_1_1_V_r_fu_1049_p6);

    ResNet_mux_42_1_1_1_U619 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_1_1_2_V_r_fu_1071_p6);

    ResNet_mux_42_1_1_1_U620 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_0_2_0_V_r_fu_1097_p6);

    ResNet_mux_42_1_1_1_U621 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_0_2_1_V_r_fu_1119_p6);

    ResNet_mux_42_1_1_1_U622 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_1_2_0_V_r_fu_1141_p6);

    ResNet_mux_42_1_1_1_U623 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_1_2_1_V_r_fu_1163_p6);

    ResNet_mux_42_1_1_1_U624 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_0_2_2_V_r_fu_1185_p6);

    ResNet_mux_42_1_1_1_U625 : component ResNet_mux_42_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_1,
        din4 => trunc_ln109_reg_1275,
        dout => weights_1_2_2_V_r_fu_1207_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_engine_64_fu_440_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_engine_64_fu_440_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_fu_581_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                    grp_compute_engine_64_fu_440_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_engine_64_fu_440_ap_ready = ap_const_logic_1)) then 
                    grp_compute_engine_64_fu_440_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_engine_64_fu_449_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_engine_64_fu_449_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_fu_581_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                    grp_compute_engine_64_fu_449_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_engine_64_fu_449_ap_ready = ap_const_logic_1)) then 
                    grp_compute_engine_64_fu_449_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_engine_64_fu_458_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_engine_64_fu_458_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_fu_581_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                    grp_compute_engine_64_fu_458_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_engine_64_fu_458_ap_ready = ap_const_logic_1)) then 
                    grp_compute_engine_64_fu_458_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_engine_64_fu_467_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_engine_64_fu_467_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_fu_581_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                    grp_compute_engine_64_fu_467_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_engine_64_fu_467_ap_ready = ap_const_logic_1)) then 
                    grp_compute_engine_64_fu_467_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_engine_64_fu_476_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_engine_64_fu_476_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_fu_581_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                    grp_compute_engine_64_fu_476_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_engine_64_fu_476_ap_ready = ap_const_logic_1)) then 
                    grp_compute_engine_64_fu_476_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_compute_engine_64_fu_486_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_compute_engine_64_fu_486_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_fu_581_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                    grp_compute_engine_64_fu_486_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_compute_engine_64_fu_486_ap_ready = ap_const_logic_1)) then 
                    grp_compute_engine_64_fu_486_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_0_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then 
                col_0_reg_429 <= col_reg_1362;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                col_0_reg_429 <= ap_const_lv4_1;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then 
                indvar_flatten_reg_407 <= add_ln103_reg_1301;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_407 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    row_0_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then 
                row_0_reg_418 <= select_ln109_2_reg_1316;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_0_reg_418 <= ap_const_lv4_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln103_reg_1301 <= add_ln103_fu_587_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_fu_581_p2 = ap_const_lv1_0))) then
                    add_ln109_2_reg_1311(7 downto 1) <= add_ln109_2_fu_639_p2(7 downto 1);
                select_ln109_3_reg_1323 <= select_ln109_3_fu_659_p3;
                select_ln109_reg_1306 <= select_ln109_fu_599_p3;
                    zext_ln109_2_reg_1329(3 downto 0) <= zext_ln109_2_fu_673_p1(3 downto 0);
                    zext_ln110_reg_1340(3 downto 0) <= zext_ln110_fu_688_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then
                    add_ln112_reg_1351(7 downto 1) <= add_ln112_fu_725_p2(7 downto 1);
                    zext_ln111_reg_1367(3 downto 0) <= zext_ln111_fu_746_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln115_2_reg_1378 <= add_ln115_2_fu_876_p2;
                add_ln116_reg_1408 <= add_ln116_fu_890_p2;
                add_ln117_reg_1418 <= add_ln117_fu_904_p2;
                    zext_ln113_reg_1383(7 downto 0) <= zext_ln113_fu_885_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then
                col_reg_1362 <= col_fu_741_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln103_reg_1297 <= icmp_ln103_fu_581_p2;
                icmp_ln103_reg_1297_pp0_iter1_reg <= icmp_ln103_reg_1297;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                p_080_1_reg_1428 <= grp_compute_engine_64_fu_458_ap_return;
                p_080_2_reg_1438 <= grp_compute_engine_64_fu_476_ap_return;
                p_s_reg_1423 <= grp_compute_engine_64_fu_440_ap_return;
                tmp1_V_0_1_reg_1433 <= grp_compute_engine_64_fu_467_ap_return;
                tmp1_V_0_2_reg_1443 <= grp_compute_engine_64_fu_486_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                p_080_2_reg_1438_pp0_iter1_reg <= p_080_2_reg_1438;
                tmp1_V_0_2_reg_1443_pp0_iter1_reg <= tmp1_V_0_2_reg_1443;
                    zext_ln113_reg_1383_pp0_iter1_reg(7 downto 0) <= zext_ln113_reg_1383(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_554 <= grp_compute_engine_64_fu_449_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_560 <= grp_batch_norm_fu_533_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_fu_581_p2 = ap_const_lv1_0))) then
                select_ln109_2_reg_1316 <= select_ln109_2_fu_645_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                select_ln131_1_reg_1569 <= select_ln131_1_fu_1253_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
                select_ln131_2_reg_1574 <= select_ln131_2_fu_1267_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
                sum_V_ret_reg_1553 <= grp_sum_engine_fu_519_ap_return;
                tmp8_V_0_2_reg_1564 <= grp_compute_engine_64_fu_458_ap_return;
                tmp_106_reg_1559 <= grp_sum_engine_fu_519_ap_return(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then
                tmp2_V_0_1_reg_1468 <= grp_compute_engine_64_fu_458_ap_return;
                tmp2_V_0_2_reg_1478 <= grp_compute_engine_64_fu_476_ap_return;
                tmp2_V_reg_1458 <= grp_compute_engine_64_fu_440_ap_return;
                tmp3_V_0_1_reg_1473 <= grp_compute_engine_64_fu_467_ap_return;
                tmp3_V_0_2_reg_1483 <= grp_compute_engine_64_fu_486_ap_return;
                tmp3_V_reg_1463 <= grp_compute_engine_64_fu_449_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then
                tmp4_V_0_1_reg_1503 <= grp_compute_engine_64_fu_458_ap_return;
                tmp4_V_0_2_reg_1513 <= grp_compute_engine_64_fu_476_ap_return;
                tmp4_V_reg_1493 <= grp_compute_engine_64_fu_440_ap_return;
                tmp5_V_0_1_reg_1508 <= grp_compute_engine_64_fu_467_ap_return;
                tmp5_V_0_2_reg_1518 <= grp_compute_engine_64_fu_486_ap_return;
                tmp5_V_reg_1498 <= grp_compute_engine_64_fu_449_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then
                tmp6_V_0_1_reg_1533 <= grp_compute_engine_64_fu_458_ap_return;
                tmp6_V_0_2_reg_1543 <= grp_compute_engine_64_fu_476_ap_return;
                tmp6_V_reg_1523 <= grp_compute_engine_64_fu_440_ap_return;
                tmp7_V_0_1_reg_1538 <= grp_compute_engine_64_fu_467_ap_return;
                tmp7_V_0_2_reg_1548 <= grp_compute_engine_64_fu_486_ap_return;
                tmp7_V_reg_1528 <= grp_compute_engine_64_fu_449_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                trunc_ln109_reg_1275 <= trunc_ln109_fu_565_p1;
            end if;
        end if;
    end process;
    add_ln109_2_reg_1311(0) <= '0';
    zext_ln109_2_reg_1329(7 downto 4) <= "0000";
    zext_ln110_reg_1340(7 downto 4) <= "0000";
    add_ln112_reg_1351(0) <= '0';
    zext_ln111_reg_1367(7 downto 4) <= "0000";
    zext_ln113_reg_1383(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln113_reg_1383_pp0_iter1_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln103_fu_581_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_enable_reg_pp0_iter2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln103_fu_581_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln103_fu_581_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln103_fu_587_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_411_p4) + unsigned(ap_const_lv7_1));
    add_ln109_1_fu_667_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(select_ln109_fu_599_p3));
    add_ln109_2_fu_639_p2 <= std_logic_vector(unsigned(zext_ln109_1_fu_635_p1) + unsigned(zext_ln109_fu_623_p1));
    add_ln109_3_fu_677_p2 <= std_logic_vector(unsigned(add_ln109_2_fu_639_p2) + unsigned(zext_ln109_2_fu_673_p1));
    add_ln109_fu_569_p2 <= std_logic_vector(unsigned(ap_phi_mux_row_0_phi_fu_422_p4) + unsigned(ap_const_lv4_F));
    add_ln110_fu_692_p2 <= std_logic_vector(unsigned(add_ln109_2_fu_639_p2) + unsigned(zext_ln110_fu_688_p1));
    add_ln111_1_fu_750_p2 <= std_logic_vector(unsigned(add_ln109_2_reg_1311) + unsigned(zext_ln111_fu_746_p1));
    add_ln112_1_fu_731_p2 <= std_logic_vector(unsigned(add_ln112_fu_725_p2) + unsigned(zext_ln109_2_reg_1329));
    add_ln112_fu_725_p2 <= std_logic_vector(unsigned(zext_ln112_1_fu_721_p1) + unsigned(zext_ln112_fu_710_p1));
    add_ln113_fu_881_p2 <= std_logic_vector(unsigned(add_ln112_reg_1351) + unsigned(zext_ln110_reg_1340));
    add_ln114_fu_895_p2 <= std_logic_vector(unsigned(add_ln112_reg_1351) + unsigned(zext_ln111_reg_1367));
    add_ln115_1_fu_870_p2 <= std_logic_vector(unsigned(zext_ln115_1_fu_866_p1) + unsigned(zext_ln115_fu_855_p1));
    add_ln115_2_fu_876_p2 <= std_logic_vector(unsigned(add_ln115_1_fu_870_p2) + unsigned(zext_ln109_2_reg_1329));
    add_ln115_fu_653_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) + unsigned(ap_phi_mux_row_0_phi_fu_422_p4));
    add_ln116_fu_890_p2 <= std_logic_vector(unsigned(add_ln115_1_fu_870_p2) + unsigned(zext_ln110_reg_1340));
    add_ln117_fu_904_p2 <= std_logic_vector(unsigned(add_ln115_1_fu_870_p2) + unsigned(zext_ln111_reg_1367));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_452_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
                ap_condition_452 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_466_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_466 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_471_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2)
    begin
                ap_condition_471 <= ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_477_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
                ap_condition_477 <= ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_483_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4)
    begin
                ap_condition_483 <= ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln103_fu_581_p2)
    begin
        if ((icmp_ln103_fu_581_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_col_0_phi_fu_433_p4_assign_proc : process(col_0_reg_429, icmp_ln103_reg_1297, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, col_reg_1362, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then 
            ap_phi_mux_col_0_phi_fu_433_p4 <= col_reg_1362;
        else 
            ap_phi_mux_col_0_phi_fu_433_p4 <= col_0_reg_429;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_411_p4_assign_proc : process(indvar_flatten_reg_407, icmp_ln103_reg_1297, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, add_ln103_reg_1301, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_411_p4 <= add_ln103_reg_1301;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_411_p4 <= indvar_flatten_reg_407;
        end if; 
    end process;


    ap_phi_mux_row_0_phi_fu_422_p4_assign_proc : process(row_0_reg_418, icmp_ln103_reg_1297, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, select_ln109_2_reg_1316, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then 
            ap_phi_mux_row_0_phi_fu_422_p4 <= select_ln109_2_reg_1316;
        else 
            ap_phi_mux_row_0_phi_fu_422_p4 <= row_0_reg_418;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bottom1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, zext_ln113_fu_885_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, zext_ln109_3_fu_683_p1, zext_ln111_1_fu_755_p1, zext_ln115_2_fu_997_p1, zext_ln117_fu_1093_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                bottom1_V_address0 <= zext_ln117_fu_1093_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                bottom1_V_address0 <= zext_ln115_2_fu_997_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                bottom1_V_address0 <= zext_ln113_fu_885_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                bottom1_V_address0 <= zext_ln111_1_fu_755_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                bottom1_V_address0 <= zext_ln109_3_fu_683_p1(7 - 1 downto 0);
            else 
                bottom1_V_address0 <= "XXXXXXX";
            end if;
        else 
            bottom1_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    bottom1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln110_1_fu_698_p1, zext_ln112_2_fu_736_p1, zext_ln114_fu_899_p1, zext_ln116_fu_1001_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                bottom1_V_address1 <= zext_ln116_fu_1001_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                bottom1_V_address1 <= zext_ln114_fu_899_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                bottom1_V_address1 <= zext_ln112_2_fu_736_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                bottom1_V_address1 <= zext_ln110_1_fu_698_p1(7 - 1 downto 0);
            else 
                bottom1_V_address1 <= "XXXXXXX";
            end if;
        else 
            bottom1_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    bottom1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            bottom1_V_ce0 <= ap_const_logic_1;
        else 
            bottom1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bottom1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            bottom1_V_ce1 <= ap_const_logic_1;
        else 
            bottom1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    col_fu_741_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln109_reg_1306));

    grp_batch_norm_fu_533_sum_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, select_ln131_1_reg_1569, select_ln131_2_reg_1574, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, select_ln131_fu_1239_p3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_batch_norm_fu_533_sum_V <= select_ln131_2_reg_1574;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_batch_norm_fu_533_sum_V <= select_ln131_1_reg_1569;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_batch_norm_fu_533_sum_V <= select_ln131_fu_1239_p3;
            else 
                grp_batch_norm_fu_533_sum_V <= "XXXXXXXX";
            end if;
        else 
            grp_batch_norm_fu_533_sum_V <= "XXXXXXXX";
        end if; 
    end process;

    grp_compute_engine_64_fu_440_ap_start <= grp_compute_engine_64_fu_440_ap_start_reg;

    grp_compute_engine_64_fu_440_w_V_assign_proc : process(icmp_ln103_reg_1297, select_ln109_4_fu_773_p3, select_ln111_fu_922_p3, select_ln113_fu_1018_p3, select_ln115_fu_1110_p3, select_ln117_fu_1198_p3, ap_condition_466, ap_condition_471, ap_condition_477, ap_condition_483, ap_condition_452)
    begin
        if ((icmp_ln103_reg_1297 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_452)) then 
                grp_compute_engine_64_fu_440_w_V <= select_ln117_fu_1198_p3;
            elsif ((ap_const_boolean_1 = ap_condition_483)) then 
                grp_compute_engine_64_fu_440_w_V <= select_ln115_fu_1110_p3;
            elsif ((ap_const_boolean_1 = ap_condition_477)) then 
                grp_compute_engine_64_fu_440_w_V <= select_ln113_fu_1018_p3;
            elsif ((ap_const_boolean_1 = ap_condition_471)) then 
                grp_compute_engine_64_fu_440_w_V <= select_ln111_fu_922_p3;
            elsif ((ap_const_boolean_1 = ap_condition_466)) then 
                grp_compute_engine_64_fu_440_w_V <= select_ln109_4_fu_773_p3;
            else 
                grp_compute_engine_64_fu_440_w_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute_engine_64_fu_440_w_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_compute_engine_64_fu_449_ap_start <= grp_compute_engine_64_fu_449_ap_start_reg;

    grp_compute_engine_64_fu_449_b_V_assign_proc : process(bottom1_V_q0, bottom1_V_q1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, icmp_ln103_reg_1297, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then 
            grp_compute_engine_64_fu_449_b_V <= bottom1_V_q0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln103_reg_1297 = ap_const_lv1_0)))) then 
            grp_compute_engine_64_fu_449_b_V <= bottom1_V_q1;
        else 
            grp_compute_engine_64_fu_449_b_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_compute_engine_64_fu_449_w_V_assign_proc : process(icmp_ln103_reg_1297, select_ln110_fu_795_p3, select_ln112_fu_944_p3, select_ln114_fu_1040_p3, select_ln116_fu_1132_p3, select_ln117_1_fu_1220_p3, ap_condition_466, ap_condition_471, ap_condition_477, ap_condition_483, ap_condition_452)
    begin
        if ((icmp_ln103_reg_1297 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_452)) then 
                grp_compute_engine_64_fu_449_w_V <= select_ln117_1_fu_1220_p3;
            elsif ((ap_const_boolean_1 = ap_condition_483)) then 
                grp_compute_engine_64_fu_449_w_V <= select_ln116_fu_1132_p3;
            elsif ((ap_const_boolean_1 = ap_condition_477)) then 
                grp_compute_engine_64_fu_449_w_V <= select_ln114_fu_1040_p3;
            elsif ((ap_const_boolean_1 = ap_condition_471)) then 
                grp_compute_engine_64_fu_449_w_V <= select_ln112_fu_944_p3;
            elsif ((ap_const_boolean_1 = ap_condition_466)) then 
                grp_compute_engine_64_fu_449_w_V <= select_ln110_fu_795_p3;
            else 
                grp_compute_engine_64_fu_449_w_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute_engine_64_fu_449_w_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_compute_engine_64_fu_458_ap_start <= grp_compute_engine_64_fu_458_ap_start_reg;

    grp_compute_engine_64_fu_458_w_V_assign_proc : process(icmp_ln103_reg_1297, select_ln109_5_fu_817_p3, select_ln111_1_fu_966_p3, select_ln113_1_fu_1062_p3, select_ln115_1_fu_1154_p3, ap_condition_466, ap_condition_471, ap_condition_477, ap_condition_483, ap_condition_452)
    begin
        if ((icmp_ln103_reg_1297 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_452)) then 
                grp_compute_engine_64_fu_458_w_V <= ap_const_lv64_FFFFFFFFFFFFFFFF;
            elsif ((ap_const_boolean_1 = ap_condition_483)) then 
                grp_compute_engine_64_fu_458_w_V <= select_ln115_1_fu_1154_p3;
            elsif ((ap_const_boolean_1 = ap_condition_477)) then 
                grp_compute_engine_64_fu_458_w_V <= select_ln113_1_fu_1062_p3;
            elsif ((ap_const_boolean_1 = ap_condition_471)) then 
                grp_compute_engine_64_fu_458_w_V <= select_ln111_1_fu_966_p3;
            elsif ((ap_const_boolean_1 = ap_condition_466)) then 
                grp_compute_engine_64_fu_458_w_V <= select_ln109_5_fu_817_p3;
            else 
                grp_compute_engine_64_fu_458_w_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute_engine_64_fu_458_w_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_compute_engine_64_fu_467_ap_start <= grp_compute_engine_64_fu_467_ap_start_reg;

    grp_compute_engine_64_fu_467_w_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, icmp_ln103_reg_1297, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, select_ln110_1_fu_839_p3, select_ln112_1_fu_988_p3, select_ln114_1_fu_1084_p3, select_ln116_1_fu_1176_p3)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln103_reg_1297 = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_compute_engine_64_fu_467_w_V <= select_ln116_1_fu_1176_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_compute_engine_64_fu_467_w_V <= select_ln114_1_fu_1084_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_compute_engine_64_fu_467_w_V <= select_ln112_1_fu_988_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_compute_engine_64_fu_467_w_V <= select_ln110_1_fu_839_p3;
            else 
                grp_compute_engine_64_fu_467_w_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_compute_engine_64_fu_467_w_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_compute_engine_64_fu_476_ap_start <= grp_compute_engine_64_fu_476_ap_start_reg;
    grp_compute_engine_64_fu_486_ap_start <= grp_compute_engine_64_fu_486_ap_start_reg;
    grp_fu_538_p4 <= grp_sum_engine_fu_519_ap_return(7 downto 3);
    grp_fu_548_p2 <= "0" when (grp_fu_538_p4 = ap_const_lv5_0) else "1";

    grp_sum_engine_fu_519_t0_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, p_s_reg_1423, p_080_1_reg_1428, p_080_2_reg_1438_pp0_iter1_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_sum_engine_fu_519_t0_V <= p_080_2_reg_1438_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_sum_engine_fu_519_t0_V <= p_080_1_reg_1428;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_sum_engine_fu_519_t0_V <= p_s_reg_1423;
            else 
                grp_sum_engine_fu_519_t0_V <= "XXXXXX";
            end if;
        else 
            grp_sum_engine_fu_519_t0_V <= "XXXXXX";
        end if; 
    end process;


    grp_sum_engine_fu_519_t1_V_assign_proc : process(reg_554, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, tmp1_V_0_1_reg_1433, tmp1_V_0_2_reg_1443_pp0_iter1_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_sum_engine_fu_519_t1_V <= tmp1_V_0_2_reg_1443_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_sum_engine_fu_519_t1_V <= tmp1_V_0_1_reg_1433;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_sum_engine_fu_519_t1_V <= reg_554;
            else 
                grp_sum_engine_fu_519_t1_V <= "XXXXXX";
            end if;
        else 
            grp_sum_engine_fu_519_t1_V <= "XXXXXX";
        end if; 
    end process;


    grp_sum_engine_fu_519_t2_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, tmp2_V_reg_1458, tmp2_V_0_1_reg_1468, tmp2_V_0_2_reg_1478, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_sum_engine_fu_519_t2_V <= tmp2_V_0_2_reg_1478;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_sum_engine_fu_519_t2_V <= tmp2_V_0_1_reg_1468;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_sum_engine_fu_519_t2_V <= tmp2_V_reg_1458;
            else 
                grp_sum_engine_fu_519_t2_V <= "XXXXXX";
            end if;
        else 
            grp_sum_engine_fu_519_t2_V <= "XXXXXX";
        end if; 
    end process;


    grp_sum_engine_fu_519_t3_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, tmp3_V_reg_1463, tmp3_V_0_1_reg_1473, tmp3_V_0_2_reg_1483, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_sum_engine_fu_519_t3_V <= tmp3_V_0_2_reg_1483;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_sum_engine_fu_519_t3_V <= tmp3_V_0_1_reg_1473;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_sum_engine_fu_519_t3_V <= tmp3_V_reg_1463;
            else 
                grp_sum_engine_fu_519_t3_V <= "XXXXXX";
            end if;
        else 
            grp_sum_engine_fu_519_t3_V <= "XXXXXX";
        end if; 
    end process;


    grp_sum_engine_fu_519_t4_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, tmp4_V_reg_1493, tmp4_V_0_1_reg_1503, tmp4_V_0_2_reg_1513, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_sum_engine_fu_519_t4_V <= tmp4_V_0_2_reg_1513;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_sum_engine_fu_519_t4_V <= tmp4_V_0_1_reg_1503;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_sum_engine_fu_519_t4_V <= tmp4_V_reg_1493;
            else 
                grp_sum_engine_fu_519_t4_V <= "XXXXXX";
            end if;
        else 
            grp_sum_engine_fu_519_t4_V <= "XXXXXX";
        end if; 
    end process;


    grp_sum_engine_fu_519_t5_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, tmp5_V_reg_1498, tmp5_V_0_1_reg_1508, tmp5_V_0_2_reg_1518, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_sum_engine_fu_519_t5_V <= tmp5_V_0_2_reg_1518;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_sum_engine_fu_519_t5_V <= tmp5_V_0_1_reg_1508;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_sum_engine_fu_519_t5_V <= tmp5_V_reg_1498;
            else 
                grp_sum_engine_fu_519_t5_V <= "XXXXXX";
            end if;
        else 
            grp_sum_engine_fu_519_t5_V <= "XXXXXX";
        end if; 
    end process;


    grp_sum_engine_fu_519_t6_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, tmp6_V_reg_1523, tmp6_V_0_1_reg_1533, tmp6_V_0_2_reg_1543, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_sum_engine_fu_519_t6_V <= tmp6_V_0_2_reg_1543;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_sum_engine_fu_519_t6_V <= tmp6_V_0_1_reg_1533;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_sum_engine_fu_519_t6_V <= tmp6_V_reg_1523;
            else 
                grp_sum_engine_fu_519_t6_V <= "XXXXXX";
            end if;
        else 
            grp_sum_engine_fu_519_t6_V <= "XXXXXX";
        end if; 
    end process;


    grp_sum_engine_fu_519_t7_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, tmp7_V_reg_1528, tmp7_V_0_1_reg_1538, tmp7_V_0_2_reg_1548, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_sum_engine_fu_519_t7_V <= tmp7_V_0_2_reg_1548;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_sum_engine_fu_519_t7_V <= tmp7_V_0_1_reg_1538;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_sum_engine_fu_519_t7_V <= tmp7_V_reg_1528;
            else 
                grp_sum_engine_fu_519_t7_V <= "XXXXXX";
            end if;
        else 
            grp_sum_engine_fu_519_t7_V <= "XXXXXX";
        end if; 
    end process;


    grp_sum_engine_fu_519_t8_V_assign_proc : process(reg_554, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, grp_compute_engine_64_fu_440_ap_return, tmp8_V_0_2_reg_1564, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_sum_engine_fu_519_t8_V <= tmp8_V_0_2_reg_1564;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_sum_engine_fu_519_t8_V <= reg_554;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_sum_engine_fu_519_t8_V <= grp_compute_engine_64_fu_440_ap_return;
            else 
                grp_sum_engine_fu_519_t8_V <= "XXXXXX";
            end if;
        else 
            grp_sum_engine_fu_519_t8_V <= "XXXXXX";
        end if; 
    end process;

    icmp_ln103_fu_581_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_411_p4 = ap_const_lv7_40) else "0";
    icmp_ln104_fu_593_p2 <= "1" when (ap_phi_mux_col_0_phi_fu_433_p4 = ap_const_lv4_9) else "0";
    icmp_ln1494_fu_1229_p2 <= "0" when (tmp_106_reg_1559 = ap_const_lv5_0) else "1";
    row_fu_575_p2 <= std_logic_vector(unsigned(ap_phi_mux_row_0_phi_fu_422_p4) + unsigned(ap_const_lv4_1));
    select_ln109_1_fu_607_p3 <= 
        ap_phi_mux_row_0_phi_fu_422_p4 when (icmp_ln104_fu_593_p2(0) = '1') else 
        add_ln109_fu_569_p2;
    select_ln109_2_fu_645_p3 <= 
        row_fu_575_p2 when (icmp_ln104_fu_593_p2(0) = '1') else 
        ap_phi_mux_row_0_phi_fu_422_p4;
    select_ln109_3_fu_659_p3 <= 
        add_ln115_fu_653_p2 when (icmp_ln104_fu_593_p2(0) = '1') else 
        row_fu_575_p2;
    select_ln109_4_fu_773_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_0_0_0_V_r_fu_760_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln109_5_fu_817_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_1_0_0_V_r_fu_804_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln109_fu_599_p3 <= 
        ap_const_lv4_1 when (icmp_ln104_fu_593_p2(0) = '1') else 
        ap_phi_mux_col_0_phi_fu_433_p4;
    select_ln110_1_fu_839_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_1_0_1_V_r_fu_826_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln110_fu_795_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_0_0_1_V_r_fu_782_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln111_1_fu_966_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_1_0_2_V_r_fu_953_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln111_fu_922_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_0_0_2_V_r_fu_909_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln112_1_fu_988_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_1_1_0_V_r_fu_975_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln112_fu_944_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_0_1_0_V_r_fu_931_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln113_1_fu_1062_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_1_1_1_V_r_fu_1049_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln113_fu_1018_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_0_1_1_V_r_fu_1005_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln114_1_fu_1084_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_1_1_2_V_r_fu_1071_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln114_fu_1040_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_0_1_2_V_r_fu_1027_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln115_1_fu_1154_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_1_2_0_V_r_fu_1141_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln115_fu_1110_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_0_2_0_V_r_fu_1097_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln116_1_fu_1176_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_1_2_1_V_r_fu_1163_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln116_fu_1132_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_0_2_1_V_r_fu_1119_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln117_1_fu_1220_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_1_2_2_V_r_fu_1207_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln117_fu_1198_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (weights_0_2_2_V_r_fu_1185_p6(0) = '1') else 
        ap_const_lv64_0;
    select_ln131_1_fu_1253_p3 <= 
        shl_ln700_16_fu_1247_p2 when (grp_fu_548_p2(0) = '1') else 
        grp_sum_engine_fu_519_ap_return;
    select_ln131_2_fu_1267_p3 <= 
        shl_ln700_17_fu_1261_p2 when (grp_fu_548_p2(0) = '1') else 
        grp_sum_engine_fu_519_ap_return;
    select_ln131_fu_1239_p3 <= 
        shl_ln700_fu_1234_p2 when (icmp_ln1494_fu_1229_p2(0) = '1') else 
        sum_V_ret_reg_1553;
    shl_ln700_16_fu_1247_p2 <= std_logic_vector(shift_left(unsigned(grp_sum_engine_fu_519_ap_return),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln700_17_fu_1261_p2 <= std_logic_vector(shift_left(unsigned(grp_sum_engine_fu_519_ap_return),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln700_fu_1234_p2 <= std_logic_vector(shift_left(unsigned(sum_V_ret_reg_1553),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_101_fu_627_p3 <= (select_ln109_1_fu_607_p3 & ap_const_lv1_0);
    tmp_102_fu_703_p3 <= (select_ln109_2_reg_1316 & ap_const_lv3_0);
    tmp_103_fu_714_p3 <= (select_ln109_2_reg_1316 & ap_const_lv1_0);
    tmp_104_fu_848_p3 <= (select_ln109_3_reg_1323 & ap_const_lv3_0);
    tmp_105_fu_859_p3 <= (select_ln109_3_reg_1323 & ap_const_lv1_0);
    tmp_fu_615_p3 <= (select_ln109_1_fu_607_p3 & ap_const_lv3_0);
    top_0_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_0_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            top_0_V_ce0 <= ap_const_logic_1;
        else 
            top_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_0_V_d0 <= grp_relu_fu_498_ap_return;

    top_0_V_we0_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_0_V_we0 <= ap_const_logic_1;
        else 
            top_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_10_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_10_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_10_V_ce0 <= ap_const_logic_1;
        else 
            top_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_10_V_d0 <= grp_relu_fu_498_ap_return;

    top_10_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_10_V_we0 <= ap_const_logic_1;
        else 
            top_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_11_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_11_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_11_V_ce0 <= ap_const_logic_1;
        else 
            top_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_11_V_d0 <= grp_relu_fu_498_ap_return;

    top_11_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_11_V_we0 <= ap_const_logic_1;
        else 
            top_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_12_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_12_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_12_V_ce0 <= ap_const_logic_1;
        else 
            top_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_12_V_d0 <= grp_relu_fu_498_ap_return;

    top_12_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_12_V_we0 <= ap_const_logic_1;
        else 
            top_12_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_13_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_13_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_13_V_ce0 <= ap_const_logic_1;
        else 
            top_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_13_V_d0 <= grp_relu_fu_498_ap_return;

    top_13_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_13_V_we0 <= ap_const_logic_1;
        else 
            top_13_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_14_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_14_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_14_V_ce0 <= ap_const_logic_1;
        else 
            top_14_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_14_V_d0 <= grp_relu_fu_498_ap_return;

    top_14_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_14_V_we0 <= ap_const_logic_1;
        else 
            top_14_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_15_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_15_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_15_V_ce0 <= ap_const_logic_1;
        else 
            top_15_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_15_V_d0 <= grp_relu_fu_498_ap_return;

    top_15_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_15_V_we0 <= ap_const_logic_1;
        else 
            top_15_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_1_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_1_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            top_1_V_ce0 <= ap_const_logic_1;
        else 
            top_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_1_V_d0 <= grp_relu_fu_498_ap_return;

    top_1_V_we0_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_1_V_we0 <= ap_const_logic_1;
        else 
            top_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_2_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_2_V_ce0 <= ap_const_logic_1;
        else 
            top_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_2_V_d0 <= grp_relu_fu_498_ap_return;

    top_2_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_2_V_we0 <= ap_const_logic_1;
        else 
            top_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_3_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_3_V_ce0 <= ap_const_logic_1;
        else 
            top_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_3_V_d0 <= grp_relu_fu_498_ap_return;

    top_3_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_3_V_we0 <= ap_const_logic_1;
        else 
            top_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_4_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_4_V_ce0 <= ap_const_logic_1;
        else 
            top_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_4_V_d0 <= grp_relu_fu_498_ap_return;

    top_4_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_4_V_we0 <= ap_const_logic_1;
        else 
            top_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_5_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_5_V_ce0 <= ap_const_logic_1;
        else 
            top_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_5_V_d0 <= grp_relu_fu_498_ap_return;

    top_5_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_5_V_we0 <= ap_const_logic_1;
        else 
            top_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_6_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_6_V_ce0 <= ap_const_logic_1;
        else 
            top_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_6_V_d0 <= grp_relu_fu_498_ap_return;

    top_6_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_6_V_we0 <= ap_const_logic_1;
        else 
            top_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_7_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_7_V_ce0 <= ap_const_logic_1;
        else 
            top_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_7_V_d0 <= grp_relu_fu_498_ap_return;

    top_7_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_7_V_we0 <= ap_const_logic_1;
        else 
            top_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_8_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_8_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_8_V_ce0 <= ap_const_logic_1;
        else 
            top_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_8_V_d0 <= grp_relu_fu_498_ap_return;

    top_8_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_8_V_we0 <= ap_const_logic_1;
        else 
            top_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    top_9_V_address0 <= zext_ln113_reg_1383_pp0_iter1_reg(7 - 1 downto 0);

    top_9_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            top_9_V_ce0 <= ap_const_logic_1;
        else 
            top_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    top_9_V_d0 <= grp_relu_fu_498_ap_return;

    top_9_V_we0_assign_proc : process(icmp_ln103_reg_1297_pp0_iter1_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_1297_pp0_iter1_reg = ap_const_lv1_0))) then 
            top_9_V_we0 <= ap_const_logic_1;
        else 
            top_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln109_fu_565_p1 <= c(2 - 1 downto 0);
    zext_ln109_1_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_101_fu_627_p3),8));
    zext_ln109_2_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_1_fu_667_p2),8));
    zext_ln109_3_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_3_fu_677_p2),64));
    zext_ln109_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_615_p3),8));
    zext_ln110_1_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln110_fu_692_p2),64));
    zext_ln110_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln109_fu_599_p3),8));
    zext_ln111_1_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln111_1_fu_750_p2),64));
    zext_ln111_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_fu_741_p2),8));
    zext_ln112_1_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_103_fu_714_p3),8));
    zext_ln112_2_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln112_1_fu_731_p2),64));
    zext_ln112_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_102_fu_703_p3),8));
    zext_ln113_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln113_fu_881_p2),64));
    zext_ln114_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_fu_895_p2),64));
    zext_ln115_1_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_fu_859_p3),8));
    zext_ln115_2_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln115_2_reg_1378),64));
    zext_ln115_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_104_fu_848_p3),8));
    zext_ln116_fu_1001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_reg_1408),64));
    zext_ln117_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln117_reg_1418),64));
end behav;
