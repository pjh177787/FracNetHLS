// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_HH_
#define _relu_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct relu : public sc_module {
    // Port declarations 3
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > norm_V;
    sc_out< sc_lv<12> > ap_return;


    // Module declarations
    relu(sc_module_name name);
    SC_HAS_PROCESS(relu);

    ~relu();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<12> > lhs_V_fu_70_p0;
    sc_signal< sc_lv<13> > lhs_V_fu_70_p1;
    sc_signal< sc_lv<13> > ret_V_fu_74_p2;
    sc_signal< sc_lv<12> > tmp_V_fu_88_p1;
    sc_signal< sc_lv<12> > tmp_V_fu_88_p2;
    sc_signal< sc_lv<1> > p_Result_1_fu_94_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_80_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_102_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_120_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_114_p2;
    sc_signal< sc_lv<1> > underflow_fu_108_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_126_p2;
    sc_signal< sc_lv<12> > select_ln340_fu_132_p3;
    sc_signal< sc_lv<12> > select_ln388_fu_140_p3;
    sc_signal< sc_lv<12> > p_Val2_2_fu_148_p3;
    sc_signal< sc_lv<11> > trunc_ln703_fu_162_p1;
    sc_signal< sc_lv<12> > p_Val2_3_fu_166_p2;
    sc_signal< sc_lv<22> > tmp_fu_190_p3;
    sc_signal< sc_lv<23> > sext_ln1118_fu_198_p1;
    sc_signal< sc_lv<23> > r_V_fu_186_p1;
    sc_signal< sc_lv<23> > r_V_2_fu_202_p2;
    sc_signal< sc_lv<20> > trunc_ln1192_fu_208_p1;
    sc_signal< sc_lv<23> > ret_V_1_fu_212_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_250_p3;
    sc_signal< sc_lv<12> > p_Val2_6_fu_232_p4;
    sc_signal< sc_lv<12> > zext_ln415_fu_258_p1;
    sc_signal< sc_lv<12> > p_Val2_7_fu_262_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_268_p3;
    sc_signal< sc_lv<1> > p_Result_4_fu_242_p3;
    sc_signal< sc_lv<1> > xor_ln416_fu_276_p2;
    sc_signal< sc_lv<3> > tmp_1_fu_296_p4;
    sc_signal< sc_lv<4> > tmp_2_fu_312_p4;
    sc_signal< sc_lv<1> > carry_1_fu_282_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_322_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_328_p2;
    sc_signal< sc_lv<1> > p_Result_2_fu_178_p3;
    sc_signal< sc_lv<11> > add_ln746_fu_172_p2;
    sc_signal< sc_lv<11> > select_ln746_fu_342_p3;
    sc_signal< sc_lv<20> > add_ln1192_1_fu_218_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_354_p3;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_306_p2;
    sc_signal< sc_lv<1> > xor_ln779_fu_362_p2;
    sc_signal< sc_lv<1> > and_ln779_fu_368_p2;
    sc_signal< sc_lv<1> > deleted_zeros_fu_334_p3;
    sc_signal< sc_lv<1> > p_Result_5_fu_288_p3;
    sc_signal< sc_lv<1> > xor_ln785_fu_388_p2;
    sc_signal< sc_lv<1> > p_Result_3_fu_224_p3;
    sc_signal< sc_lv<1> > or_ln785_fu_394_p2;
    sc_signal< sc_lv<1> > xor_ln785_1_fu_400_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_374_p3;
    sc_signal< sc_lv<1> > and_ln781_fu_382_p2;
    sc_signal< sc_lv<1> > and_ln786_fu_412_p2;
    sc_signal< sc_lv<1> > or_ln786_fu_418_p2;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_424_p2;
    sc_signal< sc_lv<1> > underflow_1_fu_430_p2;
    sc_signal< sc_lv<1> > overflow_fu_406_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_442_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_436_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_156_p2;
    sc_signal< sc_lv<12> > zext_ln746_fu_350_p1;
    sc_signal< sc_lv<12> > select_ln388_1_fu_462_p3;
    sc_signal< sc_lv<1> > or_ln340_3_fu_448_p2;
    sc_signal< sc_lv<1> > xor_ln1494_fu_478_p2;
    sc_signal< sc_lv<1> > and_ln340_fu_484_p2;
    sc_signal< sc_lv<12> > select_ln340_2_fu_454_p3;
    sc_signal< sc_lv<12> > sel_tmp4_fu_470_p3;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<13> ap_const_lv13_7FE;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<12> ap_const_lv12_7FE;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<12> ap_const_lv12_7FF;
    static const sc_lv<12> ap_const_lv12_800;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<11> ap_const_lv11_7FE;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<23> ap_const_lv23_3FF00;
    static const sc_lv<20> ap_const_lv20_3FF00;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_Range1_all_ones_fu_322_p2();
    void thread_Range1_all_zeros_fu_328_p2();
    void thread_Range2_all_ones_fu_306_p2();
    void thread_add_ln1192_1_fu_218_p2();
    void thread_add_ln746_fu_172_p2();
    void thread_and_ln340_fu_484_p2();
    void thread_and_ln779_fu_368_p2();
    void thread_and_ln781_fu_382_p2();
    void thread_and_ln786_fu_412_p2();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_carry_1_fu_282_p2();
    void thread_deleted_ones_fu_374_p3();
    void thread_deleted_zeros_fu_334_p3();
    void thread_icmp_ln1494_fu_156_p2();
    void thread_lhs_V_fu_70_p0();
    void thread_lhs_V_fu_70_p1();
    void thread_or_ln340_1_fu_436_p2();
    void thread_or_ln340_2_fu_442_p2();
    void thread_or_ln340_3_fu_448_p2();
    void thread_or_ln340_fu_126_p2();
    void thread_or_ln785_fu_394_p2();
    void thread_or_ln786_fu_418_p2();
    void thread_overflow_fu_406_p2();
    void thread_p_Result_1_fu_94_p3();
    void thread_p_Result_2_fu_178_p3();
    void thread_p_Result_3_fu_224_p3();
    void thread_p_Result_4_fu_242_p3();
    void thread_p_Result_5_fu_288_p3();
    void thread_p_Result_s_fu_80_p3();
    void thread_p_Val2_2_fu_148_p3();
    void thread_p_Val2_3_fu_166_p2();
    void thread_p_Val2_6_fu_232_p4();
    void thread_p_Val2_7_fu_262_p2();
    void thread_r_V_2_fu_202_p2();
    void thread_r_V_fu_186_p1();
    void thread_ret_V_1_fu_212_p2();
    void thread_ret_V_fu_74_p2();
    void thread_sel_tmp4_fu_470_p3();
    void thread_select_ln340_2_fu_454_p3();
    void thread_select_ln340_fu_132_p3();
    void thread_select_ln388_1_fu_462_p3();
    void thread_select_ln388_fu_140_p3();
    void thread_select_ln746_fu_342_p3();
    void thread_sext_ln1118_fu_198_p1();
    void thread_tmp_11_fu_354_p3();
    void thread_tmp_1_fu_296_p4();
    void thread_tmp_2_fu_312_p4();
    void thread_tmp_8_fu_250_p3();
    void thread_tmp_9_fu_268_p3();
    void thread_tmp_V_fu_88_p1();
    void thread_tmp_V_fu_88_p2();
    void thread_tmp_fu_190_p3();
    void thread_trunc_ln1192_fu_208_p1();
    void thread_trunc_ln703_fu_162_p1();
    void thread_underflow_1_fu_430_p2();
    void thread_underflow_fu_108_p2();
    void thread_xor_ln1494_fu_478_p2();
    void thread_xor_ln340_1_fu_114_p2();
    void thread_xor_ln340_fu_120_p2();
    void thread_xor_ln416_fu_276_p2();
    void thread_xor_ln779_fu_362_p2();
    void thread_xor_ln785_1_fu_400_p2();
    void thread_xor_ln785_fu_388_p2();
    void thread_xor_ln786_1_fu_424_p2();
    void thread_xor_ln786_fu_102_p2();
    void thread_zext_ln415_fu_258_p1();
    void thread_zext_ln746_fu_350_p1();
};

}

using namespace ap_rtl;

#endif
