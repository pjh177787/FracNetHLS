// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "compute_engine_16.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic compute_engine_16::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic compute_engine_16::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> compute_engine_16::ap_ST_fsm_pp0_stage0 = "1";
const bool compute_engine_16::ap_const_boolean_1 = true;
const sc_lv<32> compute_engine_16::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool compute_engine_16::ap_const_boolean_0 = false;
const sc_lv<2> compute_engine_16::ap_const_lv2_3 = "11";
const sc_lv<32> compute_engine_16::ap_const_lv32_4 = "100";
const sc_lv<32> compute_engine_16::ap_const_lv32_7 = "111";
const sc_lv<32> compute_engine_16::ap_const_lv32_8 = "1000";
const sc_lv<32> compute_engine_16::ap_const_lv32_B = "1011";
const sc_lv<32> compute_engine_16::ap_const_lv32_C = "1100";
const sc_lv<32> compute_engine_16::ap_const_lv32_F = "1111";

compute_engine_16::compute_engine_16(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lut16_V_U = new compute_engine_16bkb("lut16_V_U");
    lut16_V_U->clk(ap_clk);
    lut16_V_U->reset(ap_rst);
    lut16_V_U->address0(lut16_V_address0);
    lut16_V_U->ce0(lut16_V_ce0);
    lut16_V_U->q0(lut16_V_q0);
    lut16_V_U->address1(lut16_V_address1);
    lut16_V_U->ce1(lut16_V_ce1);
    lut16_V_U->q1(lut16_V_q1);
    lut16_V_U->address2(lut16_V_address2);
    lut16_V_U->ce2(lut16_V_ce2);
    lut16_V_U->q2(lut16_V_q2);
    lut16_V_U->address3(lut16_V_address3);
    lut16_V_U->ce3(lut16_V_ce3);
    lut16_V_U->q3(lut16_V_q3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add0_V_fu_177_p2);
    sensitive << ( zext_ln215_16_fu_173_p1 );
    sensitive << ( zext_ln215_fu_169_p1 );

    SC_METHOD(thread_add1_V_fu_191_p2);
    sensitive << ( zext_ln215_18_fu_187_p1 );
    sensitive << ( zext_ln215_17_fu_183_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_ap_reset_start_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( rhs_V_fu_201_p1 );
    sensitive << ( lhs_V_fu_197_p1 );

    SC_METHOD(thread_lhs_V_fu_197_p1);
    sensitive << ( add0_V_fu_177_p2 );

    SC_METHOD(thread_lut16_V_address0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln15_fu_119_p1 );

    SC_METHOD(thread_lut16_V_address1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln15_1_fu_134_p1 );

    SC_METHOD(thread_lut16_V_address2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln16_fu_149_p1 );

    SC_METHOD(thread_lut16_V_address3);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln16_1_fu_164_p1 );

    SC_METHOD(thread_lut16_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_lut16_V_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_lut16_V_ce2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_lut16_V_ce3);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_p_Result_15_fu_139_p4);
    sensitive << ( r_V_fu_109_p2 );

    SC_METHOD(thread_p_Result_16_fu_154_p4);
    sensitive << ( r_V_fu_109_p2 );

    SC_METHOD(thread_p_Result_s_fu_124_p4);
    sensitive << ( r_V_fu_109_p2 );

    SC_METHOD(thread_r_V_fu_109_p2);
    sensitive << ( b_V );
    sensitive << ( sext_ln769_fu_105_p1 );

    SC_METHOD(thread_rhs_V_fu_201_p1);
    sensitive << ( add1_V_fu_191_p2 );

    SC_METHOD(thread_sext_ln769_fu_105_p1);
    sensitive << ( xor_ln769_fu_99_p2 );

    SC_METHOD(thread_trunc_ln681_fu_115_p1);
    sensitive << ( r_V_fu_109_p2 );

    SC_METHOD(thread_xor_ln769_fu_99_p2);
    sensitive << ( w_V );

    SC_METHOD(thread_zext_ln15_1_fu_134_p1);
    sensitive << ( p_Result_s_fu_124_p4 );

    SC_METHOD(thread_zext_ln15_fu_119_p1);
    sensitive << ( trunc_ln681_fu_115_p1 );

    SC_METHOD(thread_zext_ln16_1_fu_164_p1);
    sensitive << ( p_Result_16_fu_154_p4 );

    SC_METHOD(thread_zext_ln16_fu_149_p1);
    sensitive << ( p_Result_15_fu_139_p4 );

    SC_METHOD(thread_zext_ln215_16_fu_173_p1);
    sensitive << ( lut16_V_q1 );

    SC_METHOD(thread_zext_ln215_17_fu_183_p1);
    sensitive << ( lut16_V_q2 );

    SC_METHOD(thread_zext_ln215_18_fu_187_p1);
    sensitive << ( lut16_V_q3 );

    SC_METHOD(thread_zext_ln215_fu_169_p1);
    sensitive << ( lut16_V_q0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );
    sensitive << ( ap_reset_start_pp0 );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "compute_engine_16_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, b_V, "(port)b_V");
    sc_trace(mVcdFile, w_V, "(port)w_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, lut16_V_address0, "lut16_V_address0");
    sc_trace(mVcdFile, lut16_V_ce0, "lut16_V_ce0");
    sc_trace(mVcdFile, lut16_V_q0, "lut16_V_q0");
    sc_trace(mVcdFile, lut16_V_address1, "lut16_V_address1");
    sc_trace(mVcdFile, lut16_V_ce1, "lut16_V_ce1");
    sc_trace(mVcdFile, lut16_V_q1, "lut16_V_q1");
    sc_trace(mVcdFile, lut16_V_address2, "lut16_V_address2");
    sc_trace(mVcdFile, lut16_V_ce2, "lut16_V_ce2");
    sc_trace(mVcdFile, lut16_V_q2, "lut16_V_q2");
    sc_trace(mVcdFile, lut16_V_address3, "lut16_V_address3");
    sc_trace(mVcdFile, lut16_V_ce3, "lut16_V_ce3");
    sc_trace(mVcdFile, lut16_V_q3, "lut16_V_q3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, zext_ln15_fu_119_p1, "zext_ln15_fu_119_p1");
    sc_trace(mVcdFile, zext_ln15_1_fu_134_p1, "zext_ln15_1_fu_134_p1");
    sc_trace(mVcdFile, zext_ln16_fu_149_p1, "zext_ln16_fu_149_p1");
    sc_trace(mVcdFile, zext_ln16_1_fu_164_p1, "zext_ln16_1_fu_164_p1");
    sc_trace(mVcdFile, xor_ln769_fu_99_p2, "xor_ln769_fu_99_p2");
    sc_trace(mVcdFile, sext_ln769_fu_105_p1, "sext_ln769_fu_105_p1");
    sc_trace(mVcdFile, r_V_fu_109_p2, "r_V_fu_109_p2");
    sc_trace(mVcdFile, trunc_ln681_fu_115_p1, "trunc_ln681_fu_115_p1");
    sc_trace(mVcdFile, p_Result_s_fu_124_p4, "p_Result_s_fu_124_p4");
    sc_trace(mVcdFile, p_Result_15_fu_139_p4, "p_Result_15_fu_139_p4");
    sc_trace(mVcdFile, p_Result_16_fu_154_p4, "p_Result_16_fu_154_p4");
    sc_trace(mVcdFile, zext_ln215_16_fu_173_p1, "zext_ln215_16_fu_173_p1");
    sc_trace(mVcdFile, zext_ln215_fu_169_p1, "zext_ln215_fu_169_p1");
    sc_trace(mVcdFile, zext_ln215_18_fu_187_p1, "zext_ln215_18_fu_187_p1");
    sc_trace(mVcdFile, zext_ln215_17_fu_183_p1, "zext_ln215_17_fu_183_p1");
    sc_trace(mVcdFile, add0_V_fu_177_p2, "add0_V_fu_177_p2");
    sc_trace(mVcdFile, add1_V_fu_191_p2, "add1_V_fu_191_p2");
    sc_trace(mVcdFile, rhs_V_fu_201_p1, "rhs_V_fu_201_p1");
    sc_trace(mVcdFile, lhs_V_fu_197_p1, "lhs_V_fu_197_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_reset_start_pp0, "ap_reset_start_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

compute_engine_16::~compute_engine_16() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lut16_V_U;
}

void compute_engine_16::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
}

void compute_engine_16::thread_add0_V_fu_177_p2() {
    add0_V_fu_177_p2 = (!zext_ln215_16_fu_173_p1.read().is_01() || !zext_ln215_fu_169_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln215_16_fu_173_p1.read()) + sc_biguint<4>(zext_ln215_fu_169_p1.read()));
}

void compute_engine_16::thread_add1_V_fu_191_p2() {
    add1_V_fu_191_p2 = (!zext_ln215_18_fu_187_p1.read().is_01() || !zext_ln215_17_fu_183_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln215_18_fu_187_p1.read()) + sc_biguint<4>(zext_ln215_17_fu_183_p1.read()));
}

void compute_engine_16::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void compute_engine_16::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_engine_16::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void compute_engine_16::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_0));
}

void compute_engine_16::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read());
}

void compute_engine_16::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_engine_16::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void compute_engine_16::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void compute_engine_16::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void compute_engine_16::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void compute_engine_16::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void compute_engine_16::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void compute_engine_16::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void compute_engine_16::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void compute_engine_16::thread_ap_reset_start_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()))) {
        ap_reset_start_pp0 = ap_const_logic_1;
    } else {
        ap_reset_start_pp0 = ap_const_logic_0;
    }
}

void compute_engine_16::thread_ap_return() {
    ap_return = (!rhs_V_fu_201_p1.read().is_01() || !lhs_V_fu_197_p1.read().is_01())? sc_lv<5>(): (sc_bigint<5>(rhs_V_fu_201_p1.read()) + sc_bigint<5>(lhs_V_fu_197_p1.read()));
}

void compute_engine_16::thread_lhs_V_fu_197_p1() {
    lhs_V_fu_197_p1 = esl_sext<5,4>(add0_V_fu_177_p2.read());
}

void compute_engine_16::thread_lut16_V_address0() {
    lut16_V_address0 =  (sc_lv<4>) (zext_ln15_fu_119_p1.read());
}

void compute_engine_16::thread_lut16_V_address1() {
    lut16_V_address1 =  (sc_lv<4>) (zext_ln15_1_fu_134_p1.read());
}

void compute_engine_16::thread_lut16_V_address2() {
    lut16_V_address2 =  (sc_lv<4>) (zext_ln16_fu_149_p1.read());
}

void compute_engine_16::thread_lut16_V_address3() {
    lut16_V_address3 =  (sc_lv<4>) (zext_ln16_1_fu_164_p1.read());
}

void compute_engine_16::thread_lut16_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        lut16_V_ce0 = ap_const_logic_1;
    } else {
        lut16_V_ce0 = ap_const_logic_0;
    }
}

void compute_engine_16::thread_lut16_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        lut16_V_ce1 = ap_const_logic_1;
    } else {
        lut16_V_ce1 = ap_const_logic_0;
    }
}

void compute_engine_16::thread_lut16_V_ce2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        lut16_V_ce2 = ap_const_logic_1;
    } else {
        lut16_V_ce2 = ap_const_logic_0;
    }
}

void compute_engine_16::thread_lut16_V_ce3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        lut16_V_ce3 = ap_const_logic_1;
    } else {
        lut16_V_ce3 = ap_const_logic_0;
    }
}

void compute_engine_16::thread_p_Result_15_fu_139_p4() {
    p_Result_15_fu_139_p4 = r_V_fu_109_p2.read().range(11, 8);
}

void compute_engine_16::thread_p_Result_16_fu_154_p4() {
    p_Result_16_fu_154_p4 = r_V_fu_109_p2.read().range(15, 12);
}

void compute_engine_16::thread_p_Result_s_fu_124_p4() {
    p_Result_s_fu_124_p4 = r_V_fu_109_p2.read().range(7, 4);
}

void compute_engine_16::thread_r_V_fu_109_p2() {
    r_V_fu_109_p2 = (sext_ln769_fu_105_p1.read() ^ b_V.read());
}

void compute_engine_16::thread_rhs_V_fu_201_p1() {
    rhs_V_fu_201_p1 = esl_sext<5,4>(add1_V_fu_191_p2.read());
}

void compute_engine_16::thread_sext_ln769_fu_105_p1() {
    sext_ln769_fu_105_p1 = esl_sext<16,2>(xor_ln769_fu_99_p2.read());
}

void compute_engine_16::thread_trunc_ln681_fu_115_p1() {
    trunc_ln681_fu_115_p1 = r_V_fu_109_p2.read().range(4-1, 0);
}

void compute_engine_16::thread_xor_ln769_fu_99_p2() {
    xor_ln769_fu_99_p2 = (w_V.read() ^ ap_const_lv2_3);
}

void compute_engine_16::thread_zext_ln15_1_fu_134_p1() {
    zext_ln15_1_fu_134_p1 = esl_zext<64,4>(p_Result_s_fu_124_p4.read());
}

void compute_engine_16::thread_zext_ln15_fu_119_p1() {
    zext_ln15_fu_119_p1 = esl_zext<64,4>(trunc_ln681_fu_115_p1.read());
}

void compute_engine_16::thread_zext_ln16_1_fu_164_p1() {
    zext_ln16_1_fu_164_p1 = esl_zext<64,4>(p_Result_16_fu_154_p4.read());
}

void compute_engine_16::thread_zext_ln16_fu_149_p1() {
    zext_ln16_fu_149_p1 = esl_zext<64,4>(p_Result_15_fu_139_p4.read());
}

void compute_engine_16::thread_zext_ln215_16_fu_173_p1() {
    zext_ln215_16_fu_173_p1 = esl_zext<4,3>(lut16_V_q1.read());
}

void compute_engine_16::thread_zext_ln215_17_fu_183_p1() {
    zext_ln215_17_fu_183_p1 = esl_zext<4,3>(lut16_V_q2.read());
}

void compute_engine_16::thread_zext_ln215_18_fu_187_p1() {
    zext_ln215_18_fu_187_p1 = esl_zext<4,3>(lut16_V_q3.read());
}

void compute_engine_16::thread_zext_ln215_fu_169_p1() {
    zext_ln215_fu_169_p1 = esl_zext<4,3>(lut16_V_q0.read());
}

void compute_engine_16::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

