// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pgconv64s2_16u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bottom1_V_address0,
        bottom1_V_ce0,
        bottom1_V_q0,
        bottom1_V_address1,
        bottom1_V_ce1,
        bottom1_V_q1,
        row_off,
        col_off,
        top_0_V_address0,
        top_0_V_ce0,
        top_0_V_we0,
        top_0_V_d0,
        top_0_V_q0,
        top_1_V_address0,
        top_1_V_ce0,
        top_1_V_we0,
        top_1_V_d0,
        top_1_V_q0,
        top_2_V_address0,
        top_2_V_ce0,
        top_2_V_we0,
        top_2_V_d0,
        top_2_V_q0,
        top_3_V_address0,
        top_3_V_ce0,
        top_3_V_we0,
        top_3_V_d0,
        top_3_V_q0,
        top_4_V_address0,
        top_4_V_ce0,
        top_4_V_we0,
        top_4_V_d0,
        top_4_V_q0,
        top_5_V_address0,
        top_5_V_ce0,
        top_5_V_we0,
        top_5_V_d0,
        top_5_V_q0,
        top_6_V_address0,
        top_6_V_ce0,
        top_6_V_we0,
        top_6_V_d0,
        top_6_V_q0,
        top_7_V_address0,
        top_7_V_ce0,
        top_7_V_we0,
        top_7_V_d0,
        top_7_V_q0,
        top_8_V_address0,
        top_8_V_ce0,
        top_8_V_we0,
        top_8_V_d0,
        top_8_V_q0,
        top_9_V_address0,
        top_9_V_ce0,
        top_9_V_we0,
        top_9_V_d0,
        top_9_V_q0,
        top_10_V_address0,
        top_10_V_ce0,
        top_10_V_we0,
        top_10_V_d0,
        top_10_V_q0,
        top_11_V_address0,
        top_11_V_ce0,
        top_11_V_we0,
        top_11_V_d0,
        top_11_V_q0,
        top_12_V_address0,
        top_12_V_ce0,
        top_12_V_we0,
        top_12_V_d0,
        top_12_V_q0,
        top_13_V_address0,
        top_13_V_ce0,
        top_13_V_we0,
        top_13_V_d0,
        top_13_V_q0,
        top_14_V_address0,
        top_14_V_ce0,
        top_14_V_we0,
        top_14_V_d0,
        top_14_V_q0,
        top_15_V_address0,
        top_15_V_ce0,
        top_15_V_we0,
        top_15_V_d0,
        top_15_V_q0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state11 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] bottom1_V_address0;
output   bottom1_V_ce0;
input  [63:0] bottom1_V_q0;
output  [6:0] bottom1_V_address1;
output   bottom1_V_ce1;
input  [63:0] bottom1_V_q1;
input  [1:0] row_off;
input  [1:0] col_off;
output  [6:0] top_0_V_address0;
output   top_0_V_ce0;
output   top_0_V_we0;
output  [11:0] top_0_V_d0;
input  [11:0] top_0_V_q0;
output  [6:0] top_1_V_address0;
output   top_1_V_ce0;
output   top_1_V_we0;
output  [11:0] top_1_V_d0;
input  [11:0] top_1_V_q0;
output  [6:0] top_2_V_address0;
output   top_2_V_ce0;
output   top_2_V_we0;
output  [11:0] top_2_V_d0;
input  [11:0] top_2_V_q0;
output  [6:0] top_3_V_address0;
output   top_3_V_ce0;
output   top_3_V_we0;
output  [11:0] top_3_V_d0;
input  [11:0] top_3_V_q0;
output  [6:0] top_4_V_address0;
output   top_4_V_ce0;
output   top_4_V_we0;
output  [11:0] top_4_V_d0;
input  [11:0] top_4_V_q0;
output  [6:0] top_5_V_address0;
output   top_5_V_ce0;
output   top_5_V_we0;
output  [11:0] top_5_V_d0;
input  [11:0] top_5_V_q0;
output  [6:0] top_6_V_address0;
output   top_6_V_ce0;
output   top_6_V_we0;
output  [11:0] top_6_V_d0;
input  [11:0] top_6_V_q0;
output  [6:0] top_7_V_address0;
output   top_7_V_ce0;
output   top_7_V_we0;
output  [11:0] top_7_V_d0;
input  [11:0] top_7_V_q0;
output  [6:0] top_8_V_address0;
output   top_8_V_ce0;
output   top_8_V_we0;
output  [11:0] top_8_V_d0;
input  [11:0] top_8_V_q0;
output  [6:0] top_9_V_address0;
output   top_9_V_ce0;
output   top_9_V_we0;
output  [11:0] top_9_V_d0;
input  [11:0] top_9_V_q0;
output  [6:0] top_10_V_address0;
output   top_10_V_ce0;
output   top_10_V_we0;
output  [11:0] top_10_V_d0;
input  [11:0] top_10_V_q0;
output  [6:0] top_11_V_address0;
output   top_11_V_ce0;
output   top_11_V_we0;
output  [11:0] top_11_V_d0;
input  [11:0] top_11_V_q0;
output  [6:0] top_12_V_address0;
output   top_12_V_ce0;
output   top_12_V_we0;
output  [11:0] top_12_V_d0;
input  [11:0] top_12_V_q0;
output  [6:0] top_13_V_address0;
output   top_13_V_ce0;
output   top_13_V_we0;
output  [11:0] top_13_V_d0;
input  [11:0] top_13_V_q0;
output  [6:0] top_14_V_address0;
output   top_14_V_ce0;
output   top_14_V_we0;
output  [11:0] top_14_V_d0;
input  [11:0] top_14_V_q0;
output  [6:0] top_15_V_address0;
output   top_15_V_ce0;
output   top_15_V_we0;
output  [11:0] top_15_V_d0;
input  [11:0] top_15_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] bottom1_V_address0;
reg bottom1_V_ce0;
reg[6:0] bottom1_V_address1;
reg bottom1_V_ce1;
reg[6:0] top_0_V_address0;
reg top_0_V_ce0;
reg top_0_V_we0;
reg[6:0] top_1_V_address0;
reg top_1_V_ce0;
reg top_1_V_we0;
reg[6:0] top_2_V_address0;
reg top_2_V_ce0;
reg top_2_V_we0;
reg[6:0] top_3_V_address0;
reg top_3_V_ce0;
reg top_3_V_we0;
reg[6:0] top_4_V_address0;
reg top_4_V_ce0;
reg top_4_V_we0;
reg[6:0] top_5_V_address0;
reg top_5_V_ce0;
reg top_5_V_we0;
reg[6:0] top_6_V_address0;
reg top_6_V_ce0;
reg top_6_V_we0;
reg[6:0] top_7_V_address0;
reg top_7_V_ce0;
reg top_7_V_we0;
reg[6:0] top_8_V_address0;
reg top_8_V_ce0;
reg top_8_V_we0;
reg[6:0] top_9_V_address0;
reg top_9_V_ce0;
reg top_9_V_we0;
reg[6:0] top_10_V_address0;
reg top_10_V_ce0;
reg top_10_V_we0;
reg[6:0] top_11_V_address0;
reg top_11_V_ce0;
reg top_11_V_we0;
reg[6:0] top_12_V_address0;
reg top_12_V_ce0;
reg top_12_V_we0;
reg[6:0] top_13_V_address0;
reg top_13_V_ce0;
reg top_13_V_we0;
reg[6:0] top_14_V_address0;
reg top_14_V_ce0;
reg top_14_V_we0;
reg[6:0] top_15_V_address0;
reg top_15_V_ce0;
reg top_15_V_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_497;
reg   [4:0] indvars_iv_reg_508;
reg   [4:0] top_row_0_reg_517;
reg   [4:0] top_col_0_reg_526;
reg   [3:0] row_0_reg_535;
reg   [4:0] top_row_1_reg_546;
reg   [4:0] top_col_1_reg_555;
reg   [3:0] col_0_reg_564;
wire   [4:0] zext_ln169_fu_623_p1;
wire   [4:0] zext_ln170_fu_645_p1;
wire   [4:0] zext_ln171_fu_655_p1;
wire   [6:0] tmp_s_fu_665_p3;
reg   [6:0] tmp_s_reg_2981;
wire   [0:0] icmp_ln171_fu_673_p2;
reg   [0:0] icmp_ln171_reg_2986;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln171_reg_2986_pp0_iter1_reg;
wire   [6:0] add_ln171_5_fu_678_p2;
reg   [6:0] add_ln171_5_reg_2990;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] select_ln170_fu_714_p3;
reg   [4:0] select_ln170_reg_2995;
wire   [4:0] select_ln170_6_fu_722_p3;
reg   [4:0] select_ln170_6_reg_3002;
wire   [3:0] select_ln170_7_fu_730_p3;
reg   [3:0] select_ln170_7_reg_3008;
wire   [7:0] add_ln178_fu_776_p2;
reg   [7:0] add_ln178_reg_3014;
wire   [3:0] select_ln170_9_fu_782_p3;
reg   [3:0] select_ln170_9_reg_3019;
wire   [3:0] add_ln170_4_fu_798_p2;
reg   [3:0] add_ln170_4_reg_3026;
wire   [4:0] select_ln171_fu_804_p3;
reg   [4:0] select_ln171_reg_3032;
wire   [4:0] select_ln171_3_fu_812_p3;
reg   [4:0] select_ln171_3_reg_3037;
wire   [4:0] select_ln171_4_fu_820_p3;
reg   [4:0] select_ln171_4_reg_3042;
wire   [7:0] zext_ln178_5_fu_834_p1;
reg   [7:0] zext_ln178_5_reg_3047;
wire   [7:0] zext_ln179_fu_849_p1;
reg   [7:0] zext_ln179_reg_3058;
wire   [7:0] add_ln181_fu_886_p2;
reg   [7:0] add_ln181_reg_3069;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [7:0] zext_ln180_fu_907_p1;
reg   [7:0] zext_ln180_reg_3080;
wire   [7:0] add_ln184_2_fu_949_p2;
reg   [7:0] add_ln184_2_reg_3091;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [7:0] add_ln185_fu_963_p2;
reg   [7:0] add_ln185_reg_3101;
wire   [7:0] add_ln186_fu_977_p2;
reg   [7:0] add_ln186_reg_3111;
wire   [5:0] grp_compute_engine_64_fu_575_ap_return;
reg   [5:0] p_s_reg_3116;
wire   [5:0] grp_compute_engine_64_fu_585_ap_return;
reg   [5:0] tmp1_V_reg_3121;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [5:0] tmp2_V_reg_3136;
reg   [5:0] tmp3_V_reg_3141;
reg   [6:0] top_0_V_addr_reg_3146;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [6:0] top_1_V_addr_reg_3151;
reg   [6:0] top_2_V_addr_reg_3156;
reg   [6:0] top_3_V_addr_reg_3161;
reg   [6:0] top_4_V_addr_reg_3166;
reg   [6:0] top_5_V_addr_reg_3171;
reg   [6:0] top_6_V_addr_reg_3176;
reg   [6:0] top_7_V_addr_reg_3181;
reg   [6:0] top_8_V_addr_reg_3186;
reg   [6:0] top_9_V_addr_reg_3191;
reg   [6:0] top_10_V_addr_reg_3196;
reg   [6:0] top_11_V_addr_reg_3201;
reg   [6:0] top_12_V_addr_reg_3206;
reg   [6:0] top_13_V_addr_reg_3211;
reg   [6:0] top_14_V_addr_reg_3216;
reg   [6:0] top_15_V_addr_reg_3221;
reg   [5:0] tmp4_V_reg_3231;
reg   [5:0] tmp5_V_reg_3236;
wire   [4:0] top_row_fu_1047_p2;
reg   [4:0] top_row_reg_3241;
wire   [4:0] top_col_fu_1052_p2;
reg   [4:0] top_col_reg_3246;
wire   [3:0] col_fu_1057_p2;
reg   [3:0] col_reg_3251;
reg  signed [11:0] top_0_V_load_reg_3256;
reg    ap_enable_reg_pp0_iter1;
reg   [5:0] tmp6_V_reg_3262;
reg   [5:0] tmp7_V_reg_3267;
reg  signed [11:0] top_1_V_load_reg_3272;
reg  signed [11:0] top_2_V_load_reg_3278;
reg  signed [11:0] top_3_V_load_reg_3284;
reg  signed [11:0] top_4_V_load_reg_3290;
reg  signed [11:0] top_5_V_load_reg_3296;
reg  signed [11:0] top_6_V_load_reg_3302;
reg  signed [11:0] top_7_V_load_reg_3308;
reg  signed [11:0] top_8_V_load_reg_3314;
reg  signed [11:0] top_9_V_load_reg_3320;
reg  signed [11:0] top_10_V_load_reg_3326;
reg  signed [11:0] top_11_V_load_reg_3332;
reg  signed [11:0] top_12_V_load_reg_3338;
reg  signed [11:0] top_13_V_load_reg_3344;
reg  signed [11:0] top_14_V_load_reg_3350;
reg  signed [11:0] top_15_V_load_reg_3356;
wire   [7:0] sum_V_ret_sum_engine_fu_595_ap_return;
reg   [7:0] sum_V_ret_reg_3362;
reg   [4:0] tmp_reg_3368;
wire  signed [11:0] p_Val2_14_fu_1255_p3;
reg  signed [11:0] p_Val2_14_reg_3373;
wire   [10:0] trunc_ln703_fu_1263_p1;
reg   [10:0] trunc_ln703_reg_3381;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    grp_compute_engine_64_fu_575_ap_start;
wire    grp_compute_engine_64_fu_575_ap_done;
wire    grp_compute_engine_64_fu_575_ap_idle;
wire    grp_compute_engine_64_fu_575_ap_ready;
wire    grp_compute_engine_64_fu_585_ap_start;
wire    grp_compute_engine_64_fu_585_ap_done;
wire    grp_compute_engine_64_fu_585_ap_idle;
wire    grp_compute_engine_64_fu_585_ap_ready;
wire    sum_V_ret_sum_engine_fu_595_ap_ready;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_501_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_indvars_iv_phi_fu_511_p4;
reg   [4:0] ap_phi_mux_top_row_0_phi_fu_520_p4;
reg   [4:0] ap_phi_mux_top_col_0_phi_fu_529_p4;
reg   [3:0] ap_phi_mux_row_0_phi_fu_539_p4;
reg   [4:0] ap_phi_mux_top_row_1_phi_fu_549_p4;
reg   [4:0] ap_phi_mux_top_col_1_phi_fu_558_p4;
reg   [3:0] ap_phi_mux_col_0_phi_fu_568_p4;
reg    grp_compute_engine_64_fu_575_ap_start_reg;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
reg    grp_compute_engine_64_fu_585_ap_start_reg;
wire   [63:0] zext_ln178_6_fu_844_p1;
wire   [63:0] zext_ln179_2_fu_859_p1;
wire   [63:0] zext_ln181_4_fu_897_p1;
wire   [63:0] zext_ln180_2_fu_916_p1;
wire   [63:0] zext_ln182_fu_958_p1;
wire   [63:0] zext_ln183_fu_972_p1;
wire   [63:0] zext_ln184_4_fu_982_p1;
wire   [63:0] zext_ln185_fu_986_p1;
wire   [63:0] zext_ln176_4_fu_1023_p1;
wire   [63:0] zext_ln186_fu_1043_p1;
wire   [3:0] shl_ln_fu_609_p3;
wire   [3:0] or_ln169_fu_617_p2;
wire   [0:0] trunc_ln170_fu_627_p1;
wire   [2:0] shl_ln5_fu_631_p3;
wire   [2:0] or_ln170_fu_639_p2;
wire   [3:0] add_ln171_fu_649_p2;
wire   [4:0] sub_ln171_fu_659_p2;
wire   [0:0] icmp_ln172_fu_708_p2;
wire   [4:0] add_ln169_fu_702_p2;
wire   [4:0] add_ln170_fu_696_p2;
wire   [3:0] select_ln170_8_fu_738_p3;
wire   [3:0] add_ln170_3_fu_746_p2;
wire   [6:0] tmp_1_fu_752_p3;
wire   [4:0] tmp_5_fu_764_p3;
wire   [7:0] zext_ln178_fu_760_p1;
wire   [7:0] zext_ln178_4_fu_772_p1;
wire   [3:0] row_fu_684_p2;
wire   [3:0] select_ln170_10_fu_790_p3;
wire   [4:0] add_ln171_4_fu_690_p2;
wire   [3:0] add_ln178_2_fu_828_p2;
wire   [7:0] add_ln178_3_fu_838_p2;
wire   [7:0] add_ln179_fu_853_p2;
wire   [6:0] tmp_6_fu_864_p3;
wire   [4:0] tmp_7_fu_875_p3;
wire   [7:0] zext_ln181_fu_871_p1;
wire   [7:0] zext_ln181_3_fu_882_p1;
wire   [7:0] add_ln181_2_fu_892_p2;
wire   [3:0] add_ln180_fu_902_p2;
wire   [7:0] add_ln180_2_fu_911_p2;
wire   [6:0] tmp_8_fu_921_p3;
wire   [4:0] tmp_9_fu_932_p3;
wire   [7:0] zext_ln184_fu_928_p1;
wire   [7:0] zext_ln184_3_fu_939_p1;
wire   [7:0] add_ln184_fu_943_p2;
wire   [7:0] add_ln182_fu_954_p2;
wire   [7:0] add_ln183_fu_968_p2;
wire   [5:0] tmp_11_fu_1000_p3;
wire   [7:0] tmp_10_fu_993_p3;
wire   [7:0] zext_ln176_3_fu_1007_p1;
wire   [7:0] zext_ln176_fu_990_p1;
wire   [7:0] add_ln176_fu_1011_p2;
wire   [7:0] add_ln176_2_fu_1017_p2;
wire   [0:0] icmp_ln1494_fu_1072_p2;
wire   [7:0] shl_ln700_fu_1077_p2;
wire   [7:0] tmp_V_fu_1082_p3;
wire   [17:0] shl_ln8_fu_1093_p3;
wire   [18:0] zext_ln1118_fu_1101_p1;
wire   [18:0] r_V_fu_1089_p1;
wire   [18:0] r_V_6_fu_1105_p2;
wire   [19:0] lhs_V_fu_1111_p1;
wire   [10:0] trunc_ln731_fu_1121_p1;
wire   [10:0] add_ln731_fu_1125_p2;
wire   [19:0] ret_V_fu_1115_p2;
wire   [8:0] p_Result_i_fu_1147_p4;
wire   [0:0] p_Result_s_fu_1139_p3;
wire   [0:0] icmp_ln785_fu_1157_p2;
wire   [0:0] or_ln785_fu_1163_p2;
wire   [11:0] p_Val2_10_fu_1131_p3;
wire  signed [11:0] p_Val2_11_fu_1169_p3;
wire  signed [12:0] lhs_V_3_fu_1177_p1;
wire   [12:0] ret_V_2_fu_1181_p2;
wire   [11:0] tmp_V_1_fu_1195_p2;
wire   [0:0] p_Result_7_fu_1201_p3;
wire   [0:0] p_Result_6_fu_1187_p3;
wire   [0:0] xor_ln786_16_fu_1209_p2;
wire   [0:0] xor_ln340_33_fu_1227_p2;
wire   [0:0] xor_ln340_32_fu_1221_p2;
wire   [0:0] underflow_fu_1215_p2;
wire   [0:0] or_ln340_19_fu_1233_p2;
wire   [11:0] select_ln340_32_fu_1239_p3;
wire   [11:0] select_ln388_16_fu_1247_p3;
wire   [11:0] p_Val2_15_fu_1272_p2;
wire   [21:0] tmp_12_fu_1293_p3;
wire  signed [22:0] sext_ln1118_fu_1300_p1;
wire  signed [22:0] r_V_4_fu_1290_p1;
wire   [22:0] r_V_7_fu_1304_p2;
wire   [19:0] trunc_ln1192_fu_1310_p1;
wire   [22:0] ret_V_3_fu_1314_p2;
wire   [0:0] tmp_65_fu_1352_p3;
wire   [11:0] p_Val2_18_fu_1334_p4;
wire   [11:0] zext_ln415_fu_1360_p1;
wire   [11:0] p_Val2_19_fu_1364_p2;
wire   [0:0] tmp_66_fu_1370_p3;
wire   [0:0] p_Result_10_fu_1344_p3;
wire   [0:0] xor_ln416_fu_1378_p2;
wire   [2:0] tmp_3_fu_1398_p4;
wire   [3:0] tmp_4_fu_1414_p4;
wire   [0:0] carry_2_fu_1384_p2;
wire   [0:0] Range1_all_ones_fu_1424_p2;
wire   [0:0] Range1_all_zeros_fu_1430_p2;
wire   [0:0] p_Result_8_fu_1282_p3;
wire   [10:0] add_ln746_fu_1277_p2;
wire   [10:0] select_ln746_fu_1444_p3;
wire   [19:0] add_ln1192_34_fu_1320_p2;
wire   [0:0] tmp_68_fu_1456_p3;
wire   [0:0] Range2_all_ones_fu_1408_p2;
wire   [0:0] xor_ln779_fu_1464_p2;
wire   [0:0] and_ln779_fu_1470_p2;
wire   [0:0] deleted_zeros_fu_1436_p3;
wire   [0:0] p_Result_11_fu_1390_p3;
wire   [0:0] xor_ln785_fu_1490_p2;
wire   [0:0] p_Result_9_fu_1326_p3;
wire   [0:0] or_ln785_1_fu_1496_p2;
wire   [0:0] xor_ln785_2_fu_1502_p2;
wire   [0:0] deleted_ones_fu_1476_p3;
wire   [0:0] and_ln781_fu_1484_p2;
wire   [0:0] and_ln786_34_fu_1514_p2;
wire   [0:0] or_ln786_fu_1520_p2;
wire   [0:0] xor_ln786_17_fu_1526_p2;
wire   [0:0] underflow_2_fu_1532_p2;
wire   [0:0] overflow_fu_1508_p2;
wire   [0:0] or_ln340_21_fu_1544_p2;
wire   [0:0] or_ln340_20_fu_1538_p2;
wire   [0:0] icmp_ln1494_16_fu_1267_p2;
wire   [11:0] zext_ln746_fu_1452_p1;
wire   [11:0] select_ln388_17_fu_1564_p3;
wire   [0:0] or_ln340_22_fu_1550_p2;
wire   [0:0] xor_ln1494_fu_1580_p2;
wire   [0:0] and_ln340_fu_1586_p2;
wire   [11:0] select_ln340_34_fu_1556_p3;
wire   [11:0] sel_tmp4_i_fu_1572_p3;
wire  signed [11:0] select_ln340_35_fu_1592_p3;
wire  signed [12:0] sext_ln703_fu_1600_p1;
wire  signed [12:0] sext_ln703_32_fu_1603_p1;
wire   [12:0] add_ln1192_fu_1607_p2;
wire   [11:0] add_ln703_fu_1621_p2;
wire   [0:0] tmp_70_fu_1626_p3;
wire   [0:0] tmp_69_fu_1613_p3;
wire   [0:0] xor_ln786_fu_1634_p2;
wire   [0:0] xor_ln340_fu_1652_p2;
wire   [0:0] xor_ln340_34_fu_1646_p2;
wire   [0:0] and_ln786_fu_1640_p2;
wire   [0:0] or_ln340_fu_1658_p2;
wire   [11:0] select_ln340_fu_1664_p3;
wire   [11:0] select_ln388_fu_1672_p3;
wire  signed [12:0] sext_ln703_33_fu_1689_p1;
wire   [12:0] add_ln1192_16_fu_1692_p2;
wire   [11:0] add_ln703_16_fu_1706_p2;
wire   [0:0] tmp_72_fu_1711_p3;
wire   [0:0] tmp_71_fu_1698_p3;
wire   [0:0] xor_ln786_1_fu_1719_p2;
wire   [0:0] xor_ln340_1_fu_1737_p2;
wire   [0:0] xor_ln340_35_fu_1731_p2;
wire   [0:0] and_ln786_19_fu_1725_p2;
wire   [0:0] or_ln340_23_fu_1743_p2;
wire   [11:0] select_ln340_1_fu_1749_p3;
wire   [11:0] select_ln388_1_fu_1757_p3;
wire  signed [12:0] sext_ln703_34_fu_1774_p1;
wire   [12:0] add_ln1192_17_fu_1777_p2;
wire   [11:0] add_ln703_17_fu_1791_p2;
wire   [0:0] tmp_74_fu_1796_p3;
wire   [0:0] tmp_73_fu_1783_p3;
wire   [0:0] xor_ln786_2_fu_1804_p2;
wire   [0:0] xor_ln340_2_fu_1822_p2;
wire   [0:0] xor_ln340_36_fu_1816_p2;
wire   [0:0] and_ln786_20_fu_1810_p2;
wire   [0:0] or_ln340_24_fu_1828_p2;
wire   [11:0] select_ln340_2_fu_1834_p3;
wire   [11:0] select_ln388_2_fu_1842_p3;
wire  signed [12:0] sext_ln703_35_fu_1859_p1;
wire   [12:0] add_ln1192_18_fu_1862_p2;
wire   [11:0] add_ln703_18_fu_1876_p2;
wire   [0:0] tmp_76_fu_1881_p3;
wire   [0:0] tmp_75_fu_1868_p3;
wire   [0:0] xor_ln786_3_fu_1889_p2;
wire   [0:0] xor_ln340_3_fu_1907_p2;
wire   [0:0] xor_ln340_37_fu_1901_p2;
wire   [0:0] and_ln786_21_fu_1895_p2;
wire   [0:0] or_ln340_25_fu_1913_p2;
wire   [11:0] select_ln340_3_fu_1919_p3;
wire   [11:0] select_ln388_3_fu_1927_p3;
wire  signed [12:0] sext_ln703_36_fu_1944_p1;
wire   [12:0] add_ln1192_19_fu_1947_p2;
wire   [11:0] add_ln703_19_fu_1961_p2;
wire   [0:0] tmp_78_fu_1966_p3;
wire   [0:0] tmp_77_fu_1953_p3;
wire   [0:0] xor_ln786_4_fu_1974_p2;
wire   [0:0] xor_ln340_4_fu_1992_p2;
wire   [0:0] xor_ln340_38_fu_1986_p2;
wire   [0:0] and_ln786_22_fu_1980_p2;
wire   [0:0] or_ln340_26_fu_1998_p2;
wire   [11:0] select_ln340_4_fu_2004_p3;
wire   [11:0] select_ln388_4_fu_2012_p3;
wire  signed [12:0] sext_ln703_37_fu_2029_p1;
wire   [12:0] add_ln1192_20_fu_2032_p2;
wire   [11:0] add_ln703_20_fu_2046_p2;
wire   [0:0] tmp_80_fu_2051_p3;
wire   [0:0] tmp_79_fu_2038_p3;
wire   [0:0] xor_ln786_5_fu_2059_p2;
wire   [0:0] xor_ln340_5_fu_2077_p2;
wire   [0:0] xor_ln340_39_fu_2071_p2;
wire   [0:0] and_ln786_23_fu_2065_p2;
wire   [0:0] or_ln340_27_fu_2083_p2;
wire   [11:0] select_ln340_5_fu_2089_p3;
wire   [11:0] select_ln388_5_fu_2097_p3;
wire  signed [12:0] sext_ln703_38_fu_2114_p1;
wire   [12:0] add_ln1192_21_fu_2117_p2;
wire   [11:0] add_ln703_21_fu_2131_p2;
wire   [0:0] tmp_82_fu_2136_p3;
wire   [0:0] tmp_81_fu_2123_p3;
wire   [0:0] xor_ln786_6_fu_2144_p2;
wire   [0:0] xor_ln340_6_fu_2162_p2;
wire   [0:0] xor_ln340_40_fu_2156_p2;
wire   [0:0] and_ln786_24_fu_2150_p2;
wire   [0:0] or_ln340_28_fu_2168_p2;
wire   [11:0] select_ln340_6_fu_2174_p3;
wire   [11:0] select_ln388_6_fu_2182_p3;
wire  signed [12:0] sext_ln703_39_fu_2199_p1;
wire   [12:0] add_ln1192_22_fu_2202_p2;
wire   [11:0] add_ln703_22_fu_2216_p2;
wire   [0:0] tmp_84_fu_2221_p3;
wire   [0:0] tmp_83_fu_2208_p3;
wire   [0:0] xor_ln786_7_fu_2229_p2;
wire   [0:0] xor_ln340_7_fu_2247_p2;
wire   [0:0] xor_ln340_41_fu_2241_p2;
wire   [0:0] and_ln786_25_fu_2235_p2;
wire   [0:0] or_ln340_29_fu_2253_p2;
wire   [11:0] select_ln340_7_fu_2259_p3;
wire   [11:0] select_ln388_7_fu_2267_p3;
wire  signed [12:0] sext_ln703_40_fu_2284_p1;
wire   [12:0] add_ln1192_23_fu_2287_p2;
wire   [11:0] add_ln703_23_fu_2301_p2;
wire   [0:0] tmp_86_fu_2306_p3;
wire   [0:0] tmp_85_fu_2293_p3;
wire   [0:0] xor_ln786_8_fu_2314_p2;
wire   [0:0] xor_ln340_8_fu_2332_p2;
wire   [0:0] xor_ln340_42_fu_2326_p2;
wire   [0:0] and_ln786_26_fu_2320_p2;
wire   [0:0] or_ln340_30_fu_2338_p2;
wire   [11:0] select_ln340_8_fu_2344_p3;
wire   [11:0] select_ln388_8_fu_2352_p3;
wire  signed [12:0] sext_ln703_41_fu_2369_p1;
wire   [12:0] add_ln1192_24_fu_2372_p2;
wire   [11:0] add_ln703_24_fu_2386_p2;
wire   [0:0] tmp_88_fu_2391_p3;
wire   [0:0] tmp_87_fu_2378_p3;
wire   [0:0] xor_ln786_9_fu_2399_p2;
wire   [0:0] xor_ln340_9_fu_2417_p2;
wire   [0:0] xor_ln340_43_fu_2411_p2;
wire   [0:0] and_ln786_27_fu_2405_p2;
wire   [0:0] or_ln340_31_fu_2423_p2;
wire   [11:0] select_ln340_9_fu_2429_p3;
wire   [11:0] select_ln388_9_fu_2437_p3;
wire  signed [12:0] sext_ln703_42_fu_2454_p1;
wire   [12:0] add_ln1192_25_fu_2457_p2;
wire   [11:0] add_ln703_25_fu_2471_p2;
wire   [0:0] tmp_90_fu_2476_p3;
wire   [0:0] tmp_89_fu_2463_p3;
wire   [0:0] xor_ln786_10_fu_2484_p2;
wire   [0:0] xor_ln340_10_fu_2502_p2;
wire   [0:0] xor_ln340_44_fu_2496_p2;
wire   [0:0] and_ln786_28_fu_2490_p2;
wire   [0:0] or_ln340_32_fu_2508_p2;
wire   [11:0] select_ln340_10_fu_2514_p3;
wire   [11:0] select_ln388_10_fu_2522_p3;
wire  signed [12:0] sext_ln703_43_fu_2539_p1;
wire   [12:0] add_ln1192_26_fu_2542_p2;
wire   [11:0] add_ln703_26_fu_2556_p2;
wire   [0:0] tmp_92_fu_2561_p3;
wire   [0:0] tmp_91_fu_2548_p3;
wire   [0:0] xor_ln786_11_fu_2569_p2;
wire   [0:0] xor_ln340_11_fu_2587_p2;
wire   [0:0] xor_ln340_45_fu_2581_p2;
wire   [0:0] and_ln786_29_fu_2575_p2;
wire   [0:0] or_ln340_33_fu_2593_p2;
wire   [11:0] select_ln340_11_fu_2599_p3;
wire   [11:0] select_ln388_11_fu_2607_p3;
wire  signed [12:0] sext_ln703_44_fu_2624_p1;
wire   [12:0] add_ln1192_27_fu_2627_p2;
wire   [11:0] add_ln703_27_fu_2641_p2;
wire   [0:0] tmp_94_fu_2646_p3;
wire   [0:0] tmp_93_fu_2633_p3;
wire   [0:0] xor_ln786_12_fu_2654_p2;
wire   [0:0] xor_ln340_12_fu_2672_p2;
wire   [0:0] xor_ln340_46_fu_2666_p2;
wire   [0:0] and_ln786_30_fu_2660_p2;
wire   [0:0] or_ln340_34_fu_2678_p2;
wire   [11:0] select_ln340_12_fu_2684_p3;
wire   [11:0] select_ln388_12_fu_2692_p3;
wire  signed [12:0] sext_ln703_45_fu_2709_p1;
wire   [12:0] add_ln1192_28_fu_2712_p2;
wire   [11:0] add_ln703_28_fu_2726_p2;
wire   [0:0] tmp_96_fu_2731_p3;
wire   [0:0] tmp_95_fu_2718_p3;
wire   [0:0] xor_ln786_13_fu_2739_p2;
wire   [0:0] xor_ln340_13_fu_2757_p2;
wire   [0:0] xor_ln340_47_fu_2751_p2;
wire   [0:0] and_ln786_31_fu_2745_p2;
wire   [0:0] or_ln340_35_fu_2763_p2;
wire   [11:0] select_ln340_13_fu_2769_p3;
wire   [11:0] select_ln388_13_fu_2777_p3;
wire  signed [12:0] sext_ln703_46_fu_2794_p1;
wire   [12:0] add_ln1192_29_fu_2797_p2;
wire   [11:0] add_ln703_29_fu_2811_p2;
wire   [0:0] tmp_98_fu_2816_p3;
wire   [0:0] tmp_97_fu_2803_p3;
wire   [0:0] xor_ln786_14_fu_2824_p2;
wire   [0:0] xor_ln340_14_fu_2842_p2;
wire   [0:0] xor_ln340_48_fu_2836_p2;
wire   [0:0] and_ln786_32_fu_2830_p2;
wire   [0:0] or_ln340_36_fu_2848_p2;
wire   [11:0] select_ln340_14_fu_2854_p3;
wire   [11:0] select_ln388_14_fu_2862_p3;
wire  signed [12:0] sext_ln703_47_fu_2879_p1;
wire   [12:0] add_ln1192_30_fu_2882_p2;
wire   [11:0] add_ln703_30_fu_2896_p2;
wire   [0:0] tmp_100_fu_2901_p3;
wire   [0:0] tmp_99_fu_2888_p3;
wire   [0:0] xor_ln786_15_fu_2909_p2;
wire   [0:0] xor_ln340_15_fu_2927_p2;
wire   [0:0] xor_ln340_49_fu_2921_p2;
wire   [0:0] and_ln786_33_fu_2915_p2;
wire   [0:0] or_ln340_37_fu_2933_p2;
wire   [11:0] select_ln340_15_fu_2939_p3;
wire   [11:0] select_ln388_15_fu_2947_p3;
wire    ap_CS_fsm_state11;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_compute_engine_64_fu_575_ap_start_reg = 1'b0;
#0 grp_compute_engine_64_fu_585_ap_start_reg = 1'b0;
end

compute_engine_64 grp_compute_engine_64_fu_575(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_engine_64_fu_575_ap_start),
    .ap_done(grp_compute_engine_64_fu_575_ap_done),
    .ap_idle(grp_compute_engine_64_fu_575_ap_idle),
    .ap_ready(grp_compute_engine_64_fu_575_ap_ready),
    .ap_ce(1'b1),
    .b_V(bottom1_V_q0),
    .w_V(64'd65535),
    .ap_return(grp_compute_engine_64_fu_575_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_585(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_engine_64_fu_585_ap_start),
    .ap_done(grp_compute_engine_64_fu_585_ap_done),
    .ap_idle(grp_compute_engine_64_fu_585_ap_idle),
    .ap_ready(grp_compute_engine_64_fu_585_ap_ready),
    .ap_ce(1'b1),
    .b_V(bottom1_V_q1),
    .w_V(64'd65535),
    .ap_return(grp_compute_engine_64_fu_585_ap_return)
);

sum_engine sum_V_ret_sum_engine_fu_595(
    .ap_ready(sum_V_ret_sum_engine_fu_595_ap_ready),
    .t0_V(p_s_reg_3116),
    .t1_V(tmp1_V_reg_3121),
    .t2_V(tmp2_V_reg_3136),
    .t3_V(tmp3_V_reg_3141),
    .t4_V(tmp4_V_reg_3231),
    .t5_V(tmp5_V_reg_3236),
    .t6_V(tmp6_V_reg_3262),
    .t7_V(tmp7_V_reg_3267),
    .t8_V(grp_compute_engine_64_fu_575_ap_return),
    .ap_return(sum_V_ret_sum_engine_fu_595_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_engine_64_fu_575_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_fu_673_p2 == 1'd0)))) begin
            grp_compute_engine_64_fu_575_ap_start_reg <= 1'b1;
        end else if ((grp_compute_engine_64_fu_575_ap_ready == 1'b1)) begin
            grp_compute_engine_64_fu_575_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_engine_64_fu_585_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_fu_673_p2 == 1'd0)))) begin
            grp_compute_engine_64_fu_585_ap_start_reg <= 1'b1;
        end else if ((grp_compute_engine_64_fu_585_ap_ready == 1'b1)) begin
            grp_compute_engine_64_fu_585_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        col_0_reg_564 <= col_reg_3251;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        col_0_reg_564 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        indvar_flatten_reg_497 <= add_ln171_5_reg_2990;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_497 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        indvars_iv_reg_508 <= select_ln171_reg_3032;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvars_iv_reg_508 <= zext_ln171_fu_655_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        row_0_reg_535 <= select_ln170_9_reg_3019;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_0_reg_535 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        top_col_0_reg_526 <= select_ln171_4_reg_3042;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        top_col_0_reg_526 <= zext_ln170_fu_645_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        top_col_1_reg_555 <= top_col_reg_3246;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        top_col_1_reg_555 <= zext_ln170_fu_645_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        top_row_0_reg_517 <= select_ln171_3_reg_3037;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        top_row_0_reg_517 <= zext_ln169_fu_623_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        top_row_1_reg_546 <= top_row_reg_3241;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        top_row_1_reg_546 <= zext_ln169_fu_623_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_fu_673_p2 == 1'd0))) begin
        add_ln170_4_reg_3026 <= add_ln170_4_fu_798_p2;
        add_ln178_reg_3014[7 : 1] <= add_ln178_fu_776_p2[7 : 1];
        select_ln170_6_reg_3002 <= select_ln170_6_fu_722_p3;
        select_ln170_7_reg_3008 <= select_ln170_7_fu_730_p3;
        select_ln170_reg_2995 <= select_ln170_fu_714_p3;
        zext_ln178_5_reg_3047[3 : 0] <= zext_ln178_5_fu_834_p1[3 : 0];
        zext_ln179_reg_3058[3 : 0] <= zext_ln179_fu_849_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln171_5_reg_2990 <= add_ln171_5_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln171_reg_2986 == 1'd0))) begin
        add_ln181_reg_3069[7 : 1] <= add_ln181_fu_886_p2[7 : 1];
        zext_ln180_reg_3080[3 : 0] <= zext_ln180_fu_907_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln171_reg_2986 == 1'd0))) begin
        add_ln184_2_reg_3091 <= add_ln184_2_fu_949_p2;
        add_ln185_reg_3101 <= add_ln185_fu_963_p2;
        add_ln186_reg_3111 <= add_ln186_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0))) begin
        col_reg_3251 <= col_fu_1057_p2;
        tmp4_V_reg_3231 <= grp_compute_engine_64_fu_575_ap_return;
        tmp5_V_reg_3236 <= grp_compute_engine_64_fu_585_ap_return;
        top_col_reg_3246 <= top_col_fu_1052_p2;
        top_row_reg_3241 <= top_row_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln171_reg_2986 <= icmp_ln171_fu_673_p2;
        icmp_ln171_reg_2986_pp0_iter1_reg <= icmp_ln171_reg_2986;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_Val2_14_reg_3373 <= p_Val2_14_fu_1255_p3;
        trunc_ln703_reg_3381 <= trunc_ln703_fu_1263_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0))) begin
        p_s_reg_3116 <= grp_compute_engine_64_fu_575_ap_return;
        tmp1_V_reg_3121 <= grp_compute_engine_64_fu_585_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_fu_673_p2 == 1'd0))) begin
        select_ln170_9_reg_3019 <= select_ln170_9_fu_782_p3;
        select_ln171_3_reg_3037 <= select_ln171_3_fu_812_p3;
        select_ln171_4_reg_3042 <= select_ln171_4_fu_820_p3;
        select_ln171_reg_3032 <= select_ln171_fu_804_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sum_V_ret_reg_3362 <= sum_V_ret_sum_engine_fu_595_ap_return;
        tmp_reg_3368 <= {{sum_V_ret_sum_engine_fu_595_ap_return[7:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_reg_2986 == 1'd0))) begin
        tmp2_V_reg_3136 <= grp_compute_engine_64_fu_575_ap_return;
        tmp3_V_reg_3141 <= grp_compute_engine_64_fu_585_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        tmp6_V_reg_3262 <= grp_compute_engine_64_fu_575_ap_return;
        tmp7_V_reg_3267 <= grp_compute_engine_64_fu_585_ap_return;
        top_0_V_load_reg_3256 <= top_0_V_q0;
        top_10_V_load_reg_3326 <= top_10_V_q0;
        top_11_V_load_reg_3332 <= top_11_V_q0;
        top_12_V_load_reg_3338 <= top_12_V_q0;
        top_13_V_load_reg_3344 <= top_13_V_q0;
        top_14_V_load_reg_3350 <= top_14_V_q0;
        top_15_V_load_reg_3356 <= top_15_V_q0;
        top_1_V_load_reg_3272 <= top_1_V_q0;
        top_2_V_load_reg_3278 <= top_2_V_q0;
        top_3_V_load_reg_3284 <= top_3_V_q0;
        top_4_V_load_reg_3290 <= top_4_V_q0;
        top_5_V_load_reg_3296 <= top_5_V_q0;
        top_6_V_load_reg_3302 <= top_6_V_q0;
        top_7_V_load_reg_3308 <= top_7_V_q0;
        top_8_V_load_reg_3314 <= top_8_V_q0;
        top_9_V_load_reg_3320 <= top_9_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_s_reg_2981[6 : 4] <= tmp_s_fu_665_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln171_reg_2986 == 1'd0))) begin
        top_0_V_addr_reg_3146 <= zext_ln176_4_fu_1023_p1;
        top_10_V_addr_reg_3196 <= zext_ln176_4_fu_1023_p1;
        top_11_V_addr_reg_3201 <= zext_ln176_4_fu_1023_p1;
        top_12_V_addr_reg_3206 <= zext_ln176_4_fu_1023_p1;
        top_13_V_addr_reg_3211 <= zext_ln176_4_fu_1023_p1;
        top_14_V_addr_reg_3216 <= zext_ln176_4_fu_1023_p1;
        top_15_V_addr_reg_3221 <= zext_ln176_4_fu_1023_p1;
        top_1_V_addr_reg_3151 <= zext_ln176_4_fu_1023_p1;
        top_2_V_addr_reg_3156 <= zext_ln176_4_fu_1023_p1;
        top_3_V_addr_reg_3161 <= zext_ln176_4_fu_1023_p1;
        top_4_V_addr_reg_3166 <= zext_ln176_4_fu_1023_p1;
        top_5_V_addr_reg_3171 <= zext_ln176_4_fu_1023_p1;
        top_6_V_addr_reg_3176 <= zext_ln176_4_fu_1023_p1;
        top_7_V_addr_reg_3181 <= zext_ln176_4_fu_1023_p1;
        top_8_V_addr_reg_3186 <= zext_ln176_4_fu_1023_p1;
        top_9_V_addr_reg_3191 <= zext_ln176_4_fu_1023_p1;
    end
end

always @ (*) begin
    if ((icmp_ln171_fu_673_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        ap_phi_mux_col_0_phi_fu_568_p4 = col_reg_3251;
    end else begin
        ap_phi_mux_col_0_phi_fu_568_p4 = col_0_reg_564;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_501_p4 = add_ln171_5_reg_2990;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_501_p4 = indvar_flatten_reg_497;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        ap_phi_mux_indvars_iv_phi_fu_511_p4 = select_ln171_reg_3032;
    end else begin
        ap_phi_mux_indvars_iv_phi_fu_511_p4 = indvars_iv_reg_508;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        ap_phi_mux_row_0_phi_fu_539_p4 = select_ln170_9_reg_3019;
    end else begin
        ap_phi_mux_row_0_phi_fu_539_p4 = row_0_reg_535;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        ap_phi_mux_top_col_0_phi_fu_529_p4 = select_ln171_4_reg_3042;
    end else begin
        ap_phi_mux_top_col_0_phi_fu_529_p4 = top_col_0_reg_526;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        ap_phi_mux_top_col_1_phi_fu_558_p4 = top_col_reg_3246;
    end else begin
        ap_phi_mux_top_col_1_phi_fu_558_p4 = top_col_1_reg_555;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        ap_phi_mux_top_row_0_phi_fu_520_p4 = select_ln171_3_reg_3037;
    end else begin
        ap_phi_mux_top_row_0_phi_fu_520_p4 = top_row_0_reg_517;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln171_reg_2986 == 1'd0))) begin
        ap_phi_mux_top_row_1_phi_fu_549_p4 = top_row_reg_3241;
    end else begin
        ap_phi_mux_top_row_1_phi_fu_549_p4 = top_row_1_reg_546;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            bottom1_V_address0 = zext_ln186_fu_1043_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            bottom1_V_address0 = zext_ln184_4_fu_982_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            bottom1_V_address0 = zext_ln182_fu_958_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            bottom1_V_address0 = zext_ln180_2_fu_916_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            bottom1_V_address0 = zext_ln178_6_fu_844_p1;
        end else begin
            bottom1_V_address0 = 'bx;
        end
    end else begin
        bottom1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            bottom1_V_address1 = zext_ln185_fu_986_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            bottom1_V_address1 = zext_ln183_fu_972_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            bottom1_V_address1 = zext_ln181_4_fu_897_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            bottom1_V_address1 = zext_ln179_2_fu_859_p1;
        end else begin
            bottom1_V_address1 = 'bx;
        end
    end else begin
        bottom1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bottom1_V_ce0 = 1'b1;
    end else begin
        bottom1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bottom1_V_ce1 = 1'b1;
    end else begin
        bottom1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_0_V_address0 = top_0_V_addr_reg_3146;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_0_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_0_V_ce0 = 1'b1;
    end else begin
        top_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_0_V_we0 = 1'b1;
    end else begin
        top_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_10_V_address0 = top_10_V_addr_reg_3196;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_10_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_10_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_10_V_ce0 = 1'b1;
    end else begin
        top_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_10_V_we0 = 1'b1;
    end else begin
        top_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_11_V_address0 = top_11_V_addr_reg_3201;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_11_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_11_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_11_V_ce0 = 1'b1;
    end else begin
        top_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_11_V_we0 = 1'b1;
    end else begin
        top_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_12_V_address0 = top_12_V_addr_reg_3206;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_12_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_12_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_12_V_ce0 = 1'b1;
    end else begin
        top_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_12_V_we0 = 1'b1;
    end else begin
        top_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_13_V_address0 = top_13_V_addr_reg_3211;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_13_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_13_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_13_V_ce0 = 1'b1;
    end else begin
        top_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_13_V_we0 = 1'b1;
    end else begin
        top_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_14_V_address0 = top_14_V_addr_reg_3216;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_14_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_14_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_14_V_ce0 = 1'b1;
    end else begin
        top_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_14_V_we0 = 1'b1;
    end else begin
        top_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_15_V_address0 = top_15_V_addr_reg_3221;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_15_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_15_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_15_V_ce0 = 1'b1;
    end else begin
        top_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_15_V_we0 = 1'b1;
    end else begin
        top_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_1_V_address0 = top_1_V_addr_reg_3151;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_1_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_1_V_ce0 = 1'b1;
    end else begin
        top_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_1_V_we0 = 1'b1;
    end else begin
        top_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_2_V_address0 = top_2_V_addr_reg_3156;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_2_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_2_V_ce0 = 1'b1;
    end else begin
        top_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_2_V_we0 = 1'b1;
    end else begin
        top_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_3_V_address0 = top_3_V_addr_reg_3161;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_3_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_3_V_ce0 = 1'b1;
    end else begin
        top_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_3_V_we0 = 1'b1;
    end else begin
        top_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_4_V_address0 = top_4_V_addr_reg_3166;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_4_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_4_V_ce0 = 1'b1;
    end else begin
        top_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_4_V_we0 = 1'b1;
    end else begin
        top_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_5_V_address0 = top_5_V_addr_reg_3171;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_5_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_5_V_ce0 = 1'b1;
    end else begin
        top_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_5_V_we0 = 1'b1;
    end else begin
        top_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_6_V_address0 = top_6_V_addr_reg_3176;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_6_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_6_V_ce0 = 1'b1;
    end else begin
        top_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_6_V_we0 = 1'b1;
    end else begin
        top_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_7_V_address0 = top_7_V_addr_reg_3181;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_7_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_7_V_ce0 = 1'b1;
    end else begin
        top_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_7_V_we0 = 1'b1;
    end else begin
        top_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_8_V_address0 = top_8_V_addr_reg_3186;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_8_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_8_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_8_V_ce0 = 1'b1;
    end else begin
        top_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_8_V_we0 = 1'b1;
    end else begin
        top_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_9_V_address0 = top_9_V_addr_reg_3191;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_9_V_address0 = zext_ln176_4_fu_1023_p1;
    end else begin
        top_9_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        top_9_V_ce0 = 1'b1;
    end else begin
        top_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln171_reg_2986_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        top_9_V_we0 = 1'b1;
    end else begin
        top_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_fu_673_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln171_fu_673_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_fu_1424_p2 = ((tmp_4_fu_1414_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_1430_p2 = ((tmp_4_fu_1414_p4 == 4'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_1408_p2 = ((tmp_3_fu_1398_p4 == 3'd7) ? 1'b1 : 1'b0);

assign add_ln1192_16_fu_1692_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_33_fu_1689_p1));

assign add_ln1192_17_fu_1777_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_34_fu_1774_p1));

assign add_ln1192_18_fu_1862_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_35_fu_1859_p1));

assign add_ln1192_19_fu_1947_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_36_fu_1944_p1));

assign add_ln1192_20_fu_2032_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_37_fu_2029_p1));

assign add_ln1192_21_fu_2117_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_38_fu_2114_p1));

assign add_ln1192_22_fu_2202_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_39_fu_2199_p1));

assign add_ln1192_23_fu_2287_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_40_fu_2284_p1));

assign add_ln1192_24_fu_2372_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_41_fu_2369_p1));

assign add_ln1192_25_fu_2457_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_42_fu_2454_p1));

assign add_ln1192_26_fu_2542_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_43_fu_2539_p1));

assign add_ln1192_27_fu_2627_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_44_fu_2624_p1));

assign add_ln1192_28_fu_2712_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_45_fu_2709_p1));

assign add_ln1192_29_fu_2797_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_46_fu_2794_p1));

assign add_ln1192_30_fu_2882_p2 = ($signed(sext_ln703_32_fu_1603_p1) + $signed(sext_ln703_47_fu_2879_p1));

assign add_ln1192_34_fu_1320_p2 = (20'd261888 + trunc_ln1192_fu_1310_p1);

assign add_ln1192_fu_1607_p2 = ($signed(sext_ln703_fu_1600_p1) + $signed(sext_ln703_32_fu_1603_p1));

assign add_ln169_fu_702_p2 = (5'd4 + ap_phi_mux_top_row_0_phi_fu_520_p4);

assign add_ln170_3_fu_746_p2 = (select_ln170_8_fu_738_p3 + ap_phi_mux_row_0_phi_fu_539_p4);

assign add_ln170_4_fu_798_p2 = (select_ln170_10_fu_790_p3 + ap_phi_mux_row_0_phi_fu_539_p4);

assign add_ln170_fu_696_p2 = (5'd4 + ap_phi_mux_top_col_0_phi_fu_529_p4);

assign add_ln171_4_fu_690_p2 = (5'd4 + ap_phi_mux_indvars_iv_phi_fu_511_p4);

assign add_ln171_5_fu_678_p2 = (ap_phi_mux_indvar_flatten_phi_fu_501_p4 + 7'd1);

assign add_ln171_fu_649_p2 = (4'd5 + shl_ln_fu_609_p3);

assign add_ln176_2_fu_1017_p2 = (zext_ln176_fu_990_p1 + add_ln176_fu_1011_p2);

assign add_ln176_fu_1011_p2 = (tmp_10_fu_993_p3 + zext_ln176_3_fu_1007_p1);

assign add_ln178_2_fu_828_p2 = ($signed(4'd15) + $signed(select_ln170_7_fu_730_p3));

assign add_ln178_3_fu_838_p2 = (zext_ln178_5_fu_834_p1 + add_ln178_fu_776_p2);

assign add_ln178_fu_776_p2 = (zext_ln178_fu_760_p1 + zext_ln178_4_fu_772_p1);

assign add_ln179_fu_853_p2 = (zext_ln179_fu_849_p1 + add_ln178_fu_776_p2);

assign add_ln180_2_fu_911_p2 = (zext_ln180_fu_907_p1 + add_ln178_reg_3014);

assign add_ln180_fu_902_p2 = (4'd1 + select_ln170_7_reg_3008);

assign add_ln181_2_fu_892_p2 = (zext_ln178_5_reg_3047 + add_ln181_fu_886_p2);

assign add_ln181_fu_886_p2 = (zext_ln181_fu_871_p1 + zext_ln181_3_fu_882_p1);

assign add_ln182_fu_954_p2 = (zext_ln179_reg_3058 + add_ln181_reg_3069);

assign add_ln183_fu_968_p2 = (zext_ln180_reg_3080 + add_ln181_reg_3069);

assign add_ln184_2_fu_949_p2 = (zext_ln178_5_reg_3047 + add_ln184_fu_943_p2);

assign add_ln184_fu_943_p2 = (zext_ln184_fu_928_p1 + zext_ln184_3_fu_939_p1);

assign add_ln185_fu_963_p2 = (zext_ln179_reg_3058 + add_ln184_fu_943_p2);

assign add_ln186_fu_977_p2 = (zext_ln180_reg_3080 + add_ln184_fu_943_p2);

assign add_ln703_16_fu_1706_p2 = ($signed(top_1_V_load_reg_3272) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_17_fu_1791_p2 = ($signed(top_2_V_load_reg_3278) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_18_fu_1876_p2 = ($signed(top_3_V_load_reg_3284) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_19_fu_1961_p2 = ($signed(top_4_V_load_reg_3290) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_20_fu_2046_p2 = ($signed(top_5_V_load_reg_3296) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_21_fu_2131_p2 = ($signed(top_6_V_load_reg_3302) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_22_fu_2216_p2 = ($signed(top_7_V_load_reg_3308) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_23_fu_2301_p2 = ($signed(top_8_V_load_reg_3314) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_24_fu_2386_p2 = ($signed(top_9_V_load_reg_3320) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_25_fu_2471_p2 = ($signed(top_10_V_load_reg_3326) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_26_fu_2556_p2 = ($signed(top_11_V_load_reg_3332) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_27_fu_2641_p2 = ($signed(top_12_V_load_reg_3338) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_28_fu_2726_p2 = ($signed(top_13_V_load_reg_3344) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_29_fu_2811_p2 = ($signed(top_14_V_load_reg_3350) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_30_fu_2896_p2 = ($signed(top_15_V_load_reg_3356) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln703_fu_1621_p2 = ($signed(top_0_V_load_reg_3256) + $signed(select_ln340_35_fu_1592_p3));

assign add_ln731_fu_1125_p2 = (11'd1023 + trunc_ln731_fu_1121_p1);

assign add_ln746_fu_1277_p2 = ($signed(11'd2046) + $signed(trunc_ln703_reg_3381));

assign and_ln340_fu_1586_p2 = (xor_ln1494_fu_1580_p2 & or_ln340_22_fu_1550_p2);

assign and_ln779_fu_1470_p2 = (xor_ln779_fu_1464_p2 & Range2_all_ones_fu_1408_p2);

assign and_ln781_fu_1484_p2 = (carry_2_fu_1384_p2 & Range1_all_ones_fu_1424_p2);

assign and_ln786_19_fu_1725_p2 = (xor_ln786_1_fu_1719_p2 & tmp_71_fu_1698_p3);

assign and_ln786_20_fu_1810_p2 = (xor_ln786_2_fu_1804_p2 & tmp_73_fu_1783_p3);

assign and_ln786_21_fu_1895_p2 = (xor_ln786_3_fu_1889_p2 & tmp_75_fu_1868_p3);

assign and_ln786_22_fu_1980_p2 = (xor_ln786_4_fu_1974_p2 & tmp_77_fu_1953_p3);

assign and_ln786_23_fu_2065_p2 = (xor_ln786_5_fu_2059_p2 & tmp_79_fu_2038_p3);

assign and_ln786_24_fu_2150_p2 = (xor_ln786_6_fu_2144_p2 & tmp_81_fu_2123_p3);

assign and_ln786_25_fu_2235_p2 = (xor_ln786_7_fu_2229_p2 & tmp_83_fu_2208_p3);

assign and_ln786_26_fu_2320_p2 = (xor_ln786_8_fu_2314_p2 & tmp_85_fu_2293_p3);

assign and_ln786_27_fu_2405_p2 = (xor_ln786_9_fu_2399_p2 & tmp_87_fu_2378_p3);

assign and_ln786_28_fu_2490_p2 = (xor_ln786_10_fu_2484_p2 & tmp_89_fu_2463_p3);

assign and_ln786_29_fu_2575_p2 = (xor_ln786_11_fu_2569_p2 & tmp_91_fu_2548_p3);

assign and_ln786_30_fu_2660_p2 = (xor_ln786_12_fu_2654_p2 & tmp_93_fu_2633_p3);

assign and_ln786_31_fu_2745_p2 = (xor_ln786_13_fu_2739_p2 & tmp_95_fu_2718_p3);

assign and_ln786_32_fu_2830_p2 = (xor_ln786_14_fu_2824_p2 & tmp_97_fu_2803_p3);

assign and_ln786_33_fu_2915_p2 = (xor_ln786_15_fu_2909_p2 & tmp_99_fu_2888_p3);

assign and_ln786_34_fu_1514_p2 = (p_Result_11_fu_1390_p3 & deleted_ones_fu_1476_p3);

assign and_ln786_fu_1640_p2 = (xor_ln786_fu_1634_p2 & tmp_69_fu_1613_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign carry_2_fu_1384_p2 = (xor_ln416_fu_1378_p2 & p_Result_10_fu_1344_p3);

assign col_fu_1057_p2 = (4'd2 + select_ln170_7_reg_3008);

assign deleted_ones_fu_1476_p3 = ((carry_2_fu_1384_p2[0:0] === 1'b1) ? and_ln779_fu_1470_p2 : Range1_all_ones_fu_1424_p2);

assign deleted_zeros_fu_1436_p3 = ((carry_2_fu_1384_p2[0:0] === 1'b1) ? Range1_all_ones_fu_1424_p2 : Range1_all_zeros_fu_1430_p2);

assign grp_compute_engine_64_fu_575_ap_start = grp_compute_engine_64_fu_575_ap_start_reg;

assign grp_compute_engine_64_fu_585_ap_start = grp_compute_engine_64_fu_585_ap_start_reg;

assign icmp_ln1494_16_fu_1267_p2 = (($signed(p_Val2_14_reg_3373) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_1072_p2 = ((tmp_reg_3368 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln171_fu_673_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_501_p4 == tmp_s_reg_2981) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_708_p2 = ((ap_phi_mux_top_row_1_phi_fu_549_p4 == ap_phi_mux_indvars_iv_phi_fu_511_p4) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_1157_p2 = ((p_Result_i_fu_1147_p4 != 9'd0) ? 1'b1 : 1'b0);

assign lhs_V_3_fu_1177_p1 = p_Val2_11_fu_1169_p3;

assign lhs_V_fu_1111_p1 = r_V_6_fu_1105_p2;

assign or_ln169_fu_617_p2 = (shl_ln_fu_609_p3 | 4'd1);

assign or_ln170_fu_639_p2 = (shl_ln5_fu_631_p3 | 3'd1);

assign or_ln340_19_fu_1233_p2 = (xor_ln340_33_fu_1227_p2 | p_Result_7_fu_1201_p3);

assign or_ln340_20_fu_1538_p2 = (underflow_2_fu_1532_p2 | overflow_fu_1508_p2);

assign or_ln340_21_fu_1544_p2 = (xor_ln785_2_fu_1502_p2 | and_ln786_34_fu_1514_p2);

assign or_ln340_22_fu_1550_p2 = (or_ln340_21_fu_1544_p2 | and_ln781_fu_1484_p2);

assign or_ln340_23_fu_1743_p2 = (xor_ln340_1_fu_1737_p2 | tmp_72_fu_1711_p3);

assign or_ln340_24_fu_1828_p2 = (xor_ln340_2_fu_1822_p2 | tmp_74_fu_1796_p3);

assign or_ln340_25_fu_1913_p2 = (xor_ln340_3_fu_1907_p2 | tmp_76_fu_1881_p3);

assign or_ln340_26_fu_1998_p2 = (xor_ln340_4_fu_1992_p2 | tmp_78_fu_1966_p3);

assign or_ln340_27_fu_2083_p2 = (xor_ln340_5_fu_2077_p2 | tmp_80_fu_2051_p3);

assign or_ln340_28_fu_2168_p2 = (xor_ln340_6_fu_2162_p2 | tmp_82_fu_2136_p3);

assign or_ln340_29_fu_2253_p2 = (xor_ln340_7_fu_2247_p2 | tmp_84_fu_2221_p3);

assign or_ln340_30_fu_2338_p2 = (xor_ln340_8_fu_2332_p2 | tmp_86_fu_2306_p3);

assign or_ln340_31_fu_2423_p2 = (xor_ln340_9_fu_2417_p2 | tmp_88_fu_2391_p3);

assign or_ln340_32_fu_2508_p2 = (xor_ln340_10_fu_2502_p2 | tmp_90_fu_2476_p3);

assign or_ln340_33_fu_2593_p2 = (xor_ln340_11_fu_2587_p2 | tmp_92_fu_2561_p3);

assign or_ln340_34_fu_2678_p2 = (xor_ln340_12_fu_2672_p2 | tmp_94_fu_2646_p3);

assign or_ln340_35_fu_2763_p2 = (xor_ln340_13_fu_2757_p2 | tmp_96_fu_2731_p3);

assign or_ln340_36_fu_2848_p2 = (xor_ln340_14_fu_2842_p2 | tmp_98_fu_2816_p3);

assign or_ln340_37_fu_2933_p2 = (xor_ln340_15_fu_2927_p2 | tmp_100_fu_2901_p3);

assign or_ln340_fu_1658_p2 = (xor_ln340_fu_1652_p2 | tmp_70_fu_1626_p3);

assign or_ln785_1_fu_1496_p2 = (xor_ln785_fu_1490_p2 | p_Result_11_fu_1390_p3);

assign or_ln785_fu_1163_p2 = (p_Result_s_fu_1139_p3 | icmp_ln785_fu_1157_p2);

assign or_ln786_fu_1520_p2 = (and_ln786_34_fu_1514_p2 | and_ln781_fu_1484_p2);

assign overflow_fu_1508_p2 = (xor_ln785_2_fu_1502_p2 & or_ln785_1_fu_1496_p2);

assign p_Result_10_fu_1344_p3 = ret_V_3_fu_1314_p2[32'd18];

assign p_Result_11_fu_1390_p3 = p_Val2_19_fu_1364_p2[32'd11];

assign p_Result_6_fu_1187_p3 = ret_V_2_fu_1181_p2[32'd12];

assign p_Result_7_fu_1201_p3 = tmp_V_1_fu_1195_p2[32'd11];

assign p_Result_8_fu_1282_p3 = p_Val2_15_fu_1272_p2[32'd11];

assign p_Result_9_fu_1326_p3 = ret_V_3_fu_1314_p2[32'd22];

assign p_Result_i_fu_1147_p4 = {{ret_V_fu_1115_p2[19:11]}};

assign p_Result_s_fu_1139_p3 = add_ln731_fu_1125_p2[32'd10];

assign p_Val2_10_fu_1131_p3 = {{add_ln731_fu_1125_p2}, {1'd0}};

assign p_Val2_11_fu_1169_p3 = ((or_ln785_fu_1163_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_10_fu_1131_p3);

assign p_Val2_14_fu_1255_p3 = ((or_ln340_19_fu_1233_p2[0:0] === 1'b1) ? select_ln340_32_fu_1239_p3 : select_ln388_16_fu_1247_p3);

assign p_Val2_15_fu_1272_p2 = ($signed(12'd2046) + $signed(p_Val2_14_reg_3373));

assign p_Val2_18_fu_1334_p4 = {{ret_V_3_fu_1314_p2[18:7]}};

assign p_Val2_19_fu_1364_p2 = (p_Val2_18_fu_1334_p4 + zext_ln415_fu_1360_p1);

assign r_V_4_fu_1290_p1 = p_Val2_14_reg_3373;

assign r_V_6_fu_1105_p2 = (zext_ln1118_fu_1101_p1 - r_V_fu_1089_p1);

assign r_V_7_fu_1304_p2 = ($signed(sext_ln1118_fu_1300_p1) - $signed(r_V_4_fu_1290_p1));

assign r_V_fu_1089_p1 = tmp_V_fu_1082_p3;

assign ret_V_2_fu_1181_p2 = ($signed(13'd2046) + $signed(lhs_V_3_fu_1177_p1));

assign ret_V_3_fu_1314_p2 = (23'd261888 + r_V_7_fu_1304_p2);

assign ret_V_fu_1115_p2 = (20'd1023 + lhs_V_fu_1111_p1);

assign row_fu_684_p2 = (4'd2 + ap_phi_mux_row_0_phi_fu_539_p4);

assign sel_tmp4_i_fu_1572_p3 = ((icmp_ln1494_16_fu_1267_p2[0:0] === 1'b1) ? zext_ln746_fu_1452_p1 : select_ln388_17_fu_1564_p3);

assign select_ln170_10_fu_790_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? 4'd3 : 4'd1);

assign select_ln170_6_fu_722_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? add_ln170_fu_696_p2 : ap_phi_mux_top_col_1_phi_fu_558_p4);

assign select_ln170_7_fu_730_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? 4'd1 : ap_phi_mux_col_0_phi_fu_568_p4);

assign select_ln170_8_fu_738_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? 4'd1 : 4'd15);

assign select_ln170_9_fu_782_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? row_fu_684_p2 : ap_phi_mux_row_0_phi_fu_539_p4);

assign select_ln170_fu_714_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? add_ln169_fu_702_p2 : ap_phi_mux_top_row_1_phi_fu_549_p4);

assign select_ln171_3_fu_812_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? add_ln169_fu_702_p2 : ap_phi_mux_top_row_0_phi_fu_520_p4);

assign select_ln171_4_fu_820_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? add_ln170_fu_696_p2 : ap_phi_mux_top_col_0_phi_fu_529_p4);

assign select_ln171_fu_804_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? add_ln171_4_fu_690_p2 : ap_phi_mux_indvars_iv_phi_fu_511_p4);

assign select_ln340_10_fu_2514_p3 = ((xor_ln340_44_fu_2496_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_25_fu_2471_p2);

assign select_ln340_11_fu_2599_p3 = ((xor_ln340_45_fu_2581_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_26_fu_2556_p2);

assign select_ln340_12_fu_2684_p3 = ((xor_ln340_46_fu_2666_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_27_fu_2641_p2);

assign select_ln340_13_fu_2769_p3 = ((xor_ln340_47_fu_2751_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_28_fu_2726_p2);

assign select_ln340_14_fu_2854_p3 = ((xor_ln340_48_fu_2836_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_29_fu_2811_p2);

assign select_ln340_15_fu_2939_p3 = ((xor_ln340_49_fu_2921_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_30_fu_2896_p2);

assign select_ln340_1_fu_1749_p3 = ((xor_ln340_35_fu_1731_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_16_fu_1706_p2);

assign select_ln340_2_fu_1834_p3 = ((xor_ln340_36_fu_1816_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_17_fu_1791_p2);

assign select_ln340_32_fu_1239_p3 = ((xor_ln340_32_fu_1221_p2[0:0] === 1'b1) ? 12'd2047 : tmp_V_1_fu_1195_p2);

assign select_ln340_34_fu_1556_p3 = ((or_ln340_20_fu_1538_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_19_fu_1364_p2);

assign select_ln340_35_fu_1592_p3 = ((and_ln340_fu_1586_p2[0:0] === 1'b1) ? select_ln340_34_fu_1556_p3 : sel_tmp4_i_fu_1572_p3);

assign select_ln340_3_fu_1919_p3 = ((xor_ln340_37_fu_1901_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_18_fu_1876_p2);

assign select_ln340_4_fu_2004_p3 = ((xor_ln340_38_fu_1986_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_19_fu_1961_p2);

assign select_ln340_5_fu_2089_p3 = ((xor_ln340_39_fu_2071_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_20_fu_2046_p2);

assign select_ln340_6_fu_2174_p3 = ((xor_ln340_40_fu_2156_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_21_fu_2131_p2);

assign select_ln340_7_fu_2259_p3 = ((xor_ln340_41_fu_2241_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_22_fu_2216_p2);

assign select_ln340_8_fu_2344_p3 = ((xor_ln340_42_fu_2326_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_23_fu_2301_p2);

assign select_ln340_9_fu_2429_p3 = ((xor_ln340_43_fu_2411_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_24_fu_2386_p2);

assign select_ln340_fu_1664_p3 = ((xor_ln340_34_fu_1646_p2[0:0] === 1'b1) ? 12'd2047 : add_ln703_fu_1621_p2);

assign select_ln388_10_fu_2522_p3 = ((and_ln786_28_fu_2490_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_25_fu_2471_p2);

assign select_ln388_11_fu_2607_p3 = ((and_ln786_29_fu_2575_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_26_fu_2556_p2);

assign select_ln388_12_fu_2692_p3 = ((and_ln786_30_fu_2660_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_27_fu_2641_p2);

assign select_ln388_13_fu_2777_p3 = ((and_ln786_31_fu_2745_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_28_fu_2726_p2);

assign select_ln388_14_fu_2862_p3 = ((and_ln786_32_fu_2830_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_29_fu_2811_p2);

assign select_ln388_15_fu_2947_p3 = ((and_ln786_33_fu_2915_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_30_fu_2896_p2);

assign select_ln388_16_fu_1247_p3 = ((underflow_fu_1215_p2[0:0] === 1'b1) ? 12'd2048 : tmp_V_1_fu_1195_p2);

assign select_ln388_17_fu_1564_p3 = ((underflow_2_fu_1532_p2[0:0] === 1'b1) ? 12'd2048 : p_Val2_19_fu_1364_p2);

assign select_ln388_1_fu_1757_p3 = ((and_ln786_19_fu_1725_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_16_fu_1706_p2);

assign select_ln388_2_fu_1842_p3 = ((and_ln786_20_fu_1810_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_17_fu_1791_p2);

assign select_ln388_3_fu_1927_p3 = ((and_ln786_21_fu_1895_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_18_fu_1876_p2);

assign select_ln388_4_fu_2012_p3 = ((and_ln786_22_fu_1980_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_19_fu_1961_p2);

assign select_ln388_5_fu_2097_p3 = ((and_ln786_23_fu_2065_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_20_fu_2046_p2);

assign select_ln388_6_fu_2182_p3 = ((and_ln786_24_fu_2150_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_21_fu_2131_p2);

assign select_ln388_7_fu_2267_p3 = ((and_ln786_25_fu_2235_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_22_fu_2216_p2);

assign select_ln388_8_fu_2352_p3 = ((and_ln786_26_fu_2320_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_23_fu_2301_p2);

assign select_ln388_9_fu_2437_p3 = ((and_ln786_27_fu_2405_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_24_fu_2386_p2);

assign select_ln388_fu_1672_p3 = ((and_ln786_fu_1640_p2[0:0] === 1'b1) ? 12'd2048 : add_ln703_fu_1621_p2);

assign select_ln746_fu_1444_p3 = ((p_Result_8_fu_1282_p3[0:0] === 1'b1) ? 11'd2047 : add_ln746_fu_1277_p2);

assign sext_ln1118_fu_1300_p1 = $signed(tmp_12_fu_1293_p3);

assign sext_ln703_32_fu_1603_p1 = select_ln340_35_fu_1592_p3;

assign sext_ln703_33_fu_1689_p1 = top_1_V_load_reg_3272;

assign sext_ln703_34_fu_1774_p1 = top_2_V_load_reg_3278;

assign sext_ln703_35_fu_1859_p1 = top_3_V_load_reg_3284;

assign sext_ln703_36_fu_1944_p1 = top_4_V_load_reg_3290;

assign sext_ln703_37_fu_2029_p1 = top_5_V_load_reg_3296;

assign sext_ln703_38_fu_2114_p1 = top_6_V_load_reg_3302;

assign sext_ln703_39_fu_2199_p1 = top_7_V_load_reg_3308;

assign sext_ln703_40_fu_2284_p1 = top_8_V_load_reg_3314;

assign sext_ln703_41_fu_2369_p1 = top_9_V_load_reg_3320;

assign sext_ln703_42_fu_2454_p1 = top_10_V_load_reg_3326;

assign sext_ln703_43_fu_2539_p1 = top_11_V_load_reg_3332;

assign sext_ln703_44_fu_2624_p1 = top_12_V_load_reg_3338;

assign sext_ln703_45_fu_2709_p1 = top_13_V_load_reg_3344;

assign sext_ln703_46_fu_2794_p1 = top_14_V_load_reg_3350;

assign sext_ln703_47_fu_2879_p1 = top_15_V_load_reg_3356;

assign sext_ln703_fu_1600_p1 = top_0_V_load_reg_3256;

assign shl_ln5_fu_631_p3 = {{trunc_ln170_fu_627_p1}, {2'd0}};

assign shl_ln700_fu_1077_p2 = sum_V_ret_reg_3362 << 8'd1;

assign shl_ln8_fu_1093_p3 = {{tmp_V_fu_1082_p3}, {10'd0}};

assign shl_ln_fu_609_p3 = {{row_off}, {2'd0}};

assign sub_ln171_fu_659_p2 = (zext_ln171_fu_655_p1 - zext_ln169_fu_623_p1);

assign tmp_100_fu_2901_p3 = add_ln703_30_fu_2896_p2[32'd11];

assign tmp_10_fu_993_p3 = {{select_ln170_reg_2995}, {3'd0}};

assign tmp_11_fu_1000_p3 = {{select_ln170_reg_2995}, {1'd0}};

assign tmp_12_fu_1293_p3 = {{p_Val2_14_reg_3373}, {10'd0}};

assign tmp_1_fu_752_p3 = {{add_ln170_3_fu_746_p2}, {3'd0}};

assign tmp_3_fu_1398_p4 = {{ret_V_3_fu_1314_p2[22:20]}};

assign tmp_4_fu_1414_p4 = {{ret_V_3_fu_1314_p2[22:19]}};

assign tmp_5_fu_764_p3 = {{add_ln170_3_fu_746_p2}, {1'd0}};

assign tmp_65_fu_1352_p3 = ret_V_3_fu_1314_p2[32'd6];

assign tmp_66_fu_1370_p3 = p_Val2_19_fu_1364_p2[32'd11];

assign tmp_68_fu_1456_p3 = add_ln1192_34_fu_1320_p2[32'd19];

assign tmp_69_fu_1613_p3 = add_ln1192_fu_1607_p2[32'd12];

assign tmp_6_fu_864_p3 = {{select_ln170_9_reg_3019}, {3'd0}};

assign tmp_70_fu_1626_p3 = add_ln703_fu_1621_p2[32'd11];

assign tmp_71_fu_1698_p3 = add_ln1192_16_fu_1692_p2[32'd12];

assign tmp_72_fu_1711_p3 = add_ln703_16_fu_1706_p2[32'd11];

assign tmp_73_fu_1783_p3 = add_ln1192_17_fu_1777_p2[32'd12];

assign tmp_74_fu_1796_p3 = add_ln703_17_fu_1791_p2[32'd11];

assign tmp_75_fu_1868_p3 = add_ln1192_18_fu_1862_p2[32'd12];

assign tmp_76_fu_1881_p3 = add_ln703_18_fu_1876_p2[32'd11];

assign tmp_77_fu_1953_p3 = add_ln1192_19_fu_1947_p2[32'd12];

assign tmp_78_fu_1966_p3 = add_ln703_19_fu_1961_p2[32'd11];

assign tmp_79_fu_2038_p3 = add_ln1192_20_fu_2032_p2[32'd12];

assign tmp_7_fu_875_p3 = {{select_ln170_9_reg_3019}, {1'd0}};

assign tmp_80_fu_2051_p3 = add_ln703_20_fu_2046_p2[32'd11];

assign tmp_81_fu_2123_p3 = add_ln1192_21_fu_2117_p2[32'd12];

assign tmp_82_fu_2136_p3 = add_ln703_21_fu_2131_p2[32'd11];

assign tmp_83_fu_2208_p3 = add_ln1192_22_fu_2202_p2[32'd12];

assign tmp_84_fu_2221_p3 = add_ln703_22_fu_2216_p2[32'd11];

assign tmp_85_fu_2293_p3 = add_ln1192_23_fu_2287_p2[32'd12];

assign tmp_86_fu_2306_p3 = add_ln703_23_fu_2301_p2[32'd11];

assign tmp_87_fu_2378_p3 = add_ln1192_24_fu_2372_p2[32'd12];

assign tmp_88_fu_2391_p3 = add_ln703_24_fu_2386_p2[32'd11];

assign tmp_89_fu_2463_p3 = add_ln1192_25_fu_2457_p2[32'd12];

assign tmp_8_fu_921_p3 = {{add_ln170_4_reg_3026}, {3'd0}};

assign tmp_90_fu_2476_p3 = add_ln703_25_fu_2471_p2[32'd11];

assign tmp_91_fu_2548_p3 = add_ln1192_26_fu_2542_p2[32'd12];

assign tmp_92_fu_2561_p3 = add_ln703_26_fu_2556_p2[32'd11];

assign tmp_93_fu_2633_p3 = add_ln1192_27_fu_2627_p2[32'd12];

assign tmp_94_fu_2646_p3 = add_ln703_27_fu_2641_p2[32'd11];

assign tmp_95_fu_2718_p3 = add_ln1192_28_fu_2712_p2[32'd12];

assign tmp_96_fu_2731_p3 = add_ln703_28_fu_2726_p2[32'd11];

assign tmp_97_fu_2803_p3 = add_ln1192_29_fu_2797_p2[32'd12];

assign tmp_98_fu_2816_p3 = add_ln703_29_fu_2811_p2[32'd11];

assign tmp_99_fu_2888_p3 = add_ln1192_30_fu_2882_p2[32'd12];

assign tmp_9_fu_932_p3 = {{add_ln170_4_reg_3026}, {1'd0}};

assign tmp_V_1_fu_1195_p2 = ($signed(12'd2046) + $signed(p_Val2_11_fu_1169_p3));

assign tmp_V_fu_1082_p3 = ((icmp_ln1494_fu_1072_p2[0:0] === 1'b1) ? shl_ln700_fu_1077_p2 : sum_V_ret_reg_3362);

assign tmp_s_fu_665_p3 = {{sub_ln171_fu_659_p2}, {2'd0}};

assign top_0_V_d0 = ((or_ln340_fu_1658_p2[0:0] === 1'b1) ? select_ln340_fu_1664_p3 : select_ln388_fu_1672_p3);

assign top_10_V_d0 = ((or_ln340_32_fu_2508_p2[0:0] === 1'b1) ? select_ln340_10_fu_2514_p3 : select_ln388_10_fu_2522_p3);

assign top_11_V_d0 = ((or_ln340_33_fu_2593_p2[0:0] === 1'b1) ? select_ln340_11_fu_2599_p3 : select_ln388_11_fu_2607_p3);

assign top_12_V_d0 = ((or_ln340_34_fu_2678_p2[0:0] === 1'b1) ? select_ln340_12_fu_2684_p3 : select_ln388_12_fu_2692_p3);

assign top_13_V_d0 = ((or_ln340_35_fu_2763_p2[0:0] === 1'b1) ? select_ln340_13_fu_2769_p3 : select_ln388_13_fu_2777_p3);

assign top_14_V_d0 = ((or_ln340_36_fu_2848_p2[0:0] === 1'b1) ? select_ln340_14_fu_2854_p3 : select_ln388_14_fu_2862_p3);

assign top_15_V_d0 = ((or_ln340_37_fu_2933_p2[0:0] === 1'b1) ? select_ln340_15_fu_2939_p3 : select_ln388_15_fu_2947_p3);

assign top_1_V_d0 = ((or_ln340_23_fu_1743_p2[0:0] === 1'b1) ? select_ln340_1_fu_1749_p3 : select_ln388_1_fu_1757_p3);

assign top_2_V_d0 = ((or_ln340_24_fu_1828_p2[0:0] === 1'b1) ? select_ln340_2_fu_1834_p3 : select_ln388_2_fu_1842_p3);

assign top_3_V_d0 = ((or_ln340_25_fu_1913_p2[0:0] === 1'b1) ? select_ln340_3_fu_1919_p3 : select_ln388_3_fu_1927_p3);

assign top_4_V_d0 = ((or_ln340_26_fu_1998_p2[0:0] === 1'b1) ? select_ln340_4_fu_2004_p3 : select_ln388_4_fu_2012_p3);

assign top_5_V_d0 = ((or_ln340_27_fu_2083_p2[0:0] === 1'b1) ? select_ln340_5_fu_2089_p3 : select_ln388_5_fu_2097_p3);

assign top_6_V_d0 = ((or_ln340_28_fu_2168_p2[0:0] === 1'b1) ? select_ln340_6_fu_2174_p3 : select_ln388_6_fu_2182_p3);

assign top_7_V_d0 = ((or_ln340_29_fu_2253_p2[0:0] === 1'b1) ? select_ln340_7_fu_2259_p3 : select_ln388_7_fu_2267_p3);

assign top_8_V_d0 = ((or_ln340_30_fu_2338_p2[0:0] === 1'b1) ? select_ln340_8_fu_2344_p3 : select_ln388_8_fu_2352_p3);

assign top_9_V_d0 = ((or_ln340_31_fu_2423_p2[0:0] === 1'b1) ? select_ln340_9_fu_2429_p3 : select_ln388_9_fu_2437_p3);

assign top_col_fu_1052_p2 = (5'd1 + select_ln170_6_reg_3002);

assign top_row_fu_1047_p2 = (5'd1 + select_ln170_reg_2995);

assign trunc_ln1192_fu_1310_p1 = r_V_7_fu_1304_p2[19:0];

assign trunc_ln170_fu_627_p1 = col_off[0:0];

assign trunc_ln703_fu_1263_p1 = p_Val2_14_fu_1255_p3[10:0];

assign trunc_ln731_fu_1121_p1 = r_V_6_fu_1105_p2[10:0];

assign underflow_2_fu_1532_p2 = (xor_ln786_17_fu_1526_p2 & p_Result_9_fu_1326_p3);

assign underflow_fu_1215_p2 = (xor_ln786_16_fu_1209_p2 & p_Result_6_fu_1187_p3);

assign xor_ln1494_fu_1580_p2 = (icmp_ln1494_16_fu_1267_p2 ^ 1'd1);

assign xor_ln340_10_fu_2502_p2 = (tmp_89_fu_2463_p3 ^ 1'd1);

assign xor_ln340_11_fu_2587_p2 = (tmp_91_fu_2548_p3 ^ 1'd1);

assign xor_ln340_12_fu_2672_p2 = (tmp_93_fu_2633_p3 ^ 1'd1);

assign xor_ln340_13_fu_2757_p2 = (tmp_95_fu_2718_p3 ^ 1'd1);

assign xor_ln340_14_fu_2842_p2 = (tmp_97_fu_2803_p3 ^ 1'd1);

assign xor_ln340_15_fu_2927_p2 = (tmp_99_fu_2888_p3 ^ 1'd1);

assign xor_ln340_1_fu_1737_p2 = (tmp_71_fu_1698_p3 ^ 1'd1);

assign xor_ln340_2_fu_1822_p2 = (tmp_73_fu_1783_p3 ^ 1'd1);

assign xor_ln340_32_fu_1221_p2 = (p_Result_7_fu_1201_p3 ^ p_Result_6_fu_1187_p3);

assign xor_ln340_33_fu_1227_p2 = (p_Result_6_fu_1187_p3 ^ 1'd1);

assign xor_ln340_34_fu_1646_p2 = (tmp_70_fu_1626_p3 ^ tmp_69_fu_1613_p3);

assign xor_ln340_35_fu_1731_p2 = (tmp_72_fu_1711_p3 ^ tmp_71_fu_1698_p3);

assign xor_ln340_36_fu_1816_p2 = (tmp_74_fu_1796_p3 ^ tmp_73_fu_1783_p3);

assign xor_ln340_37_fu_1901_p2 = (tmp_76_fu_1881_p3 ^ tmp_75_fu_1868_p3);

assign xor_ln340_38_fu_1986_p2 = (tmp_78_fu_1966_p3 ^ tmp_77_fu_1953_p3);

assign xor_ln340_39_fu_2071_p2 = (tmp_80_fu_2051_p3 ^ tmp_79_fu_2038_p3);

assign xor_ln340_3_fu_1907_p2 = (tmp_75_fu_1868_p3 ^ 1'd1);

assign xor_ln340_40_fu_2156_p2 = (tmp_82_fu_2136_p3 ^ tmp_81_fu_2123_p3);

assign xor_ln340_41_fu_2241_p2 = (tmp_84_fu_2221_p3 ^ tmp_83_fu_2208_p3);

assign xor_ln340_42_fu_2326_p2 = (tmp_86_fu_2306_p3 ^ tmp_85_fu_2293_p3);

assign xor_ln340_43_fu_2411_p2 = (tmp_88_fu_2391_p3 ^ tmp_87_fu_2378_p3);

assign xor_ln340_44_fu_2496_p2 = (tmp_90_fu_2476_p3 ^ tmp_89_fu_2463_p3);

assign xor_ln340_45_fu_2581_p2 = (tmp_92_fu_2561_p3 ^ tmp_91_fu_2548_p3);

assign xor_ln340_46_fu_2666_p2 = (tmp_94_fu_2646_p3 ^ tmp_93_fu_2633_p3);

assign xor_ln340_47_fu_2751_p2 = (tmp_96_fu_2731_p3 ^ tmp_95_fu_2718_p3);

assign xor_ln340_48_fu_2836_p2 = (tmp_98_fu_2816_p3 ^ tmp_97_fu_2803_p3);

assign xor_ln340_49_fu_2921_p2 = (tmp_99_fu_2888_p3 ^ tmp_100_fu_2901_p3);

assign xor_ln340_4_fu_1992_p2 = (tmp_77_fu_1953_p3 ^ 1'd1);

assign xor_ln340_5_fu_2077_p2 = (tmp_79_fu_2038_p3 ^ 1'd1);

assign xor_ln340_6_fu_2162_p2 = (tmp_81_fu_2123_p3 ^ 1'd1);

assign xor_ln340_7_fu_2247_p2 = (tmp_83_fu_2208_p3 ^ 1'd1);

assign xor_ln340_8_fu_2332_p2 = (tmp_85_fu_2293_p3 ^ 1'd1);

assign xor_ln340_9_fu_2417_p2 = (tmp_87_fu_2378_p3 ^ 1'd1);

assign xor_ln340_fu_1652_p2 = (tmp_69_fu_1613_p3 ^ 1'd1);

assign xor_ln416_fu_1378_p2 = (tmp_66_fu_1370_p3 ^ 1'd1);

assign xor_ln779_fu_1464_p2 = (tmp_68_fu_1456_p3 ^ 1'd1);

assign xor_ln785_2_fu_1502_p2 = (p_Result_9_fu_1326_p3 ^ 1'd1);

assign xor_ln785_fu_1490_p2 = (deleted_zeros_fu_1436_p3 ^ 1'd1);

assign xor_ln786_10_fu_2484_p2 = (tmp_90_fu_2476_p3 ^ 1'd1);

assign xor_ln786_11_fu_2569_p2 = (tmp_92_fu_2561_p3 ^ 1'd1);

assign xor_ln786_12_fu_2654_p2 = (tmp_94_fu_2646_p3 ^ 1'd1);

assign xor_ln786_13_fu_2739_p2 = (tmp_96_fu_2731_p3 ^ 1'd1);

assign xor_ln786_14_fu_2824_p2 = (tmp_98_fu_2816_p3 ^ 1'd1);

assign xor_ln786_15_fu_2909_p2 = (tmp_100_fu_2901_p3 ^ 1'd1);

assign xor_ln786_16_fu_1209_p2 = (p_Result_7_fu_1201_p3 ^ 1'd1);

assign xor_ln786_17_fu_1526_p2 = (or_ln786_fu_1520_p2 ^ 1'd1);

assign xor_ln786_1_fu_1719_p2 = (tmp_72_fu_1711_p3 ^ 1'd1);

assign xor_ln786_2_fu_1804_p2 = (tmp_74_fu_1796_p3 ^ 1'd1);

assign xor_ln786_3_fu_1889_p2 = (tmp_76_fu_1881_p3 ^ 1'd1);

assign xor_ln786_4_fu_1974_p2 = (tmp_78_fu_1966_p3 ^ 1'd1);

assign xor_ln786_5_fu_2059_p2 = (tmp_80_fu_2051_p3 ^ 1'd1);

assign xor_ln786_6_fu_2144_p2 = (tmp_82_fu_2136_p3 ^ 1'd1);

assign xor_ln786_7_fu_2229_p2 = (tmp_84_fu_2221_p3 ^ 1'd1);

assign xor_ln786_8_fu_2314_p2 = (tmp_86_fu_2306_p3 ^ 1'd1);

assign xor_ln786_9_fu_2399_p2 = (tmp_88_fu_2391_p3 ^ 1'd1);

assign xor_ln786_fu_1634_p2 = (tmp_70_fu_1626_p3 ^ 1'd1);

assign zext_ln1118_fu_1101_p1 = shl_ln8_fu_1093_p3;

assign zext_ln169_fu_623_p1 = or_ln169_fu_617_p2;

assign zext_ln170_fu_645_p1 = or_ln170_fu_639_p2;

assign zext_ln171_fu_655_p1 = add_ln171_fu_649_p2;

assign zext_ln176_3_fu_1007_p1 = tmp_11_fu_1000_p3;

assign zext_ln176_4_fu_1023_p1 = add_ln176_2_fu_1017_p2;

assign zext_ln176_fu_990_p1 = select_ln170_6_reg_3002;

assign zext_ln178_4_fu_772_p1 = tmp_5_fu_764_p3;

assign zext_ln178_5_fu_834_p1 = add_ln178_2_fu_828_p2;

assign zext_ln178_6_fu_844_p1 = add_ln178_3_fu_838_p2;

assign zext_ln178_fu_760_p1 = tmp_1_fu_752_p3;

assign zext_ln179_2_fu_859_p1 = add_ln179_fu_853_p2;

assign zext_ln179_fu_849_p1 = select_ln170_7_fu_730_p3;

assign zext_ln180_2_fu_916_p1 = add_ln180_2_fu_911_p2;

assign zext_ln180_fu_907_p1 = add_ln180_fu_902_p2;

assign zext_ln181_3_fu_882_p1 = tmp_7_fu_875_p3;

assign zext_ln181_4_fu_897_p1 = add_ln181_2_fu_892_p2;

assign zext_ln181_fu_871_p1 = tmp_6_fu_864_p3;

assign zext_ln182_fu_958_p1 = add_ln182_fu_954_p2;

assign zext_ln183_fu_972_p1 = add_ln183_fu_968_p2;

assign zext_ln184_3_fu_939_p1 = tmp_9_fu_932_p3;

assign zext_ln184_4_fu_982_p1 = add_ln184_2_reg_3091;

assign zext_ln184_fu_928_p1 = tmp_8_fu_921_p3;

assign zext_ln185_fu_986_p1 = add_ln185_reg_3101;

assign zext_ln186_fu_1043_p1 = add_ln186_reg_3111;

assign zext_ln415_fu_1360_p1 = tmp_65_fu_1352_p3;

assign zext_ln746_fu_1452_p1 = select_ln746_fu_1444_p3;

always @ (posedge ap_clk) begin
    tmp_s_reg_2981[3:0] <= 4'b0000;
    add_ln178_reg_3014[0] <= 1'b0;
    zext_ln178_5_reg_3047[7:4] <= 4'b0000;
    zext_ln179_reg_3058[7:4] <= 4'b0000;
    add_ln181_reg_3069[0] <= 1'b0;
    zext_ln180_reg_3080[7:4] <= 4'b0000;
end

endmodule //pgconv64s2_16u_s
