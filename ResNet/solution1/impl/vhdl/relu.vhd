-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu is
port (
    ap_ready : OUT STD_LOGIC;
    norm_V : IN STD_LOGIC_VECTOR (11 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of relu is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv13_7FE : STD_LOGIC_VECTOR (12 downto 0) := "0011111111110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_7FE : STD_LOGIC_VECTOR (11 downto 0) := "011111111110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_7FF : STD_LOGIC_VECTOR (11 downto 0) := "011111111111";
    constant ap_const_lv12_800 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv23_3FF00 : STD_LOGIC_VECTOR (22 downto 0) := "00000111111111100000000";
    constant ap_const_lv20_3FF00 : STD_LOGIC_VECTOR (19 downto 0) := "00111111111100000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal lhs_V_fu_70_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_fu_70_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_fu_74_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_V_fu_88_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_V_fu_88_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_1_fu_94_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_80_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_132_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln388_fu_140_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_fu_148_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln703_fu_162_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_3_fu_166_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_190_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_fu_198_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_fu_186_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_2_fu_202_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln1192_fu_208_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_1_fu_212_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_8_fu_250_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_232_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln415_fu_258_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_7_fu_262_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_268_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_242_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_296_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_312_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal carry_1_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_178_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln746_fu_172_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln746_fu_342_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_1_fu_218_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_11_fu_354_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_334_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_288_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_fu_224_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_1_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_374_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln746_fu_350_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln388_1_fu_462_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln340_3_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1494_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln340_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_454_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sel_tmp4_fu_470_p3 : STD_LOGIC_VECTOR (11 downto 0);


begin



    Range1_all_ones_fu_322_p2 <= "1" when (tmp_2_fu_312_p4 = ap_const_lv4_F) else "0";
    Range1_all_zeros_fu_328_p2 <= "1" when (tmp_2_fu_312_p4 = ap_const_lv4_0) else "0";
    Range2_all_ones_fu_306_p2 <= "1" when (tmp_1_fu_296_p4 = ap_const_lv3_7) else "0";
    add_ln1192_1_fu_218_p2 <= std_logic_vector(unsigned(ap_const_lv20_3FF00) + unsigned(trunc_ln1192_fu_208_p1));
    add_ln746_fu_172_p2 <= std_logic_vector(signed(ap_const_lv11_7FE) + signed(trunc_ln703_fu_162_p1));
    and_ln340_fu_484_p2 <= (xor_ln1494_fu_478_p2 and or_ln340_3_fu_448_p2);
    and_ln779_fu_368_p2 <= (xor_ln779_fu_362_p2 and Range2_all_ones_fu_306_p2);
    and_ln781_fu_382_p2 <= (carry_1_fu_282_p2 and Range1_all_ones_fu_322_p2);
    and_ln786_fu_412_p2 <= (p_Result_5_fu_288_p3 and deleted_ones_fu_374_p3);
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        select_ln340_2_fu_454_p3 when (and_ln340_fu_484_p2(0) = '1') else 
        sel_tmp4_fu_470_p3;
    carry_1_fu_282_p2 <= (xor_ln416_fu_276_p2 and p_Result_4_fu_242_p3);
    deleted_ones_fu_374_p3 <= 
        and_ln779_fu_368_p2 when (carry_1_fu_282_p2(0) = '1') else 
        Range1_all_ones_fu_322_p2;
    deleted_zeros_fu_334_p3 <= 
        Range1_all_ones_fu_322_p2 when (carry_1_fu_282_p2(0) = '1') else 
        Range1_all_zeros_fu_328_p2;
    icmp_ln1494_fu_156_p2 <= "1" when (signed(p_Val2_2_fu_148_p3) > signed(ap_const_lv12_0)) else "0";
    lhs_V_fu_70_p0 <= norm_V;
        lhs_V_fu_70_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_70_p0),13));

    or_ln340_1_fu_436_p2 <= (underflow_1_fu_430_p2 or overflow_fu_406_p2);
    or_ln340_2_fu_442_p2 <= (xor_ln785_1_fu_400_p2 or and_ln786_fu_412_p2);
    or_ln340_3_fu_448_p2 <= (or_ln340_2_fu_442_p2 or and_ln781_fu_382_p2);
    or_ln340_fu_126_p2 <= (xor_ln340_fu_120_p2 or p_Result_1_fu_94_p3);
    or_ln785_fu_394_p2 <= (xor_ln785_fu_388_p2 or p_Result_5_fu_288_p3);
    or_ln786_fu_418_p2 <= (and_ln786_fu_412_p2 or and_ln781_fu_382_p2);
    overflow_fu_406_p2 <= (xor_ln785_1_fu_400_p2 and or_ln785_fu_394_p2);
    p_Result_1_fu_94_p3 <= tmp_V_fu_88_p2(11 downto 11);
    p_Result_2_fu_178_p3 <= p_Val2_3_fu_166_p2(11 downto 11);
    p_Result_3_fu_224_p3 <= ret_V_1_fu_212_p2(22 downto 22);
    p_Result_4_fu_242_p3 <= ret_V_1_fu_212_p2(18 downto 18);
    p_Result_5_fu_288_p3 <= p_Val2_7_fu_262_p2(11 downto 11);
    p_Result_s_fu_80_p3 <= ret_V_fu_74_p2(12 downto 12);
    p_Val2_2_fu_148_p3 <= 
        select_ln340_fu_132_p3 when (or_ln340_fu_126_p2(0) = '1') else 
        select_ln388_fu_140_p3;
    p_Val2_3_fu_166_p2 <= std_logic_vector(unsigned(ap_const_lv12_7FE) + unsigned(p_Val2_2_fu_148_p3));
    p_Val2_6_fu_232_p4 <= ret_V_1_fu_212_p2(18 downto 7);
    p_Val2_7_fu_262_p2 <= std_logic_vector(unsigned(p_Val2_6_fu_232_p4) + unsigned(zext_ln415_fu_258_p1));
    r_V_2_fu_202_p2 <= std_logic_vector(signed(sext_ln1118_fu_198_p1) - signed(r_V_fu_186_p1));
        r_V_fu_186_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_fu_148_p3),23));

    ret_V_1_fu_212_p2 <= std_logic_vector(unsigned(ap_const_lv23_3FF00) + unsigned(r_V_2_fu_202_p2));
    ret_V_fu_74_p2 <= std_logic_vector(unsigned(ap_const_lv13_7FE) + unsigned(lhs_V_fu_70_p1));
    sel_tmp4_fu_470_p3 <= 
        zext_ln746_fu_350_p1 when (icmp_ln1494_fu_156_p2(0) = '1') else 
        select_ln388_1_fu_462_p3;
    select_ln340_2_fu_454_p3 <= 
        ap_const_lv12_7FF when (or_ln340_1_fu_436_p2(0) = '1') else 
        p_Val2_7_fu_262_p2;
    select_ln340_fu_132_p3 <= 
        ap_const_lv12_7FF when (xor_ln340_1_fu_114_p2(0) = '1') else 
        tmp_V_fu_88_p2;
    select_ln388_1_fu_462_p3 <= 
        ap_const_lv12_800 when (underflow_1_fu_430_p2(0) = '1') else 
        p_Val2_7_fu_262_p2;
    select_ln388_fu_140_p3 <= 
        ap_const_lv12_800 when (underflow_fu_108_p2(0) = '1') else 
        tmp_V_fu_88_p2;
    select_ln746_fu_342_p3 <= 
        ap_const_lv11_7FF when (p_Result_2_fu_178_p3(0) = '1') else 
        add_ln746_fu_172_p2;
        sext_ln1118_fu_198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_190_p3),23));

    tmp_11_fu_354_p3 <= add_ln1192_1_fu_218_p2(19 downto 19);
    tmp_1_fu_296_p4 <= ret_V_1_fu_212_p2(22 downto 20);
    tmp_2_fu_312_p4 <= ret_V_1_fu_212_p2(22 downto 19);
    tmp_8_fu_250_p3 <= ret_V_1_fu_212_p2(6 downto 6);
    tmp_9_fu_268_p3 <= p_Val2_7_fu_262_p2(11 downto 11);
    tmp_V_fu_88_p1 <= norm_V;
    tmp_V_fu_88_p2 <= std_logic_vector(unsigned(ap_const_lv12_7FE) + unsigned(tmp_V_fu_88_p1));
    tmp_fu_190_p3 <= (p_Val2_2_fu_148_p3 & ap_const_lv10_0);
    trunc_ln1192_fu_208_p1 <= r_V_2_fu_202_p2(20 - 1 downto 0);
    trunc_ln703_fu_162_p1 <= p_Val2_2_fu_148_p3(11 - 1 downto 0);
    underflow_1_fu_430_p2 <= (xor_ln786_1_fu_424_p2 and p_Result_3_fu_224_p3);
    underflow_fu_108_p2 <= (xor_ln786_fu_102_p2 and p_Result_s_fu_80_p3);
    xor_ln1494_fu_478_p2 <= (icmp_ln1494_fu_156_p2 xor ap_const_lv1_1);
    xor_ln340_1_fu_114_p2 <= (p_Result_s_fu_80_p3 xor p_Result_1_fu_94_p3);
    xor_ln340_fu_120_p2 <= (p_Result_s_fu_80_p3 xor ap_const_lv1_1);
    xor_ln416_fu_276_p2 <= (tmp_9_fu_268_p3 xor ap_const_lv1_1);
    xor_ln779_fu_362_p2 <= (tmp_11_fu_354_p3 xor ap_const_lv1_1);
    xor_ln785_1_fu_400_p2 <= (p_Result_3_fu_224_p3 xor ap_const_lv1_1);
    xor_ln785_fu_388_p2 <= (deleted_zeros_fu_334_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_424_p2 <= (or_ln786_fu_418_p2 xor ap_const_lv1_1);
    xor_ln786_fu_102_p2 <= (p_Result_1_fu_94_p3 xor ap_const_lv1_1);
    zext_ln415_fu_258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_250_p3),12));
    zext_ln746_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln746_fu_342_p3),12));
end behav;
