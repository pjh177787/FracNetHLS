// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module matmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bottom_0_V_read,
        bottom_1_V_read,
        bottom_2_V_read,
        bottom_3_V_read,
        bottom_4_V_read,
        bottom_5_V_read,
        bottom_6_V_read,
        bottom_7_V_read,
        bottom_8_V_read,
        bottom_9_V_read,
        bottom_10_V_read,
        bottom_11_V_read,
        bottom_12_V_read,
        bottom_13_V_read,
        bottom_14_V_read,
        bottom_15_V_read,
        bottom_16_V_read,
        bottom_17_V_read,
        bottom_18_V_read,
        bottom_19_V_read,
        bottom_20_V_read,
        bottom_21_V_read,
        bottom_22_V_read,
        bottom_23_V_read,
        bottom_24_V_read,
        bottom_25_V_read,
        bottom_26_V_read,
        bottom_27_V_read,
        bottom_28_V_read,
        bottom_29_V_read,
        bottom_30_V_read,
        bottom_31_V_read,
        bottom_32_V_read,
        bottom_33_V_read,
        bottom_34_V_read,
        bottom_35_V_read,
        bottom_36_V_read,
        bottom_37_V_read,
        bottom_38_V_read,
        bottom_39_V_read,
        bottom_40_V_read,
        bottom_41_V_read,
        bottom_42_V_read,
        bottom_43_V_read,
        bottom_44_V_read,
        bottom_45_V_read,
        bottom_46_V_read,
        bottom_47_V_read,
        bottom_48_V_read,
        bottom_49_V_read,
        bottom_50_V_read,
        bottom_51_V_read,
        bottom_52_V_read,
        bottom_53_V_read,
        bottom_54_V_read,
        bottom_55_V_read,
        bottom_56_V_read,
        bottom_57_V_read,
        bottom_58_V_read,
        bottom_59_V_read,
        bottom_60_V_read,
        bottom_61_V_read,
        bottom_62_V_read,
        bottom_63_V_read,
        m_axi_top_AWVALID,
        m_axi_top_AWREADY,
        m_axi_top_AWADDR,
        m_axi_top_AWID,
        m_axi_top_AWLEN,
        m_axi_top_AWSIZE,
        m_axi_top_AWBURST,
        m_axi_top_AWLOCK,
        m_axi_top_AWCACHE,
        m_axi_top_AWPROT,
        m_axi_top_AWQOS,
        m_axi_top_AWREGION,
        m_axi_top_AWUSER,
        m_axi_top_WVALID,
        m_axi_top_WREADY,
        m_axi_top_WDATA,
        m_axi_top_WSTRB,
        m_axi_top_WLAST,
        m_axi_top_WID,
        m_axi_top_WUSER,
        m_axi_top_ARVALID,
        m_axi_top_ARREADY,
        m_axi_top_ARADDR,
        m_axi_top_ARID,
        m_axi_top_ARLEN,
        m_axi_top_ARSIZE,
        m_axi_top_ARBURST,
        m_axi_top_ARLOCK,
        m_axi_top_ARCACHE,
        m_axi_top_ARPROT,
        m_axi_top_ARQOS,
        m_axi_top_ARREGION,
        m_axi_top_ARUSER,
        m_axi_top_RVALID,
        m_axi_top_RREADY,
        m_axi_top_RDATA,
        m_axi_top_RLAST,
        m_axi_top_RID,
        m_axi_top_RUSER,
        m_axi_top_RRESP,
        m_axi_top_BVALID,
        m_axi_top_BREADY,
        m_axi_top_BRESP,
        m_axi_top_BID,
        m_axi_top_BUSER,
        top_offset
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_pp1_stage0 = 10'd16;
parameter    ap_ST_fsm_state8 = 10'd32;
parameter    ap_ST_fsm_state9 = 10'd64;
parameter    ap_ST_fsm_state10 = 10'd128;
parameter    ap_ST_fsm_state11 = 10'd256;
parameter    ap_ST_fsm_state12 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] bottom_0_V_read;
input  [7:0] bottom_1_V_read;
input  [7:0] bottom_2_V_read;
input  [7:0] bottom_3_V_read;
input  [7:0] bottom_4_V_read;
input  [7:0] bottom_5_V_read;
input  [7:0] bottom_6_V_read;
input  [7:0] bottom_7_V_read;
input  [7:0] bottom_8_V_read;
input  [7:0] bottom_9_V_read;
input  [7:0] bottom_10_V_read;
input  [7:0] bottom_11_V_read;
input  [7:0] bottom_12_V_read;
input  [7:0] bottom_13_V_read;
input  [7:0] bottom_14_V_read;
input  [7:0] bottom_15_V_read;
input  [7:0] bottom_16_V_read;
input  [7:0] bottom_17_V_read;
input  [7:0] bottom_18_V_read;
input  [7:0] bottom_19_V_read;
input  [7:0] bottom_20_V_read;
input  [7:0] bottom_21_V_read;
input  [7:0] bottom_22_V_read;
input  [7:0] bottom_23_V_read;
input  [7:0] bottom_24_V_read;
input  [7:0] bottom_25_V_read;
input  [7:0] bottom_26_V_read;
input  [7:0] bottom_27_V_read;
input  [7:0] bottom_28_V_read;
input  [7:0] bottom_29_V_read;
input  [7:0] bottom_30_V_read;
input  [7:0] bottom_31_V_read;
input  [7:0] bottom_32_V_read;
input  [7:0] bottom_33_V_read;
input  [7:0] bottom_34_V_read;
input  [7:0] bottom_35_V_read;
input  [7:0] bottom_36_V_read;
input  [7:0] bottom_37_V_read;
input  [7:0] bottom_38_V_read;
input  [7:0] bottom_39_V_read;
input  [7:0] bottom_40_V_read;
input  [7:0] bottom_41_V_read;
input  [7:0] bottom_42_V_read;
input  [7:0] bottom_43_V_read;
input  [7:0] bottom_44_V_read;
input  [7:0] bottom_45_V_read;
input  [7:0] bottom_46_V_read;
input  [7:0] bottom_47_V_read;
input  [7:0] bottom_48_V_read;
input  [7:0] bottom_49_V_read;
input  [7:0] bottom_50_V_read;
input  [7:0] bottom_51_V_read;
input  [7:0] bottom_52_V_read;
input  [7:0] bottom_53_V_read;
input  [7:0] bottom_54_V_read;
input  [7:0] bottom_55_V_read;
input  [7:0] bottom_56_V_read;
input  [7:0] bottom_57_V_read;
input  [7:0] bottom_58_V_read;
input  [7:0] bottom_59_V_read;
input  [7:0] bottom_60_V_read;
input  [7:0] bottom_61_V_read;
input  [7:0] bottom_62_V_read;
input  [7:0] bottom_63_V_read;
output   m_axi_top_AWVALID;
input   m_axi_top_AWREADY;
output  [31:0] m_axi_top_AWADDR;
output  [0:0] m_axi_top_AWID;
output  [31:0] m_axi_top_AWLEN;
output  [2:0] m_axi_top_AWSIZE;
output  [1:0] m_axi_top_AWBURST;
output  [1:0] m_axi_top_AWLOCK;
output  [3:0] m_axi_top_AWCACHE;
output  [2:0] m_axi_top_AWPROT;
output  [3:0] m_axi_top_AWQOS;
output  [3:0] m_axi_top_AWREGION;
output  [0:0] m_axi_top_AWUSER;
output   m_axi_top_WVALID;
input   m_axi_top_WREADY;
output  [31:0] m_axi_top_WDATA;
output  [3:0] m_axi_top_WSTRB;
output   m_axi_top_WLAST;
output  [0:0] m_axi_top_WID;
output  [0:0] m_axi_top_WUSER;
output   m_axi_top_ARVALID;
input   m_axi_top_ARREADY;
output  [31:0] m_axi_top_ARADDR;
output  [0:0] m_axi_top_ARID;
output  [31:0] m_axi_top_ARLEN;
output  [2:0] m_axi_top_ARSIZE;
output  [1:0] m_axi_top_ARBURST;
output  [1:0] m_axi_top_ARLOCK;
output  [3:0] m_axi_top_ARCACHE;
output  [2:0] m_axi_top_ARPROT;
output  [3:0] m_axi_top_ARQOS;
output  [3:0] m_axi_top_ARREGION;
output  [0:0] m_axi_top_ARUSER;
input   m_axi_top_RVALID;
output   m_axi_top_RREADY;
input  [31:0] m_axi_top_RDATA;
input   m_axi_top_RLAST;
input  [0:0] m_axi_top_RID;
input  [0:0] m_axi_top_RUSER;
input  [1:0] m_axi_top_RRESP;
input   m_axi_top_BVALID;
output   m_axi_top_BREADY;
input  [1:0] m_axi_top_BRESP;
input  [0:0] m_axi_top_BID;
input  [0:0] m_axi_top_BUSER;
input  [29:0] top_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_top_AWVALID;
reg m_axi_top_WVALID;
reg m_axi_top_BREADY;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] linear_weight_V_0_address0;
reg    linear_weight_V_0_ce0;
wire   [0:0] linear_weight_V_0_q0;
wire   [5:0] linear_weight_V_1_address0;
reg    linear_weight_V_1_ce0;
wire   [0:0] linear_weight_V_1_q0;
wire   [5:0] linear_weight_V_2_address0;
reg    linear_weight_V_2_ce0;
wire   [0:0] linear_weight_V_2_q0;
wire   [5:0] linear_weight_V_3_address0;
reg    linear_weight_V_3_ce0;
wire   [0:0] linear_weight_V_3_q0;
wire   [5:0] linear_weight_V_4_address0;
reg    linear_weight_V_4_ce0;
wire   [0:0] linear_weight_V_4_q0;
wire   [5:0] linear_weight_V_5_address0;
reg    linear_weight_V_5_ce0;
wire   [0:0] linear_weight_V_5_q0;
wire   [5:0] linear_weight_V_6_address0;
reg    linear_weight_V_6_ce0;
wire   [0:0] linear_weight_V_6_q0;
wire   [5:0] linear_weight_V_7_address0;
reg    linear_weight_V_7_ce0;
wire   [0:0] linear_weight_V_7_q0;
wire   [5:0] linear_weight_V_8_address0;
reg    linear_weight_V_8_ce0;
wire   [0:0] linear_weight_V_8_q0;
wire   [5:0] linear_weight_V_9_address0;
reg    linear_weight_V_9_ce0;
wire   [0:0] linear_weight_V_9_q0;
reg    top_blk_n_AW;
wire    ap_CS_fsm_state4;
reg    top_blk_n_W;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln30_reg_5011;
reg   [0:0] icmp_ln30_reg_5011_pp1_iter1_reg;
reg    top_blk_n_B;
wire    ap_CS_fsm_state12;
reg   [3:0] coo2_0_reg_985;
wire  signed [11:0] bottom_63_V_read_ca_fu_996_p1;
reg  signed [11:0] bottom_63_V_read_ca_reg_4571;
wire  signed [11:0] bottom_62_V_read_ca_fu_1000_p1;
reg  signed [11:0] bottom_62_V_read_ca_reg_4576;
wire  signed [11:0] bottom_61_V_read_ca_fu_1004_p1;
reg  signed [11:0] bottom_61_V_read_ca_reg_4581;
wire  signed [11:0] bottom_60_V_read_ca_fu_1008_p1;
reg  signed [11:0] bottom_60_V_read_ca_reg_4586;
wire  signed [11:0] bottom_59_V_read_ca_fu_1012_p1;
reg  signed [11:0] bottom_59_V_read_ca_reg_4591;
wire  signed [11:0] bottom_58_V_read_ca_fu_1016_p1;
reg  signed [11:0] bottom_58_V_read_ca_reg_4596;
wire  signed [11:0] bottom_57_V_read_ca_fu_1020_p1;
reg  signed [11:0] bottom_57_V_read_ca_reg_4601;
wire  signed [11:0] bottom_56_V_read_ca_fu_1024_p1;
reg  signed [11:0] bottom_56_V_read_ca_reg_4606;
wire  signed [11:0] bottom_55_V_read_ca_fu_1028_p1;
reg  signed [11:0] bottom_55_V_read_ca_reg_4611;
wire  signed [11:0] bottom_54_V_read_ca_fu_1032_p1;
reg  signed [11:0] bottom_54_V_read_ca_reg_4616;
wire  signed [11:0] bottom_53_V_read_ca_fu_1036_p1;
reg  signed [11:0] bottom_53_V_read_ca_reg_4621;
wire  signed [11:0] bottom_52_V_read_ca_fu_1040_p1;
reg  signed [11:0] bottom_52_V_read_ca_reg_4626;
wire  signed [11:0] bottom_51_V_read_ca_fu_1044_p1;
reg  signed [11:0] bottom_51_V_read_ca_reg_4631;
wire  signed [11:0] bottom_50_V_read_ca_fu_1048_p1;
reg  signed [11:0] bottom_50_V_read_ca_reg_4636;
wire  signed [11:0] bottom_49_V_read_ca_fu_1052_p1;
reg  signed [11:0] bottom_49_V_read_ca_reg_4641;
wire  signed [11:0] bottom_48_V_read_ca_fu_1056_p1;
reg  signed [11:0] bottom_48_V_read_ca_reg_4646;
wire  signed [11:0] bottom_47_V_read_ca_fu_1060_p1;
reg  signed [11:0] bottom_47_V_read_ca_reg_4651;
wire  signed [11:0] bottom_46_V_read_ca_fu_1064_p1;
reg  signed [11:0] bottom_46_V_read_ca_reg_4656;
wire  signed [11:0] bottom_45_V_read_ca_fu_1068_p1;
reg  signed [11:0] bottom_45_V_read_ca_reg_4661;
wire  signed [11:0] bottom_44_V_read_ca_fu_1072_p1;
reg  signed [11:0] bottom_44_V_read_ca_reg_4666;
wire  signed [11:0] bottom_43_V_read_ca_fu_1076_p1;
reg  signed [11:0] bottom_43_V_read_ca_reg_4671;
wire  signed [11:0] bottom_42_V_read_ca_fu_1080_p1;
reg  signed [11:0] bottom_42_V_read_ca_reg_4676;
wire  signed [11:0] bottom_41_V_read_ca_fu_1084_p1;
reg  signed [11:0] bottom_41_V_read_ca_reg_4681;
wire  signed [11:0] bottom_40_V_read_ca_fu_1088_p1;
reg  signed [11:0] bottom_40_V_read_ca_reg_4686;
wire  signed [11:0] bottom_39_V_read_ca_fu_1092_p1;
reg  signed [11:0] bottom_39_V_read_ca_reg_4691;
wire  signed [11:0] bottom_38_V_read_ca_fu_1096_p1;
reg  signed [11:0] bottom_38_V_read_ca_reg_4696;
wire  signed [11:0] bottom_37_V_read_ca_fu_1100_p1;
reg  signed [11:0] bottom_37_V_read_ca_reg_4701;
wire  signed [11:0] bottom_36_V_read_ca_fu_1104_p1;
reg  signed [11:0] bottom_36_V_read_ca_reg_4706;
wire  signed [11:0] bottom_35_V_read_ca_fu_1108_p1;
reg  signed [11:0] bottom_35_V_read_ca_reg_4711;
wire  signed [11:0] bottom_34_V_read_ca_fu_1112_p1;
reg  signed [11:0] bottom_34_V_read_ca_reg_4716;
wire  signed [11:0] bottom_33_V_read_ca_fu_1116_p1;
reg  signed [11:0] bottom_33_V_read_ca_reg_4721;
wire  signed [11:0] bottom_32_V_read_ca_fu_1120_p1;
reg  signed [11:0] bottom_32_V_read_ca_reg_4726;
wire  signed [11:0] bottom_31_V_read_ca_fu_1124_p1;
reg  signed [11:0] bottom_31_V_read_ca_reg_4731;
wire  signed [11:0] bottom_30_V_read_ca_fu_1128_p1;
reg  signed [11:0] bottom_30_V_read_ca_reg_4736;
wire  signed [11:0] bottom_29_V_read_ca_fu_1132_p1;
reg  signed [11:0] bottom_29_V_read_ca_reg_4741;
wire  signed [11:0] bottom_28_V_read_ca_fu_1136_p1;
reg  signed [11:0] bottom_28_V_read_ca_reg_4746;
wire  signed [11:0] bottom_27_V_read_ca_fu_1140_p1;
reg  signed [11:0] bottom_27_V_read_ca_reg_4751;
wire  signed [11:0] bottom_26_V_read_ca_fu_1144_p1;
reg  signed [11:0] bottom_26_V_read_ca_reg_4756;
wire  signed [11:0] bottom_25_V_read_ca_fu_1148_p1;
reg  signed [11:0] bottom_25_V_read_ca_reg_4761;
wire  signed [11:0] bottom_24_V_read_ca_fu_1152_p1;
reg  signed [11:0] bottom_24_V_read_ca_reg_4766;
wire  signed [11:0] bottom_23_V_read_ca_fu_1156_p1;
reg  signed [11:0] bottom_23_V_read_ca_reg_4771;
wire  signed [11:0] bottom_22_V_read_ca_fu_1160_p1;
reg  signed [11:0] bottom_22_V_read_ca_reg_4776;
wire  signed [11:0] bottom_21_V_read_ca_fu_1164_p1;
reg  signed [11:0] bottom_21_V_read_ca_reg_4781;
wire  signed [11:0] bottom_20_V_read_ca_fu_1168_p1;
reg  signed [11:0] bottom_20_V_read_ca_reg_4786;
wire  signed [11:0] bottom_19_V_read_ca_fu_1172_p1;
reg  signed [11:0] bottom_19_V_read_ca_reg_4791;
wire  signed [11:0] bottom_18_V_read_ca_fu_1176_p1;
reg  signed [11:0] bottom_18_V_read_ca_reg_4796;
wire  signed [11:0] bottom_17_V_read_ca_fu_1180_p1;
reg  signed [11:0] bottom_17_V_read_ca_reg_4801;
wire  signed [11:0] bottom_16_V_read_ca_fu_1184_p1;
reg  signed [11:0] bottom_16_V_read_ca_reg_4806;
wire  signed [11:0] bottom_15_V_read_ca_fu_1188_p1;
reg  signed [11:0] bottom_15_V_read_ca_reg_4811;
wire  signed [11:0] bottom_14_V_read_ca_fu_1192_p1;
reg  signed [11:0] bottom_14_V_read_ca_reg_4816;
wire  signed [11:0] bottom_13_V_read_ca_fu_1196_p1;
reg  signed [11:0] bottom_13_V_read_ca_reg_4821;
wire  signed [11:0] bottom_12_V_read_ca_fu_1200_p1;
reg  signed [11:0] bottom_12_V_read_ca_reg_4826;
wire  signed [11:0] bottom_11_V_read_ca_fu_1204_p1;
reg  signed [11:0] bottom_11_V_read_ca_reg_4831;
wire  signed [11:0] bottom_10_V_read_ca_fu_1208_p1;
reg  signed [11:0] bottom_10_V_read_ca_reg_4836;
wire  signed [11:0] bottom_9_V_read_cas_fu_1212_p1;
reg  signed [11:0] bottom_9_V_read_cas_reg_4841;
wire  signed [11:0] bottom_8_V_read_cas_fu_1216_p1;
reg  signed [11:0] bottom_8_V_read_cas_reg_4846;
wire  signed [11:0] bottom_7_V_read_cas_fu_1220_p1;
reg  signed [11:0] bottom_7_V_read_cas_reg_4851;
wire  signed [11:0] bottom_6_V_read_cas_fu_1224_p1;
reg  signed [11:0] bottom_6_V_read_cas_reg_4856;
wire  signed [11:0] bottom_5_V_read_cas_fu_1228_p1;
reg  signed [11:0] bottom_5_V_read_cas_reg_4861;
wire  signed [11:0] bottom_4_V_read_cas_fu_1232_p1;
reg  signed [11:0] bottom_4_V_read_cas_reg_4866;
wire  signed [11:0] bottom_3_V_read_cas_fu_1236_p1;
reg  signed [11:0] bottom_3_V_read_cas_reg_4871;
wire  signed [11:0] bottom_2_V_read_cas_fu_1240_p1;
reg  signed [11:0] bottom_2_V_read_cas_reg_4876;
wire  signed [11:0] bottom_1_V_read_cas_fu_1244_p1;
reg  signed [11:0] bottom_1_V_read_cas_reg_4881;
wire  signed [11:0] bottom_0_V_read_cas_fu_1248_p1;
reg  signed [11:0] bottom_0_V_read_cas_reg_4886;
wire   [6:0] cii_fu_1258_p2;
reg   [6:0] cii_reg_4894;
wire    ap_CS_fsm_state2;
wire  signed [11:0] tmp_5_fu_1282_p66;
reg  signed [11:0] tmp_5_reg_4899;
wire   [0:0] icmp_ln23_fu_1252_p2;
wire   [11:0] buf_0_V_fu_1646_p3;
wire    ap_CS_fsm_state3;
wire   [11:0] buf_1_V_fu_1932_p3;
wire   [11:0] buf_2_V_fu_2218_p3;
wire   [11:0] buf_3_V_fu_2504_p3;
wire   [11:0] buf_4_V_fu_2790_p3;
wire   [11:0] buf_5_V_fu_3076_p3;
wire   [11:0] buf_6_V_fu_3362_p3;
wire   [11:0] buf_7_V_fu_3648_p3;
wire   [11:0] buf_8_V_fu_3934_p3;
wire   [11:0] buf_9_V_fu_4220_p3;
wire   [0:0] icmp_ln30_fu_4238_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_state7_pp1_stage0_iter2;
reg    ap_block_state7_io;
reg    ap_block_pp1_stage0_11001;
wire   [3:0] coo_fu_4244_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln935_fu_4276_p2;
reg   [0:0] icmp_ln935_reg_5020;
wire   [0:0] p_Result_16_fu_4282_p3;
reg   [0:0] p_Result_16_reg_5025;
wire   [11:0] tmp_V_5_fu_4296_p3;
reg   [11:0] tmp_V_5_reg_5030;
wire   [31:0] sub_ln944_fu_4330_p2;
reg   [31:0] sub_ln944_reg_5035;
wire   [31:0] or_ln_fu_4440_p3;
reg   [31:0] or_ln_reg_5041;
wire   [0:0] icmp_ln958_fu_4448_p2;
reg   [0:0] icmp_ln958_reg_5046;
wire   [7:0] trunc_ln943_fu_4454_p1;
reg   [7:0] trunc_ln943_reg_5051;
wire   [31:0] select_ln935_fu_4559_p3;
reg   [31:0] select_ln935_reg_5056;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter1;
reg   [11:0] buf_9_V_0_reg_854;
reg   [11:0] buf_8_V_0_reg_866;
reg   [11:0] buf_7_V_0_reg_878;
reg   [11:0] buf_6_V_0_reg_890;
reg   [11:0] buf_5_V_0_reg_902;
reg   [11:0] buf_4_V_0_reg_914;
reg   [11:0] buf_3_V_0_reg_926;
reg   [11:0] buf_2_V_0_reg_938;
reg   [11:0] buf_1_V_0_reg_950;
reg   [11:0] buf_0_V_0_reg_962;
reg   [6:0] cii_0_reg_974;
wire   [63:0] zext_ln27_fu_1264_p1;
wire   [63:0] zext_ln32_fu_4228_p1;
wire    ap_block_pp1_stage0_01001;
wire   [5:0] tmp_5_fu_1282_p65;
wire   [21:0] shl_ln_fu_1355_p3;
wire  signed [21:0] sext_ln1117_fu_1352_p1;
wire   [21:0] sub_ln1118_fu_1362_p2;
wire  signed [21:0] select_ln1118_fu_1368_p3;
wire  signed [18:0] shl_ln1_fu_1380_p3;
wire  signed [22:0] sext_ln728_fu_1388_p1;
wire  signed [22:0] sext_ln1118_fu_1376_p1;
wire   [19:0] trunc_ln1192_fu_1392_p1;
wire  signed [19:0] sext_ln1192_fu_1396_p1;
wire   [22:0] add_ln1192_fu_1400_p2;
wire   [0:0] tmp_123_fu_1438_p3;
wire   [11:0] zext_ln415_fu_1446_p1;
wire   [11:0] trunc_ln7_fu_1420_p4;
wire   [11:0] add_ln415_fu_1450_p2;
wire   [0:0] tmp_124_fu_1456_p3;
wire   [0:0] tmp_122_fu_1430_p3;
wire   [0:0] xor_ln416_fu_1464_p2;
wire   [2:0] tmp_6_fu_1484_p4;
wire   [3:0] tmp_8_fu_1500_p4;
wire   [0:0] and_ln416_fu_1470_p2;
wire   [0:0] icmp_ln879_1_fu_1510_p2;
wire   [0:0] icmp_ln768_fu_1516_p2;
wire   [19:0] add_ln1192_40_fu_1406_p2;
wire   [0:0] tmp_126_fu_1530_p3;
wire   [0:0] icmp_ln879_fu_1494_p2;
wire   [0:0] xor_ln779_fu_1538_p2;
wire   [0:0] and_ln779_fu_1544_p2;
wire   [0:0] select_ln777_fu_1522_p3;
wire   [0:0] tmp_125_fu_1476_p3;
wire   [0:0] xor_ln785_fu_1564_p2;
wire   [0:0] tmp_121_fu_1412_p3;
wire   [0:0] or_ln785_fu_1570_p2;
wire   [0:0] xor_ln785_4_fu_1576_p2;
wire   [0:0] select_ln416_fu_1550_p3;
wire   [0:0] and_ln781_fu_1558_p2;
wire   [0:0] and_ln786_fu_1588_p2;
wire   [0:0] or_ln786_fu_1594_p2;
wire   [0:0] xor_ln786_fu_1600_p2;
wire   [0:0] and_ln786_34_fu_1606_p2;
wire   [0:0] and_ln785_fu_1582_p2;
wire   [0:0] or_ln340_38_fu_1618_p2;
wire   [0:0] or_ln340_fu_1612_p2;
wire   [0:0] or_ln340_39_fu_1624_p2;
wire   [11:0] select_ln340_fu_1630_p3;
wire   [11:0] select_ln388_fu_1638_p3;
wire  signed [21:0] select_ln1118_1_fu_1654_p3;
wire  signed [18:0] shl_ln728_s_fu_1666_p3;
wire  signed [22:0] sext_ln728_1_fu_1674_p1;
wire  signed [22:0] sext_ln1118_1_fu_1662_p1;
wire   [19:0] trunc_ln1192_1_fu_1678_p1;
wire  signed [19:0] sext_ln1192_1_fu_1682_p1;
wire   [22:0] add_ln1192_31_fu_1686_p2;
wire   [0:0] tmp_129_fu_1724_p3;
wire   [11:0] zext_ln415_1_fu_1732_p1;
wire   [11:0] trunc_ln708_1_fu_1706_p4;
wire   [11:0] add_ln415_1_fu_1736_p2;
wire   [0:0] tmp_130_fu_1742_p3;
wire   [0:0] tmp_128_fu_1716_p3;
wire   [0:0] xor_ln416_1_fu_1750_p2;
wire   [2:0] tmp_9_fu_1770_p4;
wire   [3:0] tmp_1_fu_1786_p4;
wire   [0:0] and_ln416_1_fu_1756_p2;
wire   [0:0] icmp_ln879_3_fu_1796_p2;
wire   [0:0] icmp_ln768_1_fu_1802_p2;
wire   [19:0] add_ln1192_41_fu_1692_p2;
wire   [0:0] tmp_132_fu_1816_p3;
wire   [0:0] icmp_ln879_2_fu_1780_p2;
wire   [0:0] xor_ln779_1_fu_1824_p2;
wire   [0:0] and_ln779_1_fu_1830_p2;
wire   [0:0] select_ln777_1_fu_1808_p3;
wire   [0:0] tmp_131_fu_1762_p3;
wire   [0:0] xor_ln785_1_fu_1850_p2;
wire   [0:0] tmp_127_fu_1698_p3;
wire   [0:0] or_ln785_1_fu_1856_p2;
wire   [0:0] xor_ln785_10_fu_1862_p2;
wire   [0:0] select_ln416_1_fu_1836_p3;
wire   [0:0] and_ln781_1_fu_1844_p2;
wire   [0:0] and_ln786_1_fu_1874_p2;
wire   [0:0] or_ln786_1_fu_1880_p2;
wire   [0:0] xor_ln786_18_fu_1886_p2;
wire   [0:0] and_ln786_35_fu_1892_p2;
wire   [0:0] and_ln785_1_fu_1868_p2;
wire   [0:0] or_ln340_40_fu_1904_p2;
wire   [0:0] or_ln340_1_fu_1898_p2;
wire   [0:0] or_ln340_41_fu_1910_p2;
wire   [11:0] select_ln340_1_fu_1916_p3;
wire   [11:0] select_ln388_1_fu_1924_p3;
wire  signed [21:0] select_ln1118_2_fu_1940_p3;
wire  signed [18:0] shl_ln728_1_fu_1952_p3;
wire  signed [22:0] sext_ln728_2_fu_1960_p1;
wire  signed [22:0] sext_ln1118_2_fu_1948_p1;
wire   [19:0] trunc_ln1192_2_fu_1964_p1;
wire  signed [19:0] sext_ln1192_2_fu_1968_p1;
wire   [22:0] add_ln1192_32_fu_1972_p2;
wire   [0:0] tmp_135_fu_2010_p3;
wire   [11:0] zext_ln415_2_fu_2018_p1;
wire   [11:0] trunc_ln708_2_fu_1992_p4;
wire   [11:0] add_ln415_2_fu_2022_p2;
wire   [0:0] tmp_136_fu_2028_p3;
wire   [0:0] tmp_134_fu_2002_p3;
wire   [0:0] xor_ln416_2_fu_2036_p2;
wire   [2:0] tmp_2_fu_2056_p4;
wire   [3:0] tmp_3_fu_2072_p4;
wire   [0:0] and_ln416_2_fu_2042_p2;
wire   [0:0] icmp_ln879_5_fu_2082_p2;
wire   [0:0] icmp_ln768_2_fu_2088_p2;
wire   [19:0] add_ln1192_42_fu_1978_p2;
wire   [0:0] tmp_138_fu_2102_p3;
wire   [0:0] icmp_ln879_4_fu_2066_p2;
wire   [0:0] xor_ln779_2_fu_2110_p2;
wire   [0:0] and_ln779_2_fu_2116_p2;
wire   [0:0] select_ln777_2_fu_2094_p3;
wire   [0:0] tmp_137_fu_2048_p3;
wire   [0:0] xor_ln785_2_fu_2136_p2;
wire   [0:0] tmp_133_fu_1984_p3;
wire   [0:0] or_ln785_2_fu_2142_p2;
wire   [0:0] xor_ln785_11_fu_2148_p2;
wire   [0:0] select_ln416_2_fu_2122_p3;
wire   [0:0] and_ln781_2_fu_2130_p2;
wire   [0:0] and_ln786_2_fu_2160_p2;
wire   [0:0] or_ln786_2_fu_2166_p2;
wire   [0:0] xor_ln786_19_fu_2172_p2;
wire   [0:0] and_ln786_36_fu_2178_p2;
wire   [0:0] and_ln785_2_fu_2154_p2;
wire   [0:0] or_ln340_42_fu_2190_p2;
wire   [0:0] or_ln340_2_fu_2184_p2;
wire   [0:0] or_ln340_43_fu_2196_p2;
wire   [11:0] select_ln340_2_fu_2202_p3;
wire   [11:0] select_ln388_2_fu_2210_p3;
wire  signed [21:0] select_ln1118_3_fu_2226_p3;
wire  signed [18:0] shl_ln728_2_fu_2238_p3;
wire  signed [22:0] sext_ln728_3_fu_2246_p1;
wire  signed [22:0] sext_ln1118_3_fu_2234_p1;
wire   [19:0] trunc_ln1192_3_fu_2250_p1;
wire  signed [19:0] sext_ln1192_3_fu_2254_p1;
wire   [22:0] add_ln1192_33_fu_2258_p2;
wire   [0:0] tmp_141_fu_2296_p3;
wire   [11:0] zext_ln415_3_fu_2304_p1;
wire   [11:0] trunc_ln708_3_fu_2278_p4;
wire   [11:0] add_ln415_3_fu_2308_p2;
wire   [0:0] tmp_142_fu_2314_p3;
wire   [0:0] tmp_140_fu_2288_p3;
wire   [0:0] xor_ln416_3_fu_2322_p2;
wire   [2:0] tmp_4_fu_2342_p4;
wire   [3:0] tmp_10_fu_2358_p4;
wire   [0:0] and_ln416_3_fu_2328_p2;
wire   [0:0] icmp_ln879_7_fu_2368_p2;
wire   [0:0] icmp_ln768_3_fu_2374_p2;
wire   [19:0] add_ln1192_43_fu_2264_p2;
wire   [0:0] tmp_144_fu_2388_p3;
wire   [0:0] icmp_ln879_6_fu_2352_p2;
wire   [0:0] xor_ln779_3_fu_2396_p2;
wire   [0:0] and_ln779_3_fu_2402_p2;
wire   [0:0] select_ln777_3_fu_2380_p3;
wire   [0:0] tmp_143_fu_2334_p3;
wire   [0:0] xor_ln785_3_fu_2422_p2;
wire   [0:0] tmp_139_fu_2270_p3;
wire   [0:0] or_ln785_3_fu_2428_p2;
wire   [0:0] xor_ln785_12_fu_2434_p2;
wire   [0:0] select_ln416_3_fu_2408_p3;
wire   [0:0] and_ln781_3_fu_2416_p2;
wire   [0:0] and_ln786_3_fu_2446_p2;
wire   [0:0] or_ln786_3_fu_2452_p2;
wire   [0:0] xor_ln786_20_fu_2458_p2;
wire   [0:0] and_ln786_37_fu_2464_p2;
wire   [0:0] and_ln785_3_fu_2440_p2;
wire   [0:0] or_ln340_44_fu_2476_p2;
wire   [0:0] or_ln340_3_fu_2470_p2;
wire   [0:0] or_ln340_45_fu_2482_p2;
wire   [11:0] select_ln340_3_fu_2488_p3;
wire   [11:0] select_ln388_3_fu_2496_p3;
wire  signed [21:0] select_ln1118_4_fu_2512_p3;
wire  signed [18:0] shl_ln728_3_fu_2524_p3;
wire  signed [22:0] sext_ln728_4_fu_2532_p1;
wire  signed [22:0] sext_ln1118_4_fu_2520_p1;
wire   [19:0] trunc_ln1192_4_fu_2536_p1;
wire  signed [19:0] sext_ln1192_4_fu_2540_p1;
wire   [22:0] add_ln1192_34_fu_2544_p2;
wire   [0:0] tmp_147_fu_2582_p3;
wire   [11:0] zext_ln415_4_fu_2590_p1;
wire   [11:0] trunc_ln708_4_fu_2564_p4;
wire   [11:0] add_ln415_4_fu_2594_p2;
wire   [0:0] tmp_148_fu_2600_p3;
wire   [0:0] tmp_146_fu_2574_p3;
wire   [0:0] xor_ln416_4_fu_2608_p2;
wire   [2:0] tmp_11_fu_2628_p4;
wire   [3:0] tmp_12_fu_2644_p4;
wire   [0:0] and_ln416_4_fu_2614_p2;
wire   [0:0] icmp_ln879_9_fu_2654_p2;
wire   [0:0] icmp_ln768_4_fu_2660_p2;
wire   [19:0] add_ln1192_44_fu_2550_p2;
wire   [0:0] tmp_150_fu_2674_p3;
wire   [0:0] icmp_ln879_8_fu_2638_p2;
wire   [0:0] xor_ln779_4_fu_2682_p2;
wire   [0:0] and_ln779_4_fu_2688_p2;
wire   [0:0] select_ln777_4_fu_2666_p3;
wire   [0:0] tmp_149_fu_2620_p3;
wire   [0:0] xor_ln785_13_fu_2708_p2;
wire   [0:0] tmp_145_fu_2556_p3;
wire   [0:0] or_ln785_4_fu_2714_p2;
wire   [0:0] xor_ln785_14_fu_2720_p2;
wire   [0:0] select_ln416_4_fu_2694_p3;
wire   [0:0] and_ln781_4_fu_2702_p2;
wire   [0:0] and_ln786_4_fu_2732_p2;
wire   [0:0] or_ln786_4_fu_2738_p2;
wire   [0:0] xor_ln786_21_fu_2744_p2;
wire   [0:0] and_ln786_38_fu_2750_p2;
wire   [0:0] and_ln785_4_fu_2726_p2;
wire   [0:0] or_ln340_46_fu_2762_p2;
wire   [0:0] or_ln340_4_fu_2756_p2;
wire   [0:0] or_ln340_47_fu_2768_p2;
wire   [11:0] select_ln340_4_fu_2774_p3;
wire   [11:0] select_ln388_4_fu_2782_p3;
wire  signed [21:0] select_ln1118_5_fu_2798_p3;
wire  signed [18:0] shl_ln728_4_fu_2810_p3;
wire  signed [22:0] sext_ln728_5_fu_2818_p1;
wire  signed [22:0] sext_ln1118_5_fu_2806_p1;
wire   [19:0] trunc_ln1192_5_fu_2822_p1;
wire  signed [19:0] sext_ln1192_5_fu_2826_p1;
wire   [22:0] add_ln1192_35_fu_2830_p2;
wire   [0:0] tmp_153_fu_2868_p3;
wire   [11:0] zext_ln415_5_fu_2876_p1;
wire   [11:0] trunc_ln708_5_fu_2850_p4;
wire   [11:0] add_ln415_5_fu_2880_p2;
wire   [0:0] tmp_154_fu_2886_p3;
wire   [0:0] tmp_152_fu_2860_p3;
wire   [0:0] xor_ln416_5_fu_2894_p2;
wire   [2:0] tmp_13_fu_2914_p4;
wire   [3:0] tmp_14_fu_2930_p4;
wire   [0:0] and_ln416_5_fu_2900_p2;
wire   [0:0] icmp_ln879_11_fu_2940_p2;
wire   [0:0] icmp_ln768_5_fu_2946_p2;
wire   [19:0] add_ln1192_45_fu_2836_p2;
wire   [0:0] tmp_156_fu_2960_p3;
wire   [0:0] icmp_ln879_10_fu_2924_p2;
wire   [0:0] xor_ln779_5_fu_2968_p2;
wire   [0:0] and_ln779_5_fu_2974_p2;
wire   [0:0] select_ln777_5_fu_2952_p3;
wire   [0:0] tmp_155_fu_2906_p3;
wire   [0:0] xor_ln785_5_fu_2994_p2;
wire   [0:0] tmp_151_fu_2842_p3;
wire   [0:0] or_ln785_5_fu_3000_p2;
wire   [0:0] xor_ln785_15_fu_3006_p2;
wire   [0:0] select_ln416_5_fu_2980_p3;
wire   [0:0] and_ln781_5_fu_2988_p2;
wire   [0:0] and_ln786_5_fu_3018_p2;
wire   [0:0] or_ln786_5_fu_3024_p2;
wire   [0:0] xor_ln786_22_fu_3030_p2;
wire   [0:0] and_ln786_39_fu_3036_p2;
wire   [0:0] and_ln785_5_fu_3012_p2;
wire   [0:0] or_ln340_48_fu_3048_p2;
wire   [0:0] or_ln340_5_fu_3042_p2;
wire   [0:0] or_ln340_49_fu_3054_p2;
wire   [11:0] select_ln340_5_fu_3060_p3;
wire   [11:0] select_ln388_5_fu_3068_p3;
wire  signed [21:0] select_ln1118_6_fu_3084_p3;
wire  signed [18:0] shl_ln728_5_fu_3096_p3;
wire  signed [22:0] sext_ln728_6_fu_3104_p1;
wire  signed [22:0] sext_ln1118_6_fu_3092_p1;
wire   [19:0] trunc_ln1192_6_fu_3108_p1;
wire  signed [19:0] sext_ln1192_6_fu_3112_p1;
wire   [22:0] add_ln1192_36_fu_3116_p2;
wire   [0:0] tmp_159_fu_3154_p3;
wire   [11:0] zext_ln415_6_fu_3162_p1;
wire   [11:0] trunc_ln708_6_fu_3136_p4;
wire   [11:0] add_ln415_6_fu_3166_p2;
wire   [0:0] tmp_160_fu_3172_p3;
wire   [0:0] tmp_158_fu_3146_p3;
wire   [0:0] xor_ln416_6_fu_3180_p2;
wire   [2:0] tmp_15_fu_3200_p4;
wire   [3:0] tmp_16_fu_3216_p4;
wire   [0:0] and_ln416_6_fu_3186_p2;
wire   [0:0] icmp_ln879_13_fu_3226_p2;
wire   [0:0] icmp_ln768_6_fu_3232_p2;
wire   [19:0] add_ln1192_46_fu_3122_p2;
wire   [0:0] tmp_162_fu_3246_p3;
wire   [0:0] icmp_ln879_12_fu_3210_p2;
wire   [0:0] xor_ln779_6_fu_3254_p2;
wire   [0:0] and_ln779_6_fu_3260_p2;
wire   [0:0] select_ln777_6_fu_3238_p3;
wire   [0:0] tmp_161_fu_3192_p3;
wire   [0:0] xor_ln785_6_fu_3280_p2;
wire   [0:0] tmp_157_fu_3128_p3;
wire   [0:0] or_ln785_6_fu_3286_p2;
wire   [0:0] xor_ln785_16_fu_3292_p2;
wire   [0:0] select_ln416_6_fu_3266_p3;
wire   [0:0] and_ln781_6_fu_3274_p2;
wire   [0:0] and_ln786_6_fu_3304_p2;
wire   [0:0] or_ln786_6_fu_3310_p2;
wire   [0:0] xor_ln786_23_fu_3316_p2;
wire   [0:0] and_ln786_40_fu_3322_p2;
wire   [0:0] and_ln785_6_fu_3298_p2;
wire   [0:0] or_ln340_50_fu_3334_p2;
wire   [0:0] or_ln340_6_fu_3328_p2;
wire   [0:0] or_ln340_51_fu_3340_p2;
wire   [11:0] select_ln340_6_fu_3346_p3;
wire   [11:0] select_ln388_6_fu_3354_p3;
wire  signed [21:0] select_ln1118_7_fu_3370_p3;
wire  signed [18:0] shl_ln728_6_fu_3382_p3;
wire  signed [22:0] sext_ln728_7_fu_3390_p1;
wire  signed [22:0] sext_ln1118_7_fu_3378_p1;
wire   [19:0] trunc_ln1192_7_fu_3394_p1;
wire  signed [19:0] sext_ln1192_7_fu_3398_p1;
wire   [22:0] add_ln1192_37_fu_3402_p2;
wire   [0:0] tmp_165_fu_3440_p3;
wire   [11:0] zext_ln415_7_fu_3448_p1;
wire   [11:0] trunc_ln708_7_fu_3422_p4;
wire   [11:0] add_ln415_7_fu_3452_p2;
wire   [0:0] tmp_166_fu_3458_p3;
wire   [0:0] tmp_164_fu_3432_p3;
wire   [0:0] xor_ln416_7_fu_3466_p2;
wire   [2:0] tmp_17_fu_3486_p4;
wire   [3:0] tmp_18_fu_3502_p4;
wire   [0:0] and_ln416_7_fu_3472_p2;
wire   [0:0] icmp_ln879_15_fu_3512_p2;
wire   [0:0] icmp_ln768_7_fu_3518_p2;
wire   [19:0] add_ln1192_47_fu_3408_p2;
wire   [0:0] tmp_168_fu_3532_p3;
wire   [0:0] icmp_ln879_14_fu_3496_p2;
wire   [0:0] xor_ln779_7_fu_3540_p2;
wire   [0:0] and_ln779_7_fu_3546_p2;
wire   [0:0] select_ln777_7_fu_3524_p3;
wire   [0:0] tmp_167_fu_3478_p3;
wire   [0:0] xor_ln785_7_fu_3566_p2;
wire   [0:0] tmp_163_fu_3414_p3;
wire   [0:0] or_ln785_7_fu_3572_p2;
wire   [0:0] xor_ln785_17_fu_3578_p2;
wire   [0:0] select_ln416_7_fu_3552_p3;
wire   [0:0] and_ln781_7_fu_3560_p2;
wire   [0:0] and_ln786_7_fu_3590_p2;
wire   [0:0] or_ln786_7_fu_3596_p2;
wire   [0:0] xor_ln786_24_fu_3602_p2;
wire   [0:0] and_ln786_41_fu_3608_p2;
wire   [0:0] and_ln785_7_fu_3584_p2;
wire   [0:0] or_ln340_52_fu_3620_p2;
wire   [0:0] or_ln340_7_fu_3614_p2;
wire   [0:0] or_ln340_53_fu_3626_p2;
wire   [11:0] select_ln340_7_fu_3632_p3;
wire   [11:0] select_ln388_7_fu_3640_p3;
wire  signed [21:0] select_ln1118_8_fu_3656_p3;
wire  signed [18:0] shl_ln728_7_fu_3668_p3;
wire  signed [22:0] sext_ln728_8_fu_3676_p1;
wire  signed [22:0] sext_ln1118_8_fu_3664_p1;
wire   [19:0] trunc_ln1192_8_fu_3680_p1;
wire  signed [19:0] sext_ln1192_8_fu_3684_p1;
wire   [22:0] add_ln1192_38_fu_3688_p2;
wire   [0:0] tmp_171_fu_3726_p3;
wire   [11:0] zext_ln415_8_fu_3734_p1;
wire   [11:0] trunc_ln708_8_fu_3708_p4;
wire   [11:0] add_ln415_8_fu_3738_p2;
wire   [0:0] tmp_172_fu_3744_p3;
wire   [0:0] tmp_170_fu_3718_p3;
wire   [0:0] xor_ln416_8_fu_3752_p2;
wire   [2:0] tmp_19_fu_3772_p4;
wire   [3:0] tmp_20_fu_3788_p4;
wire   [0:0] and_ln416_8_fu_3758_p2;
wire   [0:0] icmp_ln879_17_fu_3798_p2;
wire   [0:0] icmp_ln768_8_fu_3804_p2;
wire   [19:0] add_ln1192_48_fu_3694_p2;
wire   [0:0] tmp_174_fu_3818_p3;
wire   [0:0] icmp_ln879_16_fu_3782_p2;
wire   [0:0] xor_ln779_8_fu_3826_p2;
wire   [0:0] and_ln779_8_fu_3832_p2;
wire   [0:0] select_ln777_8_fu_3810_p3;
wire   [0:0] tmp_173_fu_3764_p3;
wire   [0:0] xor_ln785_8_fu_3852_p2;
wire   [0:0] tmp_169_fu_3700_p3;
wire   [0:0] or_ln785_8_fu_3858_p2;
wire   [0:0] xor_ln785_18_fu_3864_p2;
wire   [0:0] select_ln416_8_fu_3838_p3;
wire   [0:0] and_ln781_8_fu_3846_p2;
wire   [0:0] and_ln786_8_fu_3876_p2;
wire   [0:0] or_ln786_8_fu_3882_p2;
wire   [0:0] xor_ln786_25_fu_3888_p2;
wire   [0:0] and_ln786_42_fu_3894_p2;
wire   [0:0] and_ln785_8_fu_3870_p2;
wire   [0:0] or_ln340_54_fu_3906_p2;
wire   [0:0] or_ln340_8_fu_3900_p2;
wire   [0:0] or_ln340_55_fu_3912_p2;
wire   [11:0] select_ln340_8_fu_3918_p3;
wire   [11:0] select_ln388_8_fu_3926_p3;
wire  signed [21:0] select_ln1118_9_fu_3942_p3;
wire  signed [18:0] shl_ln728_8_fu_3954_p3;
wire  signed [22:0] sext_ln728_9_fu_3962_p1;
wire  signed [22:0] sext_ln1118_9_fu_3950_p1;
wire   [19:0] trunc_ln1192_9_fu_3966_p1;
wire  signed [19:0] sext_ln1192_9_fu_3970_p1;
wire   [22:0] add_ln1192_39_fu_3974_p2;
wire   [0:0] tmp_177_fu_4012_p3;
wire   [11:0] zext_ln415_9_fu_4020_p1;
wire   [11:0] trunc_ln708_9_fu_3994_p4;
wire   [11:0] add_ln415_9_fu_4024_p2;
wire   [0:0] tmp_178_fu_4030_p3;
wire   [0:0] tmp_176_fu_4004_p3;
wire   [0:0] xor_ln416_9_fu_4038_p2;
wire   [2:0] tmp_21_fu_4058_p4;
wire   [3:0] tmp_22_fu_4074_p4;
wire   [0:0] and_ln416_9_fu_4044_p2;
wire   [0:0] icmp_ln879_19_fu_4084_p2;
wire   [0:0] icmp_ln768_9_fu_4090_p2;
wire   [19:0] add_ln1192_49_fu_3980_p2;
wire   [0:0] tmp_180_fu_4104_p3;
wire   [0:0] icmp_ln879_18_fu_4068_p2;
wire   [0:0] xor_ln779_9_fu_4112_p2;
wire   [0:0] and_ln779_9_fu_4118_p2;
wire   [0:0] select_ln777_9_fu_4096_p3;
wire   [0:0] tmp_179_fu_4050_p3;
wire   [0:0] xor_ln785_9_fu_4138_p2;
wire   [0:0] tmp_175_fu_3986_p3;
wire   [0:0] or_ln785_9_fu_4144_p2;
wire   [0:0] xor_ln785_19_fu_4150_p2;
wire   [0:0] select_ln416_9_fu_4124_p3;
wire   [0:0] and_ln781_9_fu_4132_p2;
wire   [0:0] and_ln786_9_fu_4162_p2;
wire   [0:0] or_ln786_9_fu_4168_p2;
wire   [0:0] xor_ln786_26_fu_4174_p2;
wire   [0:0] and_ln786_43_fu_4180_p2;
wire   [0:0] and_ln785_9_fu_4156_p2;
wire   [0:0] or_ln340_57_fu_4192_p2;
wire   [0:0] or_ln340_56_fu_4186_p2;
wire   [0:0] or_ln340_58_fu_4198_p2;
wire   [11:0] select_ln340_9_fu_4204_p3;
wire   [11:0] select_ln388_9_fu_4212_p3;
wire   [11:0] tmp_V_4_fu_4250_p12;
wire   [11:0] tmp_V_fu_4290_p2;
reg   [11:0] p_Result_s_fu_4304_p4;
wire   [31:0] p_Result_17_fu_4314_p3;
reg   [31:0] l_fu_4322_p3;
wire   [31:0] lsb_index_fu_4340_p2;
wire   [30:0] tmp_182_fu_4346_p4;
wire   [3:0] trunc_ln947_fu_4362_p1;
wire   [3:0] sub_ln947_fu_4366_p2;
wire   [11:0] zext_ln947_fu_4372_p1;
wire   [11:0] lshr_ln947_fu_4376_p2;
wire   [11:0] p_Result_14_fu_4382_p2;
wire   [0:0] icmp_ln947_fu_4356_p2;
wire   [0:0] icmp_ln947_1_fu_4388_p2;
wire   [0:0] tmp_183_fu_4400_p3;
wire   [11:0] trunc_ln944_fu_4336_p1;
wire   [11:0] add_ln949_fu_4414_p2;
wire   [0:0] p_Result_3_fu_4420_p3;
wire   [0:0] xor_ln949_fu_4408_p2;
wire   [0:0] and_ln949_fu_4428_p2;
wire   [0:0] a_fu_4394_p2;
wire   [0:0] or_ln949_fu_4434_p2;
wire   [31:0] m_fu_4458_p1;
wire   [31:0] add_ln958_fu_4461_p2;
wire   [31:0] sub_ln958_fu_4472_p2;
wire   [31:0] lshr_ln958_fu_4466_p2;
wire   [31:0] shl_ln958_fu_4477_p2;
wire   [31:0] m_1_fu_4483_p3;
wire   [31:0] m_2_fu_4490_p2;
wire   [30:0] m_5_fu_4495_p4;
wire   [0:0] tmp_184_fu_4509_p3;
wire   [7:0] select_ln964_fu_4517_p3;
wire   [7:0] sub_ln964_fu_4525_p2;
wire   [7:0] add_ln964_fu_4530_p2;
wire   [31:0] m_6_fu_4505_p1;
wire   [8:0] tmp_s_fu_4536_p3;
wire   [31:0] p_Result_18_fu_4543_p5;
wire   [31:0] bitcast_ln739_fu_4555_p1;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_0_address0),
    .ce0(linear_weight_V_0_ce0),
    .q0(linear_weight_V_0_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_1_address0),
    .ce0(linear_weight_V_1_ce0),
    .q0(linear_weight_V_1_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_2_address0),
    .ce0(linear_weight_V_2_ce0),
    .q0(linear_weight_V_2_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_3_address0),
    .ce0(linear_weight_V_3_ce0),
    .q0(linear_weight_V_3_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_4_address0),
    .ce0(linear_weight_V_4_ce0),
    .q0(linear_weight_V_4_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_5_address0),
    .ce0(linear_weight_V_5_ce0),
    .q0(linear_weight_V_5_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_6_address0),
    .ce0(linear_weight_V_6_ce0),
    .q0(linear_weight_V_6_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_7_address0),
    .ce0(linear_weight_V_7_ce0),
    .q0(linear_weight_V_7_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_8_address0),
    .ce0(linear_weight_V_8_ce0),
    .q0(linear_weight_V_8_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_9_address0),
    .ce0(linear_weight_V_9_ce0),
    .q0(linear_weight_V_9_q0)
);

ResNet_mux_646_12udo #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 12 ),
    .din13_WIDTH( 12 ),
    .din14_WIDTH( 12 ),
    .din15_WIDTH( 12 ),
    .din16_WIDTH( 12 ),
    .din17_WIDTH( 12 ),
    .din18_WIDTH( 12 ),
    .din19_WIDTH( 12 ),
    .din20_WIDTH( 12 ),
    .din21_WIDTH( 12 ),
    .din22_WIDTH( 12 ),
    .din23_WIDTH( 12 ),
    .din24_WIDTH( 12 ),
    .din25_WIDTH( 12 ),
    .din26_WIDTH( 12 ),
    .din27_WIDTH( 12 ),
    .din28_WIDTH( 12 ),
    .din29_WIDTH( 12 ),
    .din30_WIDTH( 12 ),
    .din31_WIDTH( 12 ),
    .din32_WIDTH( 12 ),
    .din33_WIDTH( 12 ),
    .din34_WIDTH( 12 ),
    .din35_WIDTH( 12 ),
    .din36_WIDTH( 12 ),
    .din37_WIDTH( 12 ),
    .din38_WIDTH( 12 ),
    .din39_WIDTH( 12 ),
    .din40_WIDTH( 12 ),
    .din41_WIDTH( 12 ),
    .din42_WIDTH( 12 ),
    .din43_WIDTH( 12 ),
    .din44_WIDTH( 12 ),
    .din45_WIDTH( 12 ),
    .din46_WIDTH( 12 ),
    .din47_WIDTH( 12 ),
    .din48_WIDTH( 12 ),
    .din49_WIDTH( 12 ),
    .din50_WIDTH( 12 ),
    .din51_WIDTH( 12 ),
    .din52_WIDTH( 12 ),
    .din53_WIDTH( 12 ),
    .din54_WIDTH( 12 ),
    .din55_WIDTH( 12 ),
    .din56_WIDTH( 12 ),
    .din57_WIDTH( 12 ),
    .din58_WIDTH( 12 ),
    .din59_WIDTH( 12 ),
    .din60_WIDTH( 12 ),
    .din61_WIDTH( 12 ),
    .din62_WIDTH( 12 ),
    .din63_WIDTH( 12 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
ResNet_mux_646_12udo_U645(
    .din0(bottom_0_V_read_cas_reg_4886),
    .din1(bottom_1_V_read_cas_reg_4881),
    .din2(bottom_2_V_read_cas_reg_4876),
    .din3(bottom_3_V_read_cas_reg_4871),
    .din4(bottom_4_V_read_cas_reg_4866),
    .din5(bottom_5_V_read_cas_reg_4861),
    .din6(bottom_6_V_read_cas_reg_4856),
    .din7(bottom_7_V_read_cas_reg_4851),
    .din8(bottom_8_V_read_cas_reg_4846),
    .din9(bottom_9_V_read_cas_reg_4841),
    .din10(bottom_10_V_read_ca_reg_4836),
    .din11(bottom_11_V_read_ca_reg_4831),
    .din12(bottom_12_V_read_ca_reg_4826),
    .din13(bottom_13_V_read_ca_reg_4821),
    .din14(bottom_14_V_read_ca_reg_4816),
    .din15(bottom_15_V_read_ca_reg_4811),
    .din16(bottom_16_V_read_ca_reg_4806),
    .din17(bottom_17_V_read_ca_reg_4801),
    .din18(bottom_18_V_read_ca_reg_4796),
    .din19(bottom_19_V_read_ca_reg_4791),
    .din20(bottom_20_V_read_ca_reg_4786),
    .din21(bottom_21_V_read_ca_reg_4781),
    .din22(bottom_22_V_read_ca_reg_4776),
    .din23(bottom_23_V_read_ca_reg_4771),
    .din24(bottom_24_V_read_ca_reg_4766),
    .din25(bottom_25_V_read_ca_reg_4761),
    .din26(bottom_26_V_read_ca_reg_4756),
    .din27(bottom_27_V_read_ca_reg_4751),
    .din28(bottom_28_V_read_ca_reg_4746),
    .din29(bottom_29_V_read_ca_reg_4741),
    .din30(bottom_30_V_read_ca_reg_4736),
    .din31(bottom_31_V_read_ca_reg_4731),
    .din32(bottom_32_V_read_ca_reg_4726),
    .din33(bottom_33_V_read_ca_reg_4721),
    .din34(bottom_34_V_read_ca_reg_4716),
    .din35(bottom_35_V_read_ca_reg_4711),
    .din36(bottom_36_V_read_ca_reg_4706),
    .din37(bottom_37_V_read_ca_reg_4701),
    .din38(bottom_38_V_read_ca_reg_4696),
    .din39(bottom_39_V_read_ca_reg_4691),
    .din40(bottom_40_V_read_ca_reg_4686),
    .din41(bottom_41_V_read_ca_reg_4681),
    .din42(bottom_42_V_read_ca_reg_4676),
    .din43(bottom_43_V_read_ca_reg_4671),
    .din44(bottom_44_V_read_ca_reg_4666),
    .din45(bottom_45_V_read_ca_reg_4661),
    .din46(bottom_46_V_read_ca_reg_4656),
    .din47(bottom_47_V_read_ca_reg_4651),
    .din48(bottom_48_V_read_ca_reg_4646),
    .din49(bottom_49_V_read_ca_reg_4641),
    .din50(bottom_50_V_read_ca_reg_4636),
    .din51(bottom_51_V_read_ca_reg_4631),
    .din52(bottom_52_V_read_ca_reg_4626),
    .din53(bottom_53_V_read_ca_reg_4621),
    .din54(bottom_54_V_read_ca_reg_4616),
    .din55(bottom_55_V_read_ca_reg_4611),
    .din56(bottom_56_V_read_ca_reg_4606),
    .din57(bottom_57_V_read_ca_reg_4601),
    .din58(bottom_58_V_read_ca_reg_4596),
    .din59(bottom_59_V_read_ca_reg_4591),
    .din60(bottom_60_V_read_ca_reg_4586),
    .din61(bottom_61_V_read_ca_reg_4581),
    .din62(bottom_62_V_read_ca_reg_4576),
    .din63(bottom_63_V_read_ca_reg_4571),
    .din64(tmp_5_fu_1282_p65),
    .dout(tmp_5_fu_1282_p66)
);

ResNet_mux_104_12vdy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
ResNet_mux_104_12vdy_U646(
    .din0(buf_0_V_0_reg_962),
    .din1(buf_1_V_0_reg_950),
    .din2(buf_2_V_0_reg_938),
    .din3(buf_3_V_0_reg_926),
    .din4(buf_4_V_0_reg_914),
    .din5(buf_5_V_0_reg_902),
    .din6(buf_6_V_0_reg_890),
    .din7(buf_7_V_0_reg_878),
    .din8(buf_8_V_0_reg_866),
    .din9(buf_9_V_0_reg_854),
    .din10(coo2_0_reg_985),
    .dout(tmp_V_4_fu_4250_p12)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state5)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_0_V_0_reg_962 <= buf_0_V_fu_1646_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_0_V_0_reg_962 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_1_V_0_reg_950 <= buf_1_V_fu_1932_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_1_V_0_reg_950 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_2_V_0_reg_938 <= buf_2_V_fu_2218_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_2_V_0_reg_938 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_3_V_0_reg_926 <= buf_3_V_fu_2504_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_3_V_0_reg_926 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_4_V_0_reg_914 <= buf_4_V_fu_2790_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_4_V_0_reg_914 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_5_V_0_reg_902 <= buf_5_V_fu_3076_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_5_V_0_reg_902 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_6_V_0_reg_890 <= buf_6_V_fu_3362_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_6_V_0_reg_890 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_7_V_0_reg_878 <= buf_7_V_fu_3648_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_7_V_0_reg_878 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_8_V_0_reg_866 <= buf_8_V_fu_3934_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_8_V_0_reg_866 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_9_V_0_reg_854 <= buf_9_V_fu_4220_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_9_V_0_reg_854 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cii_0_reg_974 <= cii_reg_4894;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        cii_0_reg_974 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        coo2_0_reg_985 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln30_fu_4238_p2 == 1'd0))) begin
        coo2_0_reg_985 <= coo_fu_4244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bottom_0_V_read_cas_reg_4886 <= bottom_0_V_read_cas_fu_1248_p1;
        bottom_10_V_read_ca_reg_4836 <= bottom_10_V_read_ca_fu_1208_p1;
        bottom_11_V_read_ca_reg_4831 <= bottom_11_V_read_ca_fu_1204_p1;
        bottom_12_V_read_ca_reg_4826 <= bottom_12_V_read_ca_fu_1200_p1;
        bottom_13_V_read_ca_reg_4821 <= bottom_13_V_read_ca_fu_1196_p1;
        bottom_14_V_read_ca_reg_4816 <= bottom_14_V_read_ca_fu_1192_p1;
        bottom_15_V_read_ca_reg_4811 <= bottom_15_V_read_ca_fu_1188_p1;
        bottom_16_V_read_ca_reg_4806 <= bottom_16_V_read_ca_fu_1184_p1;
        bottom_17_V_read_ca_reg_4801 <= bottom_17_V_read_ca_fu_1180_p1;
        bottom_18_V_read_ca_reg_4796 <= bottom_18_V_read_ca_fu_1176_p1;
        bottom_19_V_read_ca_reg_4791 <= bottom_19_V_read_ca_fu_1172_p1;
        bottom_1_V_read_cas_reg_4881 <= bottom_1_V_read_cas_fu_1244_p1;
        bottom_20_V_read_ca_reg_4786 <= bottom_20_V_read_ca_fu_1168_p1;
        bottom_21_V_read_ca_reg_4781 <= bottom_21_V_read_ca_fu_1164_p1;
        bottom_22_V_read_ca_reg_4776 <= bottom_22_V_read_ca_fu_1160_p1;
        bottom_23_V_read_ca_reg_4771 <= bottom_23_V_read_ca_fu_1156_p1;
        bottom_24_V_read_ca_reg_4766 <= bottom_24_V_read_ca_fu_1152_p1;
        bottom_25_V_read_ca_reg_4761 <= bottom_25_V_read_ca_fu_1148_p1;
        bottom_26_V_read_ca_reg_4756 <= bottom_26_V_read_ca_fu_1144_p1;
        bottom_27_V_read_ca_reg_4751 <= bottom_27_V_read_ca_fu_1140_p1;
        bottom_28_V_read_ca_reg_4746 <= bottom_28_V_read_ca_fu_1136_p1;
        bottom_29_V_read_ca_reg_4741 <= bottom_29_V_read_ca_fu_1132_p1;
        bottom_2_V_read_cas_reg_4876 <= bottom_2_V_read_cas_fu_1240_p1;
        bottom_30_V_read_ca_reg_4736 <= bottom_30_V_read_ca_fu_1128_p1;
        bottom_31_V_read_ca_reg_4731 <= bottom_31_V_read_ca_fu_1124_p1;
        bottom_32_V_read_ca_reg_4726 <= bottom_32_V_read_ca_fu_1120_p1;
        bottom_33_V_read_ca_reg_4721 <= bottom_33_V_read_ca_fu_1116_p1;
        bottom_34_V_read_ca_reg_4716 <= bottom_34_V_read_ca_fu_1112_p1;
        bottom_35_V_read_ca_reg_4711 <= bottom_35_V_read_ca_fu_1108_p1;
        bottom_36_V_read_ca_reg_4706 <= bottom_36_V_read_ca_fu_1104_p1;
        bottom_37_V_read_ca_reg_4701 <= bottom_37_V_read_ca_fu_1100_p1;
        bottom_38_V_read_ca_reg_4696 <= bottom_38_V_read_ca_fu_1096_p1;
        bottom_39_V_read_ca_reg_4691 <= bottom_39_V_read_ca_fu_1092_p1;
        bottom_3_V_read_cas_reg_4871 <= bottom_3_V_read_cas_fu_1236_p1;
        bottom_40_V_read_ca_reg_4686 <= bottom_40_V_read_ca_fu_1088_p1;
        bottom_41_V_read_ca_reg_4681 <= bottom_41_V_read_ca_fu_1084_p1;
        bottom_42_V_read_ca_reg_4676 <= bottom_42_V_read_ca_fu_1080_p1;
        bottom_43_V_read_ca_reg_4671 <= bottom_43_V_read_ca_fu_1076_p1;
        bottom_44_V_read_ca_reg_4666 <= bottom_44_V_read_ca_fu_1072_p1;
        bottom_45_V_read_ca_reg_4661 <= bottom_45_V_read_ca_fu_1068_p1;
        bottom_46_V_read_ca_reg_4656 <= bottom_46_V_read_ca_fu_1064_p1;
        bottom_47_V_read_ca_reg_4651 <= bottom_47_V_read_ca_fu_1060_p1;
        bottom_48_V_read_ca_reg_4646 <= bottom_48_V_read_ca_fu_1056_p1;
        bottom_49_V_read_ca_reg_4641 <= bottom_49_V_read_ca_fu_1052_p1;
        bottom_4_V_read_cas_reg_4866 <= bottom_4_V_read_cas_fu_1232_p1;
        bottom_50_V_read_ca_reg_4636 <= bottom_50_V_read_ca_fu_1048_p1;
        bottom_51_V_read_ca_reg_4631 <= bottom_51_V_read_ca_fu_1044_p1;
        bottom_52_V_read_ca_reg_4626 <= bottom_52_V_read_ca_fu_1040_p1;
        bottom_53_V_read_ca_reg_4621 <= bottom_53_V_read_ca_fu_1036_p1;
        bottom_54_V_read_ca_reg_4616 <= bottom_54_V_read_ca_fu_1032_p1;
        bottom_55_V_read_ca_reg_4611 <= bottom_55_V_read_ca_fu_1028_p1;
        bottom_56_V_read_ca_reg_4606 <= bottom_56_V_read_ca_fu_1024_p1;
        bottom_57_V_read_ca_reg_4601 <= bottom_57_V_read_ca_fu_1020_p1;
        bottom_58_V_read_ca_reg_4596 <= bottom_58_V_read_ca_fu_1016_p1;
        bottom_59_V_read_ca_reg_4591 <= bottom_59_V_read_ca_fu_1012_p1;
        bottom_5_V_read_cas_reg_4861 <= bottom_5_V_read_cas_fu_1228_p1;
        bottom_60_V_read_ca_reg_4586 <= bottom_60_V_read_ca_fu_1008_p1;
        bottom_61_V_read_ca_reg_4581 <= bottom_61_V_read_ca_fu_1004_p1;
        bottom_62_V_read_ca_reg_4576 <= bottom_62_V_read_ca_fu_1000_p1;
        bottom_63_V_read_ca_reg_4571 <= bottom_63_V_read_ca_fu_996_p1;
        bottom_6_V_read_cas_reg_4856 <= bottom_6_V_read_cas_fu_1224_p1;
        bottom_7_V_read_cas_reg_4851 <= bottom_7_V_read_cas_fu_1220_p1;
        bottom_8_V_read_cas_reg_4846 <= bottom_8_V_read_cas_fu_1216_p1;
        bottom_9_V_read_cas_reg_4841 <= bottom_9_V_read_cas_fu_1212_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cii_reg_4894 <= cii_fu_1258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln30_reg_5011 <= icmp_ln30_fu_4238_p2;
        icmp_ln30_reg_5011_pp1_iter1_reg <= icmp_ln30_reg_5011;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln30_fu_4238_p2 == 1'd0))) begin
        icmp_ln935_reg_5020 <= icmp_ln935_fu_4276_p2;
        icmp_ln958_reg_5046 <= icmp_ln958_fu_4448_p2;
        or_ln_reg_5041[0] <= or_ln_fu_4440_p3[0];
        p_Result_16_reg_5025 <= tmp_V_4_fu_4250_p12[32'd11];
        sub_ln944_reg_5035 <= sub_ln944_fu_4330_p2;
        tmp_V_5_reg_5030 <= tmp_V_5_fu_4296_p3;
        trunc_ln943_reg_5051 <= trunc_ln943_fu_4454_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln30_reg_5011 == 1'd0))) begin
        select_ln935_reg_5056 <= select_ln935_fu_4559_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_1252_p2 == 1'd0))) begin
        tmp_5_reg_4899 <= tmp_5_fu_1282_p66;
    end
end

always @ (*) begin
    if ((icmp_ln30_fu_4238_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (m_axi_top_BVALID == 1'b1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (m_axi_top_BVALID == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_0_ce0 = 1'b1;
    end else begin
        linear_weight_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_1_ce0 = 1'b1;
    end else begin
        linear_weight_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_2_ce0 = 1'b1;
    end else begin
        linear_weight_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_3_ce0 = 1'b1;
    end else begin
        linear_weight_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_4_ce0 = 1'b1;
    end else begin
        linear_weight_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_5_ce0 = 1'b1;
    end else begin
        linear_weight_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_6_ce0 = 1'b1;
    end else begin
        linear_weight_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_7_ce0 = 1'b1;
    end else begin
        linear_weight_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_8_ce0 = 1'b1;
    end else begin
        linear_weight_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        linear_weight_V_9_ce0 = 1'b1;
    end else begin
        linear_weight_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_top_AWVALID = 1'b1;
    end else begin
        m_axi_top_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (m_axi_top_BVALID == 1'b1))) begin
        m_axi_top_BREADY = 1'b1;
    end else begin
        m_axi_top_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln30_reg_5011_pp1_iter1_reg == 1'd0))) begin
        m_axi_top_WVALID = 1'b1;
    end else begin
        m_axi_top_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        top_blk_n_AW = m_axi_top_AWREADY;
    end else begin
        top_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        top_blk_n_B = m_axi_top_BVALID;
    end else begin
        top_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln30_reg_5011_pp1_iter1_reg == 1'd0))) begin
        top_blk_n_W = m_axi_top_WREADY;
    end else begin
        top_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_1252_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln30_fu_4238_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln30_fu_4238_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (m_axi_top_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_4394_p2 = (icmp_ln947_fu_4356_p2 & icmp_ln947_1_fu_4388_p2);

assign add_ln1192_31_fu_1686_p2 = ($signed(sext_ln728_1_fu_1674_p1) + $signed(sext_ln1118_1_fu_1662_p1));

assign add_ln1192_32_fu_1972_p2 = ($signed(sext_ln728_2_fu_1960_p1) + $signed(sext_ln1118_2_fu_1948_p1));

assign add_ln1192_33_fu_2258_p2 = ($signed(sext_ln728_3_fu_2246_p1) + $signed(sext_ln1118_3_fu_2234_p1));

assign add_ln1192_34_fu_2544_p2 = ($signed(sext_ln728_4_fu_2532_p1) + $signed(sext_ln1118_4_fu_2520_p1));

assign add_ln1192_35_fu_2830_p2 = ($signed(sext_ln728_5_fu_2818_p1) + $signed(sext_ln1118_5_fu_2806_p1));

assign add_ln1192_36_fu_3116_p2 = ($signed(sext_ln728_6_fu_3104_p1) + $signed(sext_ln1118_6_fu_3092_p1));

assign add_ln1192_37_fu_3402_p2 = ($signed(sext_ln728_7_fu_3390_p1) + $signed(sext_ln1118_7_fu_3378_p1));

assign add_ln1192_38_fu_3688_p2 = ($signed(sext_ln728_8_fu_3676_p1) + $signed(sext_ln1118_8_fu_3664_p1));

assign add_ln1192_39_fu_3974_p2 = ($signed(sext_ln728_9_fu_3962_p1) + $signed(sext_ln1118_9_fu_3950_p1));

assign add_ln1192_40_fu_1406_p2 = ($signed(trunc_ln1192_fu_1392_p1) + $signed(sext_ln1192_fu_1396_p1));

assign add_ln1192_41_fu_1692_p2 = ($signed(trunc_ln1192_1_fu_1678_p1) + $signed(sext_ln1192_1_fu_1682_p1));

assign add_ln1192_42_fu_1978_p2 = ($signed(trunc_ln1192_2_fu_1964_p1) + $signed(sext_ln1192_2_fu_1968_p1));

assign add_ln1192_43_fu_2264_p2 = ($signed(trunc_ln1192_3_fu_2250_p1) + $signed(sext_ln1192_3_fu_2254_p1));

assign add_ln1192_44_fu_2550_p2 = ($signed(trunc_ln1192_4_fu_2536_p1) + $signed(sext_ln1192_4_fu_2540_p1));

assign add_ln1192_45_fu_2836_p2 = ($signed(trunc_ln1192_5_fu_2822_p1) + $signed(sext_ln1192_5_fu_2826_p1));

assign add_ln1192_46_fu_3122_p2 = ($signed(trunc_ln1192_6_fu_3108_p1) + $signed(sext_ln1192_6_fu_3112_p1));

assign add_ln1192_47_fu_3408_p2 = ($signed(trunc_ln1192_7_fu_3394_p1) + $signed(sext_ln1192_7_fu_3398_p1));

assign add_ln1192_48_fu_3694_p2 = ($signed(trunc_ln1192_8_fu_3680_p1) + $signed(sext_ln1192_8_fu_3684_p1));

assign add_ln1192_49_fu_3980_p2 = ($signed(trunc_ln1192_9_fu_3966_p1) + $signed(sext_ln1192_9_fu_3970_p1));

assign add_ln1192_fu_1400_p2 = ($signed(sext_ln728_fu_1388_p1) + $signed(sext_ln1118_fu_1376_p1));

assign add_ln415_1_fu_1736_p2 = (zext_ln415_1_fu_1732_p1 + trunc_ln708_1_fu_1706_p4);

assign add_ln415_2_fu_2022_p2 = (zext_ln415_2_fu_2018_p1 + trunc_ln708_2_fu_1992_p4);

assign add_ln415_3_fu_2308_p2 = (zext_ln415_3_fu_2304_p1 + trunc_ln708_3_fu_2278_p4);

assign add_ln415_4_fu_2594_p2 = (zext_ln415_4_fu_2590_p1 + trunc_ln708_4_fu_2564_p4);

assign add_ln415_5_fu_2880_p2 = (zext_ln415_5_fu_2876_p1 + trunc_ln708_5_fu_2850_p4);

assign add_ln415_6_fu_3166_p2 = (zext_ln415_6_fu_3162_p1 + trunc_ln708_6_fu_3136_p4);

assign add_ln415_7_fu_3452_p2 = (zext_ln415_7_fu_3448_p1 + trunc_ln708_7_fu_3422_p4);

assign add_ln415_8_fu_3738_p2 = (zext_ln415_8_fu_3734_p1 + trunc_ln708_8_fu_3708_p4);

assign add_ln415_9_fu_4024_p2 = (zext_ln415_9_fu_4020_p1 + trunc_ln708_9_fu_3994_p4);

assign add_ln415_fu_1450_p2 = (zext_ln415_fu_1446_p1 + trunc_ln7_fu_1420_p4);

assign add_ln949_fu_4414_p2 = ($signed(12'd4072) + $signed(trunc_ln944_fu_4336_p1));

assign add_ln958_fu_4461_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_5035));

assign add_ln964_fu_4530_p2 = (select_ln964_fu_4517_p3 + sub_ln964_fu_4525_p2);

assign and_ln416_1_fu_1756_p2 = (xor_ln416_1_fu_1750_p2 & tmp_128_fu_1716_p3);

assign and_ln416_2_fu_2042_p2 = (xor_ln416_2_fu_2036_p2 & tmp_134_fu_2002_p3);

assign and_ln416_3_fu_2328_p2 = (xor_ln416_3_fu_2322_p2 & tmp_140_fu_2288_p3);

assign and_ln416_4_fu_2614_p2 = (xor_ln416_4_fu_2608_p2 & tmp_146_fu_2574_p3);

assign and_ln416_5_fu_2900_p2 = (xor_ln416_5_fu_2894_p2 & tmp_152_fu_2860_p3);

assign and_ln416_6_fu_3186_p2 = (xor_ln416_6_fu_3180_p2 & tmp_158_fu_3146_p3);

assign and_ln416_7_fu_3472_p2 = (xor_ln416_7_fu_3466_p2 & tmp_164_fu_3432_p3);

assign and_ln416_8_fu_3758_p2 = (xor_ln416_8_fu_3752_p2 & tmp_170_fu_3718_p3);

assign and_ln416_9_fu_4044_p2 = (xor_ln416_9_fu_4038_p2 & tmp_176_fu_4004_p3);

assign and_ln416_fu_1470_p2 = (xor_ln416_fu_1464_p2 & tmp_122_fu_1430_p3);

assign and_ln779_1_fu_1830_p2 = (xor_ln779_1_fu_1824_p2 & icmp_ln879_2_fu_1780_p2);

assign and_ln779_2_fu_2116_p2 = (xor_ln779_2_fu_2110_p2 & icmp_ln879_4_fu_2066_p2);

assign and_ln779_3_fu_2402_p2 = (xor_ln779_3_fu_2396_p2 & icmp_ln879_6_fu_2352_p2);

assign and_ln779_4_fu_2688_p2 = (xor_ln779_4_fu_2682_p2 & icmp_ln879_8_fu_2638_p2);

assign and_ln779_5_fu_2974_p2 = (xor_ln779_5_fu_2968_p2 & icmp_ln879_10_fu_2924_p2);

assign and_ln779_6_fu_3260_p2 = (xor_ln779_6_fu_3254_p2 & icmp_ln879_12_fu_3210_p2);

assign and_ln779_7_fu_3546_p2 = (xor_ln779_7_fu_3540_p2 & icmp_ln879_14_fu_3496_p2);

assign and_ln779_8_fu_3832_p2 = (xor_ln779_8_fu_3826_p2 & icmp_ln879_16_fu_3782_p2);

assign and_ln779_9_fu_4118_p2 = (xor_ln779_9_fu_4112_p2 & icmp_ln879_18_fu_4068_p2);

assign and_ln779_fu_1544_p2 = (xor_ln779_fu_1538_p2 & icmp_ln879_fu_1494_p2);

assign and_ln781_1_fu_1844_p2 = (icmp_ln879_3_fu_1796_p2 & and_ln416_1_fu_1756_p2);

assign and_ln781_2_fu_2130_p2 = (icmp_ln879_5_fu_2082_p2 & and_ln416_2_fu_2042_p2);

assign and_ln781_3_fu_2416_p2 = (icmp_ln879_7_fu_2368_p2 & and_ln416_3_fu_2328_p2);

assign and_ln781_4_fu_2702_p2 = (icmp_ln879_9_fu_2654_p2 & and_ln416_4_fu_2614_p2);

assign and_ln781_5_fu_2988_p2 = (icmp_ln879_11_fu_2940_p2 & and_ln416_5_fu_2900_p2);

assign and_ln781_6_fu_3274_p2 = (icmp_ln879_13_fu_3226_p2 & and_ln416_6_fu_3186_p2);

assign and_ln781_7_fu_3560_p2 = (icmp_ln879_15_fu_3512_p2 & and_ln416_7_fu_3472_p2);

assign and_ln781_8_fu_3846_p2 = (icmp_ln879_17_fu_3798_p2 & and_ln416_8_fu_3758_p2);

assign and_ln781_9_fu_4132_p2 = (icmp_ln879_19_fu_4084_p2 & and_ln416_9_fu_4044_p2);

assign and_ln781_fu_1558_p2 = (icmp_ln879_1_fu_1510_p2 & and_ln416_fu_1470_p2);

assign and_ln785_1_fu_1868_p2 = (xor_ln785_10_fu_1862_p2 & or_ln785_1_fu_1856_p2);

assign and_ln785_2_fu_2154_p2 = (xor_ln785_11_fu_2148_p2 & or_ln785_2_fu_2142_p2);

assign and_ln785_3_fu_2440_p2 = (xor_ln785_12_fu_2434_p2 & or_ln785_3_fu_2428_p2);

assign and_ln785_4_fu_2726_p2 = (xor_ln785_14_fu_2720_p2 & or_ln785_4_fu_2714_p2);

assign and_ln785_5_fu_3012_p2 = (xor_ln785_15_fu_3006_p2 & or_ln785_5_fu_3000_p2);

assign and_ln785_6_fu_3298_p2 = (xor_ln785_16_fu_3292_p2 & or_ln785_6_fu_3286_p2);

assign and_ln785_7_fu_3584_p2 = (xor_ln785_17_fu_3578_p2 & or_ln785_7_fu_3572_p2);

assign and_ln785_8_fu_3870_p2 = (xor_ln785_18_fu_3864_p2 & or_ln785_8_fu_3858_p2);

assign and_ln785_9_fu_4156_p2 = (xor_ln785_19_fu_4150_p2 & or_ln785_9_fu_4144_p2);

assign and_ln785_fu_1582_p2 = (xor_ln785_4_fu_1576_p2 & or_ln785_fu_1570_p2);

assign and_ln786_1_fu_1874_p2 = (tmp_131_fu_1762_p3 & select_ln416_1_fu_1836_p3);

assign and_ln786_2_fu_2160_p2 = (tmp_137_fu_2048_p3 & select_ln416_2_fu_2122_p3);

assign and_ln786_34_fu_1606_p2 = (xor_ln786_fu_1600_p2 & tmp_121_fu_1412_p3);

assign and_ln786_35_fu_1892_p2 = (xor_ln786_18_fu_1886_p2 & tmp_127_fu_1698_p3);

assign and_ln786_36_fu_2178_p2 = (xor_ln786_19_fu_2172_p2 & tmp_133_fu_1984_p3);

assign and_ln786_37_fu_2464_p2 = (xor_ln786_20_fu_2458_p2 & tmp_139_fu_2270_p3);

assign and_ln786_38_fu_2750_p2 = (xor_ln786_21_fu_2744_p2 & tmp_145_fu_2556_p3);

assign and_ln786_39_fu_3036_p2 = (xor_ln786_22_fu_3030_p2 & tmp_151_fu_2842_p3);

assign and_ln786_3_fu_2446_p2 = (tmp_143_fu_2334_p3 & select_ln416_3_fu_2408_p3);

assign and_ln786_40_fu_3322_p2 = (xor_ln786_23_fu_3316_p2 & tmp_157_fu_3128_p3);

assign and_ln786_41_fu_3608_p2 = (xor_ln786_24_fu_3602_p2 & tmp_163_fu_3414_p3);

assign and_ln786_42_fu_3894_p2 = (xor_ln786_25_fu_3888_p2 & tmp_169_fu_3700_p3);

assign and_ln786_43_fu_4180_p2 = (xor_ln786_26_fu_4174_p2 & tmp_175_fu_3986_p3);

assign and_ln786_4_fu_2732_p2 = (tmp_149_fu_2620_p3 & select_ln416_4_fu_2694_p3);

assign and_ln786_5_fu_3018_p2 = (tmp_155_fu_2906_p3 & select_ln416_5_fu_2980_p3);

assign and_ln786_6_fu_3304_p2 = (tmp_161_fu_3192_p3 & select_ln416_6_fu_3266_p3);

assign and_ln786_7_fu_3590_p2 = (tmp_167_fu_3478_p3 & select_ln416_7_fu_3552_p3);

assign and_ln786_8_fu_3876_p2 = (tmp_173_fu_3764_p3 & select_ln416_8_fu_3838_p3);

assign and_ln786_9_fu_4162_p2 = (tmp_179_fu_4050_p3 & select_ln416_9_fu_4124_p3);

assign and_ln786_fu_1588_p2 = (tmp_125_fu_1476_p3 & select_ln416_fu_1550_p3);

assign and_ln949_fu_4428_p2 = (xor_ln949_fu_4408_p2 & p_Result_3_fu_4420_p3);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_block_state7_io));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_block_state7_io));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_top_WREADY == 1'b0) & (icmp_ln30_reg_5011_pp1_iter1_reg == 1'd0));
end

assign ap_block_state7_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bitcast_ln739_fu_4555_p1 = p_Result_18_fu_4543_p5;

assign bottom_0_V_read_cas_fu_1248_p1 = $signed(bottom_0_V_read);

assign bottom_10_V_read_ca_fu_1208_p1 = $signed(bottom_10_V_read);

assign bottom_11_V_read_ca_fu_1204_p1 = $signed(bottom_11_V_read);

assign bottom_12_V_read_ca_fu_1200_p1 = $signed(bottom_12_V_read);

assign bottom_13_V_read_ca_fu_1196_p1 = $signed(bottom_13_V_read);

assign bottom_14_V_read_ca_fu_1192_p1 = $signed(bottom_14_V_read);

assign bottom_15_V_read_ca_fu_1188_p1 = $signed(bottom_15_V_read);

assign bottom_16_V_read_ca_fu_1184_p1 = $signed(bottom_16_V_read);

assign bottom_17_V_read_ca_fu_1180_p1 = $signed(bottom_17_V_read);

assign bottom_18_V_read_ca_fu_1176_p1 = $signed(bottom_18_V_read);

assign bottom_19_V_read_ca_fu_1172_p1 = $signed(bottom_19_V_read);

assign bottom_1_V_read_cas_fu_1244_p1 = $signed(bottom_1_V_read);

assign bottom_20_V_read_ca_fu_1168_p1 = $signed(bottom_20_V_read);

assign bottom_21_V_read_ca_fu_1164_p1 = $signed(bottom_21_V_read);

assign bottom_22_V_read_ca_fu_1160_p1 = $signed(bottom_22_V_read);

assign bottom_23_V_read_ca_fu_1156_p1 = $signed(bottom_23_V_read);

assign bottom_24_V_read_ca_fu_1152_p1 = $signed(bottom_24_V_read);

assign bottom_25_V_read_ca_fu_1148_p1 = $signed(bottom_25_V_read);

assign bottom_26_V_read_ca_fu_1144_p1 = $signed(bottom_26_V_read);

assign bottom_27_V_read_ca_fu_1140_p1 = $signed(bottom_27_V_read);

assign bottom_28_V_read_ca_fu_1136_p1 = $signed(bottom_28_V_read);

assign bottom_29_V_read_ca_fu_1132_p1 = $signed(bottom_29_V_read);

assign bottom_2_V_read_cas_fu_1240_p1 = $signed(bottom_2_V_read);

assign bottom_30_V_read_ca_fu_1128_p1 = $signed(bottom_30_V_read);

assign bottom_31_V_read_ca_fu_1124_p1 = $signed(bottom_31_V_read);

assign bottom_32_V_read_ca_fu_1120_p1 = $signed(bottom_32_V_read);

assign bottom_33_V_read_ca_fu_1116_p1 = $signed(bottom_33_V_read);

assign bottom_34_V_read_ca_fu_1112_p1 = $signed(bottom_34_V_read);

assign bottom_35_V_read_ca_fu_1108_p1 = $signed(bottom_35_V_read);

assign bottom_36_V_read_ca_fu_1104_p1 = $signed(bottom_36_V_read);

assign bottom_37_V_read_ca_fu_1100_p1 = $signed(bottom_37_V_read);

assign bottom_38_V_read_ca_fu_1096_p1 = $signed(bottom_38_V_read);

assign bottom_39_V_read_ca_fu_1092_p1 = $signed(bottom_39_V_read);

assign bottom_3_V_read_cas_fu_1236_p1 = $signed(bottom_3_V_read);

assign bottom_40_V_read_ca_fu_1088_p1 = $signed(bottom_40_V_read);

assign bottom_41_V_read_ca_fu_1084_p1 = $signed(bottom_41_V_read);

assign bottom_42_V_read_ca_fu_1080_p1 = $signed(bottom_42_V_read);

assign bottom_43_V_read_ca_fu_1076_p1 = $signed(bottom_43_V_read);

assign bottom_44_V_read_ca_fu_1072_p1 = $signed(bottom_44_V_read);

assign bottom_45_V_read_ca_fu_1068_p1 = $signed(bottom_45_V_read);

assign bottom_46_V_read_ca_fu_1064_p1 = $signed(bottom_46_V_read);

assign bottom_47_V_read_ca_fu_1060_p1 = $signed(bottom_47_V_read);

assign bottom_48_V_read_ca_fu_1056_p1 = $signed(bottom_48_V_read);

assign bottom_49_V_read_ca_fu_1052_p1 = $signed(bottom_49_V_read);

assign bottom_4_V_read_cas_fu_1232_p1 = $signed(bottom_4_V_read);

assign bottom_50_V_read_ca_fu_1048_p1 = $signed(bottom_50_V_read);

assign bottom_51_V_read_ca_fu_1044_p1 = $signed(bottom_51_V_read);

assign bottom_52_V_read_ca_fu_1040_p1 = $signed(bottom_52_V_read);

assign bottom_53_V_read_ca_fu_1036_p1 = $signed(bottom_53_V_read);

assign bottom_54_V_read_ca_fu_1032_p1 = $signed(bottom_54_V_read);

assign bottom_55_V_read_ca_fu_1028_p1 = $signed(bottom_55_V_read);

assign bottom_56_V_read_ca_fu_1024_p1 = $signed(bottom_56_V_read);

assign bottom_57_V_read_ca_fu_1020_p1 = $signed(bottom_57_V_read);

assign bottom_58_V_read_ca_fu_1016_p1 = $signed(bottom_58_V_read);

assign bottom_59_V_read_ca_fu_1012_p1 = $signed(bottom_59_V_read);

assign bottom_5_V_read_cas_fu_1228_p1 = $signed(bottom_5_V_read);

assign bottom_60_V_read_ca_fu_1008_p1 = $signed(bottom_60_V_read);

assign bottom_61_V_read_ca_fu_1004_p1 = $signed(bottom_61_V_read);

assign bottom_62_V_read_ca_fu_1000_p1 = $signed(bottom_62_V_read);

assign bottom_63_V_read_ca_fu_996_p1 = $signed(bottom_63_V_read);

assign bottom_6_V_read_cas_fu_1224_p1 = $signed(bottom_6_V_read);

assign bottom_7_V_read_cas_fu_1220_p1 = $signed(bottom_7_V_read);

assign bottom_8_V_read_cas_fu_1216_p1 = $signed(bottom_8_V_read);

assign bottom_9_V_read_cas_fu_1212_p1 = $signed(bottom_9_V_read);

assign buf_0_V_fu_1646_p3 = ((or_ln340_39_fu_1624_p2[0:0] === 1'b1) ? select_ln340_fu_1630_p3 : select_ln388_fu_1638_p3);

assign buf_1_V_fu_1932_p3 = ((or_ln340_41_fu_1910_p2[0:0] === 1'b1) ? select_ln340_1_fu_1916_p3 : select_ln388_1_fu_1924_p3);

assign buf_2_V_fu_2218_p3 = ((or_ln340_43_fu_2196_p2[0:0] === 1'b1) ? select_ln340_2_fu_2202_p3 : select_ln388_2_fu_2210_p3);

assign buf_3_V_fu_2504_p3 = ((or_ln340_45_fu_2482_p2[0:0] === 1'b1) ? select_ln340_3_fu_2488_p3 : select_ln388_3_fu_2496_p3);

assign buf_4_V_fu_2790_p3 = ((or_ln340_47_fu_2768_p2[0:0] === 1'b1) ? select_ln340_4_fu_2774_p3 : select_ln388_4_fu_2782_p3);

assign buf_5_V_fu_3076_p3 = ((or_ln340_49_fu_3054_p2[0:0] === 1'b1) ? select_ln340_5_fu_3060_p3 : select_ln388_5_fu_3068_p3);

assign buf_6_V_fu_3362_p3 = ((or_ln340_51_fu_3340_p2[0:0] === 1'b1) ? select_ln340_6_fu_3346_p3 : select_ln388_6_fu_3354_p3);

assign buf_7_V_fu_3648_p3 = ((or_ln340_53_fu_3626_p2[0:0] === 1'b1) ? select_ln340_7_fu_3632_p3 : select_ln388_7_fu_3640_p3);

assign buf_8_V_fu_3934_p3 = ((or_ln340_55_fu_3912_p2[0:0] === 1'b1) ? select_ln340_8_fu_3918_p3 : select_ln388_8_fu_3926_p3);

assign buf_9_V_fu_4220_p3 = ((or_ln340_58_fu_4198_p2[0:0] === 1'b1) ? select_ln340_9_fu_4204_p3 : select_ln388_9_fu_4212_p3);

assign cii_fu_1258_p2 = (cii_0_reg_974 + 7'd1);

assign coo_fu_4244_p2 = (coo2_0_reg_985 + 4'd1);

assign icmp_ln23_fu_1252_p2 = ((cii_0_reg_974 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_4238_p2 = ((coo2_0_reg_985 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln768_1_fu_1802_p2 = ((tmp_1_fu_1786_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_2_fu_2088_p2 = ((tmp_3_fu_2072_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_3_fu_2374_p2 = ((tmp_10_fu_2358_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_4_fu_2660_p2 = ((tmp_12_fu_2644_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_5_fu_2946_p2 = ((tmp_14_fu_2930_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_6_fu_3232_p2 = ((tmp_16_fu_3216_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_7_fu_3518_p2 = ((tmp_18_fu_3502_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_8_fu_3804_p2 = ((tmp_20_fu_3788_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_9_fu_4090_p2 = ((tmp_22_fu_4074_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_1516_p2 = ((tmp_8_fu_1500_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_10_fu_2924_p2 = ((tmp_13_fu_2914_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_11_fu_2940_p2 = ((tmp_14_fu_2930_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_12_fu_3210_p2 = ((tmp_15_fu_3200_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_13_fu_3226_p2 = ((tmp_16_fu_3216_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_14_fu_3496_p2 = ((tmp_17_fu_3486_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_15_fu_3512_p2 = ((tmp_18_fu_3502_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_16_fu_3782_p2 = ((tmp_19_fu_3772_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_17_fu_3798_p2 = ((tmp_20_fu_3788_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_18_fu_4068_p2 = ((tmp_21_fu_4058_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_19_fu_4084_p2 = ((tmp_22_fu_4074_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_1510_p2 = ((tmp_8_fu_1500_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_1780_p2 = ((tmp_9_fu_1770_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_1796_p2 = ((tmp_1_fu_1786_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_2066_p2 = ((tmp_2_fu_2056_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_2082_p2 = ((tmp_3_fu_2072_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_6_fu_2352_p2 = ((tmp_4_fu_2342_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_7_fu_2368_p2 = ((tmp_10_fu_2358_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_8_fu_2638_p2 = ((tmp_11_fu_2628_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_9_fu_2654_p2 = ((tmp_12_fu_2644_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_1494_p2 = ((tmp_6_fu_1484_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_4276_p2 = ((tmp_V_4_fu_4250_p12 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_4388_p2 = ((p_Result_14_fu_4382_p2 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_4356_p2 = (($signed(tmp_182_fu_4346_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_4448_p2 = (($signed(lsb_index_fu_4340_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (p_Result_17_fu_4314_p3) begin
    if (p_Result_17_fu_4314_p3[0] == 1'b1) begin
        l_fu_4322_p3 = 32'd0;
    end else if (p_Result_17_fu_4314_p3[1] == 1'b1) begin
        l_fu_4322_p3 = 32'd1;
    end else if (p_Result_17_fu_4314_p3[2] == 1'b1) begin
        l_fu_4322_p3 = 32'd2;
    end else if (p_Result_17_fu_4314_p3[3] == 1'b1) begin
        l_fu_4322_p3 = 32'd3;
    end else if (p_Result_17_fu_4314_p3[4] == 1'b1) begin
        l_fu_4322_p3 = 32'd4;
    end else if (p_Result_17_fu_4314_p3[5] == 1'b1) begin
        l_fu_4322_p3 = 32'd5;
    end else if (p_Result_17_fu_4314_p3[6] == 1'b1) begin
        l_fu_4322_p3 = 32'd6;
    end else if (p_Result_17_fu_4314_p3[7] == 1'b1) begin
        l_fu_4322_p3 = 32'd7;
    end else if (p_Result_17_fu_4314_p3[8] == 1'b1) begin
        l_fu_4322_p3 = 32'd8;
    end else if (p_Result_17_fu_4314_p3[9] == 1'b1) begin
        l_fu_4322_p3 = 32'd9;
    end else if (p_Result_17_fu_4314_p3[10] == 1'b1) begin
        l_fu_4322_p3 = 32'd10;
    end else if (p_Result_17_fu_4314_p3[11] == 1'b1) begin
        l_fu_4322_p3 = 32'd11;
    end else if (p_Result_17_fu_4314_p3[12] == 1'b1) begin
        l_fu_4322_p3 = 32'd12;
    end else if (p_Result_17_fu_4314_p3[13] == 1'b1) begin
        l_fu_4322_p3 = 32'd13;
    end else if (p_Result_17_fu_4314_p3[14] == 1'b1) begin
        l_fu_4322_p3 = 32'd14;
    end else if (p_Result_17_fu_4314_p3[15] == 1'b1) begin
        l_fu_4322_p3 = 32'd15;
    end else if (p_Result_17_fu_4314_p3[16] == 1'b1) begin
        l_fu_4322_p3 = 32'd16;
    end else if (p_Result_17_fu_4314_p3[17] == 1'b1) begin
        l_fu_4322_p3 = 32'd17;
    end else if (p_Result_17_fu_4314_p3[18] == 1'b1) begin
        l_fu_4322_p3 = 32'd18;
    end else if (p_Result_17_fu_4314_p3[19] == 1'b1) begin
        l_fu_4322_p3 = 32'd19;
    end else if (p_Result_17_fu_4314_p3[20] == 1'b1) begin
        l_fu_4322_p3 = 32'd20;
    end else if (p_Result_17_fu_4314_p3[21] == 1'b1) begin
        l_fu_4322_p3 = 32'd21;
    end else if (p_Result_17_fu_4314_p3[22] == 1'b1) begin
        l_fu_4322_p3 = 32'd22;
    end else if (p_Result_17_fu_4314_p3[23] == 1'b1) begin
        l_fu_4322_p3 = 32'd23;
    end else if (p_Result_17_fu_4314_p3[24] == 1'b1) begin
        l_fu_4322_p3 = 32'd24;
    end else if (p_Result_17_fu_4314_p3[25] == 1'b1) begin
        l_fu_4322_p3 = 32'd25;
    end else if (p_Result_17_fu_4314_p3[26] == 1'b1) begin
        l_fu_4322_p3 = 32'd26;
    end else if (p_Result_17_fu_4314_p3[27] == 1'b1) begin
        l_fu_4322_p3 = 32'd27;
    end else if (p_Result_17_fu_4314_p3[28] == 1'b1) begin
        l_fu_4322_p3 = 32'd28;
    end else if (p_Result_17_fu_4314_p3[29] == 1'b1) begin
        l_fu_4322_p3 = 32'd29;
    end else if (p_Result_17_fu_4314_p3[30] == 1'b1) begin
        l_fu_4322_p3 = 32'd30;
    end else if (p_Result_17_fu_4314_p3[31] == 1'b1) begin
        l_fu_4322_p3 = 32'd31;
    end else begin
        l_fu_4322_p3 = 32'd32;
    end
end

assign linear_weight_V_0_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_1_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_2_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_3_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_4_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_5_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_6_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_7_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_8_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_9_address0 = zext_ln27_fu_1264_p1;

assign lsb_index_fu_4340_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_4330_p2));

assign lshr_ln947_fu_4376_p2 = 12'd4095 >> zext_ln947_fu_4372_p1;

assign lshr_ln958_fu_4466_p2 = m_fu_4458_p1 >> add_ln958_fu_4461_p2;

assign m_1_fu_4483_p3 = ((icmp_ln958_reg_5046[0:0] === 1'b1) ? lshr_ln958_fu_4466_p2 : shl_ln958_fu_4477_p2);

assign m_2_fu_4490_p2 = (m_1_fu_4483_p3 + or_ln_reg_5041);

assign m_5_fu_4495_p4 = {{m_2_fu_4490_p2[31:1]}};

assign m_6_fu_4505_p1 = m_5_fu_4495_p4;

assign m_axi_top_ARADDR = 32'd0;

assign m_axi_top_ARBURST = 2'd0;

assign m_axi_top_ARCACHE = 4'd0;

assign m_axi_top_ARID = 1'd0;

assign m_axi_top_ARLEN = 32'd0;

assign m_axi_top_ARLOCK = 2'd0;

assign m_axi_top_ARPROT = 3'd0;

assign m_axi_top_ARQOS = 4'd0;

assign m_axi_top_ARREGION = 4'd0;

assign m_axi_top_ARSIZE = 3'd0;

assign m_axi_top_ARUSER = 1'd0;

assign m_axi_top_ARVALID = 1'b0;

assign m_axi_top_AWADDR = zext_ln32_fu_4228_p1;

assign m_axi_top_AWBURST = 2'd0;

assign m_axi_top_AWCACHE = 4'd0;

assign m_axi_top_AWID = 1'd0;

assign m_axi_top_AWLEN = 32'd10;

assign m_axi_top_AWLOCK = 2'd0;

assign m_axi_top_AWPROT = 3'd0;

assign m_axi_top_AWQOS = 4'd0;

assign m_axi_top_AWREGION = 4'd0;

assign m_axi_top_AWSIZE = 3'd0;

assign m_axi_top_AWUSER = 1'd0;

assign m_axi_top_RREADY = 1'b0;

assign m_axi_top_WDATA = select_ln935_reg_5056;

assign m_axi_top_WID = 1'd0;

assign m_axi_top_WLAST = 1'b0;

assign m_axi_top_WSTRB = 4'd15;

assign m_axi_top_WUSER = 1'd0;

assign m_fu_4458_p1 = tmp_V_5_reg_5030;

assign or_ln340_1_fu_1898_p2 = (and_ln786_35_fu_1892_p2 | and_ln785_1_fu_1868_p2);

assign or_ln340_2_fu_2184_p2 = (and_ln786_36_fu_2178_p2 | and_ln785_2_fu_2154_p2);

assign or_ln340_38_fu_1618_p2 = (xor_ln785_4_fu_1576_p2 | and_ln786_fu_1588_p2);

assign or_ln340_39_fu_1624_p2 = (or_ln340_38_fu_1618_p2 | and_ln781_fu_1558_p2);

assign or_ln340_3_fu_2470_p2 = (and_ln786_37_fu_2464_p2 | and_ln785_3_fu_2440_p2);

assign or_ln340_40_fu_1904_p2 = (xor_ln785_10_fu_1862_p2 | and_ln786_1_fu_1874_p2);

assign or_ln340_41_fu_1910_p2 = (or_ln340_40_fu_1904_p2 | and_ln781_1_fu_1844_p2);

assign or_ln340_42_fu_2190_p2 = (xor_ln785_11_fu_2148_p2 | and_ln786_2_fu_2160_p2);

assign or_ln340_43_fu_2196_p2 = (or_ln340_42_fu_2190_p2 | and_ln781_2_fu_2130_p2);

assign or_ln340_44_fu_2476_p2 = (xor_ln785_12_fu_2434_p2 | and_ln786_3_fu_2446_p2);

assign or_ln340_45_fu_2482_p2 = (or_ln340_44_fu_2476_p2 | and_ln781_3_fu_2416_p2);

assign or_ln340_46_fu_2762_p2 = (xor_ln785_14_fu_2720_p2 | and_ln786_4_fu_2732_p2);

assign or_ln340_47_fu_2768_p2 = (or_ln340_46_fu_2762_p2 | and_ln781_4_fu_2702_p2);

assign or_ln340_48_fu_3048_p2 = (xor_ln785_15_fu_3006_p2 | and_ln786_5_fu_3018_p2);

assign or_ln340_49_fu_3054_p2 = (or_ln340_48_fu_3048_p2 | and_ln781_5_fu_2988_p2);

assign or_ln340_4_fu_2756_p2 = (and_ln786_38_fu_2750_p2 | and_ln785_4_fu_2726_p2);

assign or_ln340_50_fu_3334_p2 = (xor_ln785_16_fu_3292_p2 | and_ln786_6_fu_3304_p2);

assign or_ln340_51_fu_3340_p2 = (or_ln340_50_fu_3334_p2 | and_ln781_6_fu_3274_p2);

assign or_ln340_52_fu_3620_p2 = (xor_ln785_17_fu_3578_p2 | and_ln786_7_fu_3590_p2);

assign or_ln340_53_fu_3626_p2 = (or_ln340_52_fu_3620_p2 | and_ln781_7_fu_3560_p2);

assign or_ln340_54_fu_3906_p2 = (xor_ln785_18_fu_3864_p2 | and_ln786_8_fu_3876_p2);

assign or_ln340_55_fu_3912_p2 = (or_ln340_54_fu_3906_p2 | and_ln781_8_fu_3846_p2);

assign or_ln340_56_fu_4186_p2 = (and_ln786_43_fu_4180_p2 | and_ln785_9_fu_4156_p2);

assign or_ln340_57_fu_4192_p2 = (xor_ln785_19_fu_4150_p2 | and_ln786_9_fu_4162_p2);

assign or_ln340_58_fu_4198_p2 = (or_ln340_57_fu_4192_p2 | and_ln781_9_fu_4132_p2);

assign or_ln340_5_fu_3042_p2 = (and_ln786_39_fu_3036_p2 | and_ln785_5_fu_3012_p2);

assign or_ln340_6_fu_3328_p2 = (and_ln786_40_fu_3322_p2 | and_ln785_6_fu_3298_p2);

assign or_ln340_7_fu_3614_p2 = (and_ln786_41_fu_3608_p2 | and_ln785_7_fu_3584_p2);

assign or_ln340_8_fu_3900_p2 = (and_ln786_42_fu_3894_p2 | and_ln785_8_fu_3870_p2);

assign or_ln340_fu_1612_p2 = (and_ln786_34_fu_1606_p2 | and_ln785_fu_1582_p2);

assign or_ln785_1_fu_1856_p2 = (xor_ln785_1_fu_1850_p2 | tmp_131_fu_1762_p3);

assign or_ln785_2_fu_2142_p2 = (xor_ln785_2_fu_2136_p2 | tmp_137_fu_2048_p3);

assign or_ln785_3_fu_2428_p2 = (xor_ln785_3_fu_2422_p2 | tmp_143_fu_2334_p3);

assign or_ln785_4_fu_2714_p2 = (xor_ln785_13_fu_2708_p2 | tmp_149_fu_2620_p3);

assign or_ln785_5_fu_3000_p2 = (xor_ln785_5_fu_2994_p2 | tmp_155_fu_2906_p3);

assign or_ln785_6_fu_3286_p2 = (xor_ln785_6_fu_3280_p2 | tmp_161_fu_3192_p3);

assign or_ln785_7_fu_3572_p2 = (xor_ln785_7_fu_3566_p2 | tmp_167_fu_3478_p3);

assign or_ln785_8_fu_3858_p2 = (xor_ln785_8_fu_3852_p2 | tmp_173_fu_3764_p3);

assign or_ln785_9_fu_4144_p2 = (xor_ln785_9_fu_4138_p2 | tmp_179_fu_4050_p3);

assign or_ln785_fu_1570_p2 = (xor_ln785_fu_1564_p2 | tmp_125_fu_1476_p3);

assign or_ln786_1_fu_1880_p2 = (and_ln786_1_fu_1874_p2 | and_ln781_1_fu_1844_p2);

assign or_ln786_2_fu_2166_p2 = (and_ln786_2_fu_2160_p2 | and_ln781_2_fu_2130_p2);

assign or_ln786_3_fu_2452_p2 = (and_ln786_3_fu_2446_p2 | and_ln781_3_fu_2416_p2);

assign or_ln786_4_fu_2738_p2 = (and_ln786_4_fu_2732_p2 | and_ln781_4_fu_2702_p2);

assign or_ln786_5_fu_3024_p2 = (and_ln786_5_fu_3018_p2 | and_ln781_5_fu_2988_p2);

assign or_ln786_6_fu_3310_p2 = (and_ln786_6_fu_3304_p2 | and_ln781_6_fu_3274_p2);

assign or_ln786_7_fu_3596_p2 = (and_ln786_7_fu_3590_p2 | and_ln781_7_fu_3560_p2);

assign or_ln786_8_fu_3882_p2 = (and_ln786_8_fu_3876_p2 | and_ln781_8_fu_3846_p2);

assign or_ln786_9_fu_4168_p2 = (and_ln786_9_fu_4162_p2 | and_ln781_9_fu_4132_p2);

assign or_ln786_fu_1594_p2 = (and_ln786_fu_1588_p2 | and_ln781_fu_1558_p2);

assign or_ln949_fu_4434_p2 = (and_ln949_fu_4428_p2 | a_fu_4394_p2);

assign or_ln_fu_4440_p3 = {{31'd0}, {or_ln949_fu_4434_p2}};

assign p_Result_14_fu_4382_p2 = (tmp_V_5_fu_4296_p3 & lshr_ln947_fu_4376_p2);

assign p_Result_16_fu_4282_p3 = tmp_V_4_fu_4250_p12[32'd11];

assign p_Result_17_fu_4314_p3 = {{20'd1048575}, {p_Result_s_fu_4304_p4}};

assign p_Result_18_fu_4543_p5 = {{tmp_s_fu_4536_p3}, {m_6_fu_4505_p1[22:0]}};

assign p_Result_3_fu_4420_p3 = tmp_V_5_fu_4296_p3[add_ln949_fu_4414_p2];

integer ap_tvar_int_0;

always @ (tmp_V_5_fu_4296_p3) begin
    for (ap_tvar_int_0 = 12 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 11 - 0) begin
            p_Result_s_fu_4304_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_4304_p4[ap_tvar_int_0] = tmp_V_5_fu_4296_p3[11 - ap_tvar_int_0];
        end
    end
end

assign select_ln1118_1_fu_1654_p3 = ((linear_weight_V_1_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_2_fu_1940_p3 = ((linear_weight_V_2_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_3_fu_2226_p3 = ((linear_weight_V_3_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_4_fu_2512_p3 = ((linear_weight_V_4_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_5_fu_2798_p3 = ((linear_weight_V_5_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_6_fu_3084_p3 = ((linear_weight_V_6_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_7_fu_3370_p3 = ((linear_weight_V_7_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_8_fu_3656_p3 = ((linear_weight_V_8_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_9_fu_3942_p3 = ((linear_weight_V_9_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_fu_1368_p3 = ((linear_weight_V_0_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln340_1_fu_1916_p3 = ((or_ln340_1_fu_1898_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_1_fu_1736_p2);

assign select_ln340_2_fu_2202_p3 = ((or_ln340_2_fu_2184_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_2_fu_2022_p2);

assign select_ln340_3_fu_2488_p3 = ((or_ln340_3_fu_2470_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_3_fu_2308_p2);

assign select_ln340_4_fu_2774_p3 = ((or_ln340_4_fu_2756_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_4_fu_2594_p2);

assign select_ln340_5_fu_3060_p3 = ((or_ln340_5_fu_3042_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_5_fu_2880_p2);

assign select_ln340_6_fu_3346_p3 = ((or_ln340_6_fu_3328_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_6_fu_3166_p2);

assign select_ln340_7_fu_3632_p3 = ((or_ln340_7_fu_3614_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_7_fu_3452_p2);

assign select_ln340_8_fu_3918_p3 = ((or_ln340_8_fu_3900_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_8_fu_3738_p2);

assign select_ln340_9_fu_4204_p3 = ((or_ln340_56_fu_4186_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_9_fu_4024_p2);

assign select_ln340_fu_1630_p3 = ((or_ln340_fu_1612_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_fu_1450_p2);

assign select_ln388_1_fu_1924_p3 = ((and_ln786_35_fu_1892_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_1_fu_1736_p2);

assign select_ln388_2_fu_2210_p3 = ((and_ln786_36_fu_2178_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_2_fu_2022_p2);

assign select_ln388_3_fu_2496_p3 = ((and_ln786_37_fu_2464_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_3_fu_2308_p2);

assign select_ln388_4_fu_2782_p3 = ((and_ln786_38_fu_2750_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_4_fu_2594_p2);

assign select_ln388_5_fu_3068_p3 = ((and_ln786_39_fu_3036_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_5_fu_2880_p2);

assign select_ln388_6_fu_3354_p3 = ((and_ln786_40_fu_3322_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_6_fu_3166_p2);

assign select_ln388_7_fu_3640_p3 = ((and_ln786_41_fu_3608_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_7_fu_3452_p2);

assign select_ln388_8_fu_3926_p3 = ((and_ln786_42_fu_3894_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_8_fu_3738_p2);

assign select_ln388_9_fu_4212_p3 = ((and_ln786_43_fu_4180_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_9_fu_4024_p2);

assign select_ln388_fu_1638_p3 = ((and_ln786_34_fu_1606_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_fu_1450_p2);

assign select_ln416_1_fu_1836_p3 = ((and_ln416_1_fu_1756_p2[0:0] === 1'b1) ? and_ln779_1_fu_1830_p2 : icmp_ln879_3_fu_1796_p2);

assign select_ln416_2_fu_2122_p3 = ((and_ln416_2_fu_2042_p2[0:0] === 1'b1) ? and_ln779_2_fu_2116_p2 : icmp_ln879_5_fu_2082_p2);

assign select_ln416_3_fu_2408_p3 = ((and_ln416_3_fu_2328_p2[0:0] === 1'b1) ? and_ln779_3_fu_2402_p2 : icmp_ln879_7_fu_2368_p2);

assign select_ln416_4_fu_2694_p3 = ((and_ln416_4_fu_2614_p2[0:0] === 1'b1) ? and_ln779_4_fu_2688_p2 : icmp_ln879_9_fu_2654_p2);

assign select_ln416_5_fu_2980_p3 = ((and_ln416_5_fu_2900_p2[0:0] === 1'b1) ? and_ln779_5_fu_2974_p2 : icmp_ln879_11_fu_2940_p2);

assign select_ln416_6_fu_3266_p3 = ((and_ln416_6_fu_3186_p2[0:0] === 1'b1) ? and_ln779_6_fu_3260_p2 : icmp_ln879_13_fu_3226_p2);

assign select_ln416_7_fu_3552_p3 = ((and_ln416_7_fu_3472_p2[0:0] === 1'b1) ? and_ln779_7_fu_3546_p2 : icmp_ln879_15_fu_3512_p2);

assign select_ln416_8_fu_3838_p3 = ((and_ln416_8_fu_3758_p2[0:0] === 1'b1) ? and_ln779_8_fu_3832_p2 : icmp_ln879_17_fu_3798_p2);

assign select_ln416_9_fu_4124_p3 = ((and_ln416_9_fu_4044_p2[0:0] === 1'b1) ? and_ln779_9_fu_4118_p2 : icmp_ln879_19_fu_4084_p2);

assign select_ln416_fu_1550_p3 = ((and_ln416_fu_1470_p2[0:0] === 1'b1) ? and_ln779_fu_1544_p2 : icmp_ln879_1_fu_1510_p2);

assign select_ln777_1_fu_1808_p3 = ((and_ln416_1_fu_1756_p2[0:0] === 1'b1) ? icmp_ln879_3_fu_1796_p2 : icmp_ln768_1_fu_1802_p2);

assign select_ln777_2_fu_2094_p3 = ((and_ln416_2_fu_2042_p2[0:0] === 1'b1) ? icmp_ln879_5_fu_2082_p2 : icmp_ln768_2_fu_2088_p2);

assign select_ln777_3_fu_2380_p3 = ((and_ln416_3_fu_2328_p2[0:0] === 1'b1) ? icmp_ln879_7_fu_2368_p2 : icmp_ln768_3_fu_2374_p2);

assign select_ln777_4_fu_2666_p3 = ((and_ln416_4_fu_2614_p2[0:0] === 1'b1) ? icmp_ln879_9_fu_2654_p2 : icmp_ln768_4_fu_2660_p2);

assign select_ln777_5_fu_2952_p3 = ((and_ln416_5_fu_2900_p2[0:0] === 1'b1) ? icmp_ln879_11_fu_2940_p2 : icmp_ln768_5_fu_2946_p2);

assign select_ln777_6_fu_3238_p3 = ((and_ln416_6_fu_3186_p2[0:0] === 1'b1) ? icmp_ln879_13_fu_3226_p2 : icmp_ln768_6_fu_3232_p2);

assign select_ln777_7_fu_3524_p3 = ((and_ln416_7_fu_3472_p2[0:0] === 1'b1) ? icmp_ln879_15_fu_3512_p2 : icmp_ln768_7_fu_3518_p2);

assign select_ln777_8_fu_3810_p3 = ((and_ln416_8_fu_3758_p2[0:0] === 1'b1) ? icmp_ln879_17_fu_3798_p2 : icmp_ln768_8_fu_3804_p2);

assign select_ln777_9_fu_4096_p3 = ((and_ln416_9_fu_4044_p2[0:0] === 1'b1) ? icmp_ln879_19_fu_4084_p2 : icmp_ln768_9_fu_4090_p2);

assign select_ln777_fu_1522_p3 = ((and_ln416_fu_1470_p2[0:0] === 1'b1) ? icmp_ln879_1_fu_1510_p2 : icmp_ln768_fu_1516_p2);

assign select_ln935_fu_4559_p3 = ((icmp_ln935_reg_5020[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_4555_p1);

assign select_ln964_fu_4517_p3 = ((tmp_184_fu_4509_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln1117_fu_1352_p1 = tmp_5_reg_4899;

assign sext_ln1118_1_fu_1662_p1 = select_ln1118_1_fu_1654_p3;

assign sext_ln1118_2_fu_1948_p1 = select_ln1118_2_fu_1940_p3;

assign sext_ln1118_3_fu_2234_p1 = select_ln1118_3_fu_2226_p3;

assign sext_ln1118_4_fu_2520_p1 = select_ln1118_4_fu_2512_p3;

assign sext_ln1118_5_fu_2806_p1 = select_ln1118_5_fu_2798_p3;

assign sext_ln1118_6_fu_3092_p1 = select_ln1118_6_fu_3084_p3;

assign sext_ln1118_7_fu_3378_p1 = select_ln1118_7_fu_3370_p3;

assign sext_ln1118_8_fu_3664_p1 = select_ln1118_8_fu_3656_p3;

assign sext_ln1118_9_fu_3950_p1 = select_ln1118_9_fu_3942_p3;

assign sext_ln1118_fu_1376_p1 = select_ln1118_fu_1368_p3;

assign sext_ln1192_1_fu_1682_p1 = shl_ln728_s_fu_1666_p3;

assign sext_ln1192_2_fu_1968_p1 = shl_ln728_1_fu_1952_p3;

assign sext_ln1192_3_fu_2254_p1 = shl_ln728_2_fu_2238_p3;

assign sext_ln1192_4_fu_2540_p1 = shl_ln728_3_fu_2524_p3;

assign sext_ln1192_5_fu_2826_p1 = shl_ln728_4_fu_2810_p3;

assign sext_ln1192_6_fu_3112_p1 = shl_ln728_5_fu_3096_p3;

assign sext_ln1192_7_fu_3398_p1 = shl_ln728_6_fu_3382_p3;

assign sext_ln1192_8_fu_3684_p1 = shl_ln728_7_fu_3668_p3;

assign sext_ln1192_9_fu_3970_p1 = shl_ln728_8_fu_3954_p3;

assign sext_ln1192_fu_1396_p1 = shl_ln1_fu_1380_p3;

assign sext_ln728_1_fu_1674_p1 = shl_ln728_s_fu_1666_p3;

assign sext_ln728_2_fu_1960_p1 = shl_ln728_1_fu_1952_p3;

assign sext_ln728_3_fu_2246_p1 = shl_ln728_2_fu_2238_p3;

assign sext_ln728_4_fu_2532_p1 = shl_ln728_3_fu_2524_p3;

assign sext_ln728_5_fu_2818_p1 = shl_ln728_4_fu_2810_p3;

assign sext_ln728_6_fu_3104_p1 = shl_ln728_5_fu_3096_p3;

assign sext_ln728_7_fu_3390_p1 = shl_ln728_6_fu_3382_p3;

assign sext_ln728_8_fu_3676_p1 = shl_ln728_7_fu_3668_p3;

assign sext_ln728_9_fu_3962_p1 = shl_ln728_8_fu_3954_p3;

assign sext_ln728_fu_1388_p1 = shl_ln1_fu_1380_p3;

assign shl_ln1_fu_1380_p3 = {{buf_0_V_0_reg_962}, {7'd0}};

assign shl_ln728_1_fu_1952_p3 = {{buf_2_V_0_reg_938}, {7'd0}};

assign shl_ln728_2_fu_2238_p3 = {{buf_3_V_0_reg_926}, {7'd0}};

assign shl_ln728_3_fu_2524_p3 = {{buf_4_V_0_reg_914}, {7'd0}};

assign shl_ln728_4_fu_2810_p3 = {{buf_5_V_0_reg_902}, {7'd0}};

assign shl_ln728_5_fu_3096_p3 = {{buf_6_V_0_reg_890}, {7'd0}};

assign shl_ln728_6_fu_3382_p3 = {{buf_7_V_0_reg_878}, {7'd0}};

assign shl_ln728_7_fu_3668_p3 = {{buf_8_V_0_reg_866}, {7'd0}};

assign shl_ln728_8_fu_3954_p3 = {{buf_9_V_0_reg_854}, {7'd0}};

assign shl_ln728_s_fu_1666_p3 = {{buf_1_V_0_reg_950}, {7'd0}};

assign shl_ln958_fu_4477_p2 = m_fu_4458_p1 << sub_ln958_fu_4472_p2;

assign shl_ln_fu_1355_p3 = {{tmp_5_reg_4899}, {10'd0}};

assign sub_ln1118_fu_1362_p2 = ($signed(shl_ln_fu_1355_p3) - $signed(sext_ln1117_fu_1352_p1));

assign sub_ln944_fu_4330_p2 = (32'd12 - l_fu_4322_p3);

assign sub_ln947_fu_4366_p2 = (4'd5 - trunc_ln947_fu_4362_p1);

assign sub_ln958_fu_4472_p2 = (32'd25 - sub_ln944_reg_5035);

assign sub_ln964_fu_4525_p2 = (8'd4 - trunc_ln943_reg_5051);

assign tmp_10_fu_2358_p4 = {{add_ln1192_33_fu_2258_p2[22:19]}};

assign tmp_11_fu_2628_p4 = {{add_ln1192_34_fu_2544_p2[22:20]}};

assign tmp_121_fu_1412_p3 = add_ln1192_fu_1400_p2[32'd22];

assign tmp_122_fu_1430_p3 = add_ln1192_fu_1400_p2[32'd18];

assign tmp_123_fu_1438_p3 = add_ln1192_fu_1400_p2[32'd6];

assign tmp_124_fu_1456_p3 = add_ln415_fu_1450_p2[32'd11];

assign tmp_125_fu_1476_p3 = add_ln415_fu_1450_p2[32'd11];

assign tmp_126_fu_1530_p3 = add_ln1192_40_fu_1406_p2[32'd19];

assign tmp_127_fu_1698_p3 = add_ln1192_31_fu_1686_p2[32'd22];

assign tmp_128_fu_1716_p3 = add_ln1192_31_fu_1686_p2[32'd18];

assign tmp_129_fu_1724_p3 = add_ln1192_31_fu_1686_p2[32'd6];

assign tmp_12_fu_2644_p4 = {{add_ln1192_34_fu_2544_p2[22:19]}};

assign tmp_130_fu_1742_p3 = add_ln415_1_fu_1736_p2[32'd11];

assign tmp_131_fu_1762_p3 = add_ln415_1_fu_1736_p2[32'd11];

assign tmp_132_fu_1816_p3 = add_ln1192_41_fu_1692_p2[32'd19];

assign tmp_133_fu_1984_p3 = add_ln1192_32_fu_1972_p2[32'd22];

assign tmp_134_fu_2002_p3 = add_ln1192_32_fu_1972_p2[32'd18];

assign tmp_135_fu_2010_p3 = add_ln1192_32_fu_1972_p2[32'd6];

assign tmp_136_fu_2028_p3 = add_ln415_2_fu_2022_p2[32'd11];

assign tmp_137_fu_2048_p3 = add_ln415_2_fu_2022_p2[32'd11];

assign tmp_138_fu_2102_p3 = add_ln1192_42_fu_1978_p2[32'd19];

assign tmp_139_fu_2270_p3 = add_ln1192_33_fu_2258_p2[32'd22];

assign tmp_13_fu_2914_p4 = {{add_ln1192_35_fu_2830_p2[22:20]}};

assign tmp_140_fu_2288_p3 = add_ln1192_33_fu_2258_p2[32'd18];

assign tmp_141_fu_2296_p3 = add_ln1192_33_fu_2258_p2[32'd6];

assign tmp_142_fu_2314_p3 = add_ln415_3_fu_2308_p2[32'd11];

assign tmp_143_fu_2334_p3 = add_ln415_3_fu_2308_p2[32'd11];

assign tmp_144_fu_2388_p3 = add_ln1192_43_fu_2264_p2[32'd19];

assign tmp_145_fu_2556_p3 = add_ln1192_34_fu_2544_p2[32'd22];

assign tmp_146_fu_2574_p3 = add_ln1192_34_fu_2544_p2[32'd18];

assign tmp_147_fu_2582_p3 = add_ln1192_34_fu_2544_p2[32'd6];

assign tmp_148_fu_2600_p3 = add_ln415_4_fu_2594_p2[32'd11];

assign tmp_149_fu_2620_p3 = add_ln415_4_fu_2594_p2[32'd11];

assign tmp_14_fu_2930_p4 = {{add_ln1192_35_fu_2830_p2[22:19]}};

assign tmp_150_fu_2674_p3 = add_ln1192_44_fu_2550_p2[32'd19];

assign tmp_151_fu_2842_p3 = add_ln1192_35_fu_2830_p2[32'd22];

assign tmp_152_fu_2860_p3 = add_ln1192_35_fu_2830_p2[32'd18];

assign tmp_153_fu_2868_p3 = add_ln1192_35_fu_2830_p2[32'd6];

assign tmp_154_fu_2886_p3 = add_ln415_5_fu_2880_p2[32'd11];

assign tmp_155_fu_2906_p3 = add_ln415_5_fu_2880_p2[32'd11];

assign tmp_156_fu_2960_p3 = add_ln1192_45_fu_2836_p2[32'd19];

assign tmp_157_fu_3128_p3 = add_ln1192_36_fu_3116_p2[32'd22];

assign tmp_158_fu_3146_p3 = add_ln1192_36_fu_3116_p2[32'd18];

assign tmp_159_fu_3154_p3 = add_ln1192_36_fu_3116_p2[32'd6];

assign tmp_15_fu_3200_p4 = {{add_ln1192_36_fu_3116_p2[22:20]}};

assign tmp_160_fu_3172_p3 = add_ln415_6_fu_3166_p2[32'd11];

assign tmp_161_fu_3192_p3 = add_ln415_6_fu_3166_p2[32'd11];

assign tmp_162_fu_3246_p3 = add_ln1192_46_fu_3122_p2[32'd19];

assign tmp_163_fu_3414_p3 = add_ln1192_37_fu_3402_p2[32'd22];

assign tmp_164_fu_3432_p3 = add_ln1192_37_fu_3402_p2[32'd18];

assign tmp_165_fu_3440_p3 = add_ln1192_37_fu_3402_p2[32'd6];

assign tmp_166_fu_3458_p3 = add_ln415_7_fu_3452_p2[32'd11];

assign tmp_167_fu_3478_p3 = add_ln415_7_fu_3452_p2[32'd11];

assign tmp_168_fu_3532_p3 = add_ln1192_47_fu_3408_p2[32'd19];

assign tmp_169_fu_3700_p3 = add_ln1192_38_fu_3688_p2[32'd22];

assign tmp_16_fu_3216_p4 = {{add_ln1192_36_fu_3116_p2[22:19]}};

assign tmp_170_fu_3718_p3 = add_ln1192_38_fu_3688_p2[32'd18];

assign tmp_171_fu_3726_p3 = add_ln1192_38_fu_3688_p2[32'd6];

assign tmp_172_fu_3744_p3 = add_ln415_8_fu_3738_p2[32'd11];

assign tmp_173_fu_3764_p3 = add_ln415_8_fu_3738_p2[32'd11];

assign tmp_174_fu_3818_p3 = add_ln1192_48_fu_3694_p2[32'd19];

assign tmp_175_fu_3986_p3 = add_ln1192_39_fu_3974_p2[32'd22];

assign tmp_176_fu_4004_p3 = add_ln1192_39_fu_3974_p2[32'd18];

assign tmp_177_fu_4012_p3 = add_ln1192_39_fu_3974_p2[32'd6];

assign tmp_178_fu_4030_p3 = add_ln415_9_fu_4024_p2[32'd11];

assign tmp_179_fu_4050_p3 = add_ln415_9_fu_4024_p2[32'd11];

assign tmp_17_fu_3486_p4 = {{add_ln1192_37_fu_3402_p2[22:20]}};

assign tmp_180_fu_4104_p3 = add_ln1192_49_fu_3980_p2[32'd19];

assign tmp_182_fu_4346_p4 = {{lsb_index_fu_4340_p2[31:1]}};

assign tmp_183_fu_4400_p3 = lsb_index_fu_4340_p2[32'd31];

assign tmp_184_fu_4509_p3 = m_2_fu_4490_p2[32'd25];

assign tmp_18_fu_3502_p4 = {{add_ln1192_37_fu_3402_p2[22:19]}};

assign tmp_19_fu_3772_p4 = {{add_ln1192_38_fu_3688_p2[22:20]}};

assign tmp_1_fu_1786_p4 = {{add_ln1192_31_fu_1686_p2[22:19]}};

assign tmp_20_fu_3788_p4 = {{add_ln1192_38_fu_3688_p2[22:19]}};

assign tmp_21_fu_4058_p4 = {{add_ln1192_39_fu_3974_p2[22:20]}};

assign tmp_22_fu_4074_p4 = {{add_ln1192_39_fu_3974_p2[22:19]}};

assign tmp_2_fu_2056_p4 = {{add_ln1192_32_fu_1972_p2[22:20]}};

assign tmp_3_fu_2072_p4 = {{add_ln1192_32_fu_1972_p2[22:19]}};

assign tmp_4_fu_2342_p4 = {{add_ln1192_33_fu_2258_p2[22:20]}};

assign tmp_5_fu_1282_p65 = cii_0_reg_974[5:0];

assign tmp_6_fu_1484_p4 = {{add_ln1192_fu_1400_p2[22:20]}};

assign tmp_8_fu_1500_p4 = {{add_ln1192_fu_1400_p2[22:19]}};

assign tmp_9_fu_1770_p4 = {{add_ln1192_31_fu_1686_p2[22:20]}};

assign tmp_V_5_fu_4296_p3 = ((p_Result_16_fu_4282_p3[0:0] === 1'b1) ? tmp_V_fu_4290_p2 : tmp_V_4_fu_4250_p12);

assign tmp_V_fu_4290_p2 = (12'd0 - tmp_V_4_fu_4250_p12);

assign tmp_s_fu_4536_p3 = {{p_Result_16_reg_5025}, {add_ln964_fu_4530_p2}};

assign trunc_ln1192_1_fu_1678_p1 = select_ln1118_1_fu_1654_p3[19:0];

assign trunc_ln1192_2_fu_1964_p1 = select_ln1118_2_fu_1940_p3[19:0];

assign trunc_ln1192_3_fu_2250_p1 = select_ln1118_3_fu_2226_p3[19:0];

assign trunc_ln1192_4_fu_2536_p1 = select_ln1118_4_fu_2512_p3[19:0];

assign trunc_ln1192_5_fu_2822_p1 = select_ln1118_5_fu_2798_p3[19:0];

assign trunc_ln1192_6_fu_3108_p1 = select_ln1118_6_fu_3084_p3[19:0];

assign trunc_ln1192_7_fu_3394_p1 = select_ln1118_7_fu_3370_p3[19:0];

assign trunc_ln1192_8_fu_3680_p1 = select_ln1118_8_fu_3656_p3[19:0];

assign trunc_ln1192_9_fu_3966_p1 = select_ln1118_9_fu_3942_p3[19:0];

assign trunc_ln1192_fu_1392_p1 = select_ln1118_fu_1368_p3[19:0];

assign trunc_ln708_1_fu_1706_p4 = {{add_ln1192_31_fu_1686_p2[18:7]}};

assign trunc_ln708_2_fu_1992_p4 = {{add_ln1192_32_fu_1972_p2[18:7]}};

assign trunc_ln708_3_fu_2278_p4 = {{add_ln1192_33_fu_2258_p2[18:7]}};

assign trunc_ln708_4_fu_2564_p4 = {{add_ln1192_34_fu_2544_p2[18:7]}};

assign trunc_ln708_5_fu_2850_p4 = {{add_ln1192_35_fu_2830_p2[18:7]}};

assign trunc_ln708_6_fu_3136_p4 = {{add_ln1192_36_fu_3116_p2[18:7]}};

assign trunc_ln708_7_fu_3422_p4 = {{add_ln1192_37_fu_3402_p2[18:7]}};

assign trunc_ln708_8_fu_3708_p4 = {{add_ln1192_38_fu_3688_p2[18:7]}};

assign trunc_ln708_9_fu_3994_p4 = {{add_ln1192_39_fu_3974_p2[18:7]}};

assign trunc_ln7_fu_1420_p4 = {{add_ln1192_fu_1400_p2[18:7]}};

assign trunc_ln943_fu_4454_p1 = l_fu_4322_p3[7:0];

assign trunc_ln944_fu_4336_p1 = sub_ln944_fu_4330_p2[11:0];

assign trunc_ln947_fu_4362_p1 = sub_ln944_fu_4330_p2[3:0];

assign xor_ln416_1_fu_1750_p2 = (tmp_130_fu_1742_p3 ^ 1'd1);

assign xor_ln416_2_fu_2036_p2 = (tmp_136_fu_2028_p3 ^ 1'd1);

assign xor_ln416_3_fu_2322_p2 = (tmp_142_fu_2314_p3 ^ 1'd1);

assign xor_ln416_4_fu_2608_p2 = (tmp_148_fu_2600_p3 ^ 1'd1);

assign xor_ln416_5_fu_2894_p2 = (tmp_154_fu_2886_p3 ^ 1'd1);

assign xor_ln416_6_fu_3180_p2 = (tmp_160_fu_3172_p3 ^ 1'd1);

assign xor_ln416_7_fu_3466_p2 = (tmp_166_fu_3458_p3 ^ 1'd1);

assign xor_ln416_8_fu_3752_p2 = (tmp_172_fu_3744_p3 ^ 1'd1);

assign xor_ln416_9_fu_4038_p2 = (tmp_178_fu_4030_p3 ^ 1'd1);

assign xor_ln416_fu_1464_p2 = (tmp_124_fu_1456_p3 ^ 1'd1);

assign xor_ln779_1_fu_1824_p2 = (tmp_132_fu_1816_p3 ^ 1'd1);

assign xor_ln779_2_fu_2110_p2 = (tmp_138_fu_2102_p3 ^ 1'd1);

assign xor_ln779_3_fu_2396_p2 = (tmp_144_fu_2388_p3 ^ 1'd1);

assign xor_ln779_4_fu_2682_p2 = (tmp_150_fu_2674_p3 ^ 1'd1);

assign xor_ln779_5_fu_2968_p2 = (tmp_156_fu_2960_p3 ^ 1'd1);

assign xor_ln779_6_fu_3254_p2 = (tmp_162_fu_3246_p3 ^ 1'd1);

assign xor_ln779_7_fu_3540_p2 = (tmp_168_fu_3532_p3 ^ 1'd1);

assign xor_ln779_8_fu_3826_p2 = (tmp_174_fu_3818_p3 ^ 1'd1);

assign xor_ln779_9_fu_4112_p2 = (tmp_180_fu_4104_p3 ^ 1'd1);

assign xor_ln779_fu_1538_p2 = (tmp_126_fu_1530_p3 ^ 1'd1);

assign xor_ln785_10_fu_1862_p2 = (tmp_127_fu_1698_p3 ^ 1'd1);

assign xor_ln785_11_fu_2148_p2 = (tmp_133_fu_1984_p3 ^ 1'd1);

assign xor_ln785_12_fu_2434_p2 = (tmp_139_fu_2270_p3 ^ 1'd1);

assign xor_ln785_13_fu_2708_p2 = (select_ln777_4_fu_2666_p3 ^ 1'd1);

assign xor_ln785_14_fu_2720_p2 = (tmp_145_fu_2556_p3 ^ 1'd1);

assign xor_ln785_15_fu_3006_p2 = (tmp_151_fu_2842_p3 ^ 1'd1);

assign xor_ln785_16_fu_3292_p2 = (tmp_157_fu_3128_p3 ^ 1'd1);

assign xor_ln785_17_fu_3578_p2 = (tmp_163_fu_3414_p3 ^ 1'd1);

assign xor_ln785_18_fu_3864_p2 = (tmp_169_fu_3700_p3 ^ 1'd1);

assign xor_ln785_19_fu_4150_p2 = (tmp_175_fu_3986_p3 ^ 1'd1);

assign xor_ln785_1_fu_1850_p2 = (select_ln777_1_fu_1808_p3 ^ 1'd1);

assign xor_ln785_2_fu_2136_p2 = (select_ln777_2_fu_2094_p3 ^ 1'd1);

assign xor_ln785_3_fu_2422_p2 = (select_ln777_3_fu_2380_p3 ^ 1'd1);

assign xor_ln785_4_fu_1576_p2 = (tmp_121_fu_1412_p3 ^ 1'd1);

assign xor_ln785_5_fu_2994_p2 = (select_ln777_5_fu_2952_p3 ^ 1'd1);

assign xor_ln785_6_fu_3280_p2 = (select_ln777_6_fu_3238_p3 ^ 1'd1);

assign xor_ln785_7_fu_3566_p2 = (select_ln777_7_fu_3524_p3 ^ 1'd1);

assign xor_ln785_8_fu_3852_p2 = (select_ln777_8_fu_3810_p3 ^ 1'd1);

assign xor_ln785_9_fu_4138_p2 = (select_ln777_9_fu_4096_p3 ^ 1'd1);

assign xor_ln785_fu_1564_p2 = (select_ln777_fu_1522_p3 ^ 1'd1);

assign xor_ln786_18_fu_1886_p2 = (or_ln786_1_fu_1880_p2 ^ 1'd1);

assign xor_ln786_19_fu_2172_p2 = (or_ln786_2_fu_2166_p2 ^ 1'd1);

assign xor_ln786_20_fu_2458_p2 = (or_ln786_3_fu_2452_p2 ^ 1'd1);

assign xor_ln786_21_fu_2744_p2 = (or_ln786_4_fu_2738_p2 ^ 1'd1);

assign xor_ln786_22_fu_3030_p2 = (or_ln786_5_fu_3024_p2 ^ 1'd1);

assign xor_ln786_23_fu_3316_p2 = (or_ln786_6_fu_3310_p2 ^ 1'd1);

assign xor_ln786_24_fu_3602_p2 = (or_ln786_7_fu_3596_p2 ^ 1'd1);

assign xor_ln786_25_fu_3888_p2 = (or_ln786_8_fu_3882_p2 ^ 1'd1);

assign xor_ln786_26_fu_4174_p2 = (or_ln786_9_fu_4168_p2 ^ 1'd1);

assign xor_ln786_fu_1600_p2 = (or_ln786_fu_1594_p2 ^ 1'd1);

assign xor_ln949_fu_4408_p2 = (tmp_183_fu_4400_p3 ^ 1'd1);

assign zext_ln27_fu_1264_p1 = cii_0_reg_974;

assign zext_ln32_fu_4228_p1 = top_offset;

assign zext_ln415_1_fu_1732_p1 = tmp_129_fu_1724_p3;

assign zext_ln415_2_fu_2018_p1 = tmp_135_fu_2010_p3;

assign zext_ln415_3_fu_2304_p1 = tmp_141_fu_2296_p3;

assign zext_ln415_4_fu_2590_p1 = tmp_147_fu_2582_p3;

assign zext_ln415_5_fu_2876_p1 = tmp_153_fu_2868_p3;

assign zext_ln415_6_fu_3162_p1 = tmp_159_fu_3154_p3;

assign zext_ln415_7_fu_3448_p1 = tmp_165_fu_3440_p3;

assign zext_ln415_8_fu_3734_p1 = tmp_171_fu_3726_p3;

assign zext_ln415_9_fu_4020_p1 = tmp_177_fu_4012_p3;

assign zext_ln415_fu_1446_p1 = tmp_123_fu_1438_p3;

assign zext_ln947_fu_4372_p1 = sub_ln947_fu_4366_p2;

always @ (posedge ap_clk) begin
    or_ln_reg_5041[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //matmul
