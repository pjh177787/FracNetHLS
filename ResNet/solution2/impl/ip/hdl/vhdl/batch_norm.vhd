-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity batch_norm is
port (
    ap_ready : OUT STD_LOGIC;
    sum_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of batch_norm is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv18_3FF : STD_LOGIC_VECTOR (17 downto 0) := "000000001111111111";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv12_7FF : STD_LOGIC_VECTOR (11 downto 0) := "011111111111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_s_fu_40_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1118_fu_48_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_fu_36_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_9_fu_52_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln703_fu_58_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln731_fu_68_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln731_fu_72_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_fu_62_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_fu_94_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_s_fu_86_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln785_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_23_fu_78_p3 : STD_LOGIC_VECTOR (11 downto 0);


begin



    add_ln731_fu_72_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) + unsigned(trunc_ln731_fu_68_p1));
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        ap_const_lv12_7FF when (or_ln785_fu_110_p2(0) = '1') else 
        p_Val2_23_fu_78_p3;
    icmp_ln785_fu_104_p2 <= "0" when (tmp_fu_94_p4 = ap_const_lv7_0) else "1";
    or_ln785_fu_110_p2 <= (p_Result_s_fu_86_p3 or icmp_ln785_fu_104_p2);
    p_Result_s_fu_86_p3 <= add_ln731_fu_72_p2(10 downto 10);
    p_Val2_23_fu_78_p3 <= (add_ln731_fu_72_p2 & ap_const_lv1_0);
    r_V_9_fu_52_p2 <= std_logic_vector(unsigned(zext_ln1118_fu_48_p1) - unsigned(r_V_fu_36_p1));
    r_V_fu_36_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_V),19));
    ret_V_fu_62_p2 <= std_logic_vector(unsigned(ap_const_lv18_3FF) + unsigned(trunc_ln703_fu_58_p1));
    tmp_fu_94_p4 <= ret_V_fu_62_p2(17 downto 11);
    tmp_s_fu_40_p3 <= (sum_V & ap_const_lv10_0);
    trunc_ln703_fu_58_p1 <= r_V_9_fu_52_p2(18 - 1 downto 0);
    trunc_ln731_fu_68_p1 <= r_V_9_fu_52_p2(11 - 1 downto 0);
    zext_ln1118_fu_48_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_40_p3),19));
end behav;
