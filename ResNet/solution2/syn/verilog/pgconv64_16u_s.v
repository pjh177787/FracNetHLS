// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pgconv64_16u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bottom1_V_address0,
        bottom1_V_ce0,
        bottom1_V_q0,
        bottom1_V_address1,
        bottom1_V_ce1,
        bottom1_V_q1,
        top_0_V_address0,
        top_0_V_ce0,
        top_0_V_we0,
        top_0_V_d0,
        top_1_V_address0,
        top_1_V_ce0,
        top_1_V_we0,
        top_1_V_d0,
        top_2_V_address0,
        top_2_V_ce0,
        top_2_V_we0,
        top_2_V_d0,
        top_3_V_address0,
        top_3_V_ce0,
        top_3_V_we0,
        top_3_V_d0,
        top_4_V_address0,
        top_4_V_ce0,
        top_4_V_we0,
        top_4_V_d0,
        top_5_V_address0,
        top_5_V_ce0,
        top_5_V_we0,
        top_5_V_d0,
        top_6_V_address0,
        top_6_V_ce0,
        top_6_V_we0,
        top_6_V_d0,
        top_7_V_address0,
        top_7_V_ce0,
        top_7_V_we0,
        top_7_V_d0,
        top_8_V_address0,
        top_8_V_ce0,
        top_8_V_we0,
        top_8_V_d0,
        top_9_V_address0,
        top_9_V_ce0,
        top_9_V_we0,
        top_9_V_d0,
        top_10_V_address0,
        top_10_V_ce0,
        top_10_V_we0,
        top_10_V_d0,
        top_11_V_address0,
        top_11_V_ce0,
        top_11_V_we0,
        top_11_V_d0,
        top_12_V_address0,
        top_12_V_ce0,
        top_12_V_we0,
        top_12_V_d0,
        top_13_V_address0,
        top_13_V_ce0,
        top_13_V_we0,
        top_13_V_d0,
        top_14_V_address0,
        top_14_V_ce0,
        top_14_V_we0,
        top_14_V_d0,
        top_15_V_address0,
        top_15_V_ce0,
        top_15_V_we0,
        top_15_V_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state17 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] bottom1_V_address0;
output   bottom1_V_ce0;
input  [63:0] bottom1_V_q0;
output  [6:0] bottom1_V_address1;
output   bottom1_V_ce1;
input  [63:0] bottom1_V_q1;
output  [6:0] top_0_V_address0;
output   top_0_V_ce0;
output   top_0_V_we0;
output  [11:0] top_0_V_d0;
output  [6:0] top_1_V_address0;
output   top_1_V_ce0;
output   top_1_V_we0;
output  [11:0] top_1_V_d0;
output  [6:0] top_2_V_address0;
output   top_2_V_ce0;
output   top_2_V_we0;
output  [11:0] top_2_V_d0;
output  [6:0] top_3_V_address0;
output   top_3_V_ce0;
output   top_3_V_we0;
output  [11:0] top_3_V_d0;
output  [6:0] top_4_V_address0;
output   top_4_V_ce0;
output   top_4_V_we0;
output  [11:0] top_4_V_d0;
output  [6:0] top_5_V_address0;
output   top_5_V_ce0;
output   top_5_V_we0;
output  [11:0] top_5_V_d0;
output  [6:0] top_6_V_address0;
output   top_6_V_ce0;
output   top_6_V_we0;
output  [11:0] top_6_V_d0;
output  [6:0] top_7_V_address0;
output   top_7_V_ce0;
output   top_7_V_we0;
output  [11:0] top_7_V_d0;
output  [6:0] top_8_V_address0;
output   top_8_V_ce0;
output   top_8_V_we0;
output  [11:0] top_8_V_d0;
output  [6:0] top_9_V_address0;
output   top_9_V_ce0;
output   top_9_V_we0;
output  [11:0] top_9_V_d0;
output  [6:0] top_10_V_address0;
output   top_10_V_ce0;
output   top_10_V_we0;
output  [11:0] top_10_V_d0;
output  [6:0] top_11_V_address0;
output   top_11_V_ce0;
output   top_11_V_we0;
output  [11:0] top_11_V_d0;
output  [6:0] top_12_V_address0;
output   top_12_V_ce0;
output   top_12_V_we0;
output  [11:0] top_12_V_d0;
output  [6:0] top_13_V_address0;
output   top_13_V_ce0;
output   top_13_V_we0;
output  [11:0] top_13_V_d0;
output  [6:0] top_14_V_address0;
output   top_14_V_ce0;
output   top_14_V_we0;
output  [11:0] top_14_V_d0;
output  [6:0] top_15_V_address0;
output   top_15_V_ce0;
output   top_15_V_we0;
output  [11:0] top_15_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] bottom1_V_address0;
reg bottom1_V_ce0;
reg[6:0] bottom1_V_address1;
reg bottom1_V_ce1;
reg top_0_V_ce0;
reg top_0_V_we0;
reg top_1_V_ce0;
reg top_1_V_we0;
reg top_2_V_ce0;
reg top_2_V_we0;
reg top_3_V_ce0;
reg top_3_V_we0;
reg top_4_V_ce0;
reg top_4_V_we0;
reg top_5_V_ce0;
reg top_5_V_we0;
reg top_6_V_ce0;
reg top_6_V_we0;
reg top_7_V_ce0;
reg top_7_V_we0;
reg top_8_V_ce0;
reg top_8_V_we0;
reg top_9_V_ce0;
reg top_9_V_we0;
reg top_10_V_ce0;
reg top_10_V_we0;
reg top_11_V_ce0;
reg top_11_V_we0;
reg top_12_V_ce0;
reg top_12_V_we0;
reg top_13_V_ce0;
reg top_13_V_we0;
reg top_14_V_ce0;
reg top_14_V_we0;
reg top_15_V_ce0;
reg top_15_V_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_393;
reg   [3:0] row_0_reg_404;
reg   [3:0] col_0_reg_415;
wire   [0:0] icmp_ln103_fu_483_p2;
reg   [0:0] icmp_ln103_reg_758;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln103_reg_758_pp0_iter1_reg;
reg   [0:0] icmp_ln103_reg_758_pp0_iter2_reg;
wire   [6:0] add_ln103_fu_489_p2;
reg   [6:0] add_ln103_reg_762;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] select_ln109_fu_501_p3;
reg   [3:0] select_ln109_reg_767;
wire   [3:0] select_ln109_7_fu_509_p3;
reg   [3:0] select_ln109_7_reg_774;
wire   [3:0] select_ln109_8_fu_517_p3;
reg   [3:0] select_ln109_8_reg_780;
wire   [3:0] select_ln109_9_fu_531_p3;
reg   [3:0] select_ln109_9_reg_787;
wire   [7:0] add_ln109_6_fu_561_p2;
reg   [7:0] add_ln109_6_reg_793;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
wire   [7:0] zext_ln109_8_fu_572_p1;
reg   [7:0] zext_ln109_8_reg_798;
wire   [7:0] zext_ln110_fu_587_p1;
reg   [7:0] zext_ln110_reg_809;
wire   [7:0] add_ln112_fu_623_p2;
reg   [7:0] add_ln112_reg_820;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire   [3:0] col_fu_639_p2;
reg   [3:0] col_reg_831;
wire   [7:0] zext_ln111_fu_644_p1;
reg   [7:0] zext_ln111_reg_836;
wire   [7:0] add_ln115_6_fu_686_p2;
reg   [7:0] add_ln115_6_reg_847;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire   [63:0] zext_ln113_fu_695_p1;
reg   [63:0] zext_ln113_reg_852;
reg   [63:0] zext_ln113_reg_852_pp0_iter1_reg;
reg   [63:0] zext_ln113_reg_852_pp0_iter2_reg;
wire   [7:0] add_ln116_fu_700_p2;
reg   [7:0] add_ln116_reg_877;
wire   [7:0] add_ln117_fu_714_p2;
reg   [7:0] add_ln117_reg_887;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire   [5:0] grp_compute_engine_64_fu_426_ap_return;
reg   [5:0] p_s_reg_902;
wire   [5:0] grp_compute_engine_64_fu_436_ap_return;
reg   [5:0] tmp1_V_reg_907;
reg   [5:0] tmp2_V_reg_917;
reg    ap_enable_reg_pp0_iter1;
reg   [5:0] tmp3_V_reg_922;
reg   [5:0] tmp4_V_reg_927;
reg   [5:0] tmp5_V_reg_932;
reg   [5:0] tmp6_V_reg_937;
reg   [5:0] tmp7_V_reg_942;
reg   [5:0] tmp8_V_reg_947;
wire   [7:0] sum_V_ret_sum_engine_fu_453_ap_return;
reg   [7:0] sum_V_ret_reg_952;
reg   [4:0] tmp_120_reg_958;
wire   [7:0] select_ln131_fu_751_p3;
reg   [7:0] select_ln131_reg_963;
wire   [11:0] norm_V_batch_norm_fu_466_ap_return;
reg   [11:0] norm_V_reg_968;
wire   [11:0] grp_relu_fu_448_ap_return;
reg   [11:0] op_V_assign_reg_973;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    grp_compute_engine_64_fu_426_ap_start;
wire    grp_compute_engine_64_fu_426_ap_done;
wire    grp_compute_engine_64_fu_426_ap_idle;
wire    grp_compute_engine_64_fu_426_ap_ready;
reg   [63:0] grp_compute_engine_64_fu_426_b_V;
wire    grp_compute_engine_64_fu_436_ap_start;
wire    grp_compute_engine_64_fu_436_ap_done;
wire    grp_compute_engine_64_fu_436_ap_idle;
wire    grp_compute_engine_64_fu_436_ap_ready;
reg   [63:0] grp_compute_engine_64_fu_436_b_V;
reg    grp_relu_fu_448_ap_ce;
wire    ap_block_state4_pp0_stage2_iter0_ignore_call98;
wire    ap_block_state9_pp0_stage2_iter1_ignore_call98;
wire    ap_block_state14_pp0_stage2_iter2_ignore_call98;
wire    ap_block_pp0_stage2_11001_ignoreCallOp131;
wire    ap_block_state5_pp0_stage3_iter0_ignore_call98;
wire    ap_block_state10_pp0_stage3_iter1_ignore_call98;
wire    ap_block_state15_pp0_stage3_iter2_ignore_call98;
wire    ap_block_pp0_stage3_11001_ignoreCallOp132;
wire    sum_V_ret_sum_engine_fu_453_ap_ready;
wire    norm_V_batch_norm_fu_466_ap_ready;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_397_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_row_0_phi_fu_408_p4;
reg   [3:0] ap_phi_mux_col_0_phi_fu_419_p4;
reg    grp_compute_engine_64_fu_426_ap_start_reg;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage1;
reg    grp_compute_engine_64_fu_436_ap_start_reg;
wire   [63:0] zext_ln109_9_fu_582_p1;
wire   [63:0] zext_ln110_3_fu_596_p1;
wire   [63:0] zext_ln112_6_fu_634_p1;
wire   [63:0] zext_ln111_3_fu_653_p1;
wire   [63:0] zext_ln114_fu_709_p1;
wire   [63:0] zext_ln115_6_fu_719_p1;
wire   [63:0] zext_ln116_fu_723_p1;
wire   [63:0] zext_ln117_fu_727_p1;
wire   [0:0] icmp_ln104_fu_495_p2;
wire   [3:0] add_ln109_fu_471_p2;
wire   [3:0] row_fu_477_p2;
wire   [3:0] add_ln115_fu_525_p2;
wire   [6:0] tmp_fu_539_p3;
wire   [4:0] tmp_115_fu_550_p3;
wire   [7:0] zext_ln109_fu_546_p1;
wire   [7:0] zext_ln109_7_fu_557_p1;
wire   [3:0] add_ln109_3_fu_567_p2;
wire   [7:0] add_ln109_7_fu_576_p2;
wire   [7:0] add_ln110_fu_590_p2;
wire   [6:0] tmp_116_fu_601_p3;
wire   [4:0] tmp_117_fu_612_p3;
wire   [7:0] zext_ln112_fu_608_p1;
wire   [7:0] zext_ln112_5_fu_619_p1;
wire   [7:0] add_ln112_3_fu_629_p2;
wire   [7:0] add_ln111_3_fu_648_p2;
wire   [6:0] tmp_118_fu_658_p3;
wire   [4:0] tmp_119_fu_669_p3;
wire   [7:0] zext_ln115_fu_665_p1;
wire   [7:0] zext_ln115_5_fu_676_p1;
wire   [7:0] add_ln115_5_fu_680_p2;
wire   [7:0] add_ln113_fu_691_p2;
wire   [7:0] add_ln114_fu_705_p2;
wire   [0:0] icmp_ln1494_fu_741_p2;
wire   [7:0] shl_ln700_fu_746_p2;
wire    ap_CS_fsm_state17;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_compute_engine_64_fu_426_ap_start_reg = 1'b0;
#0 grp_compute_engine_64_fu_436_ap_start_reg = 1'b0;
end

compute_engine_64 grp_compute_engine_64_fu_426(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_engine_64_fu_426_ap_start),
    .ap_done(grp_compute_engine_64_fu_426_ap_done),
    .ap_idle(grp_compute_engine_64_fu_426_ap_idle),
    .ap_ready(grp_compute_engine_64_fu_426_ap_ready),
    .ap_ce(1'b1),
    .b_V(grp_compute_engine_64_fu_426_b_V),
    .w_V(64'd65535),
    .ap_return(grp_compute_engine_64_fu_426_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_436(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_engine_64_fu_436_ap_start),
    .ap_done(grp_compute_engine_64_fu_436_ap_done),
    .ap_idle(grp_compute_engine_64_fu_436_ap_idle),
    .ap_ready(grp_compute_engine_64_fu_436_ap_ready),
    .ap_ce(1'b1),
    .b_V(grp_compute_engine_64_fu_436_b_V),
    .w_V(64'd65535),
    .ap_return(grp_compute_engine_64_fu_436_ap_return)
);

relu grp_relu_fu_448(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .norm_V(norm_V_reg_968),
    .ap_return(grp_relu_fu_448_ap_return),
    .ap_ce(grp_relu_fu_448_ap_ce)
);

sum_engine sum_V_ret_sum_engine_fu_453(
    .ap_ready(sum_V_ret_sum_engine_fu_453_ap_ready),
    .t0_V(p_s_reg_902),
    .t1_V(tmp1_V_reg_907),
    .t2_V(tmp2_V_reg_917),
    .t3_V(tmp3_V_reg_922),
    .t4_V(tmp4_V_reg_927),
    .t5_V(tmp5_V_reg_932),
    .t6_V(tmp6_V_reg_937),
    .t7_V(tmp7_V_reg_942),
    .t8_V(tmp8_V_reg_947),
    .ap_return(sum_V_ret_sum_engine_fu_453_ap_return)
);

batch_norm norm_V_batch_norm_fu_466(
    .ap_ready(norm_V_batch_norm_fu_466_ap_ready),
    .sum_V(select_ln131_reg_963),
    .ap_return(norm_V_batch_norm_fu_466_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_engine_64_fu_426_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln103_reg_758 == 1'd0)))) begin
            grp_compute_engine_64_fu_426_ap_start_reg <= 1'b1;
        end else if ((grp_compute_engine_64_fu_426_ap_ready == 1'b1)) begin
            grp_compute_engine_64_fu_426_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_engine_64_fu_436_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)))) begin
            grp_compute_engine_64_fu_436_ap_start_reg <= 1'b1;
        end else if ((grp_compute_engine_64_fu_436_ap_ready == 1'b1)) begin
            grp_compute_engine_64_fu_436_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln103_reg_758 == 1'd0))) begin
        col_0_reg_415 <= col_reg_831;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        col_0_reg_415 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln103_reg_758 == 1'd0))) begin
        indvar_flatten_reg_393 <= add_ln103_reg_762;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_393 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln103_reg_758 == 1'd0))) begin
        row_0_reg_404 <= select_ln109_8_reg_780;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_0_reg_404 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln103_reg_762 <= add_ln103_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_reg_758 == 1'd0))) begin
        add_ln109_6_reg_793[7 : 1] <= add_ln109_6_fu_561_p2[7 : 1];
        zext_ln109_8_reg_798[3 : 0] <= zext_ln109_8_fu_572_p1[3 : 0];
        zext_ln110_reg_809[3 : 0] <= zext_ln110_fu_587_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln103_reg_758 == 1'd0))) begin
        add_ln112_reg_820[7 : 1] <= add_ln112_fu_623_p2[7 : 1];
        zext_ln111_reg_836[3 : 0] <= zext_ln111_fu_644_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln103_reg_758 == 1'd0))) begin
        add_ln115_6_reg_847 <= add_ln115_6_fu_686_p2;
        add_ln116_reg_877 <= add_ln116_fu_700_p2;
        add_ln117_reg_887 <= add_ln117_fu_714_p2;
        zext_ln113_reg_852[7 : 0] <= zext_ln113_fu_695_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0))) begin
        col_reg_831 <= col_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln103_reg_758 <= icmp_ln103_fu_483_p2;
        icmp_ln103_reg_758_pp0_iter1_reg <= icmp_ln103_reg_758;
        icmp_ln103_reg_758_pp0_iter2_reg <= icmp_ln103_reg_758_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        norm_V_reg_968 <= norm_V_batch_norm_fu_466_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        op_V_assign_reg_973 <= grp_relu_fu_448_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0))) begin
        p_s_reg_902 <= grp_compute_engine_64_fu_426_ap_return;
        tmp1_V_reg_907 <= grp_compute_engine_64_fu_436_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln103_fu_483_p2 == 1'd0))) begin
        select_ln109_7_reg_774 <= select_ln109_7_fu_509_p3;
        select_ln109_9_reg_787 <= select_ln109_9_fu_531_p3;
        select_ln109_reg_767 <= select_ln109_fu_501_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln103_fu_483_p2 == 1'd0))) begin
        select_ln109_8_reg_780 <= select_ln109_8_fu_517_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_reg_758_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln131_reg_963 <= select_ln131_fu_751_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter1_reg == 1'd0))) begin
        sum_V_ret_reg_952 <= sum_V_ret_sum_engine_fu_453_ap_return;
        tmp_120_reg_958 <= {{sum_V_ret_sum_engine_fu_453_ap_return[7:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln103_reg_758 == 1'd0))) begin
        tmp2_V_reg_917 <= grp_compute_engine_64_fu_426_ap_return;
        tmp3_V_reg_922 <= grp_compute_engine_64_fu_436_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_reg_758_pp0_iter1_reg == 1'd0))) begin
        tmp4_V_reg_927 <= grp_compute_engine_64_fu_426_ap_return;
        tmp5_V_reg_932 <= grp_compute_engine_64_fu_436_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln103_reg_758_pp0_iter1_reg == 1'd0))) begin
        tmp6_V_reg_937 <= grp_compute_engine_64_fu_426_ap_return;
        tmp7_V_reg_942 <= grp_compute_engine_64_fu_436_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln103_reg_758_pp0_iter1_reg == 1'd0))) begin
        tmp8_V_reg_947 <= grp_compute_engine_64_fu_426_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        zext_ln113_reg_852_pp0_iter1_reg[7 : 0] <= zext_ln113_reg_852[7 : 0];
        zext_ln113_reg_852_pp0_iter2_reg[7 : 0] <= zext_ln113_reg_852_pp0_iter1_reg[7 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln103_fu_483_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_reg_758 == 1'd0))) begin
        ap_phi_mux_col_0_phi_fu_419_p4 = col_reg_831;
    end else begin
        ap_phi_mux_col_0_phi_fu_419_p4 = col_0_reg_415;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_reg_758 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_397_p4 = add_ln103_reg_762;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_397_p4 = indvar_flatten_reg_393;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_reg_758 == 1'd0))) begin
        ap_phi_mux_row_0_phi_fu_408_p4 = select_ln109_8_reg_780;
    end else begin
        ap_phi_mux_row_0_phi_fu_408_p4 = row_0_reg_404;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bottom1_V_address0 = zext_ln117_fu_727_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        bottom1_V_address0 = zext_ln116_fu_723_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        bottom1_V_address0 = zext_ln114_fu_709_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        bottom1_V_address0 = zext_ln112_6_fu_634_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        bottom1_V_address0 = zext_ln109_9_fu_582_p1;
    end else begin
        bottom1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            bottom1_V_address1 = zext_ln115_6_fu_719_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            bottom1_V_address1 = zext_ln113_fu_695_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            bottom1_V_address1 = zext_ln111_3_fu_653_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            bottom1_V_address1 = zext_ln110_3_fu_596_p1;
        end else begin
            bottom1_V_address1 = 'bx;
        end
    end else begin
        bottom1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        bottom1_V_ce0 = 1'b1;
    end else begin
        bottom1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        bottom1_V_ce1 = 1'b1;
    end else begin
        bottom1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_reg_758 == 1'd0)))) begin
        grp_compute_engine_64_fu_426_b_V = bottom1_V_q1;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_reg_758_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)))) begin
        grp_compute_engine_64_fu_426_b_V = bottom1_V_q0;
    end else begin
        grp_compute_engine_64_fu_426_b_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_reg_758 == 1'd0)))) begin
        grp_compute_engine_64_fu_436_b_V = bottom1_V_q0;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_reg_758 == 1'd0))) begin
        grp_compute_engine_64_fu_436_b_V = bottom1_V_q1;
    end else begin
        grp_compute_engine_64_fu_436_b_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp132) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp131) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_relu_fu_448_ap_ce = 1'b1;
    end else begin
        grp_relu_fu_448_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_0_V_ce0 = 1'b1;
    end else begin
        top_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_0_V_we0 = 1'b1;
    end else begin
        top_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_10_V_ce0 = 1'b1;
    end else begin
        top_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_10_V_we0 = 1'b1;
    end else begin
        top_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_11_V_ce0 = 1'b1;
    end else begin
        top_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_11_V_we0 = 1'b1;
    end else begin
        top_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_12_V_ce0 = 1'b1;
    end else begin
        top_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_12_V_we0 = 1'b1;
    end else begin
        top_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_13_V_ce0 = 1'b1;
    end else begin
        top_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_13_V_we0 = 1'b1;
    end else begin
        top_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_14_V_ce0 = 1'b1;
    end else begin
        top_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_14_V_we0 = 1'b1;
    end else begin
        top_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_15_V_ce0 = 1'b1;
    end else begin
        top_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_15_V_we0 = 1'b1;
    end else begin
        top_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_1_V_ce0 = 1'b1;
    end else begin
        top_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_1_V_we0 = 1'b1;
    end else begin
        top_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_2_V_ce0 = 1'b1;
    end else begin
        top_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_2_V_we0 = 1'b1;
    end else begin
        top_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_3_V_ce0 = 1'b1;
    end else begin
        top_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_3_V_we0 = 1'b1;
    end else begin
        top_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_4_V_ce0 = 1'b1;
    end else begin
        top_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_4_V_we0 = 1'b1;
    end else begin
        top_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_5_V_ce0 = 1'b1;
    end else begin
        top_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_5_V_we0 = 1'b1;
    end else begin
        top_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_6_V_ce0 = 1'b1;
    end else begin
        top_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_6_V_we0 = 1'b1;
    end else begin
        top_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_7_V_ce0 = 1'b1;
    end else begin
        top_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_7_V_we0 = 1'b1;
    end else begin
        top_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_8_V_ce0 = 1'b1;
    end else begin
        top_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_8_V_we0 = 1'b1;
    end else begin
        top_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        top_9_V_ce0 = 1'b1;
    end else begin
        top_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln103_reg_758_pp0_iter2_reg == 1'd0))) begin
        top_9_V_we0 = 1'b1;
    end else begin
        top_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_fu_483_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln103_fu_483_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_fu_489_p2 = (ap_phi_mux_indvar_flatten_phi_fu_397_p4 + 7'd1);

assign add_ln109_3_fu_567_p2 = ($signed(4'd15) + $signed(select_ln109_reg_767));

assign add_ln109_6_fu_561_p2 = (zext_ln109_fu_546_p1 + zext_ln109_7_fu_557_p1);

assign add_ln109_7_fu_576_p2 = (zext_ln109_8_fu_572_p1 + add_ln109_6_fu_561_p2);

assign add_ln109_fu_471_p2 = ($signed(ap_phi_mux_row_0_phi_fu_408_p4) + $signed(4'd15));

assign add_ln110_fu_590_p2 = (zext_ln110_fu_587_p1 + add_ln109_6_fu_561_p2);

assign add_ln111_3_fu_648_p2 = (zext_ln111_fu_644_p1 + add_ln109_6_reg_793);

assign add_ln112_3_fu_629_p2 = (zext_ln109_8_reg_798 + add_ln112_fu_623_p2);

assign add_ln112_fu_623_p2 = (zext_ln112_fu_608_p1 + zext_ln112_5_fu_619_p1);

assign add_ln113_fu_691_p2 = (zext_ln110_reg_809 + add_ln112_reg_820);

assign add_ln114_fu_705_p2 = (zext_ln111_reg_836 + add_ln112_reg_820);

assign add_ln115_5_fu_680_p2 = (zext_ln115_fu_665_p1 + zext_ln115_5_fu_676_p1);

assign add_ln115_6_fu_686_p2 = (zext_ln109_8_reg_798 + add_ln115_5_fu_680_p2);

assign add_ln115_fu_525_p2 = (4'd2 + ap_phi_mux_row_0_phi_fu_408_p4);

assign add_ln116_fu_700_p2 = (zext_ln110_reg_809 + add_ln115_5_fu_680_p2);

assign add_ln117_fu_714_p2 = (zext_ln111_reg_836 + add_ln115_5_fu_680_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp131 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp132 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1_ignore_call98 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2_ignore_call98 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2_ignore_call98 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0_ignore_call98 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0_ignore_call98 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1_ignore_call98 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign col_fu_639_p2 = (4'd1 + select_ln109_reg_767);

assign grp_compute_engine_64_fu_426_ap_start = grp_compute_engine_64_fu_426_ap_start_reg;

assign grp_compute_engine_64_fu_436_ap_start = grp_compute_engine_64_fu_436_ap_start_reg;

assign icmp_ln103_fu_483_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_397_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_495_p2 = ((ap_phi_mux_col_0_phi_fu_419_p4 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_741_p2 = ((tmp_120_reg_958 != 5'd0) ? 1'b1 : 1'b0);

assign row_fu_477_p2 = (ap_phi_mux_row_0_phi_fu_408_p4 + 4'd1);

assign select_ln109_7_fu_509_p3 = ((icmp_ln104_fu_495_p2[0:0] === 1'b1) ? ap_phi_mux_row_0_phi_fu_408_p4 : add_ln109_fu_471_p2);

assign select_ln109_8_fu_517_p3 = ((icmp_ln104_fu_495_p2[0:0] === 1'b1) ? row_fu_477_p2 : ap_phi_mux_row_0_phi_fu_408_p4);

assign select_ln109_9_fu_531_p3 = ((icmp_ln104_fu_495_p2[0:0] === 1'b1) ? add_ln115_fu_525_p2 : row_fu_477_p2);

assign select_ln109_fu_501_p3 = ((icmp_ln104_fu_495_p2[0:0] === 1'b1) ? 4'd1 : ap_phi_mux_col_0_phi_fu_419_p4);

assign select_ln131_fu_751_p3 = ((icmp_ln1494_fu_741_p2[0:0] === 1'b1) ? shl_ln700_fu_746_p2 : sum_V_ret_reg_952);

assign shl_ln700_fu_746_p2 = sum_V_ret_reg_952 << 8'd1;

assign tmp_115_fu_550_p3 = {{select_ln109_7_reg_774}, {1'd0}};

assign tmp_116_fu_601_p3 = {{select_ln109_8_reg_780}, {3'd0}};

assign tmp_117_fu_612_p3 = {{select_ln109_8_reg_780}, {1'd0}};

assign tmp_118_fu_658_p3 = {{select_ln109_9_reg_787}, {3'd0}};

assign tmp_119_fu_669_p3 = {{select_ln109_9_reg_787}, {1'd0}};

assign tmp_fu_539_p3 = {{select_ln109_7_reg_774}, {3'd0}};

assign top_0_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_0_V_d0 = op_V_assign_reg_973;

assign top_10_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_10_V_d0 = op_V_assign_reg_973;

assign top_11_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_11_V_d0 = op_V_assign_reg_973;

assign top_12_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_12_V_d0 = op_V_assign_reg_973;

assign top_13_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_13_V_d0 = op_V_assign_reg_973;

assign top_14_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_14_V_d0 = op_V_assign_reg_973;

assign top_15_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_15_V_d0 = op_V_assign_reg_973;

assign top_1_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_1_V_d0 = op_V_assign_reg_973;

assign top_2_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_2_V_d0 = op_V_assign_reg_973;

assign top_3_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_3_V_d0 = op_V_assign_reg_973;

assign top_4_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_4_V_d0 = op_V_assign_reg_973;

assign top_5_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_5_V_d0 = op_V_assign_reg_973;

assign top_6_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_6_V_d0 = op_V_assign_reg_973;

assign top_7_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_7_V_d0 = op_V_assign_reg_973;

assign top_8_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_8_V_d0 = op_V_assign_reg_973;

assign top_9_V_address0 = zext_ln113_reg_852_pp0_iter2_reg;

assign top_9_V_d0 = op_V_assign_reg_973;

assign zext_ln109_7_fu_557_p1 = tmp_115_fu_550_p3;

assign zext_ln109_8_fu_572_p1 = add_ln109_3_fu_567_p2;

assign zext_ln109_9_fu_582_p1 = add_ln109_7_fu_576_p2;

assign zext_ln109_fu_546_p1 = tmp_fu_539_p3;

assign zext_ln110_3_fu_596_p1 = add_ln110_fu_590_p2;

assign zext_ln110_fu_587_p1 = select_ln109_reg_767;

assign zext_ln111_3_fu_653_p1 = add_ln111_3_fu_648_p2;

assign zext_ln111_fu_644_p1 = col_fu_639_p2;

assign zext_ln112_5_fu_619_p1 = tmp_117_fu_612_p3;

assign zext_ln112_6_fu_634_p1 = add_ln112_3_fu_629_p2;

assign zext_ln112_fu_608_p1 = tmp_116_fu_601_p3;

assign zext_ln113_fu_695_p1 = add_ln113_fu_691_p2;

assign zext_ln114_fu_709_p1 = add_ln114_fu_705_p2;

assign zext_ln115_5_fu_676_p1 = tmp_119_fu_669_p3;

assign zext_ln115_6_fu_719_p1 = add_ln115_6_reg_847;

assign zext_ln115_fu_665_p1 = tmp_118_fu_658_p3;

assign zext_ln116_fu_723_p1 = add_ln116_reg_877;

assign zext_ln117_fu_727_p1 = add_ln117_reg_887;

always @ (posedge ap_clk) begin
    add_ln109_6_reg_793[0] <= 1'b0;
    zext_ln109_8_reg_798[7:4] <= 4'b0000;
    zext_ln110_reg_809[7:4] <= 4'b0000;
    add_ln112_reg_820[0] <= 1'b0;
    zext_ln111_reg_836[7:4] <= 4'b0000;
    zext_ln113_reg_852[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln113_reg_852_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln113_reg_852_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //pgconv64_16u_s
