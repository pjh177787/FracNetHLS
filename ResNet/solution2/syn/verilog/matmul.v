// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module matmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bottom_0_V_read,
        bottom_1_V_read,
        bottom_2_V_read,
        bottom_3_V_read,
        bottom_4_V_read,
        bottom_5_V_read,
        bottom_6_V_read,
        bottom_7_V_read,
        bottom_8_V_read,
        bottom_9_V_read,
        bottom_10_V_read,
        bottom_11_V_read,
        bottom_12_V_read,
        bottom_13_V_read,
        bottom_14_V_read,
        bottom_15_V_read,
        bottom_16_V_read,
        bottom_17_V_read,
        bottom_18_V_read,
        bottom_19_V_read,
        bottom_20_V_read,
        bottom_21_V_read,
        bottom_22_V_read,
        bottom_23_V_read,
        bottom_24_V_read,
        bottom_25_V_read,
        bottom_26_V_read,
        bottom_27_V_read,
        bottom_28_V_read,
        bottom_29_V_read,
        bottom_30_V_read,
        bottom_31_V_read,
        bottom_32_V_read,
        bottom_33_V_read,
        bottom_34_V_read,
        bottom_35_V_read,
        bottom_36_V_read,
        bottom_37_V_read,
        bottom_38_V_read,
        bottom_39_V_read,
        bottom_40_V_read,
        bottom_41_V_read,
        bottom_42_V_read,
        bottom_43_V_read,
        bottom_44_V_read,
        bottom_45_V_read,
        bottom_46_V_read,
        bottom_47_V_read,
        bottom_48_V_read,
        bottom_49_V_read,
        bottom_50_V_read,
        bottom_51_V_read,
        bottom_52_V_read,
        bottom_53_V_read,
        bottom_54_V_read,
        bottom_55_V_read,
        bottom_56_V_read,
        bottom_57_V_read,
        bottom_58_V_read,
        bottom_59_V_read,
        bottom_60_V_read,
        bottom_61_V_read,
        bottom_62_V_read,
        bottom_63_V_read,
        m_axi_top_AWVALID,
        m_axi_top_AWREADY,
        m_axi_top_AWADDR,
        m_axi_top_AWID,
        m_axi_top_AWLEN,
        m_axi_top_AWSIZE,
        m_axi_top_AWBURST,
        m_axi_top_AWLOCK,
        m_axi_top_AWCACHE,
        m_axi_top_AWPROT,
        m_axi_top_AWQOS,
        m_axi_top_AWREGION,
        m_axi_top_AWUSER,
        m_axi_top_WVALID,
        m_axi_top_WREADY,
        m_axi_top_WDATA,
        m_axi_top_WSTRB,
        m_axi_top_WLAST,
        m_axi_top_WID,
        m_axi_top_WUSER,
        m_axi_top_ARVALID,
        m_axi_top_ARREADY,
        m_axi_top_ARADDR,
        m_axi_top_ARID,
        m_axi_top_ARLEN,
        m_axi_top_ARSIZE,
        m_axi_top_ARBURST,
        m_axi_top_ARLOCK,
        m_axi_top_ARCACHE,
        m_axi_top_ARPROT,
        m_axi_top_ARQOS,
        m_axi_top_ARREGION,
        m_axi_top_ARUSER,
        m_axi_top_RVALID,
        m_axi_top_RREADY,
        m_axi_top_RDATA,
        m_axi_top_RLAST,
        m_axi_top_RID,
        m_axi_top_RUSER,
        m_axi_top_RRESP,
        m_axi_top_BVALID,
        m_axi_top_BREADY,
        m_axi_top_BRESP,
        m_axi_top_BID,
        m_axi_top_BUSER,
        top_offset
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_state5 = 10'd8;
parameter    ap_ST_fsm_pp1_stage0 = 10'd16;
parameter    ap_ST_fsm_state10 = 10'd32;
parameter    ap_ST_fsm_state11 = 10'd64;
parameter    ap_ST_fsm_state12 = 10'd128;
parameter    ap_ST_fsm_state13 = 10'd256;
parameter    ap_ST_fsm_state14 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] bottom_0_V_read;
input  [7:0] bottom_1_V_read;
input  [7:0] bottom_2_V_read;
input  [7:0] bottom_3_V_read;
input  [7:0] bottom_4_V_read;
input  [7:0] bottom_5_V_read;
input  [7:0] bottom_6_V_read;
input  [7:0] bottom_7_V_read;
input  [7:0] bottom_8_V_read;
input  [7:0] bottom_9_V_read;
input  [7:0] bottom_10_V_read;
input  [7:0] bottom_11_V_read;
input  [7:0] bottom_12_V_read;
input  [7:0] bottom_13_V_read;
input  [7:0] bottom_14_V_read;
input  [7:0] bottom_15_V_read;
input  [7:0] bottom_16_V_read;
input  [7:0] bottom_17_V_read;
input  [7:0] bottom_18_V_read;
input  [7:0] bottom_19_V_read;
input  [7:0] bottom_20_V_read;
input  [7:0] bottom_21_V_read;
input  [7:0] bottom_22_V_read;
input  [7:0] bottom_23_V_read;
input  [7:0] bottom_24_V_read;
input  [7:0] bottom_25_V_read;
input  [7:0] bottom_26_V_read;
input  [7:0] bottom_27_V_read;
input  [7:0] bottom_28_V_read;
input  [7:0] bottom_29_V_read;
input  [7:0] bottom_30_V_read;
input  [7:0] bottom_31_V_read;
input  [7:0] bottom_32_V_read;
input  [7:0] bottom_33_V_read;
input  [7:0] bottom_34_V_read;
input  [7:0] bottom_35_V_read;
input  [7:0] bottom_36_V_read;
input  [7:0] bottom_37_V_read;
input  [7:0] bottom_38_V_read;
input  [7:0] bottom_39_V_read;
input  [7:0] bottom_40_V_read;
input  [7:0] bottom_41_V_read;
input  [7:0] bottom_42_V_read;
input  [7:0] bottom_43_V_read;
input  [7:0] bottom_44_V_read;
input  [7:0] bottom_45_V_read;
input  [7:0] bottom_46_V_read;
input  [7:0] bottom_47_V_read;
input  [7:0] bottom_48_V_read;
input  [7:0] bottom_49_V_read;
input  [7:0] bottom_50_V_read;
input  [7:0] bottom_51_V_read;
input  [7:0] bottom_52_V_read;
input  [7:0] bottom_53_V_read;
input  [7:0] bottom_54_V_read;
input  [7:0] bottom_55_V_read;
input  [7:0] bottom_56_V_read;
input  [7:0] bottom_57_V_read;
input  [7:0] bottom_58_V_read;
input  [7:0] bottom_59_V_read;
input  [7:0] bottom_60_V_read;
input  [7:0] bottom_61_V_read;
input  [7:0] bottom_62_V_read;
input  [7:0] bottom_63_V_read;
output   m_axi_top_AWVALID;
input   m_axi_top_AWREADY;
output  [31:0] m_axi_top_AWADDR;
output  [0:0] m_axi_top_AWID;
output  [31:0] m_axi_top_AWLEN;
output  [2:0] m_axi_top_AWSIZE;
output  [1:0] m_axi_top_AWBURST;
output  [1:0] m_axi_top_AWLOCK;
output  [3:0] m_axi_top_AWCACHE;
output  [2:0] m_axi_top_AWPROT;
output  [3:0] m_axi_top_AWQOS;
output  [3:0] m_axi_top_AWREGION;
output  [0:0] m_axi_top_AWUSER;
output   m_axi_top_WVALID;
input   m_axi_top_WREADY;
output  [31:0] m_axi_top_WDATA;
output  [3:0] m_axi_top_WSTRB;
output   m_axi_top_WLAST;
output  [0:0] m_axi_top_WID;
output  [0:0] m_axi_top_WUSER;
output   m_axi_top_ARVALID;
input   m_axi_top_ARREADY;
output  [31:0] m_axi_top_ARADDR;
output  [0:0] m_axi_top_ARID;
output  [31:0] m_axi_top_ARLEN;
output  [2:0] m_axi_top_ARSIZE;
output  [1:0] m_axi_top_ARBURST;
output  [1:0] m_axi_top_ARLOCK;
output  [3:0] m_axi_top_ARCACHE;
output  [2:0] m_axi_top_ARPROT;
output  [3:0] m_axi_top_ARQOS;
output  [3:0] m_axi_top_ARREGION;
output  [0:0] m_axi_top_ARUSER;
input   m_axi_top_RVALID;
output   m_axi_top_RREADY;
input  [31:0] m_axi_top_RDATA;
input   m_axi_top_RLAST;
input  [0:0] m_axi_top_RID;
input  [0:0] m_axi_top_RUSER;
input  [1:0] m_axi_top_RRESP;
input   m_axi_top_BVALID;
output   m_axi_top_BREADY;
input  [1:0] m_axi_top_BRESP;
input  [0:0] m_axi_top_BID;
input  [0:0] m_axi_top_BUSER;
input  [29:0] top_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_top_AWVALID;
reg m_axi_top_WVALID;
reg m_axi_top_BREADY;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] linear_weight_V_0_address0;
reg    linear_weight_V_0_ce0;
wire   [0:0] linear_weight_V_0_q0;
wire   [5:0] linear_weight_V_1_address0;
reg    linear_weight_V_1_ce0;
wire   [0:0] linear_weight_V_1_q0;
wire   [5:0] linear_weight_V_2_address0;
reg    linear_weight_V_2_ce0;
wire   [0:0] linear_weight_V_2_q0;
wire   [5:0] linear_weight_V_3_address0;
reg    linear_weight_V_3_ce0;
wire   [0:0] linear_weight_V_3_q0;
wire   [5:0] linear_weight_V_4_address0;
reg    linear_weight_V_4_ce0;
wire   [0:0] linear_weight_V_4_q0;
wire   [5:0] linear_weight_V_5_address0;
reg    linear_weight_V_5_ce0;
wire   [0:0] linear_weight_V_5_q0;
wire   [5:0] linear_weight_V_6_address0;
reg    linear_weight_V_6_ce0;
wire   [0:0] linear_weight_V_6_q0;
wire   [5:0] linear_weight_V_7_address0;
reg    linear_weight_V_7_ce0;
wire   [0:0] linear_weight_V_7_q0;
wire   [5:0] linear_weight_V_8_address0;
reg    linear_weight_V_8_ce0;
wire   [0:0] linear_weight_V_8_q0;
wire   [5:0] linear_weight_V_9_address0;
reg    linear_weight_V_9_ce0;
wire   [0:0] linear_weight_V_9_q0;
reg    top_blk_n_AW;
wire    ap_CS_fsm_state5;
reg    top_blk_n_W;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln30_reg_5089;
reg   [0:0] icmp_ln30_reg_5089_pp1_iter2_reg;
reg    top_blk_n_B;
wire    ap_CS_fsm_state14;
reg   [11:0] buf_9_V_0_reg_854;
reg   [11:0] buf_8_V_0_reg_866;
reg   [11:0] buf_7_V_0_reg_878;
reg   [11:0] buf_6_V_0_reg_890;
reg   [11:0] buf_5_V_0_reg_902;
reg   [11:0] buf_4_V_0_reg_914;
reg   [11:0] buf_3_V_0_reg_926;
reg   [11:0] buf_2_V_0_reg_938;
reg   [11:0] buf_1_V_0_reg_950;
reg   [11:0] buf_0_V_0_reg_962;
reg   [6:0] cii_0_reg_974;
reg   [3:0] coo2_0_reg_985;
wire  signed [11:0] bottom_63_V_read_ca_fu_996_p1;
reg  signed [11:0] bottom_63_V_read_ca_reg_4548;
wire  signed [11:0] bottom_62_V_read_ca_fu_1000_p1;
reg  signed [11:0] bottom_62_V_read_ca_reg_4553;
wire  signed [11:0] bottom_61_V_read_ca_fu_1004_p1;
reg  signed [11:0] bottom_61_V_read_ca_reg_4558;
wire  signed [11:0] bottom_60_V_read_ca_fu_1008_p1;
reg  signed [11:0] bottom_60_V_read_ca_reg_4563;
wire  signed [11:0] bottom_59_V_read_ca_fu_1012_p1;
reg  signed [11:0] bottom_59_V_read_ca_reg_4568;
wire  signed [11:0] bottom_58_V_read_ca_fu_1016_p1;
reg  signed [11:0] bottom_58_V_read_ca_reg_4573;
wire  signed [11:0] bottom_57_V_read_ca_fu_1020_p1;
reg  signed [11:0] bottom_57_V_read_ca_reg_4578;
wire  signed [11:0] bottom_56_V_read_ca_fu_1024_p1;
reg  signed [11:0] bottom_56_V_read_ca_reg_4583;
wire  signed [11:0] bottom_55_V_read_ca_fu_1028_p1;
reg  signed [11:0] bottom_55_V_read_ca_reg_4588;
wire  signed [11:0] bottom_54_V_read_ca_fu_1032_p1;
reg  signed [11:0] bottom_54_V_read_ca_reg_4593;
wire  signed [11:0] bottom_53_V_read_ca_fu_1036_p1;
reg  signed [11:0] bottom_53_V_read_ca_reg_4598;
wire  signed [11:0] bottom_52_V_read_ca_fu_1040_p1;
reg  signed [11:0] bottom_52_V_read_ca_reg_4603;
wire  signed [11:0] bottom_51_V_read_ca_fu_1044_p1;
reg  signed [11:0] bottom_51_V_read_ca_reg_4608;
wire  signed [11:0] bottom_50_V_read_ca_fu_1048_p1;
reg  signed [11:0] bottom_50_V_read_ca_reg_4613;
wire  signed [11:0] bottom_49_V_read_ca_fu_1052_p1;
reg  signed [11:0] bottom_49_V_read_ca_reg_4618;
wire  signed [11:0] bottom_48_V_read_ca_fu_1056_p1;
reg  signed [11:0] bottom_48_V_read_ca_reg_4623;
wire  signed [11:0] bottom_47_V_read_ca_fu_1060_p1;
reg  signed [11:0] bottom_47_V_read_ca_reg_4628;
wire  signed [11:0] bottom_46_V_read_ca_fu_1064_p1;
reg  signed [11:0] bottom_46_V_read_ca_reg_4633;
wire  signed [11:0] bottom_45_V_read_ca_fu_1068_p1;
reg  signed [11:0] bottom_45_V_read_ca_reg_4638;
wire  signed [11:0] bottom_44_V_read_ca_fu_1072_p1;
reg  signed [11:0] bottom_44_V_read_ca_reg_4643;
wire  signed [11:0] bottom_43_V_read_ca_fu_1076_p1;
reg  signed [11:0] bottom_43_V_read_ca_reg_4648;
wire  signed [11:0] bottom_42_V_read_ca_fu_1080_p1;
reg  signed [11:0] bottom_42_V_read_ca_reg_4653;
wire  signed [11:0] bottom_41_V_read_ca_fu_1084_p1;
reg  signed [11:0] bottom_41_V_read_ca_reg_4658;
wire  signed [11:0] bottom_40_V_read_ca_fu_1088_p1;
reg  signed [11:0] bottom_40_V_read_ca_reg_4663;
wire  signed [11:0] bottom_39_V_read_ca_fu_1092_p1;
reg  signed [11:0] bottom_39_V_read_ca_reg_4668;
wire  signed [11:0] bottom_38_V_read_ca_fu_1096_p1;
reg  signed [11:0] bottom_38_V_read_ca_reg_4673;
wire  signed [11:0] bottom_37_V_read_ca_fu_1100_p1;
reg  signed [11:0] bottom_37_V_read_ca_reg_4678;
wire  signed [11:0] bottom_36_V_read_ca_fu_1104_p1;
reg  signed [11:0] bottom_36_V_read_ca_reg_4683;
wire  signed [11:0] bottom_35_V_read_ca_fu_1108_p1;
reg  signed [11:0] bottom_35_V_read_ca_reg_4688;
wire  signed [11:0] bottom_34_V_read_ca_fu_1112_p1;
reg  signed [11:0] bottom_34_V_read_ca_reg_4693;
wire  signed [11:0] bottom_33_V_read_ca_fu_1116_p1;
reg  signed [11:0] bottom_33_V_read_ca_reg_4698;
wire  signed [11:0] bottom_32_V_read_ca_fu_1120_p1;
reg  signed [11:0] bottom_32_V_read_ca_reg_4703;
wire  signed [11:0] bottom_31_V_read_ca_fu_1124_p1;
reg  signed [11:0] bottom_31_V_read_ca_reg_4708;
wire  signed [11:0] bottom_30_V_read_ca_fu_1128_p1;
reg  signed [11:0] bottom_30_V_read_ca_reg_4713;
wire  signed [11:0] bottom_29_V_read_ca_fu_1132_p1;
reg  signed [11:0] bottom_29_V_read_ca_reg_4718;
wire  signed [11:0] bottom_28_V_read_ca_fu_1136_p1;
reg  signed [11:0] bottom_28_V_read_ca_reg_4723;
wire  signed [11:0] bottom_27_V_read_ca_fu_1140_p1;
reg  signed [11:0] bottom_27_V_read_ca_reg_4728;
wire  signed [11:0] bottom_26_V_read_ca_fu_1144_p1;
reg  signed [11:0] bottom_26_V_read_ca_reg_4733;
wire  signed [11:0] bottom_25_V_read_ca_fu_1148_p1;
reg  signed [11:0] bottom_25_V_read_ca_reg_4738;
wire  signed [11:0] bottom_24_V_read_ca_fu_1152_p1;
reg  signed [11:0] bottom_24_V_read_ca_reg_4743;
wire  signed [11:0] bottom_23_V_read_ca_fu_1156_p1;
reg  signed [11:0] bottom_23_V_read_ca_reg_4748;
wire  signed [11:0] bottom_22_V_read_ca_fu_1160_p1;
reg  signed [11:0] bottom_22_V_read_ca_reg_4753;
wire  signed [11:0] bottom_21_V_read_ca_fu_1164_p1;
reg  signed [11:0] bottom_21_V_read_ca_reg_4758;
wire  signed [11:0] bottom_20_V_read_ca_fu_1168_p1;
reg  signed [11:0] bottom_20_V_read_ca_reg_4763;
wire  signed [11:0] bottom_19_V_read_ca_fu_1172_p1;
reg  signed [11:0] bottom_19_V_read_ca_reg_4768;
wire  signed [11:0] bottom_18_V_read_ca_fu_1176_p1;
reg  signed [11:0] bottom_18_V_read_ca_reg_4773;
wire  signed [11:0] bottom_17_V_read_ca_fu_1180_p1;
reg  signed [11:0] bottom_17_V_read_ca_reg_4778;
wire  signed [11:0] bottom_16_V_read_ca_fu_1184_p1;
reg  signed [11:0] bottom_16_V_read_ca_reg_4783;
wire  signed [11:0] bottom_15_V_read_ca_fu_1188_p1;
reg  signed [11:0] bottom_15_V_read_ca_reg_4788;
wire  signed [11:0] bottom_14_V_read_ca_fu_1192_p1;
reg  signed [11:0] bottom_14_V_read_ca_reg_4793;
wire  signed [11:0] bottom_13_V_read_ca_fu_1196_p1;
reg  signed [11:0] bottom_13_V_read_ca_reg_4798;
wire  signed [11:0] bottom_12_V_read_ca_fu_1200_p1;
reg  signed [11:0] bottom_12_V_read_ca_reg_4803;
wire  signed [11:0] bottom_11_V_read_ca_fu_1204_p1;
reg  signed [11:0] bottom_11_V_read_ca_reg_4808;
wire  signed [11:0] bottom_10_V_read_ca_fu_1208_p1;
reg  signed [11:0] bottom_10_V_read_ca_reg_4813;
wire  signed [11:0] bottom_9_V_read_cas_fu_1212_p1;
reg  signed [11:0] bottom_9_V_read_cas_reg_4818;
wire  signed [11:0] bottom_8_V_read_cas_fu_1216_p1;
reg  signed [11:0] bottom_8_V_read_cas_reg_4823;
wire  signed [11:0] bottom_7_V_read_cas_fu_1220_p1;
reg  signed [11:0] bottom_7_V_read_cas_reg_4828;
wire  signed [11:0] bottom_6_V_read_cas_fu_1224_p1;
reg  signed [11:0] bottom_6_V_read_cas_reg_4833;
wire  signed [11:0] bottom_5_V_read_cas_fu_1228_p1;
reg  signed [11:0] bottom_5_V_read_cas_reg_4838;
wire  signed [11:0] bottom_4_V_read_cas_fu_1232_p1;
reg  signed [11:0] bottom_4_V_read_cas_reg_4843;
wire  signed [11:0] bottom_3_V_read_cas_fu_1236_p1;
reg  signed [11:0] bottom_3_V_read_cas_reg_4848;
wire  signed [11:0] bottom_2_V_read_cas_fu_1240_p1;
reg  signed [11:0] bottom_2_V_read_cas_reg_4853;
wire  signed [11:0] bottom_1_V_read_cas_fu_1244_p1;
reg  signed [11:0] bottom_1_V_read_cas_reg_4858;
wire  signed [11:0] bottom_0_V_read_cas_fu_1248_p1;
reg  signed [11:0] bottom_0_V_read_cas_reg_4863;
wire   [0:0] icmp_ln23_fu_1252_p2;
reg   [0:0] icmp_ln23_reg_4868;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] cii_fu_1258_p2;
reg   [6:0] cii_reg_4872;
reg    ap_enable_reg_pp0_iter0;
wire  signed [11:0] tmp_5_fu_1282_p66;
reg  signed [11:0] tmp_5_reg_4877;
wire  signed [21:0] select_ln1118_fu_1368_p3;
reg  signed [21:0] select_ln1118_reg_4933;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [19:0] trunc_ln1192_fu_1376_p1;
reg   [19:0] trunc_ln1192_reg_4938;
wire  signed [21:0] select_ln1118_1_fu_1380_p3;
reg  signed [21:0] select_ln1118_1_reg_4943;
wire   [19:0] trunc_ln1192_1_fu_1388_p1;
reg   [19:0] trunc_ln1192_1_reg_4948;
wire  signed [21:0] select_ln1118_2_fu_1392_p3;
reg  signed [21:0] select_ln1118_2_reg_4953;
wire   [19:0] trunc_ln1192_2_fu_1400_p1;
reg   [19:0] trunc_ln1192_2_reg_4958;
wire  signed [21:0] select_ln1118_3_fu_1404_p3;
reg  signed [21:0] select_ln1118_3_reg_4963;
wire   [19:0] trunc_ln1192_3_fu_1412_p1;
reg   [19:0] trunc_ln1192_3_reg_4968;
wire  signed [21:0] select_ln1118_4_fu_1416_p3;
reg  signed [21:0] select_ln1118_4_reg_4973;
wire   [19:0] trunc_ln1192_4_fu_1424_p1;
reg   [19:0] trunc_ln1192_4_reg_4978;
wire  signed [21:0] select_ln1118_5_fu_1428_p3;
reg  signed [21:0] select_ln1118_5_reg_4983;
wire   [19:0] trunc_ln1192_5_fu_1436_p1;
reg   [19:0] trunc_ln1192_5_reg_4988;
wire  signed [21:0] select_ln1118_6_fu_1440_p3;
reg  signed [21:0] select_ln1118_6_reg_4993;
wire   [19:0] trunc_ln1192_6_fu_1448_p1;
reg   [19:0] trunc_ln1192_6_reg_4998;
wire  signed [21:0] select_ln1118_7_fu_1452_p3;
reg  signed [21:0] select_ln1118_7_reg_5003;
wire   [19:0] trunc_ln1192_7_fu_1460_p1;
reg   [19:0] trunc_ln1192_7_reg_5008;
wire  signed [21:0] select_ln1118_8_fu_1464_p3;
reg  signed [21:0] select_ln1118_8_reg_5013;
wire   [19:0] trunc_ln1192_8_fu_1472_p1;
reg   [19:0] trunc_ln1192_8_reg_5018;
wire  signed [21:0] select_ln1118_9_fu_1476_p3;
reg  signed [21:0] select_ln1118_9_reg_5023;
wire   [19:0] trunc_ln1192_9_fu_1484_p1;
reg   [19:0] trunc_ln1192_9_reg_5028;
wire   [11:0] buf_0_V_fu_1752_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [11:0] buf_1_V_fu_2024_p3;
wire   [11:0] buf_2_V_fu_2296_p3;
wire   [11:0] buf_3_V_fu_2568_p3;
wire   [11:0] buf_4_V_fu_2840_p3;
wire   [11:0] buf_5_V_fu_3112_p3;
wire   [11:0] buf_6_V_fu_3384_p3;
wire   [11:0] buf_7_V_fu_3656_p3;
wire   [11:0] buf_8_V_fu_3928_p3;
wire   [11:0] buf_9_V_fu_4200_p3;
wire   [0:0] icmp_ln30_fu_4218_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
reg    ap_block_state9_io;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln30_reg_5089_pp1_iter1_reg;
wire   [3:0] coo_fu_4224_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln935_fu_4256_p2;
reg   [0:0] icmp_ln935_reg_5098;
reg   [0:0] icmp_ln935_reg_5098_pp1_iter1_reg;
wire   [0:0] p_Result_16_fu_4262_p3;
reg   [0:0] p_Result_16_reg_5103;
reg   [0:0] p_Result_16_reg_5103_pp1_iter1_reg;
wire   [11:0] tmp_V_5_fu_4276_p3;
reg   [11:0] tmp_V_5_reg_5108;
reg   [11:0] tmp_V_5_reg_5108_pp1_iter1_reg;
reg   [31:0] l_fu_4302_p3;
reg   [31:0] l_reg_5115;
wire   [7:0] trunc_ln943_fu_4310_p1;
reg   [7:0] trunc_ln943_reg_5120;
reg   [7:0] trunc_ln943_reg_5120_pp1_iter1_reg;
wire   [31:0] or_ln_fu_4421_p3;
reg   [31:0] or_ln_reg_5125;
wire   [0:0] icmp_ln958_fu_4429_p2;
reg   [0:0] icmp_ln958_reg_5130;
wire   [31:0] add_ln958_fu_4435_p2;
reg   [31:0] add_ln958_reg_5135;
wire   [31:0] sub_ln958_fu_4441_p2;
reg   [31:0] sub_ln958_reg_5140;
wire   [31:0] select_ln935_fu_4536_p3;
reg   [31:0] select_ln935_reg_5145;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage1_subdone;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_cii_0_phi_fu_978_p4;
wire   [63:0] zext_ln27_fu_1264_p1;
wire   [63:0] zext_ln32_fu_4208_p1;
wire    ap_block_pp1_stage0_01001;
wire   [5:0] tmp_5_fu_1282_p65;
wire    ap_block_pp0_stage1;
wire   [21:0] shl_ln_fu_1355_p3;
wire  signed [21:0] sext_ln1117_fu_1352_p1;
wire   [21:0] sub_ln1118_fu_1362_p2;
wire  signed [18:0] shl_ln1_fu_1491_p3;
wire  signed [22:0] sext_ln728_fu_1499_p1;
wire  signed [22:0] sext_ln1118_fu_1488_p1;
wire  signed [19:0] sext_ln1192_fu_1503_p1;
wire   [22:0] add_ln1192_fu_1507_p2;
wire   [0:0] tmp_123_fu_1544_p3;
wire   [11:0] zext_ln415_fu_1552_p1;
wire   [11:0] trunc_ln7_fu_1526_p4;
wire   [11:0] add_ln415_fu_1556_p2;
wire   [0:0] tmp_124_fu_1562_p3;
wire   [0:0] tmp_122_fu_1536_p3;
wire   [0:0] xor_ln416_fu_1570_p2;
wire   [2:0] tmp_6_fu_1590_p4;
wire   [3:0] tmp_8_fu_1606_p4;
wire   [0:0] and_ln416_fu_1576_p2;
wire   [0:0] icmp_ln879_1_fu_1616_p2;
wire   [0:0] icmp_ln768_fu_1622_p2;
wire   [19:0] add_ln1192_40_fu_1513_p2;
wire   [0:0] tmp_126_fu_1636_p3;
wire   [0:0] icmp_ln879_fu_1600_p2;
wire   [0:0] xor_ln779_fu_1644_p2;
wire   [0:0] and_ln779_fu_1650_p2;
wire   [0:0] select_ln777_fu_1628_p3;
wire   [0:0] tmp_125_fu_1582_p3;
wire   [0:0] xor_ln785_fu_1670_p2;
wire   [0:0] tmp_121_fu_1518_p3;
wire   [0:0] or_ln785_fu_1676_p2;
wire   [0:0] xor_ln785_4_fu_1682_p2;
wire   [0:0] select_ln416_fu_1656_p3;
wire   [0:0] and_ln781_fu_1664_p2;
wire   [0:0] and_ln786_fu_1694_p2;
wire   [0:0] or_ln786_fu_1700_p2;
wire   [0:0] xor_ln786_fu_1706_p2;
wire   [0:0] and_ln786_34_fu_1712_p2;
wire   [0:0] and_ln785_fu_1688_p2;
wire   [0:0] or_ln340_38_fu_1724_p2;
wire   [0:0] or_ln340_fu_1718_p2;
wire   [0:0] or_ln340_39_fu_1730_p2;
wire   [11:0] select_ln340_fu_1736_p3;
wire   [11:0] select_ln388_fu_1744_p3;
wire  signed [18:0] shl_ln728_s_fu_1763_p3;
wire  signed [22:0] sext_ln728_1_fu_1771_p1;
wire  signed [22:0] sext_ln1118_1_fu_1760_p1;
wire  signed [19:0] sext_ln1192_1_fu_1775_p1;
wire   [22:0] add_ln1192_31_fu_1779_p2;
wire   [0:0] tmp_129_fu_1816_p3;
wire   [11:0] zext_ln415_1_fu_1824_p1;
wire   [11:0] trunc_ln708_1_fu_1798_p4;
wire   [11:0] add_ln415_1_fu_1828_p2;
wire   [0:0] tmp_130_fu_1834_p3;
wire   [0:0] tmp_128_fu_1808_p3;
wire   [0:0] xor_ln416_1_fu_1842_p2;
wire   [2:0] tmp_9_fu_1862_p4;
wire   [3:0] tmp_1_fu_1878_p4;
wire   [0:0] and_ln416_1_fu_1848_p2;
wire   [0:0] icmp_ln879_3_fu_1888_p2;
wire   [0:0] icmp_ln768_1_fu_1894_p2;
wire   [19:0] add_ln1192_41_fu_1785_p2;
wire   [0:0] tmp_132_fu_1908_p3;
wire   [0:0] icmp_ln879_2_fu_1872_p2;
wire   [0:0] xor_ln779_1_fu_1916_p2;
wire   [0:0] and_ln779_1_fu_1922_p2;
wire   [0:0] select_ln777_1_fu_1900_p3;
wire   [0:0] tmp_131_fu_1854_p3;
wire   [0:0] xor_ln785_1_fu_1942_p2;
wire   [0:0] tmp_127_fu_1790_p3;
wire   [0:0] or_ln785_1_fu_1948_p2;
wire   [0:0] xor_ln785_10_fu_1954_p2;
wire   [0:0] select_ln416_1_fu_1928_p3;
wire   [0:0] and_ln781_1_fu_1936_p2;
wire   [0:0] and_ln786_1_fu_1966_p2;
wire   [0:0] or_ln786_1_fu_1972_p2;
wire   [0:0] xor_ln786_18_fu_1978_p2;
wire   [0:0] and_ln786_35_fu_1984_p2;
wire   [0:0] and_ln785_1_fu_1960_p2;
wire   [0:0] or_ln340_40_fu_1996_p2;
wire   [0:0] or_ln340_1_fu_1990_p2;
wire   [0:0] or_ln340_41_fu_2002_p2;
wire   [11:0] select_ln340_1_fu_2008_p3;
wire   [11:0] select_ln388_1_fu_2016_p3;
wire  signed [18:0] shl_ln728_1_fu_2035_p3;
wire  signed [22:0] sext_ln728_2_fu_2043_p1;
wire  signed [22:0] sext_ln1118_2_fu_2032_p1;
wire  signed [19:0] sext_ln1192_2_fu_2047_p1;
wire   [22:0] add_ln1192_32_fu_2051_p2;
wire   [0:0] tmp_135_fu_2088_p3;
wire   [11:0] zext_ln415_2_fu_2096_p1;
wire   [11:0] trunc_ln708_2_fu_2070_p4;
wire   [11:0] add_ln415_2_fu_2100_p2;
wire   [0:0] tmp_136_fu_2106_p3;
wire   [0:0] tmp_134_fu_2080_p3;
wire   [0:0] xor_ln416_2_fu_2114_p2;
wire   [2:0] tmp_2_fu_2134_p4;
wire   [3:0] tmp_3_fu_2150_p4;
wire   [0:0] and_ln416_2_fu_2120_p2;
wire   [0:0] icmp_ln879_5_fu_2160_p2;
wire   [0:0] icmp_ln768_2_fu_2166_p2;
wire   [19:0] add_ln1192_42_fu_2057_p2;
wire   [0:0] tmp_138_fu_2180_p3;
wire   [0:0] icmp_ln879_4_fu_2144_p2;
wire   [0:0] xor_ln779_2_fu_2188_p2;
wire   [0:0] and_ln779_2_fu_2194_p2;
wire   [0:0] select_ln777_2_fu_2172_p3;
wire   [0:0] tmp_137_fu_2126_p3;
wire   [0:0] xor_ln785_2_fu_2214_p2;
wire   [0:0] tmp_133_fu_2062_p3;
wire   [0:0] or_ln785_2_fu_2220_p2;
wire   [0:0] xor_ln785_11_fu_2226_p2;
wire   [0:0] select_ln416_2_fu_2200_p3;
wire   [0:0] and_ln781_2_fu_2208_p2;
wire   [0:0] and_ln786_2_fu_2238_p2;
wire   [0:0] or_ln786_2_fu_2244_p2;
wire   [0:0] xor_ln786_19_fu_2250_p2;
wire   [0:0] and_ln786_36_fu_2256_p2;
wire   [0:0] and_ln785_2_fu_2232_p2;
wire   [0:0] or_ln340_42_fu_2268_p2;
wire   [0:0] or_ln340_2_fu_2262_p2;
wire   [0:0] or_ln340_43_fu_2274_p2;
wire   [11:0] select_ln340_2_fu_2280_p3;
wire   [11:0] select_ln388_2_fu_2288_p3;
wire  signed [18:0] shl_ln728_2_fu_2307_p3;
wire  signed [22:0] sext_ln728_3_fu_2315_p1;
wire  signed [22:0] sext_ln1118_3_fu_2304_p1;
wire  signed [19:0] sext_ln1192_3_fu_2319_p1;
wire   [22:0] add_ln1192_33_fu_2323_p2;
wire   [0:0] tmp_141_fu_2360_p3;
wire   [11:0] zext_ln415_3_fu_2368_p1;
wire   [11:0] trunc_ln708_3_fu_2342_p4;
wire   [11:0] add_ln415_3_fu_2372_p2;
wire   [0:0] tmp_142_fu_2378_p3;
wire   [0:0] tmp_140_fu_2352_p3;
wire   [0:0] xor_ln416_3_fu_2386_p2;
wire   [2:0] tmp_4_fu_2406_p4;
wire   [3:0] tmp_10_fu_2422_p4;
wire   [0:0] and_ln416_3_fu_2392_p2;
wire   [0:0] icmp_ln879_7_fu_2432_p2;
wire   [0:0] icmp_ln768_3_fu_2438_p2;
wire   [19:0] add_ln1192_43_fu_2329_p2;
wire   [0:0] tmp_144_fu_2452_p3;
wire   [0:0] icmp_ln879_6_fu_2416_p2;
wire   [0:0] xor_ln779_3_fu_2460_p2;
wire   [0:0] and_ln779_3_fu_2466_p2;
wire   [0:0] select_ln777_3_fu_2444_p3;
wire   [0:0] tmp_143_fu_2398_p3;
wire   [0:0] xor_ln785_3_fu_2486_p2;
wire   [0:0] tmp_139_fu_2334_p3;
wire   [0:0] or_ln785_3_fu_2492_p2;
wire   [0:0] xor_ln785_12_fu_2498_p2;
wire   [0:0] select_ln416_3_fu_2472_p3;
wire   [0:0] and_ln781_3_fu_2480_p2;
wire   [0:0] and_ln786_3_fu_2510_p2;
wire   [0:0] or_ln786_3_fu_2516_p2;
wire   [0:0] xor_ln786_20_fu_2522_p2;
wire   [0:0] and_ln786_37_fu_2528_p2;
wire   [0:0] and_ln785_3_fu_2504_p2;
wire   [0:0] or_ln340_44_fu_2540_p2;
wire   [0:0] or_ln340_3_fu_2534_p2;
wire   [0:0] or_ln340_45_fu_2546_p2;
wire   [11:0] select_ln340_3_fu_2552_p3;
wire   [11:0] select_ln388_3_fu_2560_p3;
wire  signed [18:0] shl_ln728_3_fu_2579_p3;
wire  signed [22:0] sext_ln728_4_fu_2587_p1;
wire  signed [22:0] sext_ln1118_4_fu_2576_p1;
wire  signed [19:0] sext_ln1192_4_fu_2591_p1;
wire   [22:0] add_ln1192_34_fu_2595_p2;
wire   [0:0] tmp_147_fu_2632_p3;
wire   [11:0] zext_ln415_4_fu_2640_p1;
wire   [11:0] trunc_ln708_4_fu_2614_p4;
wire   [11:0] add_ln415_4_fu_2644_p2;
wire   [0:0] tmp_148_fu_2650_p3;
wire   [0:0] tmp_146_fu_2624_p3;
wire   [0:0] xor_ln416_4_fu_2658_p2;
wire   [2:0] tmp_11_fu_2678_p4;
wire   [3:0] tmp_12_fu_2694_p4;
wire   [0:0] and_ln416_4_fu_2664_p2;
wire   [0:0] icmp_ln879_9_fu_2704_p2;
wire   [0:0] icmp_ln768_4_fu_2710_p2;
wire   [19:0] add_ln1192_44_fu_2601_p2;
wire   [0:0] tmp_150_fu_2724_p3;
wire   [0:0] icmp_ln879_8_fu_2688_p2;
wire   [0:0] xor_ln779_4_fu_2732_p2;
wire   [0:0] and_ln779_4_fu_2738_p2;
wire   [0:0] select_ln777_4_fu_2716_p3;
wire   [0:0] tmp_149_fu_2670_p3;
wire   [0:0] xor_ln785_13_fu_2758_p2;
wire   [0:0] tmp_145_fu_2606_p3;
wire   [0:0] or_ln785_4_fu_2764_p2;
wire   [0:0] xor_ln785_14_fu_2770_p2;
wire   [0:0] select_ln416_4_fu_2744_p3;
wire   [0:0] and_ln781_4_fu_2752_p2;
wire   [0:0] and_ln786_4_fu_2782_p2;
wire   [0:0] or_ln786_4_fu_2788_p2;
wire   [0:0] xor_ln786_21_fu_2794_p2;
wire   [0:0] and_ln786_38_fu_2800_p2;
wire   [0:0] and_ln785_4_fu_2776_p2;
wire   [0:0] or_ln340_46_fu_2812_p2;
wire   [0:0] or_ln340_4_fu_2806_p2;
wire   [0:0] or_ln340_47_fu_2818_p2;
wire   [11:0] select_ln340_4_fu_2824_p3;
wire   [11:0] select_ln388_4_fu_2832_p3;
wire  signed [18:0] shl_ln728_4_fu_2851_p3;
wire  signed [22:0] sext_ln728_5_fu_2859_p1;
wire  signed [22:0] sext_ln1118_5_fu_2848_p1;
wire  signed [19:0] sext_ln1192_5_fu_2863_p1;
wire   [22:0] add_ln1192_35_fu_2867_p2;
wire   [0:0] tmp_153_fu_2904_p3;
wire   [11:0] zext_ln415_5_fu_2912_p1;
wire   [11:0] trunc_ln708_5_fu_2886_p4;
wire   [11:0] add_ln415_5_fu_2916_p2;
wire   [0:0] tmp_154_fu_2922_p3;
wire   [0:0] tmp_152_fu_2896_p3;
wire   [0:0] xor_ln416_5_fu_2930_p2;
wire   [2:0] tmp_13_fu_2950_p4;
wire   [3:0] tmp_14_fu_2966_p4;
wire   [0:0] and_ln416_5_fu_2936_p2;
wire   [0:0] icmp_ln879_11_fu_2976_p2;
wire   [0:0] icmp_ln768_5_fu_2982_p2;
wire   [19:0] add_ln1192_45_fu_2873_p2;
wire   [0:0] tmp_156_fu_2996_p3;
wire   [0:0] icmp_ln879_10_fu_2960_p2;
wire   [0:0] xor_ln779_5_fu_3004_p2;
wire   [0:0] and_ln779_5_fu_3010_p2;
wire   [0:0] select_ln777_5_fu_2988_p3;
wire   [0:0] tmp_155_fu_2942_p3;
wire   [0:0] xor_ln785_5_fu_3030_p2;
wire   [0:0] tmp_151_fu_2878_p3;
wire   [0:0] or_ln785_5_fu_3036_p2;
wire   [0:0] xor_ln785_15_fu_3042_p2;
wire   [0:0] select_ln416_5_fu_3016_p3;
wire   [0:0] and_ln781_5_fu_3024_p2;
wire   [0:0] and_ln786_5_fu_3054_p2;
wire   [0:0] or_ln786_5_fu_3060_p2;
wire   [0:0] xor_ln786_22_fu_3066_p2;
wire   [0:0] and_ln786_39_fu_3072_p2;
wire   [0:0] and_ln785_5_fu_3048_p2;
wire   [0:0] or_ln340_48_fu_3084_p2;
wire   [0:0] or_ln340_5_fu_3078_p2;
wire   [0:0] or_ln340_49_fu_3090_p2;
wire   [11:0] select_ln340_5_fu_3096_p3;
wire   [11:0] select_ln388_5_fu_3104_p3;
wire  signed [18:0] shl_ln728_5_fu_3123_p3;
wire  signed [22:0] sext_ln728_6_fu_3131_p1;
wire  signed [22:0] sext_ln1118_6_fu_3120_p1;
wire  signed [19:0] sext_ln1192_6_fu_3135_p1;
wire   [22:0] add_ln1192_36_fu_3139_p2;
wire   [0:0] tmp_159_fu_3176_p3;
wire   [11:0] zext_ln415_6_fu_3184_p1;
wire   [11:0] trunc_ln708_6_fu_3158_p4;
wire   [11:0] add_ln415_6_fu_3188_p2;
wire   [0:0] tmp_160_fu_3194_p3;
wire   [0:0] tmp_158_fu_3168_p3;
wire   [0:0] xor_ln416_6_fu_3202_p2;
wire   [2:0] tmp_15_fu_3222_p4;
wire   [3:0] tmp_16_fu_3238_p4;
wire   [0:0] and_ln416_6_fu_3208_p2;
wire   [0:0] icmp_ln879_13_fu_3248_p2;
wire   [0:0] icmp_ln768_6_fu_3254_p2;
wire   [19:0] add_ln1192_46_fu_3145_p2;
wire   [0:0] tmp_162_fu_3268_p3;
wire   [0:0] icmp_ln879_12_fu_3232_p2;
wire   [0:0] xor_ln779_6_fu_3276_p2;
wire   [0:0] and_ln779_6_fu_3282_p2;
wire   [0:0] select_ln777_6_fu_3260_p3;
wire   [0:0] tmp_161_fu_3214_p3;
wire   [0:0] xor_ln785_6_fu_3302_p2;
wire   [0:0] tmp_157_fu_3150_p3;
wire   [0:0] or_ln785_6_fu_3308_p2;
wire   [0:0] xor_ln785_16_fu_3314_p2;
wire   [0:0] select_ln416_6_fu_3288_p3;
wire   [0:0] and_ln781_6_fu_3296_p2;
wire   [0:0] and_ln786_6_fu_3326_p2;
wire   [0:0] or_ln786_6_fu_3332_p2;
wire   [0:0] xor_ln786_23_fu_3338_p2;
wire   [0:0] and_ln786_40_fu_3344_p2;
wire   [0:0] and_ln785_6_fu_3320_p2;
wire   [0:0] or_ln340_50_fu_3356_p2;
wire   [0:0] or_ln340_6_fu_3350_p2;
wire   [0:0] or_ln340_51_fu_3362_p2;
wire   [11:0] select_ln340_6_fu_3368_p3;
wire   [11:0] select_ln388_6_fu_3376_p3;
wire  signed [18:0] shl_ln728_6_fu_3395_p3;
wire  signed [22:0] sext_ln728_7_fu_3403_p1;
wire  signed [22:0] sext_ln1118_7_fu_3392_p1;
wire  signed [19:0] sext_ln1192_7_fu_3407_p1;
wire   [22:0] add_ln1192_37_fu_3411_p2;
wire   [0:0] tmp_165_fu_3448_p3;
wire   [11:0] zext_ln415_7_fu_3456_p1;
wire   [11:0] trunc_ln708_7_fu_3430_p4;
wire   [11:0] add_ln415_7_fu_3460_p2;
wire   [0:0] tmp_166_fu_3466_p3;
wire   [0:0] tmp_164_fu_3440_p3;
wire   [0:0] xor_ln416_7_fu_3474_p2;
wire   [2:0] tmp_17_fu_3494_p4;
wire   [3:0] tmp_18_fu_3510_p4;
wire   [0:0] and_ln416_7_fu_3480_p2;
wire   [0:0] icmp_ln879_15_fu_3520_p2;
wire   [0:0] icmp_ln768_7_fu_3526_p2;
wire   [19:0] add_ln1192_47_fu_3417_p2;
wire   [0:0] tmp_168_fu_3540_p3;
wire   [0:0] icmp_ln879_14_fu_3504_p2;
wire   [0:0] xor_ln779_7_fu_3548_p2;
wire   [0:0] and_ln779_7_fu_3554_p2;
wire   [0:0] select_ln777_7_fu_3532_p3;
wire   [0:0] tmp_167_fu_3486_p3;
wire   [0:0] xor_ln785_7_fu_3574_p2;
wire   [0:0] tmp_163_fu_3422_p3;
wire   [0:0] or_ln785_7_fu_3580_p2;
wire   [0:0] xor_ln785_17_fu_3586_p2;
wire   [0:0] select_ln416_7_fu_3560_p3;
wire   [0:0] and_ln781_7_fu_3568_p2;
wire   [0:0] and_ln786_7_fu_3598_p2;
wire   [0:0] or_ln786_7_fu_3604_p2;
wire   [0:0] xor_ln786_24_fu_3610_p2;
wire   [0:0] and_ln786_41_fu_3616_p2;
wire   [0:0] and_ln785_7_fu_3592_p2;
wire   [0:0] or_ln340_52_fu_3628_p2;
wire   [0:0] or_ln340_7_fu_3622_p2;
wire   [0:0] or_ln340_53_fu_3634_p2;
wire   [11:0] select_ln340_7_fu_3640_p3;
wire   [11:0] select_ln388_7_fu_3648_p3;
wire  signed [18:0] shl_ln728_7_fu_3667_p3;
wire  signed [22:0] sext_ln728_8_fu_3675_p1;
wire  signed [22:0] sext_ln1118_8_fu_3664_p1;
wire  signed [19:0] sext_ln1192_8_fu_3679_p1;
wire   [22:0] add_ln1192_38_fu_3683_p2;
wire   [0:0] tmp_171_fu_3720_p3;
wire   [11:0] zext_ln415_8_fu_3728_p1;
wire   [11:0] trunc_ln708_8_fu_3702_p4;
wire   [11:0] add_ln415_8_fu_3732_p2;
wire   [0:0] tmp_172_fu_3738_p3;
wire   [0:0] tmp_170_fu_3712_p3;
wire   [0:0] xor_ln416_8_fu_3746_p2;
wire   [2:0] tmp_19_fu_3766_p4;
wire   [3:0] tmp_20_fu_3782_p4;
wire   [0:0] and_ln416_8_fu_3752_p2;
wire   [0:0] icmp_ln879_17_fu_3792_p2;
wire   [0:0] icmp_ln768_8_fu_3798_p2;
wire   [19:0] add_ln1192_48_fu_3689_p2;
wire   [0:0] tmp_174_fu_3812_p3;
wire   [0:0] icmp_ln879_16_fu_3776_p2;
wire   [0:0] xor_ln779_8_fu_3820_p2;
wire   [0:0] and_ln779_8_fu_3826_p2;
wire   [0:0] select_ln777_8_fu_3804_p3;
wire   [0:0] tmp_173_fu_3758_p3;
wire   [0:0] xor_ln785_8_fu_3846_p2;
wire   [0:0] tmp_169_fu_3694_p3;
wire   [0:0] or_ln785_8_fu_3852_p2;
wire   [0:0] xor_ln785_18_fu_3858_p2;
wire   [0:0] select_ln416_8_fu_3832_p3;
wire   [0:0] and_ln781_8_fu_3840_p2;
wire   [0:0] and_ln786_8_fu_3870_p2;
wire   [0:0] or_ln786_8_fu_3876_p2;
wire   [0:0] xor_ln786_25_fu_3882_p2;
wire   [0:0] and_ln786_42_fu_3888_p2;
wire   [0:0] and_ln785_8_fu_3864_p2;
wire   [0:0] or_ln340_54_fu_3900_p2;
wire   [0:0] or_ln340_8_fu_3894_p2;
wire   [0:0] or_ln340_55_fu_3906_p2;
wire   [11:0] select_ln340_8_fu_3912_p3;
wire   [11:0] select_ln388_8_fu_3920_p3;
wire  signed [18:0] shl_ln728_8_fu_3939_p3;
wire  signed [22:0] sext_ln728_9_fu_3947_p1;
wire  signed [22:0] sext_ln1118_9_fu_3936_p1;
wire  signed [19:0] sext_ln1192_9_fu_3951_p1;
wire   [22:0] add_ln1192_39_fu_3955_p2;
wire   [0:0] tmp_177_fu_3992_p3;
wire   [11:0] zext_ln415_9_fu_4000_p1;
wire   [11:0] trunc_ln708_9_fu_3974_p4;
wire   [11:0] add_ln415_9_fu_4004_p2;
wire   [0:0] tmp_178_fu_4010_p3;
wire   [0:0] tmp_176_fu_3984_p3;
wire   [0:0] xor_ln416_9_fu_4018_p2;
wire   [2:0] tmp_21_fu_4038_p4;
wire   [3:0] tmp_22_fu_4054_p4;
wire   [0:0] and_ln416_9_fu_4024_p2;
wire   [0:0] icmp_ln879_19_fu_4064_p2;
wire   [0:0] icmp_ln768_9_fu_4070_p2;
wire   [19:0] add_ln1192_49_fu_3961_p2;
wire   [0:0] tmp_180_fu_4084_p3;
wire   [0:0] icmp_ln879_18_fu_4048_p2;
wire   [0:0] xor_ln779_9_fu_4092_p2;
wire   [0:0] and_ln779_9_fu_4098_p2;
wire   [0:0] select_ln777_9_fu_4076_p3;
wire   [0:0] tmp_179_fu_4030_p3;
wire   [0:0] xor_ln785_9_fu_4118_p2;
wire   [0:0] tmp_175_fu_3966_p3;
wire   [0:0] or_ln785_9_fu_4124_p2;
wire   [0:0] xor_ln785_19_fu_4130_p2;
wire   [0:0] select_ln416_9_fu_4104_p3;
wire   [0:0] and_ln781_9_fu_4112_p2;
wire   [0:0] and_ln786_9_fu_4142_p2;
wire   [0:0] or_ln786_9_fu_4148_p2;
wire   [0:0] xor_ln786_26_fu_4154_p2;
wire   [0:0] and_ln786_43_fu_4160_p2;
wire   [0:0] and_ln785_9_fu_4136_p2;
wire   [0:0] or_ln340_57_fu_4172_p2;
wire   [0:0] or_ln340_56_fu_4166_p2;
wire   [0:0] or_ln340_58_fu_4178_p2;
wire   [11:0] select_ln340_9_fu_4184_p3;
wire   [11:0] select_ln388_9_fu_4192_p3;
wire   [11:0] tmp_V_4_fu_4230_p12;
wire   [11:0] tmp_V_fu_4270_p2;
reg   [11:0] p_Result_s_fu_4284_p4;
wire   [31:0] p_Result_17_fu_4294_p3;
wire   [31:0] sub_ln944_fu_4314_p2;
wire   [31:0] lsb_index_fu_4323_p2;
wire   [30:0] tmp_182_fu_4329_p4;
wire   [3:0] trunc_ln947_fu_4345_p1;
wire   [3:0] sub_ln947_fu_4349_p2;
wire   [11:0] zext_ln947_fu_4355_p1;
wire   [11:0] lshr_ln947_fu_4359_p2;
wire   [11:0] p_Result_14_fu_4365_p2;
wire   [0:0] icmp_ln947_fu_4339_p2;
wire   [0:0] icmp_ln947_1_fu_4370_p2;
wire   [0:0] tmp_183_fu_4382_p3;
wire   [11:0] trunc_ln944_fu_4319_p1;
wire   [11:0] add_ln949_fu_4396_p2;
wire   [0:0] p_Result_3_fu_4402_p3;
wire   [0:0] xor_ln949_fu_4390_p2;
wire   [0:0] and_ln949_fu_4409_p2;
wire   [0:0] a_fu_4376_p2;
wire   [0:0] or_ln949_fu_4415_p2;
wire   [31:0] m_fu_4447_p1;
wire   [31:0] lshr_ln958_fu_4450_p2;
wire   [31:0] shl_ln958_fu_4455_p2;
wire   [31:0] m_1_fu_4460_p3;
wire   [31:0] m_2_fu_4467_p2;
wire   [30:0] m_5_fu_4472_p4;
wire   [0:0] tmp_184_fu_4486_p3;
wire   [7:0] select_ln964_fu_4494_p3;
wire   [7:0] sub_ln964_fu_4502_p2;
wire   [7:0] add_ln964_fu_4507_p2;
wire   [31:0] m_6_fu_4482_p1;
wire   [8:0] tmp_s_fu_4513_p3;
wire   [31:0] p_Result_18_fu_4520_p5;
wire   [31:0] bitcast_ln739_fu_4532_p1;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_0_address0),
    .ce0(linear_weight_V_0_ce0),
    .q0(linear_weight_V_0_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_1_address0),
    .ce0(linear_weight_V_1_ce0),
    .q0(linear_weight_V_1_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_2_address0),
    .ce0(linear_weight_V_2_ce0),
    .q0(linear_weight_V_2_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_3_address0),
    .ce0(linear_weight_V_3_ce0),
    .q0(linear_weight_V_3_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_4_address0),
    .ce0(linear_weight_V_4_ce0),
    .q0(linear_weight_V_4_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_5_address0),
    .ce0(linear_weight_V_5_ce0),
    .q0(linear_weight_V_5_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_6_address0),
    .ce0(linear_weight_V_6_ce0),
    .q0(linear_weight_V_6_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_7_address0),
    .ce0(linear_weight_V_7_ce0),
    .q0(linear_weight_V_7_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_8_address0),
    .ce0(linear_weight_V_8_ce0),
    .q0(linear_weight_V_8_q0)
);

matmul_linear_weikbM #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_V_9_address0),
    .ce0(linear_weight_V_9_ce0),
    .q0(linear_weight_V_9_q0)
);

ResNet_mux_646_12udo #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 12 ),
    .din13_WIDTH( 12 ),
    .din14_WIDTH( 12 ),
    .din15_WIDTH( 12 ),
    .din16_WIDTH( 12 ),
    .din17_WIDTH( 12 ),
    .din18_WIDTH( 12 ),
    .din19_WIDTH( 12 ),
    .din20_WIDTH( 12 ),
    .din21_WIDTH( 12 ),
    .din22_WIDTH( 12 ),
    .din23_WIDTH( 12 ),
    .din24_WIDTH( 12 ),
    .din25_WIDTH( 12 ),
    .din26_WIDTH( 12 ),
    .din27_WIDTH( 12 ),
    .din28_WIDTH( 12 ),
    .din29_WIDTH( 12 ),
    .din30_WIDTH( 12 ),
    .din31_WIDTH( 12 ),
    .din32_WIDTH( 12 ),
    .din33_WIDTH( 12 ),
    .din34_WIDTH( 12 ),
    .din35_WIDTH( 12 ),
    .din36_WIDTH( 12 ),
    .din37_WIDTH( 12 ),
    .din38_WIDTH( 12 ),
    .din39_WIDTH( 12 ),
    .din40_WIDTH( 12 ),
    .din41_WIDTH( 12 ),
    .din42_WIDTH( 12 ),
    .din43_WIDTH( 12 ),
    .din44_WIDTH( 12 ),
    .din45_WIDTH( 12 ),
    .din46_WIDTH( 12 ),
    .din47_WIDTH( 12 ),
    .din48_WIDTH( 12 ),
    .din49_WIDTH( 12 ),
    .din50_WIDTH( 12 ),
    .din51_WIDTH( 12 ),
    .din52_WIDTH( 12 ),
    .din53_WIDTH( 12 ),
    .din54_WIDTH( 12 ),
    .din55_WIDTH( 12 ),
    .din56_WIDTH( 12 ),
    .din57_WIDTH( 12 ),
    .din58_WIDTH( 12 ),
    .din59_WIDTH( 12 ),
    .din60_WIDTH( 12 ),
    .din61_WIDTH( 12 ),
    .din62_WIDTH( 12 ),
    .din63_WIDTH( 12 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
ResNet_mux_646_12udo_U645(
    .din0(bottom_0_V_read_cas_reg_4863),
    .din1(bottom_1_V_read_cas_reg_4858),
    .din2(bottom_2_V_read_cas_reg_4853),
    .din3(bottom_3_V_read_cas_reg_4848),
    .din4(bottom_4_V_read_cas_reg_4843),
    .din5(bottom_5_V_read_cas_reg_4838),
    .din6(bottom_6_V_read_cas_reg_4833),
    .din7(bottom_7_V_read_cas_reg_4828),
    .din8(bottom_8_V_read_cas_reg_4823),
    .din9(bottom_9_V_read_cas_reg_4818),
    .din10(bottom_10_V_read_ca_reg_4813),
    .din11(bottom_11_V_read_ca_reg_4808),
    .din12(bottom_12_V_read_ca_reg_4803),
    .din13(bottom_13_V_read_ca_reg_4798),
    .din14(bottom_14_V_read_ca_reg_4793),
    .din15(bottom_15_V_read_ca_reg_4788),
    .din16(bottom_16_V_read_ca_reg_4783),
    .din17(bottom_17_V_read_ca_reg_4778),
    .din18(bottom_18_V_read_ca_reg_4773),
    .din19(bottom_19_V_read_ca_reg_4768),
    .din20(bottom_20_V_read_ca_reg_4763),
    .din21(bottom_21_V_read_ca_reg_4758),
    .din22(bottom_22_V_read_ca_reg_4753),
    .din23(bottom_23_V_read_ca_reg_4748),
    .din24(bottom_24_V_read_ca_reg_4743),
    .din25(bottom_25_V_read_ca_reg_4738),
    .din26(bottom_26_V_read_ca_reg_4733),
    .din27(bottom_27_V_read_ca_reg_4728),
    .din28(bottom_28_V_read_ca_reg_4723),
    .din29(bottom_29_V_read_ca_reg_4718),
    .din30(bottom_30_V_read_ca_reg_4713),
    .din31(bottom_31_V_read_ca_reg_4708),
    .din32(bottom_32_V_read_ca_reg_4703),
    .din33(bottom_33_V_read_ca_reg_4698),
    .din34(bottom_34_V_read_ca_reg_4693),
    .din35(bottom_35_V_read_ca_reg_4688),
    .din36(bottom_36_V_read_ca_reg_4683),
    .din37(bottom_37_V_read_ca_reg_4678),
    .din38(bottom_38_V_read_ca_reg_4673),
    .din39(bottom_39_V_read_ca_reg_4668),
    .din40(bottom_40_V_read_ca_reg_4663),
    .din41(bottom_41_V_read_ca_reg_4658),
    .din42(bottom_42_V_read_ca_reg_4653),
    .din43(bottom_43_V_read_ca_reg_4648),
    .din44(bottom_44_V_read_ca_reg_4643),
    .din45(bottom_45_V_read_ca_reg_4638),
    .din46(bottom_46_V_read_ca_reg_4633),
    .din47(bottom_47_V_read_ca_reg_4628),
    .din48(bottom_48_V_read_ca_reg_4623),
    .din49(bottom_49_V_read_ca_reg_4618),
    .din50(bottom_50_V_read_ca_reg_4613),
    .din51(bottom_51_V_read_ca_reg_4608),
    .din52(bottom_52_V_read_ca_reg_4603),
    .din53(bottom_53_V_read_ca_reg_4598),
    .din54(bottom_54_V_read_ca_reg_4593),
    .din55(bottom_55_V_read_ca_reg_4588),
    .din56(bottom_56_V_read_ca_reg_4583),
    .din57(bottom_57_V_read_ca_reg_4578),
    .din58(bottom_58_V_read_ca_reg_4573),
    .din59(bottom_59_V_read_ca_reg_4568),
    .din60(bottom_60_V_read_ca_reg_4563),
    .din61(bottom_61_V_read_ca_reg_4558),
    .din62(bottom_62_V_read_ca_reg_4553),
    .din63(bottom_63_V_read_ca_reg_4548),
    .din64(tmp_5_fu_1282_p65),
    .dout(tmp_5_fu_1282_p66)
);

ResNet_mux_104_12vdy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
ResNet_mux_104_12vdy_U646(
    .din0(buf_0_V_0_reg_962),
    .din1(buf_1_V_0_reg_950),
    .din2(buf_2_V_0_reg_938),
    .din3(buf_3_V_0_reg_926),
    .din4(buf_4_V_0_reg_914),
    .din5(buf_5_V_0_reg_902),
    .din6(buf_6_V_0_reg_890),
    .din7(buf_7_V_0_reg_878),
    .din8(buf_8_V_0_reg_866),
    .din9(buf_9_V_0_reg_854),
    .din10(coo2_0_reg_985),
    .dout(tmp_V_4_fu_4230_p12)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state6)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_0_V_0_reg_962 <= buf_0_V_fu_1752_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_0_V_0_reg_962 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_1_V_0_reg_950 <= buf_1_V_fu_2024_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_1_V_0_reg_950 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_2_V_0_reg_938 <= buf_2_V_fu_2296_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_2_V_0_reg_938 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_3_V_0_reg_926 <= buf_3_V_fu_2568_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_3_V_0_reg_926 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_4_V_0_reg_914 <= buf_4_V_fu_2840_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_4_V_0_reg_914 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_5_V_0_reg_902 <= buf_5_V_fu_3112_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_5_V_0_reg_902 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_6_V_0_reg_890 <= buf_6_V_fu_3384_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_6_V_0_reg_890 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_7_V_0_reg_878 <= buf_7_V_fu_3656_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_7_V_0_reg_878 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_8_V_0_reg_866 <= buf_8_V_fu_3928_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_8_V_0_reg_866 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        buf_9_V_0_reg_854 <= buf_9_V_fu_4200_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        buf_9_V_0_reg_854 <= 12'd2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        cii_0_reg_974 <= cii_reg_4872;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        cii_0_reg_974 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        coo2_0_reg_985 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln30_fu_4218_p2 == 1'd0))) begin
        coo2_0_reg_985 <= coo_fu_4224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln935_reg_5098 == 1'd0) & (icmp_ln30_reg_5089 == 1'd0))) begin
        add_ln958_reg_5135 <= add_ln958_fu_4435_p2;
        icmp_ln958_reg_5130 <= icmp_ln958_fu_4429_p2;
        or_ln_reg_5125[0] <= or_ln_fu_4421_p3[0];
        sub_ln958_reg_5140 <= sub_ln958_fu_4441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bottom_0_V_read_cas_reg_4863 <= bottom_0_V_read_cas_fu_1248_p1;
        bottom_10_V_read_ca_reg_4813 <= bottom_10_V_read_ca_fu_1208_p1;
        bottom_11_V_read_ca_reg_4808 <= bottom_11_V_read_ca_fu_1204_p1;
        bottom_12_V_read_ca_reg_4803 <= bottom_12_V_read_ca_fu_1200_p1;
        bottom_13_V_read_ca_reg_4798 <= bottom_13_V_read_ca_fu_1196_p1;
        bottom_14_V_read_ca_reg_4793 <= bottom_14_V_read_ca_fu_1192_p1;
        bottom_15_V_read_ca_reg_4788 <= bottom_15_V_read_ca_fu_1188_p1;
        bottom_16_V_read_ca_reg_4783 <= bottom_16_V_read_ca_fu_1184_p1;
        bottom_17_V_read_ca_reg_4778 <= bottom_17_V_read_ca_fu_1180_p1;
        bottom_18_V_read_ca_reg_4773 <= bottom_18_V_read_ca_fu_1176_p1;
        bottom_19_V_read_ca_reg_4768 <= bottom_19_V_read_ca_fu_1172_p1;
        bottom_1_V_read_cas_reg_4858 <= bottom_1_V_read_cas_fu_1244_p1;
        bottom_20_V_read_ca_reg_4763 <= bottom_20_V_read_ca_fu_1168_p1;
        bottom_21_V_read_ca_reg_4758 <= bottom_21_V_read_ca_fu_1164_p1;
        bottom_22_V_read_ca_reg_4753 <= bottom_22_V_read_ca_fu_1160_p1;
        bottom_23_V_read_ca_reg_4748 <= bottom_23_V_read_ca_fu_1156_p1;
        bottom_24_V_read_ca_reg_4743 <= bottom_24_V_read_ca_fu_1152_p1;
        bottom_25_V_read_ca_reg_4738 <= bottom_25_V_read_ca_fu_1148_p1;
        bottom_26_V_read_ca_reg_4733 <= bottom_26_V_read_ca_fu_1144_p1;
        bottom_27_V_read_ca_reg_4728 <= bottom_27_V_read_ca_fu_1140_p1;
        bottom_28_V_read_ca_reg_4723 <= bottom_28_V_read_ca_fu_1136_p1;
        bottom_29_V_read_ca_reg_4718 <= bottom_29_V_read_ca_fu_1132_p1;
        bottom_2_V_read_cas_reg_4853 <= bottom_2_V_read_cas_fu_1240_p1;
        bottom_30_V_read_ca_reg_4713 <= bottom_30_V_read_ca_fu_1128_p1;
        bottom_31_V_read_ca_reg_4708 <= bottom_31_V_read_ca_fu_1124_p1;
        bottom_32_V_read_ca_reg_4703 <= bottom_32_V_read_ca_fu_1120_p1;
        bottom_33_V_read_ca_reg_4698 <= bottom_33_V_read_ca_fu_1116_p1;
        bottom_34_V_read_ca_reg_4693 <= bottom_34_V_read_ca_fu_1112_p1;
        bottom_35_V_read_ca_reg_4688 <= bottom_35_V_read_ca_fu_1108_p1;
        bottom_36_V_read_ca_reg_4683 <= bottom_36_V_read_ca_fu_1104_p1;
        bottom_37_V_read_ca_reg_4678 <= bottom_37_V_read_ca_fu_1100_p1;
        bottom_38_V_read_ca_reg_4673 <= bottom_38_V_read_ca_fu_1096_p1;
        bottom_39_V_read_ca_reg_4668 <= bottom_39_V_read_ca_fu_1092_p1;
        bottom_3_V_read_cas_reg_4848 <= bottom_3_V_read_cas_fu_1236_p1;
        bottom_40_V_read_ca_reg_4663 <= bottom_40_V_read_ca_fu_1088_p1;
        bottom_41_V_read_ca_reg_4658 <= bottom_41_V_read_ca_fu_1084_p1;
        bottom_42_V_read_ca_reg_4653 <= bottom_42_V_read_ca_fu_1080_p1;
        bottom_43_V_read_ca_reg_4648 <= bottom_43_V_read_ca_fu_1076_p1;
        bottom_44_V_read_ca_reg_4643 <= bottom_44_V_read_ca_fu_1072_p1;
        bottom_45_V_read_ca_reg_4638 <= bottom_45_V_read_ca_fu_1068_p1;
        bottom_46_V_read_ca_reg_4633 <= bottom_46_V_read_ca_fu_1064_p1;
        bottom_47_V_read_ca_reg_4628 <= bottom_47_V_read_ca_fu_1060_p1;
        bottom_48_V_read_ca_reg_4623 <= bottom_48_V_read_ca_fu_1056_p1;
        bottom_49_V_read_ca_reg_4618 <= bottom_49_V_read_ca_fu_1052_p1;
        bottom_4_V_read_cas_reg_4843 <= bottom_4_V_read_cas_fu_1232_p1;
        bottom_50_V_read_ca_reg_4613 <= bottom_50_V_read_ca_fu_1048_p1;
        bottom_51_V_read_ca_reg_4608 <= bottom_51_V_read_ca_fu_1044_p1;
        bottom_52_V_read_ca_reg_4603 <= bottom_52_V_read_ca_fu_1040_p1;
        bottom_53_V_read_ca_reg_4598 <= bottom_53_V_read_ca_fu_1036_p1;
        bottom_54_V_read_ca_reg_4593 <= bottom_54_V_read_ca_fu_1032_p1;
        bottom_55_V_read_ca_reg_4588 <= bottom_55_V_read_ca_fu_1028_p1;
        bottom_56_V_read_ca_reg_4583 <= bottom_56_V_read_ca_fu_1024_p1;
        bottom_57_V_read_ca_reg_4578 <= bottom_57_V_read_ca_fu_1020_p1;
        bottom_58_V_read_ca_reg_4573 <= bottom_58_V_read_ca_fu_1016_p1;
        bottom_59_V_read_ca_reg_4568 <= bottom_59_V_read_ca_fu_1012_p1;
        bottom_5_V_read_cas_reg_4838 <= bottom_5_V_read_cas_fu_1228_p1;
        bottom_60_V_read_ca_reg_4563 <= bottom_60_V_read_ca_fu_1008_p1;
        bottom_61_V_read_ca_reg_4558 <= bottom_61_V_read_ca_fu_1004_p1;
        bottom_62_V_read_ca_reg_4553 <= bottom_62_V_read_ca_fu_1000_p1;
        bottom_63_V_read_ca_reg_4548 <= bottom_63_V_read_ca_fu_996_p1;
        bottom_6_V_read_cas_reg_4833 <= bottom_6_V_read_cas_fu_1224_p1;
        bottom_7_V_read_cas_reg_4828 <= bottom_7_V_read_cas_fu_1220_p1;
        bottom_8_V_read_cas_reg_4823 <= bottom_8_V_read_cas_fu_1216_p1;
        bottom_9_V_read_cas_reg_4818 <= bottom_9_V_read_cas_fu_1212_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cii_reg_4872 <= cii_fu_1258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln23_reg_4868 <= icmp_ln23_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln30_reg_5089 <= icmp_ln30_fu_4218_p2;
        icmp_ln30_reg_5089_pp1_iter1_reg <= icmp_ln30_reg_5089;
        icmp_ln935_reg_5098_pp1_iter1_reg <= icmp_ln935_reg_5098;
        p_Result_16_reg_5103_pp1_iter1_reg <= p_Result_16_reg_5103;
        tmp_V_5_reg_5108_pp1_iter1_reg <= tmp_V_5_reg_5108;
        trunc_ln943_reg_5120_pp1_iter1_reg <= trunc_ln943_reg_5120;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln30_reg_5089_pp1_iter2_reg <= icmp_ln30_reg_5089_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln30_fu_4218_p2 == 1'd0))) begin
        icmp_ln935_reg_5098 <= icmp_ln935_fu_4256_p2;
        l_reg_5115 <= l_fu_4302_p3;
        p_Result_16_reg_5103 <= tmp_V_4_fu_4230_p12[32'd11];
        tmp_V_5_reg_5108 <= tmp_V_5_fu_4276_p3;
        trunc_ln943_reg_5120 <= trunc_ln943_fu_4310_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln23_reg_4868 == 1'd0))) begin
        select_ln1118_1_reg_4943 <= select_ln1118_1_fu_1380_p3;
        select_ln1118_2_reg_4953 <= select_ln1118_2_fu_1392_p3;
        select_ln1118_3_reg_4963 <= select_ln1118_3_fu_1404_p3;
        select_ln1118_4_reg_4973 <= select_ln1118_4_fu_1416_p3;
        select_ln1118_5_reg_4983 <= select_ln1118_5_fu_1428_p3;
        select_ln1118_6_reg_4993 <= select_ln1118_6_fu_1440_p3;
        select_ln1118_7_reg_5003 <= select_ln1118_7_fu_1452_p3;
        select_ln1118_8_reg_5013 <= select_ln1118_8_fu_1464_p3;
        select_ln1118_9_reg_5023 <= select_ln1118_9_fu_1476_p3;
        select_ln1118_reg_4933 <= select_ln1118_fu_1368_p3;
        trunc_ln1192_1_reg_4948 <= trunc_ln1192_1_fu_1388_p1;
        trunc_ln1192_2_reg_4958 <= trunc_ln1192_2_fu_1400_p1;
        trunc_ln1192_3_reg_4968 <= trunc_ln1192_3_fu_1412_p1;
        trunc_ln1192_4_reg_4978 <= trunc_ln1192_4_fu_1424_p1;
        trunc_ln1192_5_reg_4988 <= trunc_ln1192_5_fu_1436_p1;
        trunc_ln1192_6_reg_4998 <= trunc_ln1192_6_fu_1448_p1;
        trunc_ln1192_7_reg_5008 <= trunc_ln1192_7_fu_1460_p1;
        trunc_ln1192_8_reg_5018 <= trunc_ln1192_8_fu_1472_p1;
        trunc_ln1192_9_reg_5028 <= trunc_ln1192_9_fu_1484_p1;
        trunc_ln1192_reg_4938 <= trunc_ln1192_fu_1376_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln30_reg_5089_pp1_iter1_reg == 1'd0))) begin
        select_ln935_reg_5145 <= select_ln935_fu_4536_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_fu_1252_p2 == 1'd0))) begin
        tmp_5_reg_4877 <= tmp_5_fu_1282_p66;
    end
end

always @ (*) begin
    if ((icmp_ln23_fu_1252_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln30_fu_4218_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state14) & (m_axi_top_BVALID == 1'b1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_4868 == 1'd0))) begin
        ap_phi_mux_cii_0_phi_fu_978_p4 = cii_reg_4872;
    end else begin
        ap_phi_mux_cii_0_phi_fu_978_p4 = cii_0_reg_974;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (m_axi_top_BVALID == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_0_ce0 = 1'b1;
    end else begin
        linear_weight_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_1_ce0 = 1'b1;
    end else begin
        linear_weight_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_2_ce0 = 1'b1;
    end else begin
        linear_weight_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_3_ce0 = 1'b1;
    end else begin
        linear_weight_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_4_ce0 = 1'b1;
    end else begin
        linear_weight_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_5_ce0 = 1'b1;
    end else begin
        linear_weight_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_6_ce0 = 1'b1;
    end else begin
        linear_weight_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_7_ce0 = 1'b1;
    end else begin
        linear_weight_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_8_ce0 = 1'b1;
    end else begin
        linear_weight_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linear_weight_V_9_ce0 = 1'b1;
    end else begin
        linear_weight_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_top_AWVALID = 1'b1;
    end else begin
        m_axi_top_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (m_axi_top_BVALID == 1'b1))) begin
        m_axi_top_BREADY = 1'b1;
    end else begin
        m_axi_top_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln30_reg_5089_pp1_iter2_reg == 1'd0))) begin
        m_axi_top_WVALID = 1'b1;
    end else begin
        m_axi_top_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        top_blk_n_AW = m_axi_top_AWREADY;
    end else begin
        top_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        top_blk_n_B = m_axi_top_BVALID;
    end else begin
        top_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln30_reg_5089_pp1_iter2_reg == 1'd0))) begin
        top_blk_n_W = m_axi_top_WREADY;
    end else begin
        top_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln23_fu_1252_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln23_fu_1252_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((m_axi_top_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln30_fu_4218_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln30_fu_4218_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (m_axi_top_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_4376_p2 = (icmp_ln947_fu_4339_p2 & icmp_ln947_1_fu_4370_p2);

assign add_ln1192_31_fu_1779_p2 = ($signed(sext_ln728_1_fu_1771_p1) + $signed(sext_ln1118_1_fu_1760_p1));

assign add_ln1192_32_fu_2051_p2 = ($signed(sext_ln728_2_fu_2043_p1) + $signed(sext_ln1118_2_fu_2032_p1));

assign add_ln1192_33_fu_2323_p2 = ($signed(sext_ln728_3_fu_2315_p1) + $signed(sext_ln1118_3_fu_2304_p1));

assign add_ln1192_34_fu_2595_p2 = ($signed(sext_ln728_4_fu_2587_p1) + $signed(sext_ln1118_4_fu_2576_p1));

assign add_ln1192_35_fu_2867_p2 = ($signed(sext_ln728_5_fu_2859_p1) + $signed(sext_ln1118_5_fu_2848_p1));

assign add_ln1192_36_fu_3139_p2 = ($signed(sext_ln728_6_fu_3131_p1) + $signed(sext_ln1118_6_fu_3120_p1));

assign add_ln1192_37_fu_3411_p2 = ($signed(sext_ln728_7_fu_3403_p1) + $signed(sext_ln1118_7_fu_3392_p1));

assign add_ln1192_38_fu_3683_p2 = ($signed(sext_ln728_8_fu_3675_p1) + $signed(sext_ln1118_8_fu_3664_p1));

assign add_ln1192_39_fu_3955_p2 = ($signed(sext_ln728_9_fu_3947_p1) + $signed(sext_ln1118_9_fu_3936_p1));

assign add_ln1192_40_fu_1513_p2 = ($signed(trunc_ln1192_reg_4938) + $signed(sext_ln1192_fu_1503_p1));

assign add_ln1192_41_fu_1785_p2 = ($signed(trunc_ln1192_1_reg_4948) + $signed(sext_ln1192_1_fu_1775_p1));

assign add_ln1192_42_fu_2057_p2 = ($signed(trunc_ln1192_2_reg_4958) + $signed(sext_ln1192_2_fu_2047_p1));

assign add_ln1192_43_fu_2329_p2 = ($signed(trunc_ln1192_3_reg_4968) + $signed(sext_ln1192_3_fu_2319_p1));

assign add_ln1192_44_fu_2601_p2 = ($signed(trunc_ln1192_4_reg_4978) + $signed(sext_ln1192_4_fu_2591_p1));

assign add_ln1192_45_fu_2873_p2 = ($signed(trunc_ln1192_5_reg_4988) + $signed(sext_ln1192_5_fu_2863_p1));

assign add_ln1192_46_fu_3145_p2 = ($signed(trunc_ln1192_6_reg_4998) + $signed(sext_ln1192_6_fu_3135_p1));

assign add_ln1192_47_fu_3417_p2 = ($signed(trunc_ln1192_7_reg_5008) + $signed(sext_ln1192_7_fu_3407_p1));

assign add_ln1192_48_fu_3689_p2 = ($signed(trunc_ln1192_8_reg_5018) + $signed(sext_ln1192_8_fu_3679_p1));

assign add_ln1192_49_fu_3961_p2 = ($signed(trunc_ln1192_9_reg_5028) + $signed(sext_ln1192_9_fu_3951_p1));

assign add_ln1192_fu_1507_p2 = ($signed(sext_ln728_fu_1499_p1) + $signed(sext_ln1118_fu_1488_p1));

assign add_ln415_1_fu_1828_p2 = (zext_ln415_1_fu_1824_p1 + trunc_ln708_1_fu_1798_p4);

assign add_ln415_2_fu_2100_p2 = (zext_ln415_2_fu_2096_p1 + trunc_ln708_2_fu_2070_p4);

assign add_ln415_3_fu_2372_p2 = (zext_ln415_3_fu_2368_p1 + trunc_ln708_3_fu_2342_p4);

assign add_ln415_4_fu_2644_p2 = (zext_ln415_4_fu_2640_p1 + trunc_ln708_4_fu_2614_p4);

assign add_ln415_5_fu_2916_p2 = (zext_ln415_5_fu_2912_p1 + trunc_ln708_5_fu_2886_p4);

assign add_ln415_6_fu_3188_p2 = (zext_ln415_6_fu_3184_p1 + trunc_ln708_6_fu_3158_p4);

assign add_ln415_7_fu_3460_p2 = (zext_ln415_7_fu_3456_p1 + trunc_ln708_7_fu_3430_p4);

assign add_ln415_8_fu_3732_p2 = (zext_ln415_8_fu_3728_p1 + trunc_ln708_8_fu_3702_p4);

assign add_ln415_9_fu_4004_p2 = (zext_ln415_9_fu_4000_p1 + trunc_ln708_9_fu_3974_p4);

assign add_ln415_fu_1556_p2 = (zext_ln415_fu_1552_p1 + trunc_ln7_fu_1526_p4);

assign add_ln949_fu_4396_p2 = ($signed(12'd4072) + $signed(trunc_ln944_fu_4319_p1));

assign add_ln958_fu_4435_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_fu_4314_p2));

assign add_ln964_fu_4507_p2 = (select_ln964_fu_4494_p3 + sub_ln964_fu_4502_p2);

assign and_ln416_1_fu_1848_p2 = (xor_ln416_1_fu_1842_p2 & tmp_128_fu_1808_p3);

assign and_ln416_2_fu_2120_p2 = (xor_ln416_2_fu_2114_p2 & tmp_134_fu_2080_p3);

assign and_ln416_3_fu_2392_p2 = (xor_ln416_3_fu_2386_p2 & tmp_140_fu_2352_p3);

assign and_ln416_4_fu_2664_p2 = (xor_ln416_4_fu_2658_p2 & tmp_146_fu_2624_p3);

assign and_ln416_5_fu_2936_p2 = (xor_ln416_5_fu_2930_p2 & tmp_152_fu_2896_p3);

assign and_ln416_6_fu_3208_p2 = (xor_ln416_6_fu_3202_p2 & tmp_158_fu_3168_p3);

assign and_ln416_7_fu_3480_p2 = (xor_ln416_7_fu_3474_p2 & tmp_164_fu_3440_p3);

assign and_ln416_8_fu_3752_p2 = (xor_ln416_8_fu_3746_p2 & tmp_170_fu_3712_p3);

assign and_ln416_9_fu_4024_p2 = (xor_ln416_9_fu_4018_p2 & tmp_176_fu_3984_p3);

assign and_ln416_fu_1576_p2 = (xor_ln416_fu_1570_p2 & tmp_122_fu_1536_p3);

assign and_ln779_1_fu_1922_p2 = (xor_ln779_1_fu_1916_p2 & icmp_ln879_2_fu_1872_p2);

assign and_ln779_2_fu_2194_p2 = (xor_ln779_2_fu_2188_p2 & icmp_ln879_4_fu_2144_p2);

assign and_ln779_3_fu_2466_p2 = (xor_ln779_3_fu_2460_p2 & icmp_ln879_6_fu_2416_p2);

assign and_ln779_4_fu_2738_p2 = (xor_ln779_4_fu_2732_p2 & icmp_ln879_8_fu_2688_p2);

assign and_ln779_5_fu_3010_p2 = (xor_ln779_5_fu_3004_p2 & icmp_ln879_10_fu_2960_p2);

assign and_ln779_6_fu_3282_p2 = (xor_ln779_6_fu_3276_p2 & icmp_ln879_12_fu_3232_p2);

assign and_ln779_7_fu_3554_p2 = (xor_ln779_7_fu_3548_p2 & icmp_ln879_14_fu_3504_p2);

assign and_ln779_8_fu_3826_p2 = (xor_ln779_8_fu_3820_p2 & icmp_ln879_16_fu_3776_p2);

assign and_ln779_9_fu_4098_p2 = (xor_ln779_9_fu_4092_p2 & icmp_ln879_18_fu_4048_p2);

assign and_ln779_fu_1650_p2 = (xor_ln779_fu_1644_p2 & icmp_ln879_fu_1600_p2);

assign and_ln781_1_fu_1936_p2 = (icmp_ln879_3_fu_1888_p2 & and_ln416_1_fu_1848_p2);

assign and_ln781_2_fu_2208_p2 = (icmp_ln879_5_fu_2160_p2 & and_ln416_2_fu_2120_p2);

assign and_ln781_3_fu_2480_p2 = (icmp_ln879_7_fu_2432_p2 & and_ln416_3_fu_2392_p2);

assign and_ln781_4_fu_2752_p2 = (icmp_ln879_9_fu_2704_p2 & and_ln416_4_fu_2664_p2);

assign and_ln781_5_fu_3024_p2 = (icmp_ln879_11_fu_2976_p2 & and_ln416_5_fu_2936_p2);

assign and_ln781_6_fu_3296_p2 = (icmp_ln879_13_fu_3248_p2 & and_ln416_6_fu_3208_p2);

assign and_ln781_7_fu_3568_p2 = (icmp_ln879_15_fu_3520_p2 & and_ln416_7_fu_3480_p2);

assign and_ln781_8_fu_3840_p2 = (icmp_ln879_17_fu_3792_p2 & and_ln416_8_fu_3752_p2);

assign and_ln781_9_fu_4112_p2 = (icmp_ln879_19_fu_4064_p2 & and_ln416_9_fu_4024_p2);

assign and_ln781_fu_1664_p2 = (icmp_ln879_1_fu_1616_p2 & and_ln416_fu_1576_p2);

assign and_ln785_1_fu_1960_p2 = (xor_ln785_10_fu_1954_p2 & or_ln785_1_fu_1948_p2);

assign and_ln785_2_fu_2232_p2 = (xor_ln785_11_fu_2226_p2 & or_ln785_2_fu_2220_p2);

assign and_ln785_3_fu_2504_p2 = (xor_ln785_12_fu_2498_p2 & or_ln785_3_fu_2492_p2);

assign and_ln785_4_fu_2776_p2 = (xor_ln785_14_fu_2770_p2 & or_ln785_4_fu_2764_p2);

assign and_ln785_5_fu_3048_p2 = (xor_ln785_15_fu_3042_p2 & or_ln785_5_fu_3036_p2);

assign and_ln785_6_fu_3320_p2 = (xor_ln785_16_fu_3314_p2 & or_ln785_6_fu_3308_p2);

assign and_ln785_7_fu_3592_p2 = (xor_ln785_17_fu_3586_p2 & or_ln785_7_fu_3580_p2);

assign and_ln785_8_fu_3864_p2 = (xor_ln785_18_fu_3858_p2 & or_ln785_8_fu_3852_p2);

assign and_ln785_9_fu_4136_p2 = (xor_ln785_19_fu_4130_p2 & or_ln785_9_fu_4124_p2);

assign and_ln785_fu_1688_p2 = (xor_ln785_4_fu_1682_p2 & or_ln785_fu_1676_p2);

assign and_ln786_1_fu_1966_p2 = (tmp_131_fu_1854_p3 & select_ln416_1_fu_1928_p3);

assign and_ln786_2_fu_2238_p2 = (tmp_137_fu_2126_p3 & select_ln416_2_fu_2200_p3);

assign and_ln786_34_fu_1712_p2 = (xor_ln786_fu_1706_p2 & tmp_121_fu_1518_p3);

assign and_ln786_35_fu_1984_p2 = (xor_ln786_18_fu_1978_p2 & tmp_127_fu_1790_p3);

assign and_ln786_36_fu_2256_p2 = (xor_ln786_19_fu_2250_p2 & tmp_133_fu_2062_p3);

assign and_ln786_37_fu_2528_p2 = (xor_ln786_20_fu_2522_p2 & tmp_139_fu_2334_p3);

assign and_ln786_38_fu_2800_p2 = (xor_ln786_21_fu_2794_p2 & tmp_145_fu_2606_p3);

assign and_ln786_39_fu_3072_p2 = (xor_ln786_22_fu_3066_p2 & tmp_151_fu_2878_p3);

assign and_ln786_3_fu_2510_p2 = (tmp_143_fu_2398_p3 & select_ln416_3_fu_2472_p3);

assign and_ln786_40_fu_3344_p2 = (xor_ln786_23_fu_3338_p2 & tmp_157_fu_3150_p3);

assign and_ln786_41_fu_3616_p2 = (xor_ln786_24_fu_3610_p2 & tmp_163_fu_3422_p3);

assign and_ln786_42_fu_3888_p2 = (xor_ln786_25_fu_3882_p2 & tmp_169_fu_3694_p3);

assign and_ln786_43_fu_4160_p2 = (xor_ln786_26_fu_4154_p2 & tmp_175_fu_3966_p3);

assign and_ln786_4_fu_2782_p2 = (tmp_149_fu_2670_p3 & select_ln416_4_fu_2744_p3);

assign and_ln786_5_fu_3054_p2 = (tmp_155_fu_2942_p3 & select_ln416_5_fu_3016_p3);

assign and_ln786_6_fu_3326_p2 = (tmp_161_fu_3214_p3 & select_ln416_6_fu_3288_p3);

assign and_ln786_7_fu_3598_p2 = (tmp_167_fu_3486_p3 & select_ln416_7_fu_3560_p3);

assign and_ln786_8_fu_3870_p2 = (tmp_173_fu_3758_p3 & select_ln416_8_fu_3832_p3);

assign and_ln786_9_fu_4142_p2 = (tmp_179_fu_4030_p3 & select_ln416_9_fu_4104_p3);

assign and_ln786_fu_1694_p2 = (tmp_125_fu_1582_p3 & select_ln416_fu_1656_p3);

assign and_ln949_fu_4409_p2 = (xor_ln949_fu_4390_p2 & p_Result_3_fu_4402_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_block_state9_io));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_block_state9_io));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_top_WREADY == 1'b0) & (icmp_ln30_reg_5089_pp1_iter2_reg == 1'd0));
end

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bitcast_ln739_fu_4532_p1 = p_Result_18_fu_4520_p5;

assign bottom_0_V_read_cas_fu_1248_p1 = $signed(bottom_0_V_read);

assign bottom_10_V_read_ca_fu_1208_p1 = $signed(bottom_10_V_read);

assign bottom_11_V_read_ca_fu_1204_p1 = $signed(bottom_11_V_read);

assign bottom_12_V_read_ca_fu_1200_p1 = $signed(bottom_12_V_read);

assign bottom_13_V_read_ca_fu_1196_p1 = $signed(bottom_13_V_read);

assign bottom_14_V_read_ca_fu_1192_p1 = $signed(bottom_14_V_read);

assign bottom_15_V_read_ca_fu_1188_p1 = $signed(bottom_15_V_read);

assign bottom_16_V_read_ca_fu_1184_p1 = $signed(bottom_16_V_read);

assign bottom_17_V_read_ca_fu_1180_p1 = $signed(bottom_17_V_read);

assign bottom_18_V_read_ca_fu_1176_p1 = $signed(bottom_18_V_read);

assign bottom_19_V_read_ca_fu_1172_p1 = $signed(bottom_19_V_read);

assign bottom_1_V_read_cas_fu_1244_p1 = $signed(bottom_1_V_read);

assign bottom_20_V_read_ca_fu_1168_p1 = $signed(bottom_20_V_read);

assign bottom_21_V_read_ca_fu_1164_p1 = $signed(bottom_21_V_read);

assign bottom_22_V_read_ca_fu_1160_p1 = $signed(bottom_22_V_read);

assign bottom_23_V_read_ca_fu_1156_p1 = $signed(bottom_23_V_read);

assign bottom_24_V_read_ca_fu_1152_p1 = $signed(bottom_24_V_read);

assign bottom_25_V_read_ca_fu_1148_p1 = $signed(bottom_25_V_read);

assign bottom_26_V_read_ca_fu_1144_p1 = $signed(bottom_26_V_read);

assign bottom_27_V_read_ca_fu_1140_p1 = $signed(bottom_27_V_read);

assign bottom_28_V_read_ca_fu_1136_p1 = $signed(bottom_28_V_read);

assign bottom_29_V_read_ca_fu_1132_p1 = $signed(bottom_29_V_read);

assign bottom_2_V_read_cas_fu_1240_p1 = $signed(bottom_2_V_read);

assign bottom_30_V_read_ca_fu_1128_p1 = $signed(bottom_30_V_read);

assign bottom_31_V_read_ca_fu_1124_p1 = $signed(bottom_31_V_read);

assign bottom_32_V_read_ca_fu_1120_p1 = $signed(bottom_32_V_read);

assign bottom_33_V_read_ca_fu_1116_p1 = $signed(bottom_33_V_read);

assign bottom_34_V_read_ca_fu_1112_p1 = $signed(bottom_34_V_read);

assign bottom_35_V_read_ca_fu_1108_p1 = $signed(bottom_35_V_read);

assign bottom_36_V_read_ca_fu_1104_p1 = $signed(bottom_36_V_read);

assign bottom_37_V_read_ca_fu_1100_p1 = $signed(bottom_37_V_read);

assign bottom_38_V_read_ca_fu_1096_p1 = $signed(bottom_38_V_read);

assign bottom_39_V_read_ca_fu_1092_p1 = $signed(bottom_39_V_read);

assign bottom_3_V_read_cas_fu_1236_p1 = $signed(bottom_3_V_read);

assign bottom_40_V_read_ca_fu_1088_p1 = $signed(bottom_40_V_read);

assign bottom_41_V_read_ca_fu_1084_p1 = $signed(bottom_41_V_read);

assign bottom_42_V_read_ca_fu_1080_p1 = $signed(bottom_42_V_read);

assign bottom_43_V_read_ca_fu_1076_p1 = $signed(bottom_43_V_read);

assign bottom_44_V_read_ca_fu_1072_p1 = $signed(bottom_44_V_read);

assign bottom_45_V_read_ca_fu_1068_p1 = $signed(bottom_45_V_read);

assign bottom_46_V_read_ca_fu_1064_p1 = $signed(bottom_46_V_read);

assign bottom_47_V_read_ca_fu_1060_p1 = $signed(bottom_47_V_read);

assign bottom_48_V_read_ca_fu_1056_p1 = $signed(bottom_48_V_read);

assign bottom_49_V_read_ca_fu_1052_p1 = $signed(bottom_49_V_read);

assign bottom_4_V_read_cas_fu_1232_p1 = $signed(bottom_4_V_read);

assign bottom_50_V_read_ca_fu_1048_p1 = $signed(bottom_50_V_read);

assign bottom_51_V_read_ca_fu_1044_p1 = $signed(bottom_51_V_read);

assign bottom_52_V_read_ca_fu_1040_p1 = $signed(bottom_52_V_read);

assign bottom_53_V_read_ca_fu_1036_p1 = $signed(bottom_53_V_read);

assign bottom_54_V_read_ca_fu_1032_p1 = $signed(bottom_54_V_read);

assign bottom_55_V_read_ca_fu_1028_p1 = $signed(bottom_55_V_read);

assign bottom_56_V_read_ca_fu_1024_p1 = $signed(bottom_56_V_read);

assign bottom_57_V_read_ca_fu_1020_p1 = $signed(bottom_57_V_read);

assign bottom_58_V_read_ca_fu_1016_p1 = $signed(bottom_58_V_read);

assign bottom_59_V_read_ca_fu_1012_p1 = $signed(bottom_59_V_read);

assign bottom_5_V_read_cas_fu_1228_p1 = $signed(bottom_5_V_read);

assign bottom_60_V_read_ca_fu_1008_p1 = $signed(bottom_60_V_read);

assign bottom_61_V_read_ca_fu_1004_p1 = $signed(bottom_61_V_read);

assign bottom_62_V_read_ca_fu_1000_p1 = $signed(bottom_62_V_read);

assign bottom_63_V_read_ca_fu_996_p1 = $signed(bottom_63_V_read);

assign bottom_6_V_read_cas_fu_1224_p1 = $signed(bottom_6_V_read);

assign bottom_7_V_read_cas_fu_1220_p1 = $signed(bottom_7_V_read);

assign bottom_8_V_read_cas_fu_1216_p1 = $signed(bottom_8_V_read);

assign bottom_9_V_read_cas_fu_1212_p1 = $signed(bottom_9_V_read);

assign buf_0_V_fu_1752_p3 = ((or_ln340_39_fu_1730_p2[0:0] === 1'b1) ? select_ln340_fu_1736_p3 : select_ln388_fu_1744_p3);

assign buf_1_V_fu_2024_p3 = ((or_ln340_41_fu_2002_p2[0:0] === 1'b1) ? select_ln340_1_fu_2008_p3 : select_ln388_1_fu_2016_p3);

assign buf_2_V_fu_2296_p3 = ((or_ln340_43_fu_2274_p2[0:0] === 1'b1) ? select_ln340_2_fu_2280_p3 : select_ln388_2_fu_2288_p3);

assign buf_3_V_fu_2568_p3 = ((or_ln340_45_fu_2546_p2[0:0] === 1'b1) ? select_ln340_3_fu_2552_p3 : select_ln388_3_fu_2560_p3);

assign buf_4_V_fu_2840_p3 = ((or_ln340_47_fu_2818_p2[0:0] === 1'b1) ? select_ln340_4_fu_2824_p3 : select_ln388_4_fu_2832_p3);

assign buf_5_V_fu_3112_p3 = ((or_ln340_49_fu_3090_p2[0:0] === 1'b1) ? select_ln340_5_fu_3096_p3 : select_ln388_5_fu_3104_p3);

assign buf_6_V_fu_3384_p3 = ((or_ln340_51_fu_3362_p2[0:0] === 1'b1) ? select_ln340_6_fu_3368_p3 : select_ln388_6_fu_3376_p3);

assign buf_7_V_fu_3656_p3 = ((or_ln340_53_fu_3634_p2[0:0] === 1'b1) ? select_ln340_7_fu_3640_p3 : select_ln388_7_fu_3648_p3);

assign buf_8_V_fu_3928_p3 = ((or_ln340_55_fu_3906_p2[0:0] === 1'b1) ? select_ln340_8_fu_3912_p3 : select_ln388_8_fu_3920_p3);

assign buf_9_V_fu_4200_p3 = ((or_ln340_58_fu_4178_p2[0:0] === 1'b1) ? select_ln340_9_fu_4184_p3 : select_ln388_9_fu_4192_p3);

assign cii_fu_1258_p2 = (ap_phi_mux_cii_0_phi_fu_978_p4 + 7'd1);

assign coo_fu_4224_p2 = (coo2_0_reg_985 + 4'd1);

assign icmp_ln23_fu_1252_p2 = ((ap_phi_mux_cii_0_phi_fu_978_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_4218_p2 = ((coo2_0_reg_985 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln768_1_fu_1894_p2 = ((tmp_1_fu_1878_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_2_fu_2166_p2 = ((tmp_3_fu_2150_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_3_fu_2438_p2 = ((tmp_10_fu_2422_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_4_fu_2710_p2 = ((tmp_12_fu_2694_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_5_fu_2982_p2 = ((tmp_14_fu_2966_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_6_fu_3254_p2 = ((tmp_16_fu_3238_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_7_fu_3526_p2 = ((tmp_18_fu_3510_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_8_fu_3798_p2 = ((tmp_20_fu_3782_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_9_fu_4070_p2 = ((tmp_22_fu_4054_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_1622_p2 = ((tmp_8_fu_1606_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_10_fu_2960_p2 = ((tmp_13_fu_2950_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_11_fu_2976_p2 = ((tmp_14_fu_2966_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_12_fu_3232_p2 = ((tmp_15_fu_3222_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_13_fu_3248_p2 = ((tmp_16_fu_3238_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_14_fu_3504_p2 = ((tmp_17_fu_3494_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_15_fu_3520_p2 = ((tmp_18_fu_3510_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_16_fu_3776_p2 = ((tmp_19_fu_3766_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_17_fu_3792_p2 = ((tmp_20_fu_3782_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_18_fu_4048_p2 = ((tmp_21_fu_4038_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_19_fu_4064_p2 = ((tmp_22_fu_4054_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_1616_p2 = ((tmp_8_fu_1606_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_1872_p2 = ((tmp_9_fu_1862_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_1888_p2 = ((tmp_1_fu_1878_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_2144_p2 = ((tmp_2_fu_2134_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_2160_p2 = ((tmp_3_fu_2150_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_6_fu_2416_p2 = ((tmp_4_fu_2406_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_7_fu_2432_p2 = ((tmp_10_fu_2422_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_8_fu_2688_p2 = ((tmp_11_fu_2678_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_9_fu_2704_p2 = ((tmp_12_fu_2694_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_1600_p2 = ((tmp_6_fu_1590_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_4256_p2 = ((tmp_V_4_fu_4230_p12 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_4370_p2 = ((p_Result_14_fu_4365_p2 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_4339_p2 = (($signed(tmp_182_fu_4329_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_4429_p2 = (($signed(lsb_index_fu_4323_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (p_Result_17_fu_4294_p3) begin
    if (p_Result_17_fu_4294_p3[0] == 1'b1) begin
        l_fu_4302_p3 = 32'd0;
    end else if (p_Result_17_fu_4294_p3[1] == 1'b1) begin
        l_fu_4302_p3 = 32'd1;
    end else if (p_Result_17_fu_4294_p3[2] == 1'b1) begin
        l_fu_4302_p3 = 32'd2;
    end else if (p_Result_17_fu_4294_p3[3] == 1'b1) begin
        l_fu_4302_p3 = 32'd3;
    end else if (p_Result_17_fu_4294_p3[4] == 1'b1) begin
        l_fu_4302_p3 = 32'd4;
    end else if (p_Result_17_fu_4294_p3[5] == 1'b1) begin
        l_fu_4302_p3 = 32'd5;
    end else if (p_Result_17_fu_4294_p3[6] == 1'b1) begin
        l_fu_4302_p3 = 32'd6;
    end else if (p_Result_17_fu_4294_p3[7] == 1'b1) begin
        l_fu_4302_p3 = 32'd7;
    end else if (p_Result_17_fu_4294_p3[8] == 1'b1) begin
        l_fu_4302_p3 = 32'd8;
    end else if (p_Result_17_fu_4294_p3[9] == 1'b1) begin
        l_fu_4302_p3 = 32'd9;
    end else if (p_Result_17_fu_4294_p3[10] == 1'b1) begin
        l_fu_4302_p3 = 32'd10;
    end else if (p_Result_17_fu_4294_p3[11] == 1'b1) begin
        l_fu_4302_p3 = 32'd11;
    end else if (p_Result_17_fu_4294_p3[12] == 1'b1) begin
        l_fu_4302_p3 = 32'd12;
    end else if (p_Result_17_fu_4294_p3[13] == 1'b1) begin
        l_fu_4302_p3 = 32'd13;
    end else if (p_Result_17_fu_4294_p3[14] == 1'b1) begin
        l_fu_4302_p3 = 32'd14;
    end else if (p_Result_17_fu_4294_p3[15] == 1'b1) begin
        l_fu_4302_p3 = 32'd15;
    end else if (p_Result_17_fu_4294_p3[16] == 1'b1) begin
        l_fu_4302_p3 = 32'd16;
    end else if (p_Result_17_fu_4294_p3[17] == 1'b1) begin
        l_fu_4302_p3 = 32'd17;
    end else if (p_Result_17_fu_4294_p3[18] == 1'b1) begin
        l_fu_4302_p3 = 32'd18;
    end else if (p_Result_17_fu_4294_p3[19] == 1'b1) begin
        l_fu_4302_p3 = 32'd19;
    end else if (p_Result_17_fu_4294_p3[20] == 1'b1) begin
        l_fu_4302_p3 = 32'd20;
    end else if (p_Result_17_fu_4294_p3[21] == 1'b1) begin
        l_fu_4302_p3 = 32'd21;
    end else if (p_Result_17_fu_4294_p3[22] == 1'b1) begin
        l_fu_4302_p3 = 32'd22;
    end else if (p_Result_17_fu_4294_p3[23] == 1'b1) begin
        l_fu_4302_p3 = 32'd23;
    end else if (p_Result_17_fu_4294_p3[24] == 1'b1) begin
        l_fu_4302_p3 = 32'd24;
    end else if (p_Result_17_fu_4294_p3[25] == 1'b1) begin
        l_fu_4302_p3 = 32'd25;
    end else if (p_Result_17_fu_4294_p3[26] == 1'b1) begin
        l_fu_4302_p3 = 32'd26;
    end else if (p_Result_17_fu_4294_p3[27] == 1'b1) begin
        l_fu_4302_p3 = 32'd27;
    end else if (p_Result_17_fu_4294_p3[28] == 1'b1) begin
        l_fu_4302_p3 = 32'd28;
    end else if (p_Result_17_fu_4294_p3[29] == 1'b1) begin
        l_fu_4302_p3 = 32'd29;
    end else if (p_Result_17_fu_4294_p3[30] == 1'b1) begin
        l_fu_4302_p3 = 32'd30;
    end else if (p_Result_17_fu_4294_p3[31] == 1'b1) begin
        l_fu_4302_p3 = 32'd31;
    end else begin
        l_fu_4302_p3 = 32'd32;
    end
end

assign linear_weight_V_0_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_1_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_2_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_3_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_4_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_5_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_6_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_7_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_8_address0 = zext_ln27_fu_1264_p1;

assign linear_weight_V_9_address0 = zext_ln27_fu_1264_p1;

assign lsb_index_fu_4323_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_4314_p2));

assign lshr_ln947_fu_4359_p2 = 12'd4095 >> zext_ln947_fu_4355_p1;

assign lshr_ln958_fu_4450_p2 = m_fu_4447_p1 >> add_ln958_reg_5135;

assign m_1_fu_4460_p3 = ((icmp_ln958_reg_5130[0:0] === 1'b1) ? lshr_ln958_fu_4450_p2 : shl_ln958_fu_4455_p2);

assign m_2_fu_4467_p2 = (m_1_fu_4460_p3 + or_ln_reg_5125);

assign m_5_fu_4472_p4 = {{m_2_fu_4467_p2[31:1]}};

assign m_6_fu_4482_p1 = m_5_fu_4472_p4;

assign m_axi_top_ARADDR = 32'd0;

assign m_axi_top_ARBURST = 2'd0;

assign m_axi_top_ARCACHE = 4'd0;

assign m_axi_top_ARID = 1'd0;

assign m_axi_top_ARLEN = 32'd0;

assign m_axi_top_ARLOCK = 2'd0;

assign m_axi_top_ARPROT = 3'd0;

assign m_axi_top_ARQOS = 4'd0;

assign m_axi_top_ARREGION = 4'd0;

assign m_axi_top_ARSIZE = 3'd0;

assign m_axi_top_ARUSER = 1'd0;

assign m_axi_top_ARVALID = 1'b0;

assign m_axi_top_AWADDR = zext_ln32_fu_4208_p1;

assign m_axi_top_AWBURST = 2'd0;

assign m_axi_top_AWCACHE = 4'd0;

assign m_axi_top_AWID = 1'd0;

assign m_axi_top_AWLEN = 32'd10;

assign m_axi_top_AWLOCK = 2'd0;

assign m_axi_top_AWPROT = 3'd0;

assign m_axi_top_AWQOS = 4'd0;

assign m_axi_top_AWREGION = 4'd0;

assign m_axi_top_AWSIZE = 3'd0;

assign m_axi_top_AWUSER = 1'd0;

assign m_axi_top_RREADY = 1'b0;

assign m_axi_top_WDATA = select_ln935_reg_5145;

assign m_axi_top_WID = 1'd0;

assign m_axi_top_WLAST = 1'b0;

assign m_axi_top_WSTRB = 4'd15;

assign m_axi_top_WUSER = 1'd0;

assign m_fu_4447_p1 = tmp_V_5_reg_5108_pp1_iter1_reg;

assign or_ln340_1_fu_1990_p2 = (and_ln786_35_fu_1984_p2 | and_ln785_1_fu_1960_p2);

assign or_ln340_2_fu_2262_p2 = (and_ln786_36_fu_2256_p2 | and_ln785_2_fu_2232_p2);

assign or_ln340_38_fu_1724_p2 = (xor_ln785_4_fu_1682_p2 | and_ln786_fu_1694_p2);

assign or_ln340_39_fu_1730_p2 = (or_ln340_38_fu_1724_p2 | and_ln781_fu_1664_p2);

assign or_ln340_3_fu_2534_p2 = (and_ln786_37_fu_2528_p2 | and_ln785_3_fu_2504_p2);

assign or_ln340_40_fu_1996_p2 = (xor_ln785_10_fu_1954_p2 | and_ln786_1_fu_1966_p2);

assign or_ln340_41_fu_2002_p2 = (or_ln340_40_fu_1996_p2 | and_ln781_1_fu_1936_p2);

assign or_ln340_42_fu_2268_p2 = (xor_ln785_11_fu_2226_p2 | and_ln786_2_fu_2238_p2);

assign or_ln340_43_fu_2274_p2 = (or_ln340_42_fu_2268_p2 | and_ln781_2_fu_2208_p2);

assign or_ln340_44_fu_2540_p2 = (xor_ln785_12_fu_2498_p2 | and_ln786_3_fu_2510_p2);

assign or_ln340_45_fu_2546_p2 = (or_ln340_44_fu_2540_p2 | and_ln781_3_fu_2480_p2);

assign or_ln340_46_fu_2812_p2 = (xor_ln785_14_fu_2770_p2 | and_ln786_4_fu_2782_p2);

assign or_ln340_47_fu_2818_p2 = (or_ln340_46_fu_2812_p2 | and_ln781_4_fu_2752_p2);

assign or_ln340_48_fu_3084_p2 = (xor_ln785_15_fu_3042_p2 | and_ln786_5_fu_3054_p2);

assign or_ln340_49_fu_3090_p2 = (or_ln340_48_fu_3084_p2 | and_ln781_5_fu_3024_p2);

assign or_ln340_4_fu_2806_p2 = (and_ln786_38_fu_2800_p2 | and_ln785_4_fu_2776_p2);

assign or_ln340_50_fu_3356_p2 = (xor_ln785_16_fu_3314_p2 | and_ln786_6_fu_3326_p2);

assign or_ln340_51_fu_3362_p2 = (or_ln340_50_fu_3356_p2 | and_ln781_6_fu_3296_p2);

assign or_ln340_52_fu_3628_p2 = (xor_ln785_17_fu_3586_p2 | and_ln786_7_fu_3598_p2);

assign or_ln340_53_fu_3634_p2 = (or_ln340_52_fu_3628_p2 | and_ln781_7_fu_3568_p2);

assign or_ln340_54_fu_3900_p2 = (xor_ln785_18_fu_3858_p2 | and_ln786_8_fu_3870_p2);

assign or_ln340_55_fu_3906_p2 = (or_ln340_54_fu_3900_p2 | and_ln781_8_fu_3840_p2);

assign or_ln340_56_fu_4166_p2 = (and_ln786_43_fu_4160_p2 | and_ln785_9_fu_4136_p2);

assign or_ln340_57_fu_4172_p2 = (xor_ln785_19_fu_4130_p2 | and_ln786_9_fu_4142_p2);

assign or_ln340_58_fu_4178_p2 = (or_ln340_57_fu_4172_p2 | and_ln781_9_fu_4112_p2);

assign or_ln340_5_fu_3078_p2 = (and_ln786_39_fu_3072_p2 | and_ln785_5_fu_3048_p2);

assign or_ln340_6_fu_3350_p2 = (and_ln786_40_fu_3344_p2 | and_ln785_6_fu_3320_p2);

assign or_ln340_7_fu_3622_p2 = (and_ln786_41_fu_3616_p2 | and_ln785_7_fu_3592_p2);

assign or_ln340_8_fu_3894_p2 = (and_ln786_42_fu_3888_p2 | and_ln785_8_fu_3864_p2);

assign or_ln340_fu_1718_p2 = (and_ln786_34_fu_1712_p2 | and_ln785_fu_1688_p2);

assign or_ln785_1_fu_1948_p2 = (xor_ln785_1_fu_1942_p2 | tmp_131_fu_1854_p3);

assign or_ln785_2_fu_2220_p2 = (xor_ln785_2_fu_2214_p2 | tmp_137_fu_2126_p3);

assign or_ln785_3_fu_2492_p2 = (xor_ln785_3_fu_2486_p2 | tmp_143_fu_2398_p3);

assign or_ln785_4_fu_2764_p2 = (xor_ln785_13_fu_2758_p2 | tmp_149_fu_2670_p3);

assign or_ln785_5_fu_3036_p2 = (xor_ln785_5_fu_3030_p2 | tmp_155_fu_2942_p3);

assign or_ln785_6_fu_3308_p2 = (xor_ln785_6_fu_3302_p2 | tmp_161_fu_3214_p3);

assign or_ln785_7_fu_3580_p2 = (xor_ln785_7_fu_3574_p2 | tmp_167_fu_3486_p3);

assign or_ln785_8_fu_3852_p2 = (xor_ln785_8_fu_3846_p2 | tmp_173_fu_3758_p3);

assign or_ln785_9_fu_4124_p2 = (xor_ln785_9_fu_4118_p2 | tmp_179_fu_4030_p3);

assign or_ln785_fu_1676_p2 = (xor_ln785_fu_1670_p2 | tmp_125_fu_1582_p3);

assign or_ln786_1_fu_1972_p2 = (and_ln786_1_fu_1966_p2 | and_ln781_1_fu_1936_p2);

assign or_ln786_2_fu_2244_p2 = (and_ln786_2_fu_2238_p2 | and_ln781_2_fu_2208_p2);

assign or_ln786_3_fu_2516_p2 = (and_ln786_3_fu_2510_p2 | and_ln781_3_fu_2480_p2);

assign or_ln786_4_fu_2788_p2 = (and_ln786_4_fu_2782_p2 | and_ln781_4_fu_2752_p2);

assign or_ln786_5_fu_3060_p2 = (and_ln786_5_fu_3054_p2 | and_ln781_5_fu_3024_p2);

assign or_ln786_6_fu_3332_p2 = (and_ln786_6_fu_3326_p2 | and_ln781_6_fu_3296_p2);

assign or_ln786_7_fu_3604_p2 = (and_ln786_7_fu_3598_p2 | and_ln781_7_fu_3568_p2);

assign or_ln786_8_fu_3876_p2 = (and_ln786_8_fu_3870_p2 | and_ln781_8_fu_3840_p2);

assign or_ln786_9_fu_4148_p2 = (and_ln786_9_fu_4142_p2 | and_ln781_9_fu_4112_p2);

assign or_ln786_fu_1700_p2 = (and_ln786_fu_1694_p2 | and_ln781_fu_1664_p2);

assign or_ln949_fu_4415_p2 = (and_ln949_fu_4409_p2 | a_fu_4376_p2);

assign or_ln_fu_4421_p3 = {{31'd0}, {or_ln949_fu_4415_p2}};

assign p_Result_14_fu_4365_p2 = (tmp_V_5_reg_5108 & lshr_ln947_fu_4359_p2);

assign p_Result_16_fu_4262_p3 = tmp_V_4_fu_4230_p12[32'd11];

assign p_Result_17_fu_4294_p3 = {{20'd1048575}, {p_Result_s_fu_4284_p4}};

assign p_Result_18_fu_4520_p5 = {{tmp_s_fu_4513_p3}, {m_6_fu_4482_p1[22:0]}};

assign p_Result_3_fu_4402_p3 = tmp_V_5_reg_5108[add_ln949_fu_4396_p2];

integer ap_tvar_int_0;

always @ (tmp_V_5_fu_4276_p3) begin
    for (ap_tvar_int_0 = 12 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 11 - 0) begin
            p_Result_s_fu_4284_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_4284_p4[ap_tvar_int_0] = tmp_V_5_fu_4276_p3[11 - ap_tvar_int_0];
        end
    end
end

assign select_ln1118_1_fu_1380_p3 = ((linear_weight_V_1_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_2_fu_1392_p3 = ((linear_weight_V_2_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_3_fu_1404_p3 = ((linear_weight_V_3_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_4_fu_1416_p3 = ((linear_weight_V_4_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_5_fu_1428_p3 = ((linear_weight_V_5_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_6_fu_1440_p3 = ((linear_weight_V_6_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_7_fu_1452_p3 = ((linear_weight_V_7_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_8_fu_1464_p3 = ((linear_weight_V_8_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_9_fu_1476_p3 = ((linear_weight_V_9_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln1118_fu_1368_p3 = ((linear_weight_V_0_q0[0:0] === 1'b1) ? sub_ln1118_fu_1362_p2 : 22'd0);

assign select_ln340_1_fu_2008_p3 = ((or_ln340_1_fu_1990_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_1_fu_1828_p2);

assign select_ln340_2_fu_2280_p3 = ((or_ln340_2_fu_2262_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_2_fu_2100_p2);

assign select_ln340_3_fu_2552_p3 = ((or_ln340_3_fu_2534_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_3_fu_2372_p2);

assign select_ln340_4_fu_2824_p3 = ((or_ln340_4_fu_2806_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_4_fu_2644_p2);

assign select_ln340_5_fu_3096_p3 = ((or_ln340_5_fu_3078_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_5_fu_2916_p2);

assign select_ln340_6_fu_3368_p3 = ((or_ln340_6_fu_3350_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_6_fu_3188_p2);

assign select_ln340_7_fu_3640_p3 = ((or_ln340_7_fu_3622_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_7_fu_3460_p2);

assign select_ln340_8_fu_3912_p3 = ((or_ln340_8_fu_3894_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_8_fu_3732_p2);

assign select_ln340_9_fu_4184_p3 = ((or_ln340_56_fu_4166_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_9_fu_4004_p2);

assign select_ln340_fu_1736_p3 = ((or_ln340_fu_1718_p2[0:0] === 1'b1) ? 12'd2047 : add_ln415_fu_1556_p2);

assign select_ln388_1_fu_2016_p3 = ((and_ln786_35_fu_1984_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_1_fu_1828_p2);

assign select_ln388_2_fu_2288_p3 = ((and_ln786_36_fu_2256_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_2_fu_2100_p2);

assign select_ln388_3_fu_2560_p3 = ((and_ln786_37_fu_2528_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_3_fu_2372_p2);

assign select_ln388_4_fu_2832_p3 = ((and_ln786_38_fu_2800_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_4_fu_2644_p2);

assign select_ln388_5_fu_3104_p3 = ((and_ln786_39_fu_3072_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_5_fu_2916_p2);

assign select_ln388_6_fu_3376_p3 = ((and_ln786_40_fu_3344_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_6_fu_3188_p2);

assign select_ln388_7_fu_3648_p3 = ((and_ln786_41_fu_3616_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_7_fu_3460_p2);

assign select_ln388_8_fu_3920_p3 = ((and_ln786_42_fu_3888_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_8_fu_3732_p2);

assign select_ln388_9_fu_4192_p3 = ((and_ln786_43_fu_4160_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_9_fu_4004_p2);

assign select_ln388_fu_1744_p3 = ((and_ln786_34_fu_1712_p2[0:0] === 1'b1) ? 12'd2048 : add_ln415_fu_1556_p2);

assign select_ln416_1_fu_1928_p3 = ((and_ln416_1_fu_1848_p2[0:0] === 1'b1) ? and_ln779_1_fu_1922_p2 : icmp_ln879_3_fu_1888_p2);

assign select_ln416_2_fu_2200_p3 = ((and_ln416_2_fu_2120_p2[0:0] === 1'b1) ? and_ln779_2_fu_2194_p2 : icmp_ln879_5_fu_2160_p2);

assign select_ln416_3_fu_2472_p3 = ((and_ln416_3_fu_2392_p2[0:0] === 1'b1) ? and_ln779_3_fu_2466_p2 : icmp_ln879_7_fu_2432_p2);

assign select_ln416_4_fu_2744_p3 = ((and_ln416_4_fu_2664_p2[0:0] === 1'b1) ? and_ln779_4_fu_2738_p2 : icmp_ln879_9_fu_2704_p2);

assign select_ln416_5_fu_3016_p3 = ((and_ln416_5_fu_2936_p2[0:0] === 1'b1) ? and_ln779_5_fu_3010_p2 : icmp_ln879_11_fu_2976_p2);

assign select_ln416_6_fu_3288_p3 = ((and_ln416_6_fu_3208_p2[0:0] === 1'b1) ? and_ln779_6_fu_3282_p2 : icmp_ln879_13_fu_3248_p2);

assign select_ln416_7_fu_3560_p3 = ((and_ln416_7_fu_3480_p2[0:0] === 1'b1) ? and_ln779_7_fu_3554_p2 : icmp_ln879_15_fu_3520_p2);

assign select_ln416_8_fu_3832_p3 = ((and_ln416_8_fu_3752_p2[0:0] === 1'b1) ? and_ln779_8_fu_3826_p2 : icmp_ln879_17_fu_3792_p2);

assign select_ln416_9_fu_4104_p3 = ((and_ln416_9_fu_4024_p2[0:0] === 1'b1) ? and_ln779_9_fu_4098_p2 : icmp_ln879_19_fu_4064_p2);

assign select_ln416_fu_1656_p3 = ((and_ln416_fu_1576_p2[0:0] === 1'b1) ? and_ln779_fu_1650_p2 : icmp_ln879_1_fu_1616_p2);

assign select_ln777_1_fu_1900_p3 = ((and_ln416_1_fu_1848_p2[0:0] === 1'b1) ? icmp_ln879_3_fu_1888_p2 : icmp_ln768_1_fu_1894_p2);

assign select_ln777_2_fu_2172_p3 = ((and_ln416_2_fu_2120_p2[0:0] === 1'b1) ? icmp_ln879_5_fu_2160_p2 : icmp_ln768_2_fu_2166_p2);

assign select_ln777_3_fu_2444_p3 = ((and_ln416_3_fu_2392_p2[0:0] === 1'b1) ? icmp_ln879_7_fu_2432_p2 : icmp_ln768_3_fu_2438_p2);

assign select_ln777_4_fu_2716_p3 = ((and_ln416_4_fu_2664_p2[0:0] === 1'b1) ? icmp_ln879_9_fu_2704_p2 : icmp_ln768_4_fu_2710_p2);

assign select_ln777_5_fu_2988_p3 = ((and_ln416_5_fu_2936_p2[0:0] === 1'b1) ? icmp_ln879_11_fu_2976_p2 : icmp_ln768_5_fu_2982_p2);

assign select_ln777_6_fu_3260_p3 = ((and_ln416_6_fu_3208_p2[0:0] === 1'b1) ? icmp_ln879_13_fu_3248_p2 : icmp_ln768_6_fu_3254_p2);

assign select_ln777_7_fu_3532_p3 = ((and_ln416_7_fu_3480_p2[0:0] === 1'b1) ? icmp_ln879_15_fu_3520_p2 : icmp_ln768_7_fu_3526_p2);

assign select_ln777_8_fu_3804_p3 = ((and_ln416_8_fu_3752_p2[0:0] === 1'b1) ? icmp_ln879_17_fu_3792_p2 : icmp_ln768_8_fu_3798_p2);

assign select_ln777_9_fu_4076_p3 = ((and_ln416_9_fu_4024_p2[0:0] === 1'b1) ? icmp_ln879_19_fu_4064_p2 : icmp_ln768_9_fu_4070_p2);

assign select_ln777_fu_1628_p3 = ((and_ln416_fu_1576_p2[0:0] === 1'b1) ? icmp_ln879_1_fu_1616_p2 : icmp_ln768_fu_1622_p2);

assign select_ln935_fu_4536_p3 = ((icmp_ln935_reg_5098_pp1_iter1_reg[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_4532_p1);

assign select_ln964_fu_4494_p3 = ((tmp_184_fu_4486_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln1117_fu_1352_p1 = tmp_5_reg_4877;

assign sext_ln1118_1_fu_1760_p1 = select_ln1118_1_reg_4943;

assign sext_ln1118_2_fu_2032_p1 = select_ln1118_2_reg_4953;

assign sext_ln1118_3_fu_2304_p1 = select_ln1118_3_reg_4963;

assign sext_ln1118_4_fu_2576_p1 = select_ln1118_4_reg_4973;

assign sext_ln1118_5_fu_2848_p1 = select_ln1118_5_reg_4983;

assign sext_ln1118_6_fu_3120_p1 = select_ln1118_6_reg_4993;

assign sext_ln1118_7_fu_3392_p1 = select_ln1118_7_reg_5003;

assign sext_ln1118_8_fu_3664_p1 = select_ln1118_8_reg_5013;

assign sext_ln1118_9_fu_3936_p1 = select_ln1118_9_reg_5023;

assign sext_ln1118_fu_1488_p1 = select_ln1118_reg_4933;

assign sext_ln1192_1_fu_1775_p1 = shl_ln728_s_fu_1763_p3;

assign sext_ln1192_2_fu_2047_p1 = shl_ln728_1_fu_2035_p3;

assign sext_ln1192_3_fu_2319_p1 = shl_ln728_2_fu_2307_p3;

assign sext_ln1192_4_fu_2591_p1 = shl_ln728_3_fu_2579_p3;

assign sext_ln1192_5_fu_2863_p1 = shl_ln728_4_fu_2851_p3;

assign sext_ln1192_6_fu_3135_p1 = shl_ln728_5_fu_3123_p3;

assign sext_ln1192_7_fu_3407_p1 = shl_ln728_6_fu_3395_p3;

assign sext_ln1192_8_fu_3679_p1 = shl_ln728_7_fu_3667_p3;

assign sext_ln1192_9_fu_3951_p1 = shl_ln728_8_fu_3939_p3;

assign sext_ln1192_fu_1503_p1 = shl_ln1_fu_1491_p3;

assign sext_ln728_1_fu_1771_p1 = shl_ln728_s_fu_1763_p3;

assign sext_ln728_2_fu_2043_p1 = shl_ln728_1_fu_2035_p3;

assign sext_ln728_3_fu_2315_p1 = shl_ln728_2_fu_2307_p3;

assign sext_ln728_4_fu_2587_p1 = shl_ln728_3_fu_2579_p3;

assign sext_ln728_5_fu_2859_p1 = shl_ln728_4_fu_2851_p3;

assign sext_ln728_6_fu_3131_p1 = shl_ln728_5_fu_3123_p3;

assign sext_ln728_7_fu_3403_p1 = shl_ln728_6_fu_3395_p3;

assign sext_ln728_8_fu_3675_p1 = shl_ln728_7_fu_3667_p3;

assign sext_ln728_9_fu_3947_p1 = shl_ln728_8_fu_3939_p3;

assign sext_ln728_fu_1499_p1 = shl_ln1_fu_1491_p3;

assign shl_ln1_fu_1491_p3 = {{buf_0_V_0_reg_962}, {7'd0}};

assign shl_ln728_1_fu_2035_p3 = {{buf_2_V_0_reg_938}, {7'd0}};

assign shl_ln728_2_fu_2307_p3 = {{buf_3_V_0_reg_926}, {7'd0}};

assign shl_ln728_3_fu_2579_p3 = {{buf_4_V_0_reg_914}, {7'd0}};

assign shl_ln728_4_fu_2851_p3 = {{buf_5_V_0_reg_902}, {7'd0}};

assign shl_ln728_5_fu_3123_p3 = {{buf_6_V_0_reg_890}, {7'd0}};

assign shl_ln728_6_fu_3395_p3 = {{buf_7_V_0_reg_878}, {7'd0}};

assign shl_ln728_7_fu_3667_p3 = {{buf_8_V_0_reg_866}, {7'd0}};

assign shl_ln728_8_fu_3939_p3 = {{buf_9_V_0_reg_854}, {7'd0}};

assign shl_ln728_s_fu_1763_p3 = {{buf_1_V_0_reg_950}, {7'd0}};

assign shl_ln958_fu_4455_p2 = m_fu_4447_p1 << sub_ln958_reg_5140;

assign shl_ln_fu_1355_p3 = {{tmp_5_reg_4877}, {10'd0}};

assign sub_ln1118_fu_1362_p2 = ($signed(shl_ln_fu_1355_p3) - $signed(sext_ln1117_fu_1352_p1));

assign sub_ln944_fu_4314_p2 = (32'd12 - l_reg_5115);

assign sub_ln947_fu_4349_p2 = (4'd5 - trunc_ln947_fu_4345_p1);

assign sub_ln958_fu_4441_p2 = (32'd25 - sub_ln944_fu_4314_p2);

assign sub_ln964_fu_4502_p2 = (8'd4 - trunc_ln943_reg_5120_pp1_iter1_reg);

assign tmp_10_fu_2422_p4 = {{add_ln1192_33_fu_2323_p2[22:19]}};

assign tmp_11_fu_2678_p4 = {{add_ln1192_34_fu_2595_p2[22:20]}};

assign tmp_121_fu_1518_p3 = add_ln1192_fu_1507_p2[32'd22];

assign tmp_122_fu_1536_p3 = add_ln1192_fu_1507_p2[32'd18];

assign tmp_123_fu_1544_p3 = add_ln1192_fu_1507_p2[32'd6];

assign tmp_124_fu_1562_p3 = add_ln415_fu_1556_p2[32'd11];

assign tmp_125_fu_1582_p3 = add_ln415_fu_1556_p2[32'd11];

assign tmp_126_fu_1636_p3 = add_ln1192_40_fu_1513_p2[32'd19];

assign tmp_127_fu_1790_p3 = add_ln1192_31_fu_1779_p2[32'd22];

assign tmp_128_fu_1808_p3 = add_ln1192_31_fu_1779_p2[32'd18];

assign tmp_129_fu_1816_p3 = add_ln1192_31_fu_1779_p2[32'd6];

assign tmp_12_fu_2694_p4 = {{add_ln1192_34_fu_2595_p2[22:19]}};

assign tmp_130_fu_1834_p3 = add_ln415_1_fu_1828_p2[32'd11];

assign tmp_131_fu_1854_p3 = add_ln415_1_fu_1828_p2[32'd11];

assign tmp_132_fu_1908_p3 = add_ln1192_41_fu_1785_p2[32'd19];

assign tmp_133_fu_2062_p3 = add_ln1192_32_fu_2051_p2[32'd22];

assign tmp_134_fu_2080_p3 = add_ln1192_32_fu_2051_p2[32'd18];

assign tmp_135_fu_2088_p3 = add_ln1192_32_fu_2051_p2[32'd6];

assign tmp_136_fu_2106_p3 = add_ln415_2_fu_2100_p2[32'd11];

assign tmp_137_fu_2126_p3 = add_ln415_2_fu_2100_p2[32'd11];

assign tmp_138_fu_2180_p3 = add_ln1192_42_fu_2057_p2[32'd19];

assign tmp_139_fu_2334_p3 = add_ln1192_33_fu_2323_p2[32'd22];

assign tmp_13_fu_2950_p4 = {{add_ln1192_35_fu_2867_p2[22:20]}};

assign tmp_140_fu_2352_p3 = add_ln1192_33_fu_2323_p2[32'd18];

assign tmp_141_fu_2360_p3 = add_ln1192_33_fu_2323_p2[32'd6];

assign tmp_142_fu_2378_p3 = add_ln415_3_fu_2372_p2[32'd11];

assign tmp_143_fu_2398_p3 = add_ln415_3_fu_2372_p2[32'd11];

assign tmp_144_fu_2452_p3 = add_ln1192_43_fu_2329_p2[32'd19];

assign tmp_145_fu_2606_p3 = add_ln1192_34_fu_2595_p2[32'd22];

assign tmp_146_fu_2624_p3 = add_ln1192_34_fu_2595_p2[32'd18];

assign tmp_147_fu_2632_p3 = add_ln1192_34_fu_2595_p2[32'd6];

assign tmp_148_fu_2650_p3 = add_ln415_4_fu_2644_p2[32'd11];

assign tmp_149_fu_2670_p3 = add_ln415_4_fu_2644_p2[32'd11];

assign tmp_14_fu_2966_p4 = {{add_ln1192_35_fu_2867_p2[22:19]}};

assign tmp_150_fu_2724_p3 = add_ln1192_44_fu_2601_p2[32'd19];

assign tmp_151_fu_2878_p3 = add_ln1192_35_fu_2867_p2[32'd22];

assign tmp_152_fu_2896_p3 = add_ln1192_35_fu_2867_p2[32'd18];

assign tmp_153_fu_2904_p3 = add_ln1192_35_fu_2867_p2[32'd6];

assign tmp_154_fu_2922_p3 = add_ln415_5_fu_2916_p2[32'd11];

assign tmp_155_fu_2942_p3 = add_ln415_5_fu_2916_p2[32'd11];

assign tmp_156_fu_2996_p3 = add_ln1192_45_fu_2873_p2[32'd19];

assign tmp_157_fu_3150_p3 = add_ln1192_36_fu_3139_p2[32'd22];

assign tmp_158_fu_3168_p3 = add_ln1192_36_fu_3139_p2[32'd18];

assign tmp_159_fu_3176_p3 = add_ln1192_36_fu_3139_p2[32'd6];

assign tmp_15_fu_3222_p4 = {{add_ln1192_36_fu_3139_p2[22:20]}};

assign tmp_160_fu_3194_p3 = add_ln415_6_fu_3188_p2[32'd11];

assign tmp_161_fu_3214_p3 = add_ln415_6_fu_3188_p2[32'd11];

assign tmp_162_fu_3268_p3 = add_ln1192_46_fu_3145_p2[32'd19];

assign tmp_163_fu_3422_p3 = add_ln1192_37_fu_3411_p2[32'd22];

assign tmp_164_fu_3440_p3 = add_ln1192_37_fu_3411_p2[32'd18];

assign tmp_165_fu_3448_p3 = add_ln1192_37_fu_3411_p2[32'd6];

assign tmp_166_fu_3466_p3 = add_ln415_7_fu_3460_p2[32'd11];

assign tmp_167_fu_3486_p3 = add_ln415_7_fu_3460_p2[32'd11];

assign tmp_168_fu_3540_p3 = add_ln1192_47_fu_3417_p2[32'd19];

assign tmp_169_fu_3694_p3 = add_ln1192_38_fu_3683_p2[32'd22];

assign tmp_16_fu_3238_p4 = {{add_ln1192_36_fu_3139_p2[22:19]}};

assign tmp_170_fu_3712_p3 = add_ln1192_38_fu_3683_p2[32'd18];

assign tmp_171_fu_3720_p3 = add_ln1192_38_fu_3683_p2[32'd6];

assign tmp_172_fu_3738_p3 = add_ln415_8_fu_3732_p2[32'd11];

assign tmp_173_fu_3758_p3 = add_ln415_8_fu_3732_p2[32'd11];

assign tmp_174_fu_3812_p3 = add_ln1192_48_fu_3689_p2[32'd19];

assign tmp_175_fu_3966_p3 = add_ln1192_39_fu_3955_p2[32'd22];

assign tmp_176_fu_3984_p3 = add_ln1192_39_fu_3955_p2[32'd18];

assign tmp_177_fu_3992_p3 = add_ln1192_39_fu_3955_p2[32'd6];

assign tmp_178_fu_4010_p3 = add_ln415_9_fu_4004_p2[32'd11];

assign tmp_179_fu_4030_p3 = add_ln415_9_fu_4004_p2[32'd11];

assign tmp_17_fu_3494_p4 = {{add_ln1192_37_fu_3411_p2[22:20]}};

assign tmp_180_fu_4084_p3 = add_ln1192_49_fu_3961_p2[32'd19];

assign tmp_182_fu_4329_p4 = {{lsb_index_fu_4323_p2[31:1]}};

assign tmp_183_fu_4382_p3 = lsb_index_fu_4323_p2[32'd31];

assign tmp_184_fu_4486_p3 = m_2_fu_4467_p2[32'd25];

assign tmp_18_fu_3510_p4 = {{add_ln1192_37_fu_3411_p2[22:19]}};

assign tmp_19_fu_3766_p4 = {{add_ln1192_38_fu_3683_p2[22:20]}};

assign tmp_1_fu_1878_p4 = {{add_ln1192_31_fu_1779_p2[22:19]}};

assign tmp_20_fu_3782_p4 = {{add_ln1192_38_fu_3683_p2[22:19]}};

assign tmp_21_fu_4038_p4 = {{add_ln1192_39_fu_3955_p2[22:20]}};

assign tmp_22_fu_4054_p4 = {{add_ln1192_39_fu_3955_p2[22:19]}};

assign tmp_2_fu_2134_p4 = {{add_ln1192_32_fu_2051_p2[22:20]}};

assign tmp_3_fu_2150_p4 = {{add_ln1192_32_fu_2051_p2[22:19]}};

assign tmp_4_fu_2406_p4 = {{add_ln1192_33_fu_2323_p2[22:20]}};

assign tmp_5_fu_1282_p65 = ap_phi_mux_cii_0_phi_fu_978_p4[5:0];

assign tmp_6_fu_1590_p4 = {{add_ln1192_fu_1507_p2[22:20]}};

assign tmp_8_fu_1606_p4 = {{add_ln1192_fu_1507_p2[22:19]}};

assign tmp_9_fu_1862_p4 = {{add_ln1192_31_fu_1779_p2[22:20]}};

assign tmp_V_5_fu_4276_p3 = ((p_Result_16_fu_4262_p3[0:0] === 1'b1) ? tmp_V_fu_4270_p2 : tmp_V_4_fu_4230_p12);

assign tmp_V_fu_4270_p2 = (12'd0 - tmp_V_4_fu_4230_p12);

assign tmp_s_fu_4513_p3 = {{p_Result_16_reg_5103_pp1_iter1_reg}, {add_ln964_fu_4507_p2}};

assign trunc_ln1192_1_fu_1388_p1 = select_ln1118_1_fu_1380_p3[19:0];

assign trunc_ln1192_2_fu_1400_p1 = select_ln1118_2_fu_1392_p3[19:0];

assign trunc_ln1192_3_fu_1412_p1 = select_ln1118_3_fu_1404_p3[19:0];

assign trunc_ln1192_4_fu_1424_p1 = select_ln1118_4_fu_1416_p3[19:0];

assign trunc_ln1192_5_fu_1436_p1 = select_ln1118_5_fu_1428_p3[19:0];

assign trunc_ln1192_6_fu_1448_p1 = select_ln1118_6_fu_1440_p3[19:0];

assign trunc_ln1192_7_fu_1460_p1 = select_ln1118_7_fu_1452_p3[19:0];

assign trunc_ln1192_8_fu_1472_p1 = select_ln1118_8_fu_1464_p3[19:0];

assign trunc_ln1192_9_fu_1484_p1 = select_ln1118_9_fu_1476_p3[19:0];

assign trunc_ln1192_fu_1376_p1 = select_ln1118_fu_1368_p3[19:0];

assign trunc_ln708_1_fu_1798_p4 = {{add_ln1192_31_fu_1779_p2[18:7]}};

assign trunc_ln708_2_fu_2070_p4 = {{add_ln1192_32_fu_2051_p2[18:7]}};

assign trunc_ln708_3_fu_2342_p4 = {{add_ln1192_33_fu_2323_p2[18:7]}};

assign trunc_ln708_4_fu_2614_p4 = {{add_ln1192_34_fu_2595_p2[18:7]}};

assign trunc_ln708_5_fu_2886_p4 = {{add_ln1192_35_fu_2867_p2[18:7]}};

assign trunc_ln708_6_fu_3158_p4 = {{add_ln1192_36_fu_3139_p2[18:7]}};

assign trunc_ln708_7_fu_3430_p4 = {{add_ln1192_37_fu_3411_p2[18:7]}};

assign trunc_ln708_8_fu_3702_p4 = {{add_ln1192_38_fu_3683_p2[18:7]}};

assign trunc_ln708_9_fu_3974_p4 = {{add_ln1192_39_fu_3955_p2[18:7]}};

assign trunc_ln7_fu_1526_p4 = {{add_ln1192_fu_1507_p2[18:7]}};

assign trunc_ln943_fu_4310_p1 = l_fu_4302_p3[7:0];

assign trunc_ln944_fu_4319_p1 = sub_ln944_fu_4314_p2[11:0];

assign trunc_ln947_fu_4345_p1 = sub_ln944_fu_4314_p2[3:0];

assign xor_ln416_1_fu_1842_p2 = (tmp_130_fu_1834_p3 ^ 1'd1);

assign xor_ln416_2_fu_2114_p2 = (tmp_136_fu_2106_p3 ^ 1'd1);

assign xor_ln416_3_fu_2386_p2 = (tmp_142_fu_2378_p3 ^ 1'd1);

assign xor_ln416_4_fu_2658_p2 = (tmp_148_fu_2650_p3 ^ 1'd1);

assign xor_ln416_5_fu_2930_p2 = (tmp_154_fu_2922_p3 ^ 1'd1);

assign xor_ln416_6_fu_3202_p2 = (tmp_160_fu_3194_p3 ^ 1'd1);

assign xor_ln416_7_fu_3474_p2 = (tmp_166_fu_3466_p3 ^ 1'd1);

assign xor_ln416_8_fu_3746_p2 = (tmp_172_fu_3738_p3 ^ 1'd1);

assign xor_ln416_9_fu_4018_p2 = (tmp_178_fu_4010_p3 ^ 1'd1);

assign xor_ln416_fu_1570_p2 = (tmp_124_fu_1562_p3 ^ 1'd1);

assign xor_ln779_1_fu_1916_p2 = (tmp_132_fu_1908_p3 ^ 1'd1);

assign xor_ln779_2_fu_2188_p2 = (tmp_138_fu_2180_p3 ^ 1'd1);

assign xor_ln779_3_fu_2460_p2 = (tmp_144_fu_2452_p3 ^ 1'd1);

assign xor_ln779_4_fu_2732_p2 = (tmp_150_fu_2724_p3 ^ 1'd1);

assign xor_ln779_5_fu_3004_p2 = (tmp_156_fu_2996_p3 ^ 1'd1);

assign xor_ln779_6_fu_3276_p2 = (tmp_162_fu_3268_p3 ^ 1'd1);

assign xor_ln779_7_fu_3548_p2 = (tmp_168_fu_3540_p3 ^ 1'd1);

assign xor_ln779_8_fu_3820_p2 = (tmp_174_fu_3812_p3 ^ 1'd1);

assign xor_ln779_9_fu_4092_p2 = (tmp_180_fu_4084_p3 ^ 1'd1);

assign xor_ln779_fu_1644_p2 = (tmp_126_fu_1636_p3 ^ 1'd1);

assign xor_ln785_10_fu_1954_p2 = (tmp_127_fu_1790_p3 ^ 1'd1);

assign xor_ln785_11_fu_2226_p2 = (tmp_133_fu_2062_p3 ^ 1'd1);

assign xor_ln785_12_fu_2498_p2 = (tmp_139_fu_2334_p3 ^ 1'd1);

assign xor_ln785_13_fu_2758_p2 = (select_ln777_4_fu_2716_p3 ^ 1'd1);

assign xor_ln785_14_fu_2770_p2 = (tmp_145_fu_2606_p3 ^ 1'd1);

assign xor_ln785_15_fu_3042_p2 = (tmp_151_fu_2878_p3 ^ 1'd1);

assign xor_ln785_16_fu_3314_p2 = (tmp_157_fu_3150_p3 ^ 1'd1);

assign xor_ln785_17_fu_3586_p2 = (tmp_163_fu_3422_p3 ^ 1'd1);

assign xor_ln785_18_fu_3858_p2 = (tmp_169_fu_3694_p3 ^ 1'd1);

assign xor_ln785_19_fu_4130_p2 = (tmp_175_fu_3966_p3 ^ 1'd1);

assign xor_ln785_1_fu_1942_p2 = (select_ln777_1_fu_1900_p3 ^ 1'd1);

assign xor_ln785_2_fu_2214_p2 = (select_ln777_2_fu_2172_p3 ^ 1'd1);

assign xor_ln785_3_fu_2486_p2 = (select_ln777_3_fu_2444_p3 ^ 1'd1);

assign xor_ln785_4_fu_1682_p2 = (tmp_121_fu_1518_p3 ^ 1'd1);

assign xor_ln785_5_fu_3030_p2 = (select_ln777_5_fu_2988_p3 ^ 1'd1);

assign xor_ln785_6_fu_3302_p2 = (select_ln777_6_fu_3260_p3 ^ 1'd1);

assign xor_ln785_7_fu_3574_p2 = (select_ln777_7_fu_3532_p3 ^ 1'd1);

assign xor_ln785_8_fu_3846_p2 = (select_ln777_8_fu_3804_p3 ^ 1'd1);

assign xor_ln785_9_fu_4118_p2 = (select_ln777_9_fu_4076_p3 ^ 1'd1);

assign xor_ln785_fu_1670_p2 = (select_ln777_fu_1628_p3 ^ 1'd1);

assign xor_ln786_18_fu_1978_p2 = (or_ln786_1_fu_1972_p2 ^ 1'd1);

assign xor_ln786_19_fu_2250_p2 = (or_ln786_2_fu_2244_p2 ^ 1'd1);

assign xor_ln786_20_fu_2522_p2 = (or_ln786_3_fu_2516_p2 ^ 1'd1);

assign xor_ln786_21_fu_2794_p2 = (or_ln786_4_fu_2788_p2 ^ 1'd1);

assign xor_ln786_22_fu_3066_p2 = (or_ln786_5_fu_3060_p2 ^ 1'd1);

assign xor_ln786_23_fu_3338_p2 = (or_ln786_6_fu_3332_p2 ^ 1'd1);

assign xor_ln786_24_fu_3610_p2 = (or_ln786_7_fu_3604_p2 ^ 1'd1);

assign xor_ln786_25_fu_3882_p2 = (or_ln786_8_fu_3876_p2 ^ 1'd1);

assign xor_ln786_26_fu_4154_p2 = (or_ln786_9_fu_4148_p2 ^ 1'd1);

assign xor_ln786_fu_1706_p2 = (or_ln786_fu_1700_p2 ^ 1'd1);

assign xor_ln949_fu_4390_p2 = (tmp_183_fu_4382_p3 ^ 1'd1);

assign zext_ln27_fu_1264_p1 = ap_phi_mux_cii_0_phi_fu_978_p4;

assign zext_ln32_fu_4208_p1 = top_offset;

assign zext_ln415_1_fu_1824_p1 = tmp_129_fu_1816_p3;

assign zext_ln415_2_fu_2096_p1 = tmp_135_fu_2088_p3;

assign zext_ln415_3_fu_2368_p1 = tmp_141_fu_2360_p3;

assign zext_ln415_4_fu_2640_p1 = tmp_147_fu_2632_p3;

assign zext_ln415_5_fu_2912_p1 = tmp_153_fu_2904_p3;

assign zext_ln415_6_fu_3184_p1 = tmp_159_fu_3176_p3;

assign zext_ln415_7_fu_3456_p1 = tmp_165_fu_3448_p3;

assign zext_ln415_8_fu_3728_p1 = tmp_171_fu_3720_p3;

assign zext_ln415_9_fu_4000_p1 = tmp_177_fu_3992_p3;

assign zext_ln415_fu_1552_p1 = tmp_123_fu_1544_p3;

assign zext_ln947_fu_4355_p1 = sub_ln947_fu_4349_p2;

always @ (posedge ap_clk) begin
    or_ln_reg_5125[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //matmul
