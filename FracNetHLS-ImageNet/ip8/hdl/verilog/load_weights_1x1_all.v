// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_weights_1x1_all (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_conv_weight_1x1_all_V_AWVALID,
        m_axi_conv_weight_1x1_all_V_AWREADY,
        m_axi_conv_weight_1x1_all_V_AWADDR,
        m_axi_conv_weight_1x1_all_V_AWID,
        m_axi_conv_weight_1x1_all_V_AWLEN,
        m_axi_conv_weight_1x1_all_V_AWSIZE,
        m_axi_conv_weight_1x1_all_V_AWBURST,
        m_axi_conv_weight_1x1_all_V_AWLOCK,
        m_axi_conv_weight_1x1_all_V_AWCACHE,
        m_axi_conv_weight_1x1_all_V_AWPROT,
        m_axi_conv_weight_1x1_all_V_AWQOS,
        m_axi_conv_weight_1x1_all_V_AWREGION,
        m_axi_conv_weight_1x1_all_V_AWUSER,
        m_axi_conv_weight_1x1_all_V_WVALID,
        m_axi_conv_weight_1x1_all_V_WREADY,
        m_axi_conv_weight_1x1_all_V_WDATA,
        m_axi_conv_weight_1x1_all_V_WSTRB,
        m_axi_conv_weight_1x1_all_V_WLAST,
        m_axi_conv_weight_1x1_all_V_WID,
        m_axi_conv_weight_1x1_all_V_WUSER,
        m_axi_conv_weight_1x1_all_V_ARVALID,
        m_axi_conv_weight_1x1_all_V_ARREADY,
        m_axi_conv_weight_1x1_all_V_ARADDR,
        m_axi_conv_weight_1x1_all_V_ARID,
        m_axi_conv_weight_1x1_all_V_ARLEN,
        m_axi_conv_weight_1x1_all_V_ARSIZE,
        m_axi_conv_weight_1x1_all_V_ARBURST,
        m_axi_conv_weight_1x1_all_V_ARLOCK,
        m_axi_conv_weight_1x1_all_V_ARCACHE,
        m_axi_conv_weight_1x1_all_V_ARPROT,
        m_axi_conv_weight_1x1_all_V_ARQOS,
        m_axi_conv_weight_1x1_all_V_ARREGION,
        m_axi_conv_weight_1x1_all_V_ARUSER,
        m_axi_conv_weight_1x1_all_V_RVALID,
        m_axi_conv_weight_1x1_all_V_RREADY,
        m_axi_conv_weight_1x1_all_V_RDATA,
        m_axi_conv_weight_1x1_all_V_RLAST,
        m_axi_conv_weight_1x1_all_V_RID,
        m_axi_conv_weight_1x1_all_V_RUSER,
        m_axi_conv_weight_1x1_all_V_RRESP,
        m_axi_conv_weight_1x1_all_V_BVALID,
        m_axi_conv_weight_1x1_all_V_BREADY,
        m_axi_conv_weight_1x1_all_V_BRESP,
        m_axi_conv_weight_1x1_all_V_BID,
        m_axi_conv_weight_1x1_all_V_BUSER,
        conv_weight_1x1_all_V_offset,
        weight_1x1_index,
        weights_all_V_offset,
        weights_all_index,
        weight_buf_1x1_V_0_0_address0,
        weight_buf_1x1_V_0_0_ce0,
        weight_buf_1x1_V_0_0_we0,
        weight_buf_1x1_V_0_0_d0,
        weight_buf_1x1_V_0_1_address0,
        weight_buf_1x1_V_0_1_ce0,
        weight_buf_1x1_V_0_1_we0,
        weight_buf_1x1_V_0_1_d0,
        weight_buf_1x1_V_0_2_address0,
        weight_buf_1x1_V_0_2_ce0,
        weight_buf_1x1_V_0_2_we0,
        weight_buf_1x1_V_0_2_d0,
        weight_buf_1x1_V_0_3_address0,
        weight_buf_1x1_V_0_3_ce0,
        weight_buf_1x1_V_0_3_we0,
        weight_buf_1x1_V_0_3_d0,
        weight_buf_1x1_V_0_4_address0,
        weight_buf_1x1_V_0_4_ce0,
        weight_buf_1x1_V_0_4_we0,
        weight_buf_1x1_V_0_4_d0,
        weight_buf_1x1_V_0_5_address0,
        weight_buf_1x1_V_0_5_ce0,
        weight_buf_1x1_V_0_5_we0,
        weight_buf_1x1_V_0_5_d0,
        weight_buf_1x1_V_0_6_address0,
        weight_buf_1x1_V_0_6_ce0,
        weight_buf_1x1_V_0_6_we0,
        weight_buf_1x1_V_0_6_d0,
        weight_buf_1x1_V_0_7_address0,
        weight_buf_1x1_V_0_7_ce0,
        weight_buf_1x1_V_0_7_we0,
        weight_buf_1x1_V_0_7_d0,
        bn_weight_buf_V_0_0,
        bn_weight_buf_V_0_0_ap_vld,
        bn_bias_buf_V_0_0,
        bn_bias_buf_V_0_0_ap_vld,
        bn_weight_buf_V_1_0,
        bn_weight_buf_V_1_0_ap_vld,
        bn_bias_buf_V_1_0,
        bn_bias_buf_V_1_0_ap_vld,
        bn_weight_buf_V_2_0,
        bn_weight_buf_V_2_0_ap_vld,
        bn_bias_buf_V_2_0,
        bn_bias_buf_V_2_0_ap_vld,
        bn_weight_buf_V_3_0,
        bn_weight_buf_V_3_0_ap_vld,
        bn_bias_buf_V_3_0,
        bn_bias_buf_V_3_0_ap_vld,
        bn_weight_buf_V_4_0,
        bn_weight_buf_V_4_0_ap_vld,
        bn_bias_buf_V_4_0,
        bn_bias_buf_V_4_0_ap_vld,
        bn_weight_buf_V_5_0,
        bn_weight_buf_V_5_0_ap_vld,
        bn_bias_buf_V_5_0,
        bn_bias_buf_V_5_0_ap_vld,
        bn_weight_buf_V_6_0,
        bn_weight_buf_V_6_0_ap_vld,
        bn_bias_buf_V_6_0,
        bn_bias_buf_V_6_0_ap_vld,
        bn_weight_buf_V_7_0,
        bn_weight_buf_V_7_0_ap_vld,
        bn_bias_buf_V_7_0,
        bn_bias_buf_V_7_0_ap_vld,
        bn_weight_buf_V_8_0,
        bn_weight_buf_V_8_0_ap_vld,
        bn_bias_buf_V_8_0,
        bn_bias_buf_V_8_0_ap_vld,
        bn_weight_buf_V_9_0,
        bn_weight_buf_V_9_0_ap_vld,
        bn_bias_buf_V_9_0,
        bn_bias_buf_V_9_0_ap_vld,
        bn_weight_buf_V_10_0,
        bn_weight_buf_V_10_0_ap_vld,
        bn_bias_buf_V_10_0,
        bn_bias_buf_V_10_0_ap_vld,
        bn_weight_buf_V_11_0,
        bn_weight_buf_V_11_0_ap_vld,
        bn_bias_buf_V_11_0,
        bn_bias_buf_V_11_0_ap_vld,
        bn_weight_buf_V_12_0,
        bn_weight_buf_V_12_0_ap_vld,
        bn_bias_buf_V_12_0,
        bn_bias_buf_V_12_0_ap_vld,
        bn_weight_buf_V_13_0,
        bn_weight_buf_V_13_0_ap_vld,
        bn_bias_buf_V_13_0,
        bn_bias_buf_V_13_0_ap_vld,
        bn_weight_buf_V_14_0,
        bn_weight_buf_V_14_0_ap_vld,
        bn_bias_buf_V_14_0,
        bn_bias_buf_V_14_0_ap_vld,
        bn_weight_buf_V_15_0,
        bn_weight_buf_V_15_0_ap_vld,
        bn_bias_buf_V_15_0,
        bn_bias_buf_V_15_0_ap_vld,
        bn_weight_buf_V_16_0,
        bn_weight_buf_V_16_0_ap_vld,
        bn_bias_buf_V_16_0,
        bn_bias_buf_V_16_0_ap_vld,
        bn_weight_buf_V_17_0,
        bn_weight_buf_V_17_0_ap_vld,
        bn_bias_buf_V_17_0,
        bn_bias_buf_V_17_0_ap_vld,
        bn_weight_buf_V_18_0,
        bn_weight_buf_V_18_0_ap_vld,
        bn_bias_buf_V_18_0,
        bn_bias_buf_V_18_0_ap_vld,
        bn_weight_buf_V_19_0,
        bn_weight_buf_V_19_0_ap_vld,
        bn_bias_buf_V_19_0,
        bn_bias_buf_V_19_0_ap_vld,
        bn_weight_buf_V_20_0,
        bn_weight_buf_V_20_0_ap_vld,
        bn_bias_buf_V_20_0,
        bn_bias_buf_V_20_0_ap_vld,
        bn_weight_buf_V_21_0,
        bn_weight_buf_V_21_0_ap_vld,
        bn_bias_buf_V_21_0,
        bn_bias_buf_V_21_0_ap_vld,
        bn_weight_buf_V_22_0,
        bn_weight_buf_V_22_0_ap_vld,
        bn_bias_buf_V_22_0,
        bn_bias_buf_V_22_0_ap_vld,
        bn_weight_buf_V_23_0,
        bn_weight_buf_V_23_0_ap_vld,
        bn_bias_buf_V_23_0,
        bn_bias_buf_V_23_0_ap_vld,
        bn_weight_buf_V_24_0,
        bn_weight_buf_V_24_0_ap_vld,
        bn_bias_buf_V_24_0,
        bn_bias_buf_V_24_0_ap_vld,
        bn_weight_buf_V_25_0,
        bn_weight_buf_V_25_0_ap_vld,
        bn_bias_buf_V_25_0,
        bn_bias_buf_V_25_0_ap_vld,
        bn_weight_buf_V_26_0,
        bn_weight_buf_V_26_0_ap_vld,
        bn_bias_buf_V_26_0,
        bn_bias_buf_V_26_0_ap_vld,
        bn_weight_buf_V_27_0,
        bn_weight_buf_V_27_0_ap_vld,
        bn_bias_buf_V_27_0,
        bn_bias_buf_V_27_0_ap_vld,
        bn_weight_buf_V_28_0,
        bn_weight_buf_V_28_0_ap_vld,
        bn_bias_buf_V_28_0,
        bn_bias_buf_V_28_0_ap_vld,
        bn_weight_buf_V_29_0,
        bn_weight_buf_V_29_0_ap_vld,
        bn_bias_buf_V_29_0,
        bn_bias_buf_V_29_0_ap_vld,
        bn_weight_buf_V_30_0,
        bn_weight_buf_V_30_0_ap_vld,
        bn_bias_buf_V_30_0,
        bn_bias_buf_V_30_0_ap_vld,
        bn_weight_buf_V_31_0,
        bn_weight_buf_V_31_0_ap_vld,
        bn_bias_buf_V_31_0,
        bn_bias_buf_V_31_0_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_conv_weight_1x1_all_V_AWVALID;
input   m_axi_conv_weight_1x1_all_V_AWREADY;
output  [31:0] m_axi_conv_weight_1x1_all_V_AWADDR;
output  [0:0] m_axi_conv_weight_1x1_all_V_AWID;
output  [31:0] m_axi_conv_weight_1x1_all_V_AWLEN;
output  [2:0] m_axi_conv_weight_1x1_all_V_AWSIZE;
output  [1:0] m_axi_conv_weight_1x1_all_V_AWBURST;
output  [1:0] m_axi_conv_weight_1x1_all_V_AWLOCK;
output  [3:0] m_axi_conv_weight_1x1_all_V_AWCACHE;
output  [2:0] m_axi_conv_weight_1x1_all_V_AWPROT;
output  [3:0] m_axi_conv_weight_1x1_all_V_AWQOS;
output  [3:0] m_axi_conv_weight_1x1_all_V_AWREGION;
output  [0:0] m_axi_conv_weight_1x1_all_V_AWUSER;
output   m_axi_conv_weight_1x1_all_V_WVALID;
input   m_axi_conv_weight_1x1_all_V_WREADY;
output  [511:0] m_axi_conv_weight_1x1_all_V_WDATA;
output  [63:0] m_axi_conv_weight_1x1_all_V_WSTRB;
output   m_axi_conv_weight_1x1_all_V_WLAST;
output  [0:0] m_axi_conv_weight_1x1_all_V_WID;
output  [0:0] m_axi_conv_weight_1x1_all_V_WUSER;
output   m_axi_conv_weight_1x1_all_V_ARVALID;
input   m_axi_conv_weight_1x1_all_V_ARREADY;
output  [31:0] m_axi_conv_weight_1x1_all_V_ARADDR;
output  [0:0] m_axi_conv_weight_1x1_all_V_ARID;
output  [31:0] m_axi_conv_weight_1x1_all_V_ARLEN;
output  [2:0] m_axi_conv_weight_1x1_all_V_ARSIZE;
output  [1:0] m_axi_conv_weight_1x1_all_V_ARBURST;
output  [1:0] m_axi_conv_weight_1x1_all_V_ARLOCK;
output  [3:0] m_axi_conv_weight_1x1_all_V_ARCACHE;
output  [2:0] m_axi_conv_weight_1x1_all_V_ARPROT;
output  [3:0] m_axi_conv_weight_1x1_all_V_ARQOS;
output  [3:0] m_axi_conv_weight_1x1_all_V_ARREGION;
output  [0:0] m_axi_conv_weight_1x1_all_V_ARUSER;
input   m_axi_conv_weight_1x1_all_V_RVALID;
output   m_axi_conv_weight_1x1_all_V_RREADY;
input  [511:0] m_axi_conv_weight_1x1_all_V_RDATA;
input   m_axi_conv_weight_1x1_all_V_RLAST;
input  [0:0] m_axi_conv_weight_1x1_all_V_RID;
input  [0:0] m_axi_conv_weight_1x1_all_V_RUSER;
input  [1:0] m_axi_conv_weight_1x1_all_V_RRESP;
input   m_axi_conv_weight_1x1_all_V_BVALID;
output   m_axi_conv_weight_1x1_all_V_BREADY;
input  [1:0] m_axi_conv_weight_1x1_all_V_BRESP;
input  [0:0] m_axi_conv_weight_1x1_all_V_BID;
input  [0:0] m_axi_conv_weight_1x1_all_V_BUSER;
input  [25:0] conv_weight_1x1_all_V_offset;
input  [8:0] weight_1x1_index;
input  [25:0] weights_all_V_offset;
input  [11:0] weights_all_index;
output  [2:0] weight_buf_1x1_V_0_0_address0;
output   weight_buf_1x1_V_0_0_ce0;
output   weight_buf_1x1_V_0_0_we0;
output  [63:0] weight_buf_1x1_V_0_0_d0;
output  [2:0] weight_buf_1x1_V_0_1_address0;
output   weight_buf_1x1_V_0_1_ce0;
output   weight_buf_1x1_V_0_1_we0;
output  [63:0] weight_buf_1x1_V_0_1_d0;
output  [2:0] weight_buf_1x1_V_0_2_address0;
output   weight_buf_1x1_V_0_2_ce0;
output   weight_buf_1x1_V_0_2_we0;
output  [63:0] weight_buf_1x1_V_0_2_d0;
output  [2:0] weight_buf_1x1_V_0_3_address0;
output   weight_buf_1x1_V_0_3_ce0;
output   weight_buf_1x1_V_0_3_we0;
output  [63:0] weight_buf_1x1_V_0_3_d0;
output  [2:0] weight_buf_1x1_V_0_4_address0;
output   weight_buf_1x1_V_0_4_ce0;
output   weight_buf_1x1_V_0_4_we0;
output  [63:0] weight_buf_1x1_V_0_4_d0;
output  [2:0] weight_buf_1x1_V_0_5_address0;
output   weight_buf_1x1_V_0_5_ce0;
output   weight_buf_1x1_V_0_5_we0;
output  [63:0] weight_buf_1x1_V_0_5_d0;
output  [2:0] weight_buf_1x1_V_0_6_address0;
output   weight_buf_1x1_V_0_6_ce0;
output   weight_buf_1x1_V_0_6_we0;
output  [63:0] weight_buf_1x1_V_0_6_d0;
output  [2:0] weight_buf_1x1_V_0_7_address0;
output   weight_buf_1x1_V_0_7_ce0;
output   weight_buf_1x1_V_0_7_we0;
output  [63:0] weight_buf_1x1_V_0_7_d0;
output  [9:0] bn_weight_buf_V_0_0;
output   bn_weight_buf_V_0_0_ap_vld;
output  [9:0] bn_bias_buf_V_0_0;
output   bn_bias_buf_V_0_0_ap_vld;
output  [9:0] bn_weight_buf_V_1_0;
output   bn_weight_buf_V_1_0_ap_vld;
output  [9:0] bn_bias_buf_V_1_0;
output   bn_bias_buf_V_1_0_ap_vld;
output  [9:0] bn_weight_buf_V_2_0;
output   bn_weight_buf_V_2_0_ap_vld;
output  [9:0] bn_bias_buf_V_2_0;
output   bn_bias_buf_V_2_0_ap_vld;
output  [9:0] bn_weight_buf_V_3_0;
output   bn_weight_buf_V_3_0_ap_vld;
output  [9:0] bn_bias_buf_V_3_0;
output   bn_bias_buf_V_3_0_ap_vld;
output  [9:0] bn_weight_buf_V_4_0;
output   bn_weight_buf_V_4_0_ap_vld;
output  [9:0] bn_bias_buf_V_4_0;
output   bn_bias_buf_V_4_0_ap_vld;
output  [9:0] bn_weight_buf_V_5_0;
output   bn_weight_buf_V_5_0_ap_vld;
output  [9:0] bn_bias_buf_V_5_0;
output   bn_bias_buf_V_5_0_ap_vld;
output  [9:0] bn_weight_buf_V_6_0;
output   bn_weight_buf_V_6_0_ap_vld;
output  [9:0] bn_bias_buf_V_6_0;
output   bn_bias_buf_V_6_0_ap_vld;
output  [9:0] bn_weight_buf_V_7_0;
output   bn_weight_buf_V_7_0_ap_vld;
output  [9:0] bn_bias_buf_V_7_0;
output   bn_bias_buf_V_7_0_ap_vld;
output  [9:0] bn_weight_buf_V_8_0;
output   bn_weight_buf_V_8_0_ap_vld;
output  [9:0] bn_bias_buf_V_8_0;
output   bn_bias_buf_V_8_0_ap_vld;
output  [9:0] bn_weight_buf_V_9_0;
output   bn_weight_buf_V_9_0_ap_vld;
output  [9:0] bn_bias_buf_V_9_0;
output   bn_bias_buf_V_9_0_ap_vld;
output  [9:0] bn_weight_buf_V_10_0;
output   bn_weight_buf_V_10_0_ap_vld;
output  [9:0] bn_bias_buf_V_10_0;
output   bn_bias_buf_V_10_0_ap_vld;
output  [9:0] bn_weight_buf_V_11_0;
output   bn_weight_buf_V_11_0_ap_vld;
output  [9:0] bn_bias_buf_V_11_0;
output   bn_bias_buf_V_11_0_ap_vld;
output  [9:0] bn_weight_buf_V_12_0;
output   bn_weight_buf_V_12_0_ap_vld;
output  [9:0] bn_bias_buf_V_12_0;
output   bn_bias_buf_V_12_0_ap_vld;
output  [9:0] bn_weight_buf_V_13_0;
output   bn_weight_buf_V_13_0_ap_vld;
output  [9:0] bn_bias_buf_V_13_0;
output   bn_bias_buf_V_13_0_ap_vld;
output  [9:0] bn_weight_buf_V_14_0;
output   bn_weight_buf_V_14_0_ap_vld;
output  [9:0] bn_bias_buf_V_14_0;
output   bn_bias_buf_V_14_0_ap_vld;
output  [9:0] bn_weight_buf_V_15_0;
output   bn_weight_buf_V_15_0_ap_vld;
output  [9:0] bn_bias_buf_V_15_0;
output   bn_bias_buf_V_15_0_ap_vld;
output  [9:0] bn_weight_buf_V_16_0;
output   bn_weight_buf_V_16_0_ap_vld;
output  [9:0] bn_bias_buf_V_16_0;
output   bn_bias_buf_V_16_0_ap_vld;
output  [9:0] bn_weight_buf_V_17_0;
output   bn_weight_buf_V_17_0_ap_vld;
output  [9:0] bn_bias_buf_V_17_0;
output   bn_bias_buf_V_17_0_ap_vld;
output  [9:0] bn_weight_buf_V_18_0;
output   bn_weight_buf_V_18_0_ap_vld;
output  [9:0] bn_bias_buf_V_18_0;
output   bn_bias_buf_V_18_0_ap_vld;
output  [9:0] bn_weight_buf_V_19_0;
output   bn_weight_buf_V_19_0_ap_vld;
output  [9:0] bn_bias_buf_V_19_0;
output   bn_bias_buf_V_19_0_ap_vld;
output  [9:0] bn_weight_buf_V_20_0;
output   bn_weight_buf_V_20_0_ap_vld;
output  [9:0] bn_bias_buf_V_20_0;
output   bn_bias_buf_V_20_0_ap_vld;
output  [9:0] bn_weight_buf_V_21_0;
output   bn_weight_buf_V_21_0_ap_vld;
output  [9:0] bn_bias_buf_V_21_0;
output   bn_bias_buf_V_21_0_ap_vld;
output  [9:0] bn_weight_buf_V_22_0;
output   bn_weight_buf_V_22_0_ap_vld;
output  [9:0] bn_bias_buf_V_22_0;
output   bn_bias_buf_V_22_0_ap_vld;
output  [9:0] bn_weight_buf_V_23_0;
output   bn_weight_buf_V_23_0_ap_vld;
output  [9:0] bn_bias_buf_V_23_0;
output   bn_bias_buf_V_23_0_ap_vld;
output  [9:0] bn_weight_buf_V_24_0;
output   bn_weight_buf_V_24_0_ap_vld;
output  [9:0] bn_bias_buf_V_24_0;
output   bn_bias_buf_V_24_0_ap_vld;
output  [9:0] bn_weight_buf_V_25_0;
output   bn_weight_buf_V_25_0_ap_vld;
output  [9:0] bn_bias_buf_V_25_0;
output   bn_bias_buf_V_25_0_ap_vld;
output  [9:0] bn_weight_buf_V_26_0;
output   bn_weight_buf_V_26_0_ap_vld;
output  [9:0] bn_bias_buf_V_26_0;
output   bn_bias_buf_V_26_0_ap_vld;
output  [9:0] bn_weight_buf_V_27_0;
output   bn_weight_buf_V_27_0_ap_vld;
output  [9:0] bn_bias_buf_V_27_0;
output   bn_bias_buf_V_27_0_ap_vld;
output  [9:0] bn_weight_buf_V_28_0;
output   bn_weight_buf_V_28_0_ap_vld;
output  [9:0] bn_bias_buf_V_28_0;
output   bn_bias_buf_V_28_0_ap_vld;
output  [9:0] bn_weight_buf_V_29_0;
output   bn_weight_buf_V_29_0_ap_vld;
output  [9:0] bn_bias_buf_V_29_0;
output   bn_bias_buf_V_29_0_ap_vld;
output  [9:0] bn_weight_buf_V_30_0;
output   bn_weight_buf_V_30_0_ap_vld;
output  [9:0] bn_bias_buf_V_30_0;
output   bn_bias_buf_V_30_0_ap_vld;
output  [9:0] bn_weight_buf_V_31_0;
output   bn_weight_buf_V_31_0_ap_vld;
output  [9:0] bn_bias_buf_V_31_0;
output   bn_bias_buf_V_31_0_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_conv_weight_1x1_all_V_ARVALID;
reg[31:0] m_axi_conv_weight_1x1_all_V_ARADDR;
reg[0:0] m_axi_conv_weight_1x1_all_V_ARID;
reg[31:0] m_axi_conv_weight_1x1_all_V_ARLEN;
reg[2:0] m_axi_conv_weight_1x1_all_V_ARSIZE;
reg[1:0] m_axi_conv_weight_1x1_all_V_ARBURST;
reg[1:0] m_axi_conv_weight_1x1_all_V_ARLOCK;
reg[3:0] m_axi_conv_weight_1x1_all_V_ARCACHE;
reg[2:0] m_axi_conv_weight_1x1_all_V_ARPROT;
reg[3:0] m_axi_conv_weight_1x1_all_V_ARQOS;
reg[3:0] m_axi_conv_weight_1x1_all_V_ARREGION;
reg[0:0] m_axi_conv_weight_1x1_all_V_ARUSER;
reg m_axi_conv_weight_1x1_all_V_RREADY;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] coff_fu_391_p2;
reg   [2:0] coff_reg_424;
wire    ap_CS_fsm_state2;
wire   [10:0] trunc_ln283_fu_397_p1;
reg   [10:0] trunc_ln283_reg_429;
wire   [0:0] icmp_ln272_fu_385_p2;
wire    grp_load_others_fu_225_ap_start;
wire    grp_load_others_fu_225_ap_done;
wire    grp_load_others_fu_225_ap_idle;
wire    grp_load_others_fu_225_ap_ready;
wire    grp_load_others_fu_225_m_axi_weights_all_V_AWVALID;
wire   [31:0] grp_load_others_fu_225_m_axi_weights_all_V_AWADDR;
wire   [0:0] grp_load_others_fu_225_m_axi_weights_all_V_AWID;
wire   [31:0] grp_load_others_fu_225_m_axi_weights_all_V_AWLEN;
wire   [2:0] grp_load_others_fu_225_m_axi_weights_all_V_AWSIZE;
wire   [1:0] grp_load_others_fu_225_m_axi_weights_all_V_AWBURST;
wire   [1:0] grp_load_others_fu_225_m_axi_weights_all_V_AWLOCK;
wire   [3:0] grp_load_others_fu_225_m_axi_weights_all_V_AWCACHE;
wire   [2:0] grp_load_others_fu_225_m_axi_weights_all_V_AWPROT;
wire   [3:0] grp_load_others_fu_225_m_axi_weights_all_V_AWQOS;
wire   [3:0] grp_load_others_fu_225_m_axi_weights_all_V_AWREGION;
wire   [0:0] grp_load_others_fu_225_m_axi_weights_all_V_AWUSER;
wire    grp_load_others_fu_225_m_axi_weights_all_V_WVALID;
wire   [511:0] grp_load_others_fu_225_m_axi_weights_all_V_WDATA;
wire   [63:0] grp_load_others_fu_225_m_axi_weights_all_V_WSTRB;
wire    grp_load_others_fu_225_m_axi_weights_all_V_WLAST;
wire   [0:0] grp_load_others_fu_225_m_axi_weights_all_V_WID;
wire   [0:0] grp_load_others_fu_225_m_axi_weights_all_V_WUSER;
wire    grp_load_others_fu_225_m_axi_weights_all_V_ARVALID;
wire   [31:0] grp_load_others_fu_225_m_axi_weights_all_V_ARADDR;
wire   [0:0] grp_load_others_fu_225_m_axi_weights_all_V_ARID;
wire   [31:0] grp_load_others_fu_225_m_axi_weights_all_V_ARLEN;
wire   [2:0] grp_load_others_fu_225_m_axi_weights_all_V_ARSIZE;
wire   [1:0] grp_load_others_fu_225_m_axi_weights_all_V_ARBURST;
wire   [1:0] grp_load_others_fu_225_m_axi_weights_all_V_ARLOCK;
wire   [3:0] grp_load_others_fu_225_m_axi_weights_all_V_ARCACHE;
wire   [2:0] grp_load_others_fu_225_m_axi_weights_all_V_ARPROT;
wire   [3:0] grp_load_others_fu_225_m_axi_weights_all_V_ARQOS;
wire   [3:0] grp_load_others_fu_225_m_axi_weights_all_V_ARREGION;
wire   [0:0] grp_load_others_fu_225_m_axi_weights_all_V_ARUSER;
wire    grp_load_others_fu_225_m_axi_weights_all_V_RREADY;
wire    grp_load_others_fu_225_m_axi_weights_all_V_BREADY;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_0_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_0_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_0_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_0_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_1_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_1_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_1_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_1_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_2_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_2_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_2_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_2_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_3_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_3_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_3_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_3_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_4_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_4_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_4_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_4_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_5_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_5_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_5_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_5_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_6_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_6_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_6_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_6_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_7_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_7_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_7_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_7_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_8_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_8_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_8_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_8_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_9_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_9_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_9_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_9_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_10_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_10_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_10_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_10_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_11_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_11_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_11_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_11_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_12_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_12_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_12_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_12_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_13_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_13_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_13_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_13_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_14_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_14_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_14_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_14_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_15_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_15_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_15_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_15_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_16_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_16_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_16_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_16_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_17_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_17_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_17_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_17_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_18_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_18_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_18_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_18_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_19_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_19_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_19_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_19_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_20_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_20_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_20_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_20_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_21_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_21_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_21_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_21_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_22_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_22_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_22_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_22_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_23_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_23_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_23_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_23_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_24_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_24_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_24_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_24_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_25_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_25_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_25_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_25_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_26_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_26_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_26_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_26_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_27_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_27_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_27_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_27_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_28_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_28_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_28_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_28_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_29_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_29_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_29_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_29_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_30_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_30_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_30_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_30_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_weight_buf_V_31_0;
wire    grp_load_others_fu_225_bn_weight_buf_V_31_0_ap_vld;
wire   [9:0] grp_load_others_fu_225_bn_bias_buf_V_31_0;
wire    grp_load_others_fu_225_bn_bias_buf_V_31_0_ap_vld;
wire    grp_load_weight_1x1_from_fu_361_ap_start;
wire    grp_load_weight_1x1_from_fu_361_ap_done;
wire    grp_load_weight_1x1_from_fu_361_ap_idle;
wire    grp_load_weight_1x1_from_fu_361_ap_ready;
wire    grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWVALID;
wire   [31:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWADDR;
wire   [0:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWID;
wire   [31:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWLEN;
wire   [2:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWSIZE;
wire   [1:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWBURST;
wire   [1:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWLOCK;
wire   [3:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWCACHE;
wire   [2:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWPROT;
wire   [3:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWQOS;
wire   [3:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWREGION;
wire   [0:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWUSER;
wire    grp_load_weight_1x1_from_fu_361_m_axi_src_V_WVALID;
wire   [511:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_WDATA;
wire   [63:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_WSTRB;
wire    grp_load_weight_1x1_from_fu_361_m_axi_src_V_WLAST;
wire   [0:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_WID;
wire   [0:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_WUSER;
wire    grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARVALID;
wire   [31:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARADDR;
wire   [0:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARID;
wire   [31:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARLEN;
wire   [2:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARSIZE;
wire   [1:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARBURST;
wire   [1:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARLOCK;
wire   [3:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARCACHE;
wire   [2:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARPROT;
wire   [3:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARQOS;
wire   [3:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARREGION;
wire   [0:0] grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARUSER;
wire    grp_load_weight_1x1_from_fu_361_m_axi_src_V_RREADY;
wire    grp_load_weight_1x1_from_fu_361_m_axi_src_V_BREADY;
wire   [2:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_address0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_ce0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_we0;
wire   [63:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_d0;
wire   [2:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_address0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_ce0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_we0;
wire   [63:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_d0;
wire   [2:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_address0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_ce0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_we0;
wire   [63:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_d0;
wire   [2:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_address0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_ce0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_we0;
wire   [63:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_d0;
wire   [2:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_address0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_ce0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_we0;
wire   [63:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_d0;
wire   [2:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_address0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_ce0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_we0;
wire   [63:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_d0;
wire   [2:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_address0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_ce0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_we0;
wire   [63:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_d0;
wire   [2:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_address0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_ce0;
wire    grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_we0;
wire   [63:0] grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_d0;
reg   [2:0] coff_0_reg_214;
wire    ap_CS_fsm_state3;
reg    grp_load_others_fu_225_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_load_weight_1x1_from_fu_361_ap_start_reg;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_load_others_fu_225_ap_start_reg = 1'b0;
#0 grp_load_weight_1x1_from_fu_361_ap_start_reg = 1'b0;
end

load_others grp_load_others_fu_225(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_others_fu_225_ap_start),
    .ap_done(grp_load_others_fu_225_ap_done),
    .ap_idle(grp_load_others_fu_225_ap_idle),
    .ap_ready(grp_load_others_fu_225_ap_ready),
    .m_axi_weights_all_V_AWVALID(grp_load_others_fu_225_m_axi_weights_all_V_AWVALID),
    .m_axi_weights_all_V_AWREADY(1'b0),
    .m_axi_weights_all_V_AWADDR(grp_load_others_fu_225_m_axi_weights_all_V_AWADDR),
    .m_axi_weights_all_V_AWID(grp_load_others_fu_225_m_axi_weights_all_V_AWID),
    .m_axi_weights_all_V_AWLEN(grp_load_others_fu_225_m_axi_weights_all_V_AWLEN),
    .m_axi_weights_all_V_AWSIZE(grp_load_others_fu_225_m_axi_weights_all_V_AWSIZE),
    .m_axi_weights_all_V_AWBURST(grp_load_others_fu_225_m_axi_weights_all_V_AWBURST),
    .m_axi_weights_all_V_AWLOCK(grp_load_others_fu_225_m_axi_weights_all_V_AWLOCK),
    .m_axi_weights_all_V_AWCACHE(grp_load_others_fu_225_m_axi_weights_all_V_AWCACHE),
    .m_axi_weights_all_V_AWPROT(grp_load_others_fu_225_m_axi_weights_all_V_AWPROT),
    .m_axi_weights_all_V_AWQOS(grp_load_others_fu_225_m_axi_weights_all_V_AWQOS),
    .m_axi_weights_all_V_AWREGION(grp_load_others_fu_225_m_axi_weights_all_V_AWREGION),
    .m_axi_weights_all_V_AWUSER(grp_load_others_fu_225_m_axi_weights_all_V_AWUSER),
    .m_axi_weights_all_V_WVALID(grp_load_others_fu_225_m_axi_weights_all_V_WVALID),
    .m_axi_weights_all_V_WREADY(1'b0),
    .m_axi_weights_all_V_WDATA(grp_load_others_fu_225_m_axi_weights_all_V_WDATA),
    .m_axi_weights_all_V_WSTRB(grp_load_others_fu_225_m_axi_weights_all_V_WSTRB),
    .m_axi_weights_all_V_WLAST(grp_load_others_fu_225_m_axi_weights_all_V_WLAST),
    .m_axi_weights_all_V_WID(grp_load_others_fu_225_m_axi_weights_all_V_WID),
    .m_axi_weights_all_V_WUSER(grp_load_others_fu_225_m_axi_weights_all_V_WUSER),
    .m_axi_weights_all_V_ARVALID(grp_load_others_fu_225_m_axi_weights_all_V_ARVALID),
    .m_axi_weights_all_V_ARREADY(m_axi_conv_weight_1x1_all_V_ARREADY),
    .m_axi_weights_all_V_ARADDR(grp_load_others_fu_225_m_axi_weights_all_V_ARADDR),
    .m_axi_weights_all_V_ARID(grp_load_others_fu_225_m_axi_weights_all_V_ARID),
    .m_axi_weights_all_V_ARLEN(grp_load_others_fu_225_m_axi_weights_all_V_ARLEN),
    .m_axi_weights_all_V_ARSIZE(grp_load_others_fu_225_m_axi_weights_all_V_ARSIZE),
    .m_axi_weights_all_V_ARBURST(grp_load_others_fu_225_m_axi_weights_all_V_ARBURST),
    .m_axi_weights_all_V_ARLOCK(grp_load_others_fu_225_m_axi_weights_all_V_ARLOCK),
    .m_axi_weights_all_V_ARCACHE(grp_load_others_fu_225_m_axi_weights_all_V_ARCACHE),
    .m_axi_weights_all_V_ARPROT(grp_load_others_fu_225_m_axi_weights_all_V_ARPROT),
    .m_axi_weights_all_V_ARQOS(grp_load_others_fu_225_m_axi_weights_all_V_ARQOS),
    .m_axi_weights_all_V_ARREGION(grp_load_others_fu_225_m_axi_weights_all_V_ARREGION),
    .m_axi_weights_all_V_ARUSER(grp_load_others_fu_225_m_axi_weights_all_V_ARUSER),
    .m_axi_weights_all_V_RVALID(m_axi_conv_weight_1x1_all_V_RVALID),
    .m_axi_weights_all_V_RREADY(grp_load_others_fu_225_m_axi_weights_all_V_RREADY),
    .m_axi_weights_all_V_RDATA(m_axi_conv_weight_1x1_all_V_RDATA),
    .m_axi_weights_all_V_RLAST(m_axi_conv_weight_1x1_all_V_RLAST),
    .m_axi_weights_all_V_RID(m_axi_conv_weight_1x1_all_V_RID),
    .m_axi_weights_all_V_RUSER(m_axi_conv_weight_1x1_all_V_RUSER),
    .m_axi_weights_all_V_RRESP(m_axi_conv_weight_1x1_all_V_RRESP),
    .m_axi_weights_all_V_BVALID(1'b0),
    .m_axi_weights_all_V_BREADY(grp_load_others_fu_225_m_axi_weights_all_V_BREADY),
    .m_axi_weights_all_V_BRESP(2'd0),
    .m_axi_weights_all_V_BID(1'd0),
    .m_axi_weights_all_V_BUSER(1'd0),
    .weights_all_V_offset(weights_all_V_offset),
    .weights_all_index(trunc_ln283_reg_429),
    .bn_weight_buf_V_0_0(grp_load_others_fu_225_bn_weight_buf_V_0_0),
    .bn_weight_buf_V_0_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_0_0_ap_vld),
    .bn_bias_buf_V_0_0(grp_load_others_fu_225_bn_bias_buf_V_0_0),
    .bn_bias_buf_V_0_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_0_0_ap_vld),
    .bn_weight_buf_V_1_0(grp_load_others_fu_225_bn_weight_buf_V_1_0),
    .bn_weight_buf_V_1_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_1_0_ap_vld),
    .bn_bias_buf_V_1_0(grp_load_others_fu_225_bn_bias_buf_V_1_0),
    .bn_bias_buf_V_1_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_1_0_ap_vld),
    .bn_weight_buf_V_2_0(grp_load_others_fu_225_bn_weight_buf_V_2_0),
    .bn_weight_buf_V_2_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_2_0_ap_vld),
    .bn_bias_buf_V_2_0(grp_load_others_fu_225_bn_bias_buf_V_2_0),
    .bn_bias_buf_V_2_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_2_0_ap_vld),
    .bn_weight_buf_V_3_0(grp_load_others_fu_225_bn_weight_buf_V_3_0),
    .bn_weight_buf_V_3_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_3_0_ap_vld),
    .bn_bias_buf_V_3_0(grp_load_others_fu_225_bn_bias_buf_V_3_0),
    .bn_bias_buf_V_3_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_3_0_ap_vld),
    .bn_weight_buf_V_4_0(grp_load_others_fu_225_bn_weight_buf_V_4_0),
    .bn_weight_buf_V_4_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_4_0_ap_vld),
    .bn_bias_buf_V_4_0(grp_load_others_fu_225_bn_bias_buf_V_4_0),
    .bn_bias_buf_V_4_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_4_0_ap_vld),
    .bn_weight_buf_V_5_0(grp_load_others_fu_225_bn_weight_buf_V_5_0),
    .bn_weight_buf_V_5_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_5_0_ap_vld),
    .bn_bias_buf_V_5_0(grp_load_others_fu_225_bn_bias_buf_V_5_0),
    .bn_bias_buf_V_5_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_5_0_ap_vld),
    .bn_weight_buf_V_6_0(grp_load_others_fu_225_bn_weight_buf_V_6_0),
    .bn_weight_buf_V_6_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_6_0_ap_vld),
    .bn_bias_buf_V_6_0(grp_load_others_fu_225_bn_bias_buf_V_6_0),
    .bn_bias_buf_V_6_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_6_0_ap_vld),
    .bn_weight_buf_V_7_0(grp_load_others_fu_225_bn_weight_buf_V_7_0),
    .bn_weight_buf_V_7_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_7_0_ap_vld),
    .bn_bias_buf_V_7_0(grp_load_others_fu_225_bn_bias_buf_V_7_0),
    .bn_bias_buf_V_7_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_7_0_ap_vld),
    .bn_weight_buf_V_8_0(grp_load_others_fu_225_bn_weight_buf_V_8_0),
    .bn_weight_buf_V_8_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_8_0_ap_vld),
    .bn_bias_buf_V_8_0(grp_load_others_fu_225_bn_bias_buf_V_8_0),
    .bn_bias_buf_V_8_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_8_0_ap_vld),
    .bn_weight_buf_V_9_0(grp_load_others_fu_225_bn_weight_buf_V_9_0),
    .bn_weight_buf_V_9_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_9_0_ap_vld),
    .bn_bias_buf_V_9_0(grp_load_others_fu_225_bn_bias_buf_V_9_0),
    .bn_bias_buf_V_9_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_9_0_ap_vld),
    .bn_weight_buf_V_10_0(grp_load_others_fu_225_bn_weight_buf_V_10_0),
    .bn_weight_buf_V_10_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_10_0_ap_vld),
    .bn_bias_buf_V_10_0(grp_load_others_fu_225_bn_bias_buf_V_10_0),
    .bn_bias_buf_V_10_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_10_0_ap_vld),
    .bn_weight_buf_V_11_0(grp_load_others_fu_225_bn_weight_buf_V_11_0),
    .bn_weight_buf_V_11_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_11_0_ap_vld),
    .bn_bias_buf_V_11_0(grp_load_others_fu_225_bn_bias_buf_V_11_0),
    .bn_bias_buf_V_11_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_11_0_ap_vld),
    .bn_weight_buf_V_12_0(grp_load_others_fu_225_bn_weight_buf_V_12_0),
    .bn_weight_buf_V_12_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_12_0_ap_vld),
    .bn_bias_buf_V_12_0(grp_load_others_fu_225_bn_bias_buf_V_12_0),
    .bn_bias_buf_V_12_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_12_0_ap_vld),
    .bn_weight_buf_V_13_0(grp_load_others_fu_225_bn_weight_buf_V_13_0),
    .bn_weight_buf_V_13_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_13_0_ap_vld),
    .bn_bias_buf_V_13_0(grp_load_others_fu_225_bn_bias_buf_V_13_0),
    .bn_bias_buf_V_13_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_13_0_ap_vld),
    .bn_weight_buf_V_14_0(grp_load_others_fu_225_bn_weight_buf_V_14_0),
    .bn_weight_buf_V_14_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_14_0_ap_vld),
    .bn_bias_buf_V_14_0(grp_load_others_fu_225_bn_bias_buf_V_14_0),
    .bn_bias_buf_V_14_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_14_0_ap_vld),
    .bn_weight_buf_V_15_0(grp_load_others_fu_225_bn_weight_buf_V_15_0),
    .bn_weight_buf_V_15_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_15_0_ap_vld),
    .bn_bias_buf_V_15_0(grp_load_others_fu_225_bn_bias_buf_V_15_0),
    .bn_bias_buf_V_15_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_15_0_ap_vld),
    .bn_weight_buf_V_16_0(grp_load_others_fu_225_bn_weight_buf_V_16_0),
    .bn_weight_buf_V_16_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_16_0_ap_vld),
    .bn_bias_buf_V_16_0(grp_load_others_fu_225_bn_bias_buf_V_16_0),
    .bn_bias_buf_V_16_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_16_0_ap_vld),
    .bn_weight_buf_V_17_0(grp_load_others_fu_225_bn_weight_buf_V_17_0),
    .bn_weight_buf_V_17_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_17_0_ap_vld),
    .bn_bias_buf_V_17_0(grp_load_others_fu_225_bn_bias_buf_V_17_0),
    .bn_bias_buf_V_17_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_17_0_ap_vld),
    .bn_weight_buf_V_18_0(grp_load_others_fu_225_bn_weight_buf_V_18_0),
    .bn_weight_buf_V_18_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_18_0_ap_vld),
    .bn_bias_buf_V_18_0(grp_load_others_fu_225_bn_bias_buf_V_18_0),
    .bn_bias_buf_V_18_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_18_0_ap_vld),
    .bn_weight_buf_V_19_0(grp_load_others_fu_225_bn_weight_buf_V_19_0),
    .bn_weight_buf_V_19_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_19_0_ap_vld),
    .bn_bias_buf_V_19_0(grp_load_others_fu_225_bn_bias_buf_V_19_0),
    .bn_bias_buf_V_19_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_19_0_ap_vld),
    .bn_weight_buf_V_20_0(grp_load_others_fu_225_bn_weight_buf_V_20_0),
    .bn_weight_buf_V_20_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_20_0_ap_vld),
    .bn_bias_buf_V_20_0(grp_load_others_fu_225_bn_bias_buf_V_20_0),
    .bn_bias_buf_V_20_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_20_0_ap_vld),
    .bn_weight_buf_V_21_0(grp_load_others_fu_225_bn_weight_buf_V_21_0),
    .bn_weight_buf_V_21_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_21_0_ap_vld),
    .bn_bias_buf_V_21_0(grp_load_others_fu_225_bn_bias_buf_V_21_0),
    .bn_bias_buf_V_21_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_21_0_ap_vld),
    .bn_weight_buf_V_22_0(grp_load_others_fu_225_bn_weight_buf_V_22_0),
    .bn_weight_buf_V_22_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_22_0_ap_vld),
    .bn_bias_buf_V_22_0(grp_load_others_fu_225_bn_bias_buf_V_22_0),
    .bn_bias_buf_V_22_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_22_0_ap_vld),
    .bn_weight_buf_V_23_0(grp_load_others_fu_225_bn_weight_buf_V_23_0),
    .bn_weight_buf_V_23_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_23_0_ap_vld),
    .bn_bias_buf_V_23_0(grp_load_others_fu_225_bn_bias_buf_V_23_0),
    .bn_bias_buf_V_23_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_23_0_ap_vld),
    .bn_weight_buf_V_24_0(grp_load_others_fu_225_bn_weight_buf_V_24_0),
    .bn_weight_buf_V_24_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_24_0_ap_vld),
    .bn_bias_buf_V_24_0(grp_load_others_fu_225_bn_bias_buf_V_24_0),
    .bn_bias_buf_V_24_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_24_0_ap_vld),
    .bn_weight_buf_V_25_0(grp_load_others_fu_225_bn_weight_buf_V_25_0),
    .bn_weight_buf_V_25_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_25_0_ap_vld),
    .bn_bias_buf_V_25_0(grp_load_others_fu_225_bn_bias_buf_V_25_0),
    .bn_bias_buf_V_25_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_25_0_ap_vld),
    .bn_weight_buf_V_26_0(grp_load_others_fu_225_bn_weight_buf_V_26_0),
    .bn_weight_buf_V_26_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_26_0_ap_vld),
    .bn_bias_buf_V_26_0(grp_load_others_fu_225_bn_bias_buf_V_26_0),
    .bn_bias_buf_V_26_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_26_0_ap_vld),
    .bn_weight_buf_V_27_0(grp_load_others_fu_225_bn_weight_buf_V_27_0),
    .bn_weight_buf_V_27_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_27_0_ap_vld),
    .bn_bias_buf_V_27_0(grp_load_others_fu_225_bn_bias_buf_V_27_0),
    .bn_bias_buf_V_27_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_27_0_ap_vld),
    .bn_weight_buf_V_28_0(grp_load_others_fu_225_bn_weight_buf_V_28_0),
    .bn_weight_buf_V_28_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_28_0_ap_vld),
    .bn_bias_buf_V_28_0(grp_load_others_fu_225_bn_bias_buf_V_28_0),
    .bn_bias_buf_V_28_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_28_0_ap_vld),
    .bn_weight_buf_V_29_0(grp_load_others_fu_225_bn_weight_buf_V_29_0),
    .bn_weight_buf_V_29_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_29_0_ap_vld),
    .bn_bias_buf_V_29_0(grp_load_others_fu_225_bn_bias_buf_V_29_0),
    .bn_bias_buf_V_29_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_29_0_ap_vld),
    .bn_weight_buf_V_30_0(grp_load_others_fu_225_bn_weight_buf_V_30_0),
    .bn_weight_buf_V_30_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_30_0_ap_vld),
    .bn_bias_buf_V_30_0(grp_load_others_fu_225_bn_bias_buf_V_30_0),
    .bn_bias_buf_V_30_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_30_0_ap_vld),
    .bn_weight_buf_V_31_0(grp_load_others_fu_225_bn_weight_buf_V_31_0),
    .bn_weight_buf_V_31_0_ap_vld(grp_load_others_fu_225_bn_weight_buf_V_31_0_ap_vld),
    .bn_bias_buf_V_31_0(grp_load_others_fu_225_bn_bias_buf_V_31_0),
    .bn_bias_buf_V_31_0_ap_vld(grp_load_others_fu_225_bn_bias_buf_V_31_0_ap_vld)
);

load_weight_1x1_from grp_load_weight_1x1_from_fu_361(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_weight_1x1_from_fu_361_ap_start),
    .ap_done(grp_load_weight_1x1_from_fu_361_ap_done),
    .ap_idle(grp_load_weight_1x1_from_fu_361_ap_idle),
    .ap_ready(grp_load_weight_1x1_from_fu_361_ap_ready),
    .m_axi_src_V_AWVALID(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWVALID),
    .m_axi_src_V_AWREADY(1'b0),
    .m_axi_src_V_AWADDR(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWADDR),
    .m_axi_src_V_AWID(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWID),
    .m_axi_src_V_AWLEN(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWLEN),
    .m_axi_src_V_AWSIZE(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWSIZE),
    .m_axi_src_V_AWBURST(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWBURST),
    .m_axi_src_V_AWLOCK(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWLOCK),
    .m_axi_src_V_AWCACHE(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWCACHE),
    .m_axi_src_V_AWPROT(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWPROT),
    .m_axi_src_V_AWQOS(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWQOS),
    .m_axi_src_V_AWREGION(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWREGION),
    .m_axi_src_V_AWUSER(grp_load_weight_1x1_from_fu_361_m_axi_src_V_AWUSER),
    .m_axi_src_V_WVALID(grp_load_weight_1x1_from_fu_361_m_axi_src_V_WVALID),
    .m_axi_src_V_WREADY(1'b0),
    .m_axi_src_V_WDATA(grp_load_weight_1x1_from_fu_361_m_axi_src_V_WDATA),
    .m_axi_src_V_WSTRB(grp_load_weight_1x1_from_fu_361_m_axi_src_V_WSTRB),
    .m_axi_src_V_WLAST(grp_load_weight_1x1_from_fu_361_m_axi_src_V_WLAST),
    .m_axi_src_V_WID(grp_load_weight_1x1_from_fu_361_m_axi_src_V_WID),
    .m_axi_src_V_WUSER(grp_load_weight_1x1_from_fu_361_m_axi_src_V_WUSER),
    .m_axi_src_V_ARVALID(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARVALID),
    .m_axi_src_V_ARREADY(m_axi_conv_weight_1x1_all_V_ARREADY),
    .m_axi_src_V_ARADDR(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARADDR),
    .m_axi_src_V_ARID(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARID),
    .m_axi_src_V_ARLEN(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARLEN),
    .m_axi_src_V_ARSIZE(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARSIZE),
    .m_axi_src_V_ARBURST(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARBURST),
    .m_axi_src_V_ARLOCK(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARLOCK),
    .m_axi_src_V_ARCACHE(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARCACHE),
    .m_axi_src_V_ARPROT(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARPROT),
    .m_axi_src_V_ARQOS(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARQOS),
    .m_axi_src_V_ARREGION(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARREGION),
    .m_axi_src_V_ARUSER(grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARUSER),
    .m_axi_src_V_RVALID(m_axi_conv_weight_1x1_all_V_RVALID),
    .m_axi_src_V_RREADY(grp_load_weight_1x1_from_fu_361_m_axi_src_V_RREADY),
    .m_axi_src_V_RDATA(m_axi_conv_weight_1x1_all_V_RDATA),
    .m_axi_src_V_RLAST(m_axi_conv_weight_1x1_all_V_RLAST),
    .m_axi_src_V_RID(m_axi_conv_weight_1x1_all_V_RID),
    .m_axi_src_V_RUSER(m_axi_conv_weight_1x1_all_V_RUSER),
    .m_axi_src_V_RRESP(m_axi_conv_weight_1x1_all_V_RRESP),
    .m_axi_src_V_BVALID(1'b0),
    .m_axi_src_V_BREADY(grp_load_weight_1x1_from_fu_361_m_axi_src_V_BREADY),
    .m_axi_src_V_BRESP(2'd0),
    .m_axi_src_V_BID(1'd0),
    .m_axi_src_V_BUSER(1'd0),
    .src_V_offset(conv_weight_1x1_all_V_offset),
    .index(weight_1x1_index),
    .weight_buf_1x1_V_0_0_address0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_address0),
    .weight_buf_1x1_V_0_0_ce0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_ce0),
    .weight_buf_1x1_V_0_0_we0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_we0),
    .weight_buf_1x1_V_0_0_d0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_d0),
    .weight_buf_1x1_V_0_1_address0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_address0),
    .weight_buf_1x1_V_0_1_ce0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_ce0),
    .weight_buf_1x1_V_0_1_we0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_we0),
    .weight_buf_1x1_V_0_1_d0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_d0),
    .weight_buf_1x1_V_0_2_address0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_address0),
    .weight_buf_1x1_V_0_2_ce0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_ce0),
    .weight_buf_1x1_V_0_2_we0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_we0),
    .weight_buf_1x1_V_0_2_d0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_d0),
    .weight_buf_1x1_V_0_3_address0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_address0),
    .weight_buf_1x1_V_0_3_ce0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_ce0),
    .weight_buf_1x1_V_0_3_we0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_we0),
    .weight_buf_1x1_V_0_3_d0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_d0),
    .weight_buf_1x1_V_0_4_address0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_address0),
    .weight_buf_1x1_V_0_4_ce0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_ce0),
    .weight_buf_1x1_V_0_4_we0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_we0),
    .weight_buf_1x1_V_0_4_d0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_d0),
    .weight_buf_1x1_V_0_5_address0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_address0),
    .weight_buf_1x1_V_0_5_ce0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_ce0),
    .weight_buf_1x1_V_0_5_we0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_we0),
    .weight_buf_1x1_V_0_5_d0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_d0),
    .weight_buf_1x1_V_0_6_address0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_address0),
    .weight_buf_1x1_V_0_6_ce0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_ce0),
    .weight_buf_1x1_V_0_6_we0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_we0),
    .weight_buf_1x1_V_0_6_d0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_d0),
    .weight_buf_1x1_V_0_7_address0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_address0),
    .weight_buf_1x1_V_0_7_ce0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_ce0),
    .weight_buf_1x1_V_0_7_we0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_we0),
    .weight_buf_1x1_V_0_7_d0(grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load_others_fu_225_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_load_others_fu_225_ap_start_reg <= 1'b1;
        end else if ((grp_load_others_fu_225_ap_ready == 1'b1)) begin
            grp_load_others_fu_225_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load_weight_1x1_from_fu_361_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_load_weight_1x1_from_fu_361_ap_start_reg <= 1'b1;
        end else if ((grp_load_weight_1x1_from_fu_361_ap_ready == 1'b1)) begin
            grp_load_weight_1x1_from_fu_361_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_weight_1x1_from_fu_361_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        coff_0_reg_214 <= coff_reg_424;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        coff_0_reg_214 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        coff_reg_424 <= coff_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln283_reg_429 <= trunc_ln283_fu_397_p1;
    end
end

always @ (*) begin
    if ((((grp_load_others_fu_225_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_load_others_fu_225_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARADDR = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARADDR = grp_load_others_fu_225_m_axi_weights_all_V_ARADDR;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARBURST = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARBURST = grp_load_others_fu_225_m_axi_weights_all_V_ARBURST;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARCACHE = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARCACHE = grp_load_others_fu_225_m_axi_weights_all_V_ARCACHE;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARID = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARID;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARID = grp_load_others_fu_225_m_axi_weights_all_V_ARID;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARLEN = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARLEN = grp_load_others_fu_225_m_axi_weights_all_V_ARLEN;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARLOCK = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARLOCK = grp_load_others_fu_225_m_axi_weights_all_V_ARLOCK;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARPROT = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARPROT = grp_load_others_fu_225_m_axi_weights_all_V_ARPROT;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARQOS = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARQOS = grp_load_others_fu_225_m_axi_weights_all_V_ARQOS;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARREGION = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARREGION = grp_load_others_fu_225_m_axi_weights_all_V_ARREGION;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARSIZE = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARSIZE = grp_load_others_fu_225_m_axi_weights_all_V_ARSIZE;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARUSER = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARUSER = grp_load_others_fu_225_m_axi_weights_all_V_ARUSER;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARVALID = grp_load_weight_1x1_from_fu_361_m_axi_src_V_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_ARVALID = grp_load_others_fu_225_m_axi_weights_all_V_ARVALID;
    end else begin
        m_axi_conv_weight_1x1_all_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln272_fu_385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_RREADY = grp_load_weight_1x1_from_fu_361_m_axi_src_V_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_conv_weight_1x1_all_V_RREADY = grp_load_others_fu_225_m_axi_weights_all_V_RREADY;
    end else begin
        m_axi_conv_weight_1x1_all_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln272_fu_385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_load_weight_1x1_from_fu_361_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_load_others_fu_225_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign bn_bias_buf_V_0_0 = grp_load_others_fu_225_bn_bias_buf_V_0_0;

assign bn_bias_buf_V_0_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_0_0_ap_vld;

assign bn_bias_buf_V_10_0 = grp_load_others_fu_225_bn_bias_buf_V_10_0;

assign bn_bias_buf_V_10_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_10_0_ap_vld;

assign bn_bias_buf_V_11_0 = grp_load_others_fu_225_bn_bias_buf_V_11_0;

assign bn_bias_buf_V_11_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_11_0_ap_vld;

assign bn_bias_buf_V_12_0 = grp_load_others_fu_225_bn_bias_buf_V_12_0;

assign bn_bias_buf_V_12_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_12_0_ap_vld;

assign bn_bias_buf_V_13_0 = grp_load_others_fu_225_bn_bias_buf_V_13_0;

assign bn_bias_buf_V_13_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_13_0_ap_vld;

assign bn_bias_buf_V_14_0 = grp_load_others_fu_225_bn_bias_buf_V_14_0;

assign bn_bias_buf_V_14_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_14_0_ap_vld;

assign bn_bias_buf_V_15_0 = grp_load_others_fu_225_bn_bias_buf_V_15_0;

assign bn_bias_buf_V_15_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_15_0_ap_vld;

assign bn_bias_buf_V_16_0 = grp_load_others_fu_225_bn_bias_buf_V_16_0;

assign bn_bias_buf_V_16_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_16_0_ap_vld;

assign bn_bias_buf_V_17_0 = grp_load_others_fu_225_bn_bias_buf_V_17_0;

assign bn_bias_buf_V_17_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_17_0_ap_vld;

assign bn_bias_buf_V_18_0 = grp_load_others_fu_225_bn_bias_buf_V_18_0;

assign bn_bias_buf_V_18_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_18_0_ap_vld;

assign bn_bias_buf_V_19_0 = grp_load_others_fu_225_bn_bias_buf_V_19_0;

assign bn_bias_buf_V_19_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_19_0_ap_vld;

assign bn_bias_buf_V_1_0 = grp_load_others_fu_225_bn_bias_buf_V_1_0;

assign bn_bias_buf_V_1_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_1_0_ap_vld;

assign bn_bias_buf_V_20_0 = grp_load_others_fu_225_bn_bias_buf_V_20_0;

assign bn_bias_buf_V_20_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_20_0_ap_vld;

assign bn_bias_buf_V_21_0 = grp_load_others_fu_225_bn_bias_buf_V_21_0;

assign bn_bias_buf_V_21_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_21_0_ap_vld;

assign bn_bias_buf_V_22_0 = grp_load_others_fu_225_bn_bias_buf_V_22_0;

assign bn_bias_buf_V_22_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_22_0_ap_vld;

assign bn_bias_buf_V_23_0 = grp_load_others_fu_225_bn_bias_buf_V_23_0;

assign bn_bias_buf_V_23_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_23_0_ap_vld;

assign bn_bias_buf_V_24_0 = grp_load_others_fu_225_bn_bias_buf_V_24_0;

assign bn_bias_buf_V_24_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_24_0_ap_vld;

assign bn_bias_buf_V_25_0 = grp_load_others_fu_225_bn_bias_buf_V_25_0;

assign bn_bias_buf_V_25_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_25_0_ap_vld;

assign bn_bias_buf_V_26_0 = grp_load_others_fu_225_bn_bias_buf_V_26_0;

assign bn_bias_buf_V_26_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_26_0_ap_vld;

assign bn_bias_buf_V_27_0 = grp_load_others_fu_225_bn_bias_buf_V_27_0;

assign bn_bias_buf_V_27_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_27_0_ap_vld;

assign bn_bias_buf_V_28_0 = grp_load_others_fu_225_bn_bias_buf_V_28_0;

assign bn_bias_buf_V_28_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_28_0_ap_vld;

assign bn_bias_buf_V_29_0 = grp_load_others_fu_225_bn_bias_buf_V_29_0;

assign bn_bias_buf_V_29_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_29_0_ap_vld;

assign bn_bias_buf_V_2_0 = grp_load_others_fu_225_bn_bias_buf_V_2_0;

assign bn_bias_buf_V_2_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_2_0_ap_vld;

assign bn_bias_buf_V_30_0 = grp_load_others_fu_225_bn_bias_buf_V_30_0;

assign bn_bias_buf_V_30_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_30_0_ap_vld;

assign bn_bias_buf_V_31_0 = grp_load_others_fu_225_bn_bias_buf_V_31_0;

assign bn_bias_buf_V_31_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_31_0_ap_vld;

assign bn_bias_buf_V_3_0 = grp_load_others_fu_225_bn_bias_buf_V_3_0;

assign bn_bias_buf_V_3_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_3_0_ap_vld;

assign bn_bias_buf_V_4_0 = grp_load_others_fu_225_bn_bias_buf_V_4_0;

assign bn_bias_buf_V_4_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_4_0_ap_vld;

assign bn_bias_buf_V_5_0 = grp_load_others_fu_225_bn_bias_buf_V_5_0;

assign bn_bias_buf_V_5_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_5_0_ap_vld;

assign bn_bias_buf_V_6_0 = grp_load_others_fu_225_bn_bias_buf_V_6_0;

assign bn_bias_buf_V_6_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_6_0_ap_vld;

assign bn_bias_buf_V_7_0 = grp_load_others_fu_225_bn_bias_buf_V_7_0;

assign bn_bias_buf_V_7_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_7_0_ap_vld;

assign bn_bias_buf_V_8_0 = grp_load_others_fu_225_bn_bias_buf_V_8_0;

assign bn_bias_buf_V_8_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_8_0_ap_vld;

assign bn_bias_buf_V_9_0 = grp_load_others_fu_225_bn_bias_buf_V_9_0;

assign bn_bias_buf_V_9_0_ap_vld = grp_load_others_fu_225_bn_bias_buf_V_9_0_ap_vld;

assign bn_weight_buf_V_0_0 = grp_load_others_fu_225_bn_weight_buf_V_0_0;

assign bn_weight_buf_V_0_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_0_0_ap_vld;

assign bn_weight_buf_V_10_0 = grp_load_others_fu_225_bn_weight_buf_V_10_0;

assign bn_weight_buf_V_10_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_10_0_ap_vld;

assign bn_weight_buf_V_11_0 = grp_load_others_fu_225_bn_weight_buf_V_11_0;

assign bn_weight_buf_V_11_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_11_0_ap_vld;

assign bn_weight_buf_V_12_0 = grp_load_others_fu_225_bn_weight_buf_V_12_0;

assign bn_weight_buf_V_12_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_12_0_ap_vld;

assign bn_weight_buf_V_13_0 = grp_load_others_fu_225_bn_weight_buf_V_13_0;

assign bn_weight_buf_V_13_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_13_0_ap_vld;

assign bn_weight_buf_V_14_0 = grp_load_others_fu_225_bn_weight_buf_V_14_0;

assign bn_weight_buf_V_14_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_14_0_ap_vld;

assign bn_weight_buf_V_15_0 = grp_load_others_fu_225_bn_weight_buf_V_15_0;

assign bn_weight_buf_V_15_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_15_0_ap_vld;

assign bn_weight_buf_V_16_0 = grp_load_others_fu_225_bn_weight_buf_V_16_0;

assign bn_weight_buf_V_16_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_16_0_ap_vld;

assign bn_weight_buf_V_17_0 = grp_load_others_fu_225_bn_weight_buf_V_17_0;

assign bn_weight_buf_V_17_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_17_0_ap_vld;

assign bn_weight_buf_V_18_0 = grp_load_others_fu_225_bn_weight_buf_V_18_0;

assign bn_weight_buf_V_18_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_18_0_ap_vld;

assign bn_weight_buf_V_19_0 = grp_load_others_fu_225_bn_weight_buf_V_19_0;

assign bn_weight_buf_V_19_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_19_0_ap_vld;

assign bn_weight_buf_V_1_0 = grp_load_others_fu_225_bn_weight_buf_V_1_0;

assign bn_weight_buf_V_1_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_1_0_ap_vld;

assign bn_weight_buf_V_20_0 = grp_load_others_fu_225_bn_weight_buf_V_20_0;

assign bn_weight_buf_V_20_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_20_0_ap_vld;

assign bn_weight_buf_V_21_0 = grp_load_others_fu_225_bn_weight_buf_V_21_0;

assign bn_weight_buf_V_21_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_21_0_ap_vld;

assign bn_weight_buf_V_22_0 = grp_load_others_fu_225_bn_weight_buf_V_22_0;

assign bn_weight_buf_V_22_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_22_0_ap_vld;

assign bn_weight_buf_V_23_0 = grp_load_others_fu_225_bn_weight_buf_V_23_0;

assign bn_weight_buf_V_23_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_23_0_ap_vld;

assign bn_weight_buf_V_24_0 = grp_load_others_fu_225_bn_weight_buf_V_24_0;

assign bn_weight_buf_V_24_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_24_0_ap_vld;

assign bn_weight_buf_V_25_0 = grp_load_others_fu_225_bn_weight_buf_V_25_0;

assign bn_weight_buf_V_25_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_25_0_ap_vld;

assign bn_weight_buf_V_26_0 = grp_load_others_fu_225_bn_weight_buf_V_26_0;

assign bn_weight_buf_V_26_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_26_0_ap_vld;

assign bn_weight_buf_V_27_0 = grp_load_others_fu_225_bn_weight_buf_V_27_0;

assign bn_weight_buf_V_27_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_27_0_ap_vld;

assign bn_weight_buf_V_28_0 = grp_load_others_fu_225_bn_weight_buf_V_28_0;

assign bn_weight_buf_V_28_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_28_0_ap_vld;

assign bn_weight_buf_V_29_0 = grp_load_others_fu_225_bn_weight_buf_V_29_0;

assign bn_weight_buf_V_29_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_29_0_ap_vld;

assign bn_weight_buf_V_2_0 = grp_load_others_fu_225_bn_weight_buf_V_2_0;

assign bn_weight_buf_V_2_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_2_0_ap_vld;

assign bn_weight_buf_V_30_0 = grp_load_others_fu_225_bn_weight_buf_V_30_0;

assign bn_weight_buf_V_30_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_30_0_ap_vld;

assign bn_weight_buf_V_31_0 = grp_load_others_fu_225_bn_weight_buf_V_31_0;

assign bn_weight_buf_V_31_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_31_0_ap_vld;

assign bn_weight_buf_V_3_0 = grp_load_others_fu_225_bn_weight_buf_V_3_0;

assign bn_weight_buf_V_3_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_3_0_ap_vld;

assign bn_weight_buf_V_4_0 = grp_load_others_fu_225_bn_weight_buf_V_4_0;

assign bn_weight_buf_V_4_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_4_0_ap_vld;

assign bn_weight_buf_V_5_0 = grp_load_others_fu_225_bn_weight_buf_V_5_0;

assign bn_weight_buf_V_5_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_5_0_ap_vld;

assign bn_weight_buf_V_6_0 = grp_load_others_fu_225_bn_weight_buf_V_6_0;

assign bn_weight_buf_V_6_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_6_0_ap_vld;

assign bn_weight_buf_V_7_0 = grp_load_others_fu_225_bn_weight_buf_V_7_0;

assign bn_weight_buf_V_7_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_7_0_ap_vld;

assign bn_weight_buf_V_8_0 = grp_load_others_fu_225_bn_weight_buf_V_8_0;

assign bn_weight_buf_V_8_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_8_0_ap_vld;

assign bn_weight_buf_V_9_0 = grp_load_others_fu_225_bn_weight_buf_V_9_0;

assign bn_weight_buf_V_9_0_ap_vld = grp_load_others_fu_225_bn_weight_buf_V_9_0_ap_vld;

assign coff_fu_391_p2 = (coff_0_reg_214 + 3'd1);

assign grp_load_others_fu_225_ap_start = grp_load_others_fu_225_ap_start_reg;

assign grp_load_weight_1x1_from_fu_361_ap_start = grp_load_weight_1x1_from_fu_361_ap_start_reg;

assign icmp_ln272_fu_385_p2 = ((coff_0_reg_214 == 3'd4) ? 1'b1 : 1'b0);

assign m_axi_conv_weight_1x1_all_V_AWADDR = 32'd0;

assign m_axi_conv_weight_1x1_all_V_AWBURST = 2'd0;

assign m_axi_conv_weight_1x1_all_V_AWCACHE = 4'd0;

assign m_axi_conv_weight_1x1_all_V_AWID = 1'd0;

assign m_axi_conv_weight_1x1_all_V_AWLEN = 32'd0;

assign m_axi_conv_weight_1x1_all_V_AWLOCK = 2'd0;

assign m_axi_conv_weight_1x1_all_V_AWPROT = 3'd0;

assign m_axi_conv_weight_1x1_all_V_AWQOS = 4'd0;

assign m_axi_conv_weight_1x1_all_V_AWREGION = 4'd0;

assign m_axi_conv_weight_1x1_all_V_AWSIZE = 3'd0;

assign m_axi_conv_weight_1x1_all_V_AWUSER = 1'd0;

assign m_axi_conv_weight_1x1_all_V_AWVALID = 1'b0;

assign m_axi_conv_weight_1x1_all_V_BREADY = 1'b0;

assign m_axi_conv_weight_1x1_all_V_WDATA = 512'd0;

assign m_axi_conv_weight_1x1_all_V_WID = 1'd0;

assign m_axi_conv_weight_1x1_all_V_WLAST = 1'b0;

assign m_axi_conv_weight_1x1_all_V_WSTRB = 64'd0;

assign m_axi_conv_weight_1x1_all_V_WUSER = 1'd0;

assign m_axi_conv_weight_1x1_all_V_WVALID = 1'b0;

assign trunc_ln283_fu_397_p1 = weights_all_index[10:0];

assign weight_buf_1x1_V_0_0_address0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_address0;

assign weight_buf_1x1_V_0_0_ce0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_ce0;

assign weight_buf_1x1_V_0_0_d0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_d0;

assign weight_buf_1x1_V_0_0_we0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_0_we0;

assign weight_buf_1x1_V_0_1_address0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_address0;

assign weight_buf_1x1_V_0_1_ce0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_ce0;

assign weight_buf_1x1_V_0_1_d0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_d0;

assign weight_buf_1x1_V_0_1_we0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_1_we0;

assign weight_buf_1x1_V_0_2_address0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_address0;

assign weight_buf_1x1_V_0_2_ce0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_ce0;

assign weight_buf_1x1_V_0_2_d0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_d0;

assign weight_buf_1x1_V_0_2_we0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_2_we0;

assign weight_buf_1x1_V_0_3_address0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_address0;

assign weight_buf_1x1_V_0_3_ce0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_ce0;

assign weight_buf_1x1_V_0_3_d0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_d0;

assign weight_buf_1x1_V_0_3_we0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_3_we0;

assign weight_buf_1x1_V_0_4_address0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_address0;

assign weight_buf_1x1_V_0_4_ce0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_ce0;

assign weight_buf_1x1_V_0_4_d0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_d0;

assign weight_buf_1x1_V_0_4_we0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_4_we0;

assign weight_buf_1x1_V_0_5_address0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_address0;

assign weight_buf_1x1_V_0_5_ce0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_ce0;

assign weight_buf_1x1_V_0_5_d0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_d0;

assign weight_buf_1x1_V_0_5_we0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_5_we0;

assign weight_buf_1x1_V_0_6_address0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_address0;

assign weight_buf_1x1_V_0_6_ce0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_ce0;

assign weight_buf_1x1_V_0_6_d0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_d0;

assign weight_buf_1x1_V_0_6_we0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_6_we0;

assign weight_buf_1x1_V_0_7_address0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_address0;

assign weight_buf_1x1_V_0_7_ce0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_ce0;

assign weight_buf_1x1_V_0_7_d0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_d0;

assign weight_buf_1x1_V_0_7_we0 = grp_load_weight_1x1_from_fu_361_weight_buf_1x1_V_0_7_we0;

endmodule //load_weights_1x1_all
