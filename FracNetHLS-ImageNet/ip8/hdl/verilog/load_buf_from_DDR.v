// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_buf_from_DDR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_src_V_AWVALID,
        m_axi_src_V_AWREADY,
        m_axi_src_V_AWADDR,
        m_axi_src_V_AWID,
        m_axi_src_V_AWLEN,
        m_axi_src_V_AWSIZE,
        m_axi_src_V_AWBURST,
        m_axi_src_V_AWLOCK,
        m_axi_src_V_AWCACHE,
        m_axi_src_V_AWPROT,
        m_axi_src_V_AWQOS,
        m_axi_src_V_AWREGION,
        m_axi_src_V_AWUSER,
        m_axi_src_V_WVALID,
        m_axi_src_V_WREADY,
        m_axi_src_V_WDATA,
        m_axi_src_V_WSTRB,
        m_axi_src_V_WLAST,
        m_axi_src_V_WID,
        m_axi_src_V_WUSER,
        m_axi_src_V_ARVALID,
        m_axi_src_V_ARREADY,
        m_axi_src_V_ARADDR,
        m_axi_src_V_ARID,
        m_axi_src_V_ARLEN,
        m_axi_src_V_ARSIZE,
        m_axi_src_V_ARBURST,
        m_axi_src_V_ARLOCK,
        m_axi_src_V_ARCACHE,
        m_axi_src_V_ARPROT,
        m_axi_src_V_ARQOS,
        m_axi_src_V_ARREGION,
        m_axi_src_V_ARUSER,
        m_axi_src_V_RVALID,
        m_axi_src_V_RREADY,
        m_axi_src_V_RDATA,
        m_axi_src_V_RLAST,
        m_axi_src_V_RID,
        m_axi_src_V_RUSER,
        m_axi_src_V_RRESP,
        m_axi_src_V_BVALID,
        m_axi_src_V_BREADY,
        m_axi_src_V_BRESP,
        m_axi_src_V_BID,
        m_axi_src_V_BUSER,
        src_V_offset,
        src_offset,
        dest_0_V_address0,
        dest_0_V_ce0,
        dest_0_V_we0,
        dest_0_V_d0,
        dest_1_V_address0,
        dest_1_V_ce0,
        dest_1_V_we0,
        dest_1_V_d0,
        dest_2_V_address0,
        dest_2_V_ce0,
        dest_2_V_we0,
        dest_2_V_d0,
        dest_3_V_address0,
        dest_3_V_ce0,
        dest_3_V_we0,
        dest_3_V_d0,
        dest_4_V_address0,
        dest_4_V_ce0,
        dest_4_V_we0,
        dest_4_V_d0,
        dest_5_V_address0,
        dest_5_V_ce0,
        dest_5_V_we0,
        dest_5_V_d0,
        dest_6_V_address0,
        dest_6_V_ce0,
        dest_6_V_we0,
        dest_6_V_d0,
        dest_7_V_address0,
        dest_7_V_ce0,
        dest_7_V_we0,
        dest_7_V_d0,
        dest_8_V_address0,
        dest_8_V_ce0,
        dest_8_V_we0,
        dest_8_V_d0,
        dest_9_V_address0,
        dest_9_V_ce0,
        dest_9_V_we0,
        dest_9_V_d0,
        dest_10_V_address0,
        dest_10_V_ce0,
        dest_10_V_we0,
        dest_10_V_d0,
        dest_11_V_address0,
        dest_11_V_ce0,
        dest_11_V_we0,
        dest_11_V_d0,
        dest_12_V_address0,
        dest_12_V_ce0,
        dest_12_V_we0,
        dest_12_V_d0,
        dest_13_V_address0,
        dest_13_V_ce0,
        dest_13_V_we0,
        dest_13_V_d0,
        dest_14_V_address0,
        dest_14_V_ce0,
        dest_14_V_we0,
        dest_14_V_d0,
        dest_15_V_address0,
        dest_15_V_ce0,
        dest_15_V_we0,
        dest_15_V_d0,
        dest_16_V_address0,
        dest_16_V_ce0,
        dest_16_V_we0,
        dest_16_V_d0,
        dest_17_V_address0,
        dest_17_V_ce0,
        dest_17_V_we0,
        dest_17_V_d0,
        dest_18_V_address0,
        dest_18_V_ce0,
        dest_18_V_we0,
        dest_18_V_d0,
        dest_19_V_address0,
        dest_19_V_ce0,
        dest_19_V_we0,
        dest_19_V_d0,
        dest_20_V_address0,
        dest_20_V_ce0,
        dest_20_V_we0,
        dest_20_V_d0,
        dest_21_V_address0,
        dest_21_V_ce0,
        dest_21_V_we0,
        dest_21_V_d0,
        dest_22_V_address0,
        dest_22_V_ce0,
        dest_22_V_we0,
        dest_22_V_d0,
        dest_23_V_address0,
        dest_23_V_ce0,
        dest_23_V_we0,
        dest_23_V_d0,
        dest_24_V_address0,
        dest_24_V_ce0,
        dest_24_V_we0,
        dest_24_V_d0,
        dest_25_V_address0,
        dest_25_V_ce0,
        dest_25_V_we0,
        dest_25_V_d0,
        dest_26_V_address0,
        dest_26_V_ce0,
        dest_26_V_we0,
        dest_26_V_d0,
        dest_27_V_address0,
        dest_27_V_ce0,
        dest_27_V_we0,
        dest_27_V_d0,
        dest_28_V_address0,
        dest_28_V_ce0,
        dest_28_V_we0,
        dest_28_V_d0,
        dest_29_V_address0,
        dest_29_V_ce0,
        dest_29_V_we0,
        dest_29_V_d0,
        dest_30_V_address0,
        dest_30_V_ce0,
        dest_30_V_we0,
        dest_30_V_d0,
        dest_31_V_address0,
        dest_31_V_ce0,
        dest_31_V_we0,
        dest_31_V_d0,
        row_offset,
        col_offset,
        ch_offset
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state23 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_src_V_AWVALID;
input   m_axi_src_V_AWREADY;
output  [31:0] m_axi_src_V_AWADDR;
output  [0:0] m_axi_src_V_AWID;
output  [31:0] m_axi_src_V_AWLEN;
output  [2:0] m_axi_src_V_AWSIZE;
output  [1:0] m_axi_src_V_AWBURST;
output  [1:0] m_axi_src_V_AWLOCK;
output  [3:0] m_axi_src_V_AWCACHE;
output  [2:0] m_axi_src_V_AWPROT;
output  [3:0] m_axi_src_V_AWQOS;
output  [3:0] m_axi_src_V_AWREGION;
output  [0:0] m_axi_src_V_AWUSER;
output   m_axi_src_V_WVALID;
input   m_axi_src_V_WREADY;
output  [511:0] m_axi_src_V_WDATA;
output  [63:0] m_axi_src_V_WSTRB;
output   m_axi_src_V_WLAST;
output  [0:0] m_axi_src_V_WID;
output  [0:0] m_axi_src_V_WUSER;
output   m_axi_src_V_ARVALID;
input   m_axi_src_V_ARREADY;
output  [31:0] m_axi_src_V_ARADDR;
output  [0:0] m_axi_src_V_ARID;
output  [31:0] m_axi_src_V_ARLEN;
output  [2:0] m_axi_src_V_ARSIZE;
output  [1:0] m_axi_src_V_ARBURST;
output  [1:0] m_axi_src_V_ARLOCK;
output  [3:0] m_axi_src_V_ARCACHE;
output  [2:0] m_axi_src_V_ARPROT;
output  [3:0] m_axi_src_V_ARQOS;
output  [3:0] m_axi_src_V_ARREGION;
output  [0:0] m_axi_src_V_ARUSER;
input   m_axi_src_V_RVALID;
output   m_axi_src_V_RREADY;
input  [511:0] m_axi_src_V_RDATA;
input   m_axi_src_V_RLAST;
input  [0:0] m_axi_src_V_RID;
input  [0:0] m_axi_src_V_RUSER;
input  [1:0] m_axi_src_V_RRESP;
input   m_axi_src_V_BVALID;
output   m_axi_src_V_BREADY;
input  [1:0] m_axi_src_V_BRESP;
input  [0:0] m_axi_src_V_BID;
input  [0:0] m_axi_src_V_BUSER;
input  [25:0] src_V_offset;
input  [0:0] src_offset;
output  [6:0] dest_0_V_address0;
output   dest_0_V_ce0;
output   dest_0_V_we0;
output  [8:0] dest_0_V_d0;
output  [6:0] dest_1_V_address0;
output   dest_1_V_ce0;
output   dest_1_V_we0;
output  [8:0] dest_1_V_d0;
output  [6:0] dest_2_V_address0;
output   dest_2_V_ce0;
output   dest_2_V_we0;
output  [8:0] dest_2_V_d0;
output  [6:0] dest_3_V_address0;
output   dest_3_V_ce0;
output   dest_3_V_we0;
output  [8:0] dest_3_V_d0;
output  [6:0] dest_4_V_address0;
output   dest_4_V_ce0;
output   dest_4_V_we0;
output  [8:0] dest_4_V_d0;
output  [6:0] dest_5_V_address0;
output   dest_5_V_ce0;
output   dest_5_V_we0;
output  [8:0] dest_5_V_d0;
output  [6:0] dest_6_V_address0;
output   dest_6_V_ce0;
output   dest_6_V_we0;
output  [8:0] dest_6_V_d0;
output  [6:0] dest_7_V_address0;
output   dest_7_V_ce0;
output   dest_7_V_we0;
output  [8:0] dest_7_V_d0;
output  [6:0] dest_8_V_address0;
output   dest_8_V_ce0;
output   dest_8_V_we0;
output  [8:0] dest_8_V_d0;
output  [6:0] dest_9_V_address0;
output   dest_9_V_ce0;
output   dest_9_V_we0;
output  [8:0] dest_9_V_d0;
output  [6:0] dest_10_V_address0;
output   dest_10_V_ce0;
output   dest_10_V_we0;
output  [8:0] dest_10_V_d0;
output  [6:0] dest_11_V_address0;
output   dest_11_V_ce0;
output   dest_11_V_we0;
output  [8:0] dest_11_V_d0;
output  [6:0] dest_12_V_address0;
output   dest_12_V_ce0;
output   dest_12_V_we0;
output  [8:0] dest_12_V_d0;
output  [6:0] dest_13_V_address0;
output   dest_13_V_ce0;
output   dest_13_V_we0;
output  [8:0] dest_13_V_d0;
output  [6:0] dest_14_V_address0;
output   dest_14_V_ce0;
output   dest_14_V_we0;
output  [8:0] dest_14_V_d0;
output  [6:0] dest_15_V_address0;
output   dest_15_V_ce0;
output   dest_15_V_we0;
output  [8:0] dest_15_V_d0;
output  [6:0] dest_16_V_address0;
output   dest_16_V_ce0;
output   dest_16_V_we0;
output  [8:0] dest_16_V_d0;
output  [6:0] dest_17_V_address0;
output   dest_17_V_ce0;
output   dest_17_V_we0;
output  [8:0] dest_17_V_d0;
output  [6:0] dest_18_V_address0;
output   dest_18_V_ce0;
output   dest_18_V_we0;
output  [8:0] dest_18_V_d0;
output  [6:0] dest_19_V_address0;
output   dest_19_V_ce0;
output   dest_19_V_we0;
output  [8:0] dest_19_V_d0;
output  [6:0] dest_20_V_address0;
output   dest_20_V_ce0;
output   dest_20_V_we0;
output  [8:0] dest_20_V_d0;
output  [6:0] dest_21_V_address0;
output   dest_21_V_ce0;
output   dest_21_V_we0;
output  [8:0] dest_21_V_d0;
output  [6:0] dest_22_V_address0;
output   dest_22_V_ce0;
output   dest_22_V_we0;
output  [8:0] dest_22_V_d0;
output  [6:0] dest_23_V_address0;
output   dest_23_V_ce0;
output   dest_23_V_we0;
output  [8:0] dest_23_V_d0;
output  [6:0] dest_24_V_address0;
output   dest_24_V_ce0;
output   dest_24_V_we0;
output  [8:0] dest_24_V_d0;
output  [6:0] dest_25_V_address0;
output   dest_25_V_ce0;
output   dest_25_V_we0;
output  [8:0] dest_25_V_d0;
output  [6:0] dest_26_V_address0;
output   dest_26_V_ce0;
output   dest_26_V_we0;
output  [8:0] dest_26_V_d0;
output  [6:0] dest_27_V_address0;
output   dest_27_V_ce0;
output   dest_27_V_we0;
output  [8:0] dest_27_V_d0;
output  [6:0] dest_28_V_address0;
output   dest_28_V_ce0;
output   dest_28_V_we0;
output  [8:0] dest_28_V_d0;
output  [6:0] dest_29_V_address0;
output   dest_29_V_ce0;
output   dest_29_V_we0;
output  [8:0] dest_29_V_d0;
output  [6:0] dest_30_V_address0;
output   dest_30_V_ce0;
output   dest_30_V_we0;
output  [8:0] dest_30_V_d0;
output  [6:0] dest_31_V_address0;
output   dest_31_V_ce0;
output   dest_31_V_we0;
output  [8:0] dest_31_V_d0;
input  [4:0] row_offset;
input  [4:0] col_offset;
input  [4:0] ch_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_src_V_ARVALID;
reg m_axi_src_V_RREADY;
reg dest_0_V_ce0;
reg dest_0_V_we0;
reg dest_1_V_ce0;
reg dest_1_V_we0;
reg dest_2_V_ce0;
reg dest_2_V_we0;
reg dest_3_V_ce0;
reg dest_3_V_we0;
reg dest_4_V_ce0;
reg dest_4_V_we0;
reg dest_5_V_ce0;
reg dest_5_V_we0;
reg dest_6_V_ce0;
reg dest_6_V_we0;
reg dest_7_V_ce0;
reg dest_7_V_we0;
reg dest_8_V_ce0;
reg dest_8_V_we0;
reg dest_9_V_ce0;
reg dest_9_V_we0;
reg dest_10_V_ce0;
reg dest_10_V_we0;
reg dest_11_V_ce0;
reg dest_11_V_we0;
reg dest_12_V_ce0;
reg dest_12_V_we0;
reg dest_13_V_ce0;
reg dest_13_V_we0;
reg dest_14_V_ce0;
reg dest_14_V_we0;
reg dest_15_V_ce0;
reg dest_15_V_we0;
reg dest_16_V_ce0;
reg dest_16_V_we0;
reg dest_17_V_ce0;
reg dest_17_V_we0;
reg dest_18_V_ce0;
reg dest_18_V_we0;
reg dest_19_V_ce0;
reg dest_19_V_we0;
reg dest_20_V_ce0;
reg dest_20_V_we0;
reg dest_21_V_ce0;
reg dest_21_V_we0;
reg dest_22_V_ce0;
reg dest_22_V_we0;
reg dest_23_V_ce0;
reg dest_23_V_we0;
reg dest_24_V_ce0;
reg dest_24_V_we0;
reg dest_25_V_ce0;
reg dest_25_V_we0;
reg dest_26_V_ce0;
reg dest_26_V_we0;
reg dest_27_V_ce0;
reg dest_27_V_we0;
reg dest_28_V_ce0;
reg dest_28_V_we0;
reg dest_29_V_ce0;
reg dest_29_V_we0;
reg dest_30_V_ce0;
reg dest_30_V_we0;
reg dest_31_V_ce0;
reg dest_31_V_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_V_blk_n_AR;
reg    ap_enable_reg_pp0_iter11;
wire    ap_block_pp0_stage0;
reg   [0:0] empty_44_reg_1604;
reg    src_V_blk_n_R;
reg    ap_enable_reg_pp0_iter18;
reg   [0:0] icmp_ln87_reg_1527;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter17_reg;
reg   [6:0] indvar_flatten37_reg_742;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
reg    ap_block_state14_io;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
reg    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
reg    ap_block_pp0_stage0_11001;
reg   [14:0] src_ptr_0_rec_reg_754;
reg   [5:0] indvar_flatten_reg_765;
reg   [9:0] src_ptr_1_rec_reg_776;
reg   [3:0] h_0_reg_787;
reg   [3:0] w_0_reg_798;
wire   [17:0] mul_ln85_fu_1482_p2;
reg   [17:0] mul_ln85_reg_1496;
wire   [17:0] grp_fu_1488_p3;
reg   [17:0] add_ln91_reg_1501;
wire  signed [10:0] sext_ln87_fu_851_p1;
reg  signed [10:0] sext_ln87_reg_1506;
wire    ap_CS_fsm_state2;
wire   [20:0] zext_ln91_2_fu_871_p1;
reg   [20:0] zext_ln91_2_reg_1512;
wire  signed [14:0] sext_ln91_1_fu_875_p1;
reg  signed [14:0] sext_ln91_1_reg_1517;
wire   [27:0] zext_ln87_fu_879_p1;
reg   [27:0] zext_ln87_reg_1522;
wire   [0:0] icmp_ln87_fu_896_p2;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter1_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter2_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter3_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter4_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter5_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter6_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter7_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter8_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter9_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter10_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter11_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter12_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter13_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter14_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter15_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter16_reg;
reg   [0:0] icmp_ln87_reg_1527_pp0_iter18_reg;
wire   [6:0] add_ln87_fu_902_p2;
reg   [6:0] add_ln87_reg_1531;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln88_fu_914_p2;
reg   [0:0] icmp_ln88_reg_1536;
wire   [14:0] add_ln91_3_fu_936_p2;
reg   [14:0] add_ln91_3_reg_1541;
wire   [14:0] add_ln91_4_fu_941_p2;
reg   [14:0] add_ln91_4_reg_1546;
wire   [0:0] and_ln88_fu_959_p2;
reg   [0:0] and_ln88_reg_1551;
wire   [14:0] select_ln87_fu_965_p3;
reg   [14:0] select_ln87_reg_1556;
wire   [9:0] add_ln99_fu_973_p2;
reg   [9:0] add_ln99_reg_1562;
wire   [3:0] select_ln88_3_fu_991_p3;
reg   [3:0] select_ln88_3_reg_1567;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter1_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter2_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter3_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter4_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter5_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter6_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter7_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter8_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter9_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter10_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter11_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter12_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter13_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter14_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter15_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter16_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter17_reg;
reg   [3:0] select_ln88_3_reg_1567_pp0_iter18_reg;
wire   [3:0] select_ln88_4_fu_999_p3;
reg   [3:0] select_ln88_4_reg_1572;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter1_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter2_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter3_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter4_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter5_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter6_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter7_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter8_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter9_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter10_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter11_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter12_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter13_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter14_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter15_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter16_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter17_reg;
reg   [3:0] select_ln88_4_reg_1572_pp0_iter18_reg;
wire   [9:0] select_ln88_6_fu_1007_p3;
wire   [3:0] w_fu_1021_p2;
wire   [5:0] select_ln88_7_fu_1033_p3;
wire   [20:0] add_ln88_1_fu_1074_p2;
reg   [20:0] add_ln88_1_reg_1594;
reg   [20:0] add_ln88_1_reg_1594_pp0_iter2_reg;
reg   [20:0] add_ln88_1_reg_1594_pp0_iter3_reg;
reg   [20:0] add_ln88_1_reg_1594_pp0_iter4_reg;
reg   [20:0] add_ln88_1_reg_1594_pp0_iter5_reg;
reg   [20:0] add_ln88_1_reg_1594_pp0_iter6_reg;
reg   [20:0] add_ln88_1_reg_1594_pp0_iter7_reg;
reg   [20:0] add_ln88_1_reg_1594_pp0_iter8_reg;
reg   [20:0] add_ln88_1_reg_1594_pp0_iter9_reg;
wire   [27:0] add_ln91_7_fu_1082_p2;
reg   [27:0] add_ln91_7_reg_1599;
wire   [0:0] empty_44_fu_1087_p2;
wire   [8:0] trunc_ln647_fu_1103_p1;
reg   [8:0] trunc_ln647_reg_1614;
reg   [8:0] p_Result_1_reg_1619;
reg   [8:0] p_Result_2_reg_1624;
reg   [8:0] p_Result_3_reg_1629;
reg   [8:0] p_Result_4_reg_1634;
reg   [8:0] p_Result_5_reg_1639;
reg   [8:0] p_Result_6_reg_1644;
reg   [8:0] p_Result_7_reg_1649;
reg   [8:0] p_Result_8_reg_1654;
reg   [8:0] p_Result_9_reg_1659;
reg   [8:0] p_Result_s_reg_1664;
reg   [8:0] p_Result_10_reg_1669;
reg   [8:0] p_Result_11_reg_1674;
reg   [8:0] p_Result_12_reg_1679;
reg   [8:0] p_Result_13_reg_1684;
reg   [8:0] p_Result_14_reg_1689;
reg   [8:0] p_Result_15_reg_1694;
reg   [8:0] p_Result_16_reg_1699;
reg   [8:0] p_Result_17_reg_1704;
reg   [8:0] p_Result_18_reg_1709;
reg   [8:0] p_Result_19_reg_1714;
reg   [8:0] p_Result_20_reg_1719;
reg   [8:0] p_Result_21_reg_1724;
reg   [8:0] p_Result_22_reg_1729;
reg   [8:0] p_Result_23_reg_1734;
reg   [8:0] p_Result_24_reg_1739;
reg   [8:0] p_Result_25_reg_1744;
reg   [8:0] p_Result_26_reg_1749;
reg   [8:0] p_Result_27_reg_1754;
reg   [8:0] p_Result_28_reg_1759;
reg   [8:0] p_Result_29_reg_1764;
reg   [8:0] p_Result_30_reg_1769;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter19;
reg   [6:0] ap_phi_mux_indvar_flatten37_phi_fu_746_p4;
reg   [14:0] ap_phi_mux_src_ptr_0_rec_phi_fu_758_p4;
reg   [3:0] ap_phi_mux_h_0_phi_fu_791_p4;
wire   [63:0] zext_ln203_8_fu_1446_p1;
wire  signed [63:0] sext_ln91_4_fu_1093_p1;
wire   [3:0] trunc_ln85_fu_825_p1;
wire   [6:0] shl_ln_fu_829_p3;
wire   [7:0] zext_ln85_3_fu_837_p1;
wire   [7:0] zext_ln85_4_fu_841_p1;
wire  signed [7:0] sub_ln85_fu_845_p2;
wire  signed [18:0] sext_ln91_3_fu_855_p1;
wire   [19:0] zext_ln91_1_fu_862_p1;
wire   [19:0] zext_ln91_fu_858_p1;
wire   [19:0] add_ln91_2_fu_865_p2;
wire   [10:0] zext_ln88_fu_883_p1;
wire   [10:0] add_ln91_1_fu_887_p2;
wire   [14:0] add_ln101_fu_908_p2;
wire  signed [14:0] sext_ln91_fu_892_p1;
wire   [0:0] icmp_ln89_fu_953_p2;
wire   [0:0] xor_ln88_fu_947_p2;
wire   [9:0] select_ln88_fu_920_p3;
wire   [3:0] select_ln88_1_fu_928_p3;
wire   [0:0] or_ln88_fu_985_p2;
wire   [3:0] h_fu_979_p2;
wire   [3:0] grp_fu_1015_p1;
wire   [5:0] add_ln88_2_fu_1027_p2;
wire   [10:0] zext_ln88_1_fu_1046_p1;
wire   [10:0] add_ln91_5_fu_1049_p2;
wire  signed [14:0] sext_ln91_2_fu_1054_p1;
wire   [14:0] add_ln91_6_fu_1058_p2;
wire   [14:0] select_ln88_2_fu_1041_p3;
wire   [14:0] select_ln88_5_fu_1063_p3;
wire  signed [20:0] sext_ln88_fu_1070_p1;
wire  signed [27:0] sext_ln88_1_fu_1079_p1;
wire   [6:0] grp_fu_1015_p2;
wire   [6:0] tmp_553_fu_1420_p3;
wire   [7:0] zext_ln203_fu_1427_p1;
wire   [7:0] zext_ln88_2_fu_1417_p1;
wire   [7:0] zext_ln203_7_fu_1437_p1;
wire   [7:0] add_ln203_fu_1431_p2;
wire   [7:0] add_ln203_5_fu_1440_p2;
wire   [14:0] mul_ln85_fu_1482_p0;
wire   [4:0] mul_ln85_fu_1482_p1;
wire   [10:0] grp_fu_1488_p0;
wire   [4:0] grp_fu_1488_p1;
wire   [17:0] grp_fu_1488_p2;
reg    grp_fu_1015_ce;
wire    ap_CS_fsm_state23;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] grp_fu_1488_p10;
wire   [17:0] mul_ln85_fu_1482_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
end

FracNet_urem_7ns_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
FracNet_urem_7ns_hbi_U447(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_indvar_flatten37_phi_fu_746_p4),
    .din1(grp_fu_1015_p1),
    .ce(grp_fu_1015_ce),
    .dout(grp_fu_1015_p2)
);

FracNet_mul_mul_1ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 18 ))
FracNet_mul_mul_1ibs_U448(
    .din0(mul_ln85_fu_1482_p0),
    .din1(mul_ln85_fu_1482_p1),
    .dout(mul_ln85_fu_1482_p2)
);

FracNet_mac_muladjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
FracNet_mac_muladjbC_U449(
    .din0(grp_fu_1488_p0),
    .din1(grp_fu_1488_p1),
    .din2(grp_fu_1488_p2),
    .dout(grp_fu_1488_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter19 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_reg_1527 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        h_0_reg_787 <= select_ln88_4_reg_1572;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        h_0_reg_787 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_reg_1527 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten37_reg_742 <= add_ln87_reg_1531;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten37_reg_742 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_896_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_765 <= select_ln88_7_fu_1033_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_765 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_reg_1527 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src_ptr_0_rec_reg_754 <= select_ln87_reg_1556;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        src_ptr_0_rec_reg_754 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_896_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src_ptr_1_rec_reg_776 <= select_ln88_6_fu_1007_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        src_ptr_1_rec_reg_776 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_896_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_0_reg_798 <= w_fu_1021_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        w_0_reg_798 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln87_reg_1531 <= add_ln87_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_reg_1527 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln88_1_reg_1594 <= add_ln88_1_fu_1074_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln88_1_reg_1594_pp0_iter2_reg <= add_ln88_1_reg_1594;
        add_ln88_1_reg_1594_pp0_iter3_reg <= add_ln88_1_reg_1594_pp0_iter2_reg;
        add_ln88_1_reg_1594_pp0_iter4_reg <= add_ln88_1_reg_1594_pp0_iter3_reg;
        add_ln88_1_reg_1594_pp0_iter5_reg <= add_ln88_1_reg_1594_pp0_iter4_reg;
        add_ln88_1_reg_1594_pp0_iter6_reg <= add_ln88_1_reg_1594_pp0_iter5_reg;
        add_ln88_1_reg_1594_pp0_iter7_reg <= add_ln88_1_reg_1594_pp0_iter6_reg;
        add_ln88_1_reg_1594_pp0_iter8_reg <= add_ln88_1_reg_1594_pp0_iter7_reg;
        add_ln88_1_reg_1594_pp0_iter9_reg <= add_ln88_1_reg_1594_pp0_iter8_reg;
        icmp_ln87_reg_1527_pp0_iter10_reg <= icmp_ln87_reg_1527_pp0_iter9_reg;
        icmp_ln87_reg_1527_pp0_iter11_reg <= icmp_ln87_reg_1527_pp0_iter10_reg;
        icmp_ln87_reg_1527_pp0_iter12_reg <= icmp_ln87_reg_1527_pp0_iter11_reg;
        icmp_ln87_reg_1527_pp0_iter13_reg <= icmp_ln87_reg_1527_pp0_iter12_reg;
        icmp_ln87_reg_1527_pp0_iter14_reg <= icmp_ln87_reg_1527_pp0_iter13_reg;
        icmp_ln87_reg_1527_pp0_iter15_reg <= icmp_ln87_reg_1527_pp0_iter14_reg;
        icmp_ln87_reg_1527_pp0_iter16_reg <= icmp_ln87_reg_1527_pp0_iter15_reg;
        icmp_ln87_reg_1527_pp0_iter17_reg <= icmp_ln87_reg_1527_pp0_iter16_reg;
        icmp_ln87_reg_1527_pp0_iter18_reg <= icmp_ln87_reg_1527_pp0_iter17_reg;
        icmp_ln87_reg_1527_pp0_iter2_reg <= icmp_ln87_reg_1527_pp0_iter1_reg;
        icmp_ln87_reg_1527_pp0_iter3_reg <= icmp_ln87_reg_1527_pp0_iter2_reg;
        icmp_ln87_reg_1527_pp0_iter4_reg <= icmp_ln87_reg_1527_pp0_iter3_reg;
        icmp_ln87_reg_1527_pp0_iter5_reg <= icmp_ln87_reg_1527_pp0_iter4_reg;
        icmp_ln87_reg_1527_pp0_iter6_reg <= icmp_ln87_reg_1527_pp0_iter5_reg;
        icmp_ln87_reg_1527_pp0_iter7_reg <= icmp_ln87_reg_1527_pp0_iter6_reg;
        icmp_ln87_reg_1527_pp0_iter8_reg <= icmp_ln87_reg_1527_pp0_iter7_reg;
        icmp_ln87_reg_1527_pp0_iter9_reg <= icmp_ln87_reg_1527_pp0_iter8_reg;
        select_ln88_3_reg_1567_pp0_iter10_reg <= select_ln88_3_reg_1567_pp0_iter9_reg;
        select_ln88_3_reg_1567_pp0_iter11_reg <= select_ln88_3_reg_1567_pp0_iter10_reg;
        select_ln88_3_reg_1567_pp0_iter12_reg <= select_ln88_3_reg_1567_pp0_iter11_reg;
        select_ln88_3_reg_1567_pp0_iter13_reg <= select_ln88_3_reg_1567_pp0_iter12_reg;
        select_ln88_3_reg_1567_pp0_iter14_reg <= select_ln88_3_reg_1567_pp0_iter13_reg;
        select_ln88_3_reg_1567_pp0_iter15_reg <= select_ln88_3_reg_1567_pp0_iter14_reg;
        select_ln88_3_reg_1567_pp0_iter16_reg <= select_ln88_3_reg_1567_pp0_iter15_reg;
        select_ln88_3_reg_1567_pp0_iter17_reg <= select_ln88_3_reg_1567_pp0_iter16_reg;
        select_ln88_3_reg_1567_pp0_iter18_reg <= select_ln88_3_reg_1567_pp0_iter17_reg;
        select_ln88_3_reg_1567_pp0_iter2_reg <= select_ln88_3_reg_1567_pp0_iter1_reg;
        select_ln88_3_reg_1567_pp0_iter3_reg <= select_ln88_3_reg_1567_pp0_iter2_reg;
        select_ln88_3_reg_1567_pp0_iter4_reg <= select_ln88_3_reg_1567_pp0_iter3_reg;
        select_ln88_3_reg_1567_pp0_iter5_reg <= select_ln88_3_reg_1567_pp0_iter4_reg;
        select_ln88_3_reg_1567_pp0_iter6_reg <= select_ln88_3_reg_1567_pp0_iter5_reg;
        select_ln88_3_reg_1567_pp0_iter7_reg <= select_ln88_3_reg_1567_pp0_iter6_reg;
        select_ln88_3_reg_1567_pp0_iter8_reg <= select_ln88_3_reg_1567_pp0_iter7_reg;
        select_ln88_3_reg_1567_pp0_iter9_reg <= select_ln88_3_reg_1567_pp0_iter8_reg;
        select_ln88_4_reg_1572_pp0_iter10_reg <= select_ln88_4_reg_1572_pp0_iter9_reg;
        select_ln88_4_reg_1572_pp0_iter11_reg <= select_ln88_4_reg_1572_pp0_iter10_reg;
        select_ln88_4_reg_1572_pp0_iter12_reg <= select_ln88_4_reg_1572_pp0_iter11_reg;
        select_ln88_4_reg_1572_pp0_iter13_reg <= select_ln88_4_reg_1572_pp0_iter12_reg;
        select_ln88_4_reg_1572_pp0_iter14_reg <= select_ln88_4_reg_1572_pp0_iter13_reg;
        select_ln88_4_reg_1572_pp0_iter15_reg <= select_ln88_4_reg_1572_pp0_iter14_reg;
        select_ln88_4_reg_1572_pp0_iter16_reg <= select_ln88_4_reg_1572_pp0_iter15_reg;
        select_ln88_4_reg_1572_pp0_iter17_reg <= select_ln88_4_reg_1572_pp0_iter16_reg;
        select_ln88_4_reg_1572_pp0_iter18_reg <= select_ln88_4_reg_1572_pp0_iter17_reg;
        select_ln88_4_reg_1572_pp0_iter2_reg <= select_ln88_4_reg_1572_pp0_iter1_reg;
        select_ln88_4_reg_1572_pp0_iter3_reg <= select_ln88_4_reg_1572_pp0_iter2_reg;
        select_ln88_4_reg_1572_pp0_iter4_reg <= select_ln88_4_reg_1572_pp0_iter3_reg;
        select_ln88_4_reg_1572_pp0_iter5_reg <= select_ln88_4_reg_1572_pp0_iter4_reg;
        select_ln88_4_reg_1572_pp0_iter6_reg <= select_ln88_4_reg_1572_pp0_iter5_reg;
        select_ln88_4_reg_1572_pp0_iter7_reg <= select_ln88_4_reg_1572_pp0_iter6_reg;
        select_ln88_4_reg_1572_pp0_iter8_reg <= select_ln88_4_reg_1572_pp0_iter7_reg;
        select_ln88_4_reg_1572_pp0_iter9_reg <= select_ln88_4_reg_1572_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_896_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln91_3_reg_1541 <= add_ln91_3_fu_936_p2;
        add_ln91_4_reg_1546 <= add_ln91_4_fu_941_p2;
        add_ln99_reg_1562 <= add_ln99_fu_973_p2;
        and_ln88_reg_1551 <= and_ln88_fu_959_p2;
        icmp_ln88_reg_1536 <= icmp_ln88_fu_914_p2;
        select_ln88_3_reg_1567 <= select_ln88_3_fu_991_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_reg_1527_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln91_7_reg_1599 <= add_ln91_7_fu_1082_p2;
        empty_44_reg_1604 <= empty_44_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln91_reg_1501 <= grp_fu_1488_p3;
        mul_ln85_reg_1496 <= mul_ln85_fu_1482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln87_reg_1527 <= icmp_ln87_fu_896_p2;
        icmp_ln87_reg_1527_pp0_iter1_reg <= icmp_ln87_reg_1527;
        select_ln88_3_reg_1567_pp0_iter1_reg <= select_ln88_3_reg_1567;
        select_ln88_4_reg_1572_pp0_iter1_reg <= select_ln88_4_reg_1572;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_reg_1527_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_10_reg_1669 <= {{m_axi_src_V_RDATA[184:176]}};
        p_Result_11_reg_1674 <= {{m_axi_src_V_RDATA[200:192]}};
        p_Result_12_reg_1679 <= {{m_axi_src_V_RDATA[216:208]}};
        p_Result_13_reg_1684 <= {{m_axi_src_V_RDATA[232:224]}};
        p_Result_14_reg_1689 <= {{m_axi_src_V_RDATA[248:240]}};
        p_Result_15_reg_1694 <= {{m_axi_src_V_RDATA[264:256]}};
        p_Result_16_reg_1699 <= {{m_axi_src_V_RDATA[280:272]}};
        p_Result_17_reg_1704 <= {{m_axi_src_V_RDATA[296:288]}};
        p_Result_18_reg_1709 <= {{m_axi_src_V_RDATA[312:304]}};
        p_Result_19_reg_1714 <= {{m_axi_src_V_RDATA[328:320]}};
        p_Result_1_reg_1619 <= {{m_axi_src_V_RDATA[24:16]}};
        p_Result_20_reg_1719 <= {{m_axi_src_V_RDATA[344:336]}};
        p_Result_21_reg_1724 <= {{m_axi_src_V_RDATA[360:352]}};
        p_Result_22_reg_1729 <= {{m_axi_src_V_RDATA[376:368]}};
        p_Result_23_reg_1734 <= {{m_axi_src_V_RDATA[392:384]}};
        p_Result_24_reg_1739 <= {{m_axi_src_V_RDATA[408:400]}};
        p_Result_25_reg_1744 <= {{m_axi_src_V_RDATA[424:416]}};
        p_Result_26_reg_1749 <= {{m_axi_src_V_RDATA[440:432]}};
        p_Result_27_reg_1754 <= {{m_axi_src_V_RDATA[456:448]}};
        p_Result_28_reg_1759 <= {{m_axi_src_V_RDATA[472:464]}};
        p_Result_29_reg_1764 <= {{m_axi_src_V_RDATA[488:480]}};
        p_Result_2_reg_1624 <= {{m_axi_src_V_RDATA[40:32]}};
        p_Result_30_reg_1769 <= {{m_axi_src_V_RDATA[504:496]}};
        p_Result_3_reg_1629 <= {{m_axi_src_V_RDATA[56:48]}};
        p_Result_4_reg_1634 <= {{m_axi_src_V_RDATA[72:64]}};
        p_Result_5_reg_1639 <= {{m_axi_src_V_RDATA[88:80]}};
        p_Result_6_reg_1644 <= {{m_axi_src_V_RDATA[104:96]}};
        p_Result_7_reg_1649 <= {{m_axi_src_V_RDATA[120:112]}};
        p_Result_8_reg_1654 <= {{m_axi_src_V_RDATA[136:128]}};
        p_Result_9_reg_1659 <= {{m_axi_src_V_RDATA[152:144]}};
        p_Result_s_reg_1664 <= {{m_axi_src_V_RDATA[168:160]}};
        trunc_ln647_reg_1614 <= trunc_ln647_fu_1103_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_896_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln87_reg_1556 <= select_ln87_fu_965_p3;
        select_ln88_4_reg_1572 <= select_ln88_4_fu_999_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sext_ln87_reg_1506 <= sext_ln87_fu_851_p1;
        sext_ln91_1_reg_1517 <= sext_ln91_1_fu_875_p1;
        zext_ln87_reg_1522[25 : 0] <= zext_ln87_fu_879_p1[25 : 0];
        zext_ln91_2_reg_1512[19 : 0] <= zext_ln91_2_fu_871_p1[19 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln87_fu_896_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_h_0_phi_fu_791_p4 = select_ln88_4_reg_1572;
    end else begin
        ap_phi_mux_h_0_phi_fu_791_p4 = h_0_reg_787;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten37_phi_fu_746_p4 = add_ln87_reg_1531;
    end else begin
        ap_phi_mux_indvar_flatten37_phi_fu_746_p4 = indvar_flatten37_reg_742;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_src_ptr_0_rec_phi_fu_758_p4 = select_ln87_reg_1556;
    end else begin
        ap_phi_mux_src_ptr_0_rec_phi_fu_758_p4 = src_ptr_0_rec_reg_754;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_0_V_ce0 = 1'b1;
    end else begin
        dest_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_0_V_we0 = 1'b1;
    end else begin
        dest_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_10_V_ce0 = 1'b1;
    end else begin
        dest_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_10_V_we0 = 1'b1;
    end else begin
        dest_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_11_V_ce0 = 1'b1;
    end else begin
        dest_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_11_V_we0 = 1'b1;
    end else begin
        dest_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_12_V_ce0 = 1'b1;
    end else begin
        dest_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_12_V_we0 = 1'b1;
    end else begin
        dest_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_13_V_ce0 = 1'b1;
    end else begin
        dest_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_13_V_we0 = 1'b1;
    end else begin
        dest_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_14_V_ce0 = 1'b1;
    end else begin
        dest_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_14_V_we0 = 1'b1;
    end else begin
        dest_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_15_V_ce0 = 1'b1;
    end else begin
        dest_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_15_V_we0 = 1'b1;
    end else begin
        dest_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_16_V_ce0 = 1'b1;
    end else begin
        dest_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_16_V_we0 = 1'b1;
    end else begin
        dest_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_17_V_ce0 = 1'b1;
    end else begin
        dest_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_17_V_we0 = 1'b1;
    end else begin
        dest_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_18_V_ce0 = 1'b1;
    end else begin
        dest_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_18_V_we0 = 1'b1;
    end else begin
        dest_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_19_V_ce0 = 1'b1;
    end else begin
        dest_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_19_V_we0 = 1'b1;
    end else begin
        dest_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_1_V_ce0 = 1'b1;
    end else begin
        dest_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_1_V_we0 = 1'b1;
    end else begin
        dest_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_20_V_ce0 = 1'b1;
    end else begin
        dest_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_20_V_we0 = 1'b1;
    end else begin
        dest_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_21_V_ce0 = 1'b1;
    end else begin
        dest_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_21_V_we0 = 1'b1;
    end else begin
        dest_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_22_V_ce0 = 1'b1;
    end else begin
        dest_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_22_V_we0 = 1'b1;
    end else begin
        dest_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_23_V_ce0 = 1'b1;
    end else begin
        dest_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_23_V_we0 = 1'b1;
    end else begin
        dest_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_24_V_ce0 = 1'b1;
    end else begin
        dest_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_24_V_we0 = 1'b1;
    end else begin
        dest_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_25_V_ce0 = 1'b1;
    end else begin
        dest_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_25_V_we0 = 1'b1;
    end else begin
        dest_25_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_26_V_ce0 = 1'b1;
    end else begin
        dest_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_26_V_we0 = 1'b1;
    end else begin
        dest_26_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_27_V_ce0 = 1'b1;
    end else begin
        dest_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_27_V_we0 = 1'b1;
    end else begin
        dest_27_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_28_V_ce0 = 1'b1;
    end else begin
        dest_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_28_V_we0 = 1'b1;
    end else begin
        dest_28_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_29_V_ce0 = 1'b1;
    end else begin
        dest_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_29_V_we0 = 1'b1;
    end else begin
        dest_29_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_2_V_ce0 = 1'b1;
    end else begin
        dest_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_2_V_we0 = 1'b1;
    end else begin
        dest_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_30_V_ce0 = 1'b1;
    end else begin
        dest_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_30_V_we0 = 1'b1;
    end else begin
        dest_30_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_31_V_ce0 = 1'b1;
    end else begin
        dest_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_31_V_we0 = 1'b1;
    end else begin
        dest_31_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_3_V_ce0 = 1'b1;
    end else begin
        dest_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_3_V_we0 = 1'b1;
    end else begin
        dest_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_4_V_ce0 = 1'b1;
    end else begin
        dest_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_4_V_we0 = 1'b1;
    end else begin
        dest_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_5_V_ce0 = 1'b1;
    end else begin
        dest_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_5_V_we0 = 1'b1;
    end else begin
        dest_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_6_V_ce0 = 1'b1;
    end else begin
        dest_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_6_V_we0 = 1'b1;
    end else begin
        dest_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_7_V_ce0 = 1'b1;
    end else begin
        dest_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_7_V_we0 = 1'b1;
    end else begin
        dest_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_8_V_ce0 = 1'b1;
    end else begin
        dest_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_8_V_we0 = 1'b1;
    end else begin
        dest_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_9_V_ce0 = 1'b1;
    end else begin
        dest_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1))) begin
        dest_9_V_we0 = 1'b1;
    end else begin
        dest_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1015_ce = 1'b1;
    end else begin
        grp_fu_1015_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_44_reg_1604 == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        m_axi_src_V_ARVALID = 1'b1;
    end else begin
        m_axi_src_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        m_axi_src_V_RREADY = 1'b1;
    end else begin
        m_axi_src_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((empty_44_reg_1604 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        src_V_blk_n_AR = m_axi_src_V_ARREADY;
    end else begin
        src_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_1527_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        src_V_blk_n_R = m_axi_src_V_RVALID;
    end else begin
        src_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln87_fu_896_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln87_fu_896_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_fu_908_p2 = (ap_phi_mux_src_ptr_0_rec_phi_fu_758_p4 + 15'd13794);

assign add_ln203_5_fu_1440_p2 = (zext_ln203_7_fu_1437_p1 + add_ln203_fu_1431_p2);

assign add_ln203_fu_1431_p2 = (zext_ln203_fu_1427_p1 + zext_ln88_2_fu_1417_p1);

assign add_ln87_fu_902_p2 = (ap_phi_mux_indvar_flatten37_phi_fu_746_p4 + 7'd1);

assign add_ln88_1_fu_1074_p2 = ($signed(zext_ln91_2_reg_1512) + $signed(sext_ln88_fu_1070_p1));

assign add_ln88_2_fu_1027_p2 = (6'd1 + indvar_flatten_reg_765);

assign add_ln91_1_fu_887_p2 = ($signed(zext_ln88_fu_883_p1) + $signed(sext_ln87_reg_1506));

assign add_ln91_2_fu_865_p2 = (zext_ln91_1_fu_862_p1 + zext_ln91_fu_858_p1);

assign add_ln91_3_fu_936_p2 = ($signed(sext_ln91_1_reg_1517) + $signed(add_ln101_fu_908_p2));

assign add_ln91_4_fu_941_p2 = ($signed(sext_ln91_fu_892_p1) + $signed(ap_phi_mux_src_ptr_0_rec_phi_fu_758_p4));

assign add_ln91_5_fu_1049_p2 = ($signed(zext_ln88_1_fu_1046_p1) + $signed(sext_ln87_reg_1506));

assign add_ln91_6_fu_1058_p2 = ($signed(sext_ln91_2_fu_1054_p1) + $signed(select_ln87_reg_1556));

assign add_ln91_7_fu_1082_p2 = ($signed(sext_ln88_1_fu_1079_p1) + $signed(zext_ln87_reg_1522));

assign add_ln99_fu_973_p2 = (select_ln88_fu_920_p3 + 10'd114);

assign and_ln88_fu_959_p2 = (xor_ln88_fu_947_p2 & icmp_ln89_fu_953_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln87_reg_1527_pp0_iter17_reg == 1'd0) & (m_axi_src_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b1)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_block_state14_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln87_reg_1527_pp0_iter17_reg == 1'd0) & (m_axi_src_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b1)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_block_state14_io)));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = ((empty_44_reg_1604 == 1'd1) & (m_axi_src_V_ARREADY == 1'b0));
end

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp0_stage0_iter18 = ((icmp_ln87_reg_1527_pp0_iter17_reg == 1'd0) & (m_axi_src_V_RVALID == 1'b0));
end

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dest_0_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_0_V_d0 = trunc_ln647_reg_1614;

assign dest_10_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_10_V_d0 = p_Result_s_reg_1664;

assign dest_11_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_11_V_d0 = p_Result_10_reg_1669;

assign dest_12_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_12_V_d0 = p_Result_11_reg_1674;

assign dest_13_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_13_V_d0 = p_Result_12_reg_1679;

assign dest_14_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_14_V_d0 = p_Result_13_reg_1684;

assign dest_15_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_15_V_d0 = p_Result_14_reg_1689;

assign dest_16_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_16_V_d0 = p_Result_15_reg_1694;

assign dest_17_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_17_V_d0 = p_Result_16_reg_1699;

assign dest_18_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_18_V_d0 = p_Result_17_reg_1704;

assign dest_19_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_19_V_d0 = p_Result_18_reg_1709;

assign dest_1_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_1_V_d0 = p_Result_1_reg_1619;

assign dest_20_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_20_V_d0 = p_Result_19_reg_1714;

assign dest_21_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_21_V_d0 = p_Result_20_reg_1719;

assign dest_22_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_22_V_d0 = p_Result_21_reg_1724;

assign dest_23_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_23_V_d0 = p_Result_22_reg_1729;

assign dest_24_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_24_V_d0 = p_Result_23_reg_1734;

assign dest_25_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_25_V_d0 = p_Result_24_reg_1739;

assign dest_26_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_26_V_d0 = p_Result_25_reg_1744;

assign dest_27_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_27_V_d0 = p_Result_26_reg_1749;

assign dest_28_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_28_V_d0 = p_Result_27_reg_1754;

assign dest_29_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_29_V_d0 = p_Result_28_reg_1759;

assign dest_2_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_2_V_d0 = p_Result_2_reg_1624;

assign dest_30_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_30_V_d0 = p_Result_29_reg_1764;

assign dest_31_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_31_V_d0 = p_Result_30_reg_1769;

assign dest_3_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_3_V_d0 = p_Result_3_reg_1629;

assign dest_4_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_4_V_d0 = p_Result_4_reg_1634;

assign dest_5_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_5_V_d0 = p_Result_5_reg_1639;

assign dest_6_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_6_V_d0 = p_Result_6_reg_1644;

assign dest_7_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_7_V_d0 = p_Result_7_reg_1649;

assign dest_8_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_8_V_d0 = p_Result_8_reg_1654;

assign dest_9_V_address0 = zext_ln203_8_fu_1446_p1;

assign dest_9_V_d0 = p_Result_9_reg_1659;

assign empty_44_fu_1087_p2 = ((grp_fu_1015_p2 == 7'd0) ? 1'b1 : 1'b0);

assign grp_fu_1015_p1 = 7'd7;

assign grp_fu_1488_p0 = 16'd798;

assign grp_fu_1488_p1 = grp_fu_1488_p10;

assign grp_fu_1488_p10 = row_offset;

assign grp_fu_1488_p2 = ((src_offset[0:0] === 1'b1) ? 18'd153728 : 18'd0);

assign h_fu_979_p2 = (select_ln88_1_fu_928_p3 + 4'd1);

assign icmp_ln87_fu_896_p2 = ((ap_phi_mux_indvar_flatten37_phi_fu_746_p4 == 7'd98) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_914_p2 = ((indvar_flatten_reg_765 == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_953_p2 = ((w_0_reg_798 == 4'd8) ? 1'b1 : 1'b0);

assign m_axi_src_V_ARADDR = sext_ln91_4_fu_1093_p1;

assign m_axi_src_V_ARBURST = 2'd0;

assign m_axi_src_V_ARCACHE = 4'd0;

assign m_axi_src_V_ARID = 1'd0;

assign m_axi_src_V_ARLEN = 32'd7;

assign m_axi_src_V_ARLOCK = 2'd0;

assign m_axi_src_V_ARPROT = 3'd0;

assign m_axi_src_V_ARQOS = 4'd0;

assign m_axi_src_V_ARREGION = 4'd0;

assign m_axi_src_V_ARSIZE = 3'd0;

assign m_axi_src_V_ARUSER = 1'd0;

assign m_axi_src_V_AWADDR = 32'd0;

assign m_axi_src_V_AWBURST = 2'd0;

assign m_axi_src_V_AWCACHE = 4'd0;

assign m_axi_src_V_AWID = 1'd0;

assign m_axi_src_V_AWLEN = 32'd0;

assign m_axi_src_V_AWLOCK = 2'd0;

assign m_axi_src_V_AWPROT = 3'd0;

assign m_axi_src_V_AWQOS = 4'd0;

assign m_axi_src_V_AWREGION = 4'd0;

assign m_axi_src_V_AWSIZE = 3'd0;

assign m_axi_src_V_AWUSER = 1'd0;

assign m_axi_src_V_AWVALID = 1'b0;

assign m_axi_src_V_BREADY = 1'b0;

assign m_axi_src_V_WDATA = 512'd0;

assign m_axi_src_V_WID = 1'd0;

assign m_axi_src_V_WLAST = 1'b0;

assign m_axi_src_V_WSTRB = 64'd0;

assign m_axi_src_V_WUSER = 1'd0;

assign m_axi_src_V_WVALID = 1'b0;

assign mul_ln85_fu_1482_p0 = 18'd12996;

assign mul_ln85_fu_1482_p1 = mul_ln85_fu_1482_p10;

assign mul_ln85_fu_1482_p10 = ch_offset;

assign or_ln88_fu_985_p2 = (icmp_ln88_fu_914_p2 | and_ln88_fu_959_p2);

assign select_ln87_fu_965_p3 = ((icmp_ln88_fu_914_p2[0:0] === 1'b1) ? add_ln101_fu_908_p2 : ap_phi_mux_src_ptr_0_rec_phi_fu_758_p4);

assign select_ln88_1_fu_928_p3 = ((icmp_ln88_fu_914_p2[0:0] === 1'b1) ? 4'd1 : ap_phi_mux_h_0_phi_fu_791_p4);

assign select_ln88_2_fu_1041_p3 = ((icmp_ln88_reg_1536[0:0] === 1'b1) ? add_ln91_3_reg_1541 : add_ln91_4_reg_1546);

assign select_ln88_3_fu_991_p3 = ((or_ln88_fu_985_p2[0:0] === 1'b1) ? 4'd1 : w_0_reg_798);

assign select_ln88_4_fu_999_p3 = ((and_ln88_fu_959_p2[0:0] === 1'b1) ? h_fu_979_p2 : select_ln88_1_fu_928_p3);

assign select_ln88_5_fu_1063_p3 = ((and_ln88_reg_1551[0:0] === 1'b1) ? add_ln91_6_fu_1058_p2 : select_ln88_2_fu_1041_p3);

assign select_ln88_6_fu_1007_p3 = ((and_ln88_fu_959_p2[0:0] === 1'b1) ? add_ln99_fu_973_p2 : select_ln88_fu_920_p3);

assign select_ln88_7_fu_1033_p3 = ((icmp_ln88_fu_914_p2[0:0] === 1'b1) ? 6'd1 : add_ln88_2_fu_1027_p2);

assign select_ln88_fu_920_p3 = ((icmp_ln88_fu_914_p2[0:0] === 1'b1) ? 10'd0 : src_ptr_1_rec_reg_776);

assign sext_ln87_fu_851_p1 = sub_ln85_fu_845_p2;

assign sext_ln88_1_fu_1079_p1 = $signed(add_ln88_1_reg_1594_pp0_iter9_reg);

assign sext_ln88_fu_1070_p1 = $signed(select_ln88_5_fu_1063_p3);

assign sext_ln91_1_fu_875_p1 = sub_ln85_fu_845_p2;

assign sext_ln91_2_fu_1054_p1 = $signed(add_ln91_5_fu_1049_p2);

assign sext_ln91_3_fu_855_p1 = $signed(add_ln91_reg_1501);

assign sext_ln91_4_fu_1093_p1 = $signed(add_ln91_7_reg_1599);

assign sext_ln91_fu_892_p1 = $signed(add_ln91_1_fu_887_p2);

assign shl_ln_fu_829_p3 = {{trunc_ln85_fu_825_p1}, {3'd0}};

assign sub_ln85_fu_845_p2 = (zext_ln85_3_fu_837_p1 - zext_ln85_4_fu_841_p1);

assign tmp_553_fu_1420_p3 = {{select_ln88_4_reg_1572_pp0_iter18_reg}, {3'd0}};

assign trunc_ln647_fu_1103_p1 = m_axi_src_V_RDATA[8:0];

assign trunc_ln85_fu_825_p1 = col_offset[3:0];

assign w_fu_1021_p2 = (4'd1 + select_ln88_3_fu_991_p3);

assign xor_ln88_fu_947_p2 = (icmp_ln88_fu_914_p2 ^ 1'd1);

assign zext_ln203_7_fu_1437_p1 = select_ln88_3_reg_1567_pp0_iter18_reg;

assign zext_ln203_8_fu_1446_p1 = add_ln203_5_fu_1440_p2;

assign zext_ln203_fu_1427_p1 = tmp_553_fu_1420_p3;

assign zext_ln85_3_fu_837_p1 = shl_ln_fu_829_p3;

assign zext_ln85_4_fu_841_p1 = col_offset;

assign zext_ln87_fu_879_p1 = src_V_offset;

assign zext_ln88_1_fu_1046_p1 = add_ln99_reg_1562;

assign zext_ln88_2_fu_1417_p1 = select_ln88_4_reg_1572_pp0_iter18_reg;

assign zext_ln88_fu_883_p1 = src_ptr_1_rec_reg_776;

assign zext_ln91_1_fu_862_p1 = mul_ln85_reg_1496;

assign zext_ln91_2_fu_871_p1 = add_ln91_2_fu_865_p2;

assign zext_ln91_fu_858_p1 = $unsigned(sext_ln91_3_fu_855_p1);

always @ (posedge ap_clk) begin
    zext_ln91_2_reg_1512[20] <= 1'b0;
    zext_ln87_reg_1522[27:26] <= 2'b00;
end

endmodule //load_buf_from_DDR
