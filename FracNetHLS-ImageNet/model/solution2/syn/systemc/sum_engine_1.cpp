// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sum_engine_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sum_engine_1::ap_const_logic_1 = sc_dt::Log_1;
const bool sum_engine_1::ap_const_boolean_1 = true;
const sc_lv<2> sum_engine_1::ap_const_lv2_0 = "00";
const sc_logic sum_engine_1::ap_const_logic_0 = sc_dt::Log_0;

sum_engine_1::sum_engine_1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_add2_V_fu_118_p3);
    sensitive << ( ret_V_2_fu_112_p2 );

    SC_METHOD(thread_add4_V_fu_174_p1);
    sensitive << ( ret_V_3_fu_168_p2 );

    SC_METHOD(thread_add_ln1192_fu_138_p2);
    sensitive << ( p_cast2_fu_130_p1 );
    sensitive << ( sext_ln1192_fu_134_p1 );

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( p_Val2_6_fu_152_p1 );
    sensitive << ( add4_V_fu_174_p1 );

    SC_METHOD(thread_lhs_V_1_fu_90_p1);
    sensitive << ( t2_V );

    SC_METHOD(thread_lhs_V_2_fu_104_p1);
    sensitive << ( t4_V );

    SC_METHOD(thread_lhs_V_fu_76_p1);
    sensitive << ( t0_V );

    SC_METHOD(thread_p_Val2_6_fu_152_p1);
    sensitive << ( tmp_fu_144_p3 );

    SC_METHOD(thread_p_cast2_fu_130_p1);
    sensitive << ( ret_V_1_fu_98_p2 );

    SC_METHOD(thread_ret_V_1_fu_98_p2);
    sensitive << ( lhs_V_1_fu_90_p1 );
    sensitive << ( rhs_V_1_fu_94_p1 );

    SC_METHOD(thread_ret_V_2_fu_112_p2);
    sensitive << ( lhs_V_2_fu_104_p1 );
    sensitive << ( rhs_V_2_fu_108_p1 );

    SC_METHOD(thread_ret_V_3_fu_168_p2);
    sensitive << ( sext_ln728_fu_126_p1 );
    sensitive << ( sext_ln728_1_fu_164_p1 );

    SC_METHOD(thread_ret_V_fu_84_p2);
    sensitive << ( lhs_V_fu_76_p1 );
    sensitive << ( rhs_V_fu_80_p1 );

    SC_METHOD(thread_rhs_V_1_fu_94_p1);
    sensitive << ( t3_V );

    SC_METHOD(thread_rhs_V_2_fu_108_p1);
    sensitive << ( t5_V );

    SC_METHOD(thread_rhs_V_3_fu_156_p3);
    sensitive << ( t6_V );

    SC_METHOD(thread_rhs_V_fu_80_p1);
    sensitive << ( t1_V );

    SC_METHOD(thread_sext_ln1192_fu_134_p1);
    sensitive << ( ret_V_fu_84_p2 );

    SC_METHOD(thread_sext_ln728_1_fu_164_p1);
    sensitive << ( rhs_V_3_fu_156_p3 );

    SC_METHOD(thread_sext_ln728_fu_126_p1);
    sensitive << ( add2_V_fu_118_p3 );

    SC_METHOD(thread_tmp_fu_144_p3);
    sensitive << ( add_ln1192_fu_138_p2 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sum_engine_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, t0_V, "(port)t0_V");
    sc_trace(mVcdFile, t1_V, "(port)t1_V");
    sc_trace(mVcdFile, t2_V, "(port)t2_V");
    sc_trace(mVcdFile, t3_V, "(port)t3_V");
    sc_trace(mVcdFile, t4_V, "(port)t4_V");
    sc_trace(mVcdFile, t5_V, "(port)t5_V");
    sc_trace(mVcdFile, t6_V, "(port)t6_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, lhs_V_fu_76_p1, "lhs_V_fu_76_p1");
    sc_trace(mVcdFile, rhs_V_fu_80_p1, "rhs_V_fu_80_p1");
    sc_trace(mVcdFile, lhs_V_1_fu_90_p1, "lhs_V_1_fu_90_p1");
    sc_trace(mVcdFile, rhs_V_1_fu_94_p1, "rhs_V_1_fu_94_p1");
    sc_trace(mVcdFile, lhs_V_2_fu_104_p1, "lhs_V_2_fu_104_p1");
    sc_trace(mVcdFile, rhs_V_2_fu_108_p1, "rhs_V_2_fu_108_p1");
    sc_trace(mVcdFile, ret_V_2_fu_112_p2, "ret_V_2_fu_112_p2");
    sc_trace(mVcdFile, add2_V_fu_118_p3, "add2_V_fu_118_p3");
    sc_trace(mVcdFile, ret_V_1_fu_98_p2, "ret_V_1_fu_98_p2");
    sc_trace(mVcdFile, ret_V_fu_84_p2, "ret_V_fu_84_p2");
    sc_trace(mVcdFile, p_cast2_fu_130_p1, "p_cast2_fu_130_p1");
    sc_trace(mVcdFile, sext_ln1192_fu_134_p1, "sext_ln1192_fu_134_p1");
    sc_trace(mVcdFile, add_ln1192_fu_138_p2, "add_ln1192_fu_138_p2");
    sc_trace(mVcdFile, tmp_fu_144_p3, "tmp_fu_144_p3");
    sc_trace(mVcdFile, rhs_V_3_fu_156_p3, "rhs_V_3_fu_156_p3");
    sc_trace(mVcdFile, sext_ln728_fu_126_p1, "sext_ln728_fu_126_p1");
    sc_trace(mVcdFile, sext_ln728_1_fu_164_p1, "sext_ln728_1_fu_164_p1");
    sc_trace(mVcdFile, ret_V_3_fu_168_p2, "ret_V_3_fu_168_p2");
    sc_trace(mVcdFile, p_Val2_6_fu_152_p1, "p_Val2_6_fu_152_p1");
    sc_trace(mVcdFile, add4_V_fu_174_p1, "add4_V_fu_174_p1");
#endif

    }
}

sum_engine_1::~sum_engine_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void sum_engine_1::thread_add2_V_fu_118_p3() {
    add2_V_fu_118_p3 = esl_concat<10,2>(ret_V_2_fu_112_p2.read(), ap_const_lv2_0);
}

void sum_engine_1::thread_add4_V_fu_174_p1() {
    add4_V_fu_174_p1 = esl_sext<14,13>(ret_V_3_fu_168_p2.read());
}

void sum_engine_1::thread_add_ln1192_fu_138_p2() {
    add_ln1192_fu_138_p2 = (!p_cast2_fu_130_p1.read().is_01() || !sext_ln1192_fu_134_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(p_cast2_fu_130_p1.read()) + sc_bigint<11>(sext_ln1192_fu_134_p1.read()));
}

void sum_engine_1::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void sum_engine_1::thread_ap_return() {
    ap_return = (!p_Val2_6_fu_152_p1.read().is_01() || !add4_V_fu_174_p1.read().is_01())? sc_lv<14>(): (sc_bigint<14>(p_Val2_6_fu_152_p1.read()) + sc_bigint<14>(add4_V_fu_174_p1.read()));
}

void sum_engine_1::thread_lhs_V_1_fu_90_p1() {
    lhs_V_1_fu_90_p1 = esl_sext<10,9>(t2_V.read());
}

void sum_engine_1::thread_lhs_V_2_fu_104_p1() {
    lhs_V_2_fu_104_p1 = esl_sext<10,9>(t4_V.read());
}

void sum_engine_1::thread_lhs_V_fu_76_p1() {
    lhs_V_fu_76_p1 = esl_sext<10,9>(t0_V.read());
}

void sum_engine_1::thread_p_Val2_6_fu_152_p1() {
    p_Val2_6_fu_152_p1 = esl_sext<14,13>(tmp_fu_144_p3.read());
}

void sum_engine_1::thread_p_cast2_fu_130_p1() {
    p_cast2_fu_130_p1 = esl_sext<11,10>(ret_V_1_fu_98_p2.read());
}

void sum_engine_1::thread_ret_V_1_fu_98_p2() {
    ret_V_1_fu_98_p2 = (!lhs_V_1_fu_90_p1.read().is_01() || !rhs_V_1_fu_94_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(lhs_V_1_fu_90_p1.read()) + sc_bigint<10>(rhs_V_1_fu_94_p1.read()));
}

void sum_engine_1::thread_ret_V_2_fu_112_p2() {
    ret_V_2_fu_112_p2 = (!lhs_V_2_fu_104_p1.read().is_01() || !rhs_V_2_fu_108_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(lhs_V_2_fu_104_p1.read()) + sc_bigint<10>(rhs_V_2_fu_108_p1.read()));
}

void sum_engine_1::thread_ret_V_3_fu_168_p2() {
    ret_V_3_fu_168_p2 = (!sext_ln728_fu_126_p1.read().is_01() || !sext_ln728_1_fu_164_p1.read().is_01())? sc_lv<13>(): (sc_bigint<13>(sext_ln728_fu_126_p1.read()) + sc_bigint<13>(sext_ln728_1_fu_164_p1.read()));
}

void sum_engine_1::thread_ret_V_fu_84_p2() {
    ret_V_fu_84_p2 = (!lhs_V_fu_76_p1.read().is_01() || !rhs_V_fu_80_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(lhs_V_fu_76_p1.read()) + sc_bigint<10>(rhs_V_fu_80_p1.read()));
}

void sum_engine_1::thread_rhs_V_1_fu_94_p1() {
    rhs_V_1_fu_94_p1 = esl_sext<10,9>(t3_V.read());
}

void sum_engine_1::thread_rhs_V_2_fu_108_p1() {
    rhs_V_2_fu_108_p1 = esl_sext<10,9>(t5_V.read());
}

void sum_engine_1::thread_rhs_V_3_fu_156_p3() {
    rhs_V_3_fu_156_p3 = esl_concat<9,2>(t6_V.read(), ap_const_lv2_0);
}

void sum_engine_1::thread_rhs_V_fu_80_p1() {
    rhs_V_fu_80_p1 = esl_sext<10,9>(t1_V.read());
}

void sum_engine_1::thread_sext_ln1192_fu_134_p1() {
    sext_ln1192_fu_134_p1 = esl_sext<11,10>(ret_V_fu_84_p2.read());
}

void sum_engine_1::thread_sext_ln728_1_fu_164_p1() {
    sext_ln728_1_fu_164_p1 = esl_sext<13,11>(rhs_V_3_fu_156_p3.read());
}

void sum_engine_1::thread_sext_ln728_fu_126_p1() {
    sext_ln728_fu_126_p1 = esl_sext<13,12>(add2_V_fu_118_p3.read());
}

void sum_engine_1::thread_tmp_fu_144_p3() {
    tmp_fu_144_p3 = esl_concat<11,2>(add_ln1192_fu_138_p2.read(), ap_const_lv2_0);
}

}

