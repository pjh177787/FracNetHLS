// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _avgpool_7x7_1_HH_
#define _avgpool_7x7_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sum_engine_1.h"

namespace ap_rtl {

struct avgpool_7x7_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > buf_V_address0;
    sc_out< sc_logic > buf_V_ce0;
    sc_in< sc_lv<9> > buf_V_q0;
    sc_out< sc_lv<7> > buf_V_address1;
    sc_out< sc_logic > buf_V_ce1;
    sc_in< sc_lv<9> > buf_V_q1;
    sc_out< sc_lv<11> > ap_return;


    // Module declarations
    avgpool_7x7_1(sc_module_name name);
    SC_HAS_PROCESS(avgpool_7x7_1);

    ~avgpool_7x7_1();

    sc_trace_file* mVcdFile;

    sum_engine_1* p_Val2_22_sum_engine_1_fu_163;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<14> > p_Val2_21_reg_139;
    sc_signal< sc_lv<4> > row_0_reg_151;
    sc_signal< sc_lv<1> > icmp_ln208_fu_174_p2;
    sc_signal< sc_lv<1> > icmp_ln208_reg_432;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln208_reg_432_pp0_iter1_reg;
    sc_signal< sc_lv<8> > add_ln210_fu_196_p2;
    sc_signal< sc_lv<8> > add_ln210_reg_436;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<9> > buf_V_load_reg_465;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<9> > buf_V_load_1_reg_470;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<9> > buf_V_load_2_reg_485;
    sc_signal< sc_lv<9> > buf_V_load_3_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<9> > buf_V_load_4_reg_500;
    sc_signal< sc_lv<9> > buf_V_load_5_reg_505;
    sc_signal< sc_lv<4> > row_fu_274_p2;
    sc_signal< sc_lv<4> > row_reg_510;
    sc_signal< sc_lv<9> > buf_V_load_6_reg_515;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<14> > p_Val2_22_sum_engine_1_fu_163_ap_return;
    sc_signal< sc_lv<14> > p_Val2_22_reg_520;
    sc_signal< sc_lv<14> > select_ln340_526_fu_360_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > p_Val2_22_sum_engine_1_fu_163_ap_ready;
    sc_signal< sc_lv<4> > ap_phi_mux_row_0_phi_fu_155_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln210_2_fu_208_p1;
    sc_signal< sc_lv<64> > sext_ln210_fu_219_p1;
    sc_signal< sc_lv<64> > sext_ln210_1_fu_229_p1;
    sc_signal< sc_lv<64> > sext_ln210_2_fu_239_p1;
    sc_signal< sc_lv<64> > sext_ln210_3_fu_249_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > sext_ln210_4_fu_259_p1;
    sc_signal< sc_lv<64> > sext_ln210_5_fu_269_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<7> > tmp_491_fu_184_p3;
    sc_signal< sc_lv<8> > zext_ln210_fu_180_p1;
    sc_signal< sc_lv<8> > zext_ln210_1_fu_192_p1;
    sc_signal< sc_lv<8> > add_ln210_1_fu_202_p2;
    sc_signal< sc_lv<8> > add_ln210_2_fu_213_p2;
    sc_signal< sc_lv<8> > add_ln210_3_fu_224_p2;
    sc_signal< sc_lv<8> > add_ln210_4_fu_234_p2;
    sc_signal< sc_lv<8> > add_ln210_5_fu_244_p2;
    sc_signal< sc_lv<8> > add_ln210_6_fu_254_p2;
    sc_signal< sc_lv<8> > add_ln210_7_fu_264_p2;
    sc_signal< sc_lv<15> > lhs_V_fu_280_p1;
    sc_signal< sc_lv<15> > rhs_V_fu_284_p1;
    sc_signal< sc_lv<15> > ret_V_fu_287_p2;
    sc_signal< sc_lv<14> > sum_V_fu_301_p2;
    sc_signal< sc_lv<1> > p_Result_10_fu_306_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_293_p3;
    sc_signal< sc_lv<1> > xor_ln786_10_fu_314_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_332_p2;
    sc_signal< sc_lv<1> > xor_ln340_317_fu_326_p2;
    sc_signal< sc_lv<1> > underflow_fu_320_p2;
    sc_signal< sc_lv<1> > or_ln340_39_fu_338_p2;
    sc_signal< sc_lv<14> > select_ln340_fu_344_p3;
    sc_signal< sc_lv<14> > select_ln388_fu_352_p3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<15> > sext_ln1148_fu_368_p1;
    sc_signal< sc_lv<15> > sub_ln1148_fu_380_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_386_p4;
    sc_signal< sc_lv<11> > zext_ln1148_1_fu_396_p1;
    sc_signal< sc_lv<9> > trunc_ln1148_1_fu_406_p4;
    sc_signal< sc_lv<10> > sext_ln1148_1_fu_416_p1;
    sc_signal< sc_lv<1> > tmp_1367_fu_372_p3;
    sc_signal< sc_lv<11> > sub_ln1148_1_fu_400_p2;
    sc_signal< sc_lv<11> > zext_ln1148_fu_420_p1;
    sc_signal< sc_lv<11> > r_V_fu_424_p3;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage3;
    static const sc_lv<6> ap_ST_fsm_state9;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<14> ap_const_lv14_1FFF;
    static const sc_lv<14> ap_const_lv14_2000;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<11> ap_const_lv11_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln210_1_fu_202_p2();
    void thread_add_ln210_2_fu_213_p2();
    void thread_add_ln210_3_fu_224_p2();
    void thread_add_ln210_4_fu_234_p2();
    void thread_add_ln210_5_fu_244_p2();
    void thread_add_ln210_6_fu_254_p2();
    void thread_add_ln210_7_fu_264_p2();
    void thread_add_ln210_fu_196_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage1_iter1();
    void thread_ap_block_state8_pp0_stage2_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_row_0_phi_fu_155_p4();
    void thread_ap_ready();
    void thread_buf_V_address0();
    void thread_buf_V_address1();
    void thread_buf_V_ce0();
    void thread_buf_V_ce1();
    void thread_icmp_ln208_fu_174_p2();
    void thread_lhs_V_fu_280_p1();
    void thread_or_ln340_39_fu_338_p2();
    void thread_p_Result_10_fu_306_p3();
    void thread_p_Result_s_fu_293_p3();
    void thread_r_V_fu_424_p3();
    void thread_ret_V_fu_287_p2();
    void thread_rhs_V_fu_284_p1();
    void thread_row_fu_274_p2();
    void thread_select_ln340_526_fu_360_p3();
    void thread_select_ln340_fu_344_p3();
    void thread_select_ln388_fu_352_p3();
    void thread_sext_ln1148_1_fu_416_p1();
    void thread_sext_ln1148_fu_368_p1();
    void thread_sext_ln210_1_fu_229_p1();
    void thread_sext_ln210_2_fu_239_p1();
    void thread_sext_ln210_3_fu_249_p1();
    void thread_sext_ln210_4_fu_259_p1();
    void thread_sext_ln210_5_fu_269_p1();
    void thread_sext_ln210_fu_219_p1();
    void thread_sub_ln1148_1_fu_400_p2();
    void thread_sub_ln1148_fu_380_p2();
    void thread_sum_V_fu_301_p2();
    void thread_tmp_1367_fu_372_p3();
    void thread_tmp_491_fu_184_p3();
    void thread_tmp_s_fu_386_p4();
    void thread_trunc_ln1148_1_fu_406_p4();
    void thread_underflow_fu_320_p2();
    void thread_xor_ln340_317_fu_326_p2();
    void thread_xor_ln340_fu_332_p2();
    void thread_xor_ln786_10_fu_314_p2();
    void thread_zext_ln1148_1_fu_396_p1();
    void thread_zext_ln1148_fu_420_p1();
    void thread_zext_ln210_1_fu_192_p1();
    void thread_zext_ln210_2_fu_208_p1();
    void thread_zext_ln210_fu_180_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
