// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_HH_
#define _relu_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "FracNet_mac_muladmb6.h"

namespace ap_rtl {

struct relu : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<14> > norm_V;
    sc_in< sc_lv<11> > shiftx_V;
    sc_in< sc_lv<11> > shifty_V;
    sc_in< sc_lv<11> > weight_V;
    sc_out< sc_lv<14> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    relu(sc_module_name name);
    SC_HAS_PROCESS(relu);

    ~relu();

    sc_trace_file* mVcdFile;

    FracNet_mac_muladmb6<1,1,11,14,19,25>* FracNet_mac_muladmb6_U555;
    sc_signal< sc_lv<11> > weight_V_read_reg_567;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > shifty_V_read_reg_572;
    sc_signal< sc_lv<14> > p_Val2_10_fu_180_p3;
    sc_signal< sc_lv<14> > p_Val2_10_reg_578;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_188_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_reg_586;
    sc_signal< sc_lv<1> > p_Result_2_reg_593;
    sc_signal< sc_lv<14> > p_Val2_12_fu_225_p2;
    sc_signal< sc_lv<14> > p_Val2_12_reg_600;
    sc_signal< sc_lv<1> > p_Result_3_reg_606;
    sc_signal< sc_lv<25> > grp_fu_554_p3;
    sc_signal< sc_lv<25> > ret_V_6_reg_613;
    sc_signal< sc_lv<1> > p_Result_4_reg_619;
    sc_signal< sc_lv<14> > p_Val2_15_reg_625;
    sc_signal< sc_lv<1> > tmp_reg_630;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_287_p2;
    sc_signal< sc_lv<1> > Range2_all_ones_reg_635;
    sc_signal< sc_lv<4> > tmp_2_reg_640;
    sc_signal< sc_lv<14> > p_Val2_16_fu_312_p2;
    sc_signal< sc_lv<14> > p_Val2_16_reg_646;
    sc_signal< sc_lv<1> > or_ln340_23_fu_479_p2;
    sc_signal< sc_lv<1> > or_ln340_23_reg_651;
    sc_signal< sc_lv<14> > select_ln340_290_fu_523_p3;
    sc_signal< sc_lv<14> > select_ln340_290_reg_656;
    sc_signal< sc_lv<1> > and_ln340_2_fu_536_p2;
    sc_signal< sc_lv<1> > and_ln340_2_reg_661;
    sc_signal< sc_lv<14> > lhs_V_fu_86_p0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<12> > rhs_V_fu_90_p3;
    sc_signal< sc_lv<15> > lhs_V_fu_86_p1;
    sc_signal< sc_lv<15> > sext_ln728_fu_98_p1;
    sc_signal< sc_lv<15> > ret_V_fu_106_p2;
    sc_signal< sc_lv<14> > tmp_V_fu_120_p0;
    sc_signal< sc_lv<14> > sext_ln1192_fu_102_p1;
    sc_signal< sc_lv<14> > tmp_V_fu_120_p2;
    sc_signal< sc_lv<1> > p_Result_1_fu_126_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_112_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_134_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_152_p2;
    sc_signal< sc_lv<1> > xor_ln340_209_fu_146_p2;
    sc_signal< sc_lv<1> > underflow_fu_140_p2;
    sc_signal< sc_lv<1> > or_ln340_21_fu_158_p2;
    sc_signal< sc_lv<14> > select_ln340_fu_164_p3;
    sc_signal< sc_lv<14> > select_ln388_fu_172_p3;
    sc_signal< sc_lv<12> > rhs_V_6_fu_196_p3;
    sc_signal< sc_lv<15> > lhs_V_5_fu_193_p1;
    sc_signal< sc_lv<15> > sext_ln728_128_fu_203_p1;
    sc_signal< sc_lv<15> > ret_V_5_fu_211_p2;
    sc_signal< sc_lv<14> > sext_ln1192_128_fu_207_p1;
    sc_signal< sc_lv<19> > rhs_V_7_fu_244_p3;
    sc_signal< sc_lv<3> > tmp_1_fu_278_p4;
    sc_signal< sc_lv<14> > zext_ln415_fu_309_p1;
    sc_signal< sc_lv<1> > tmp_706_fu_317_p3;
    sc_signal< sc_lv<1> > p_Result_5_fu_302_p3;
    sc_signal< sc_lv<1> > xor_ln416_fu_325_p2;
    sc_signal< sc_lv<1> > carry_1_fu_331_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_345_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_350_p2;
    sc_signal< sc_lv<1> > xor_ln786_6_fu_363_p2;
    sc_signal< sc_lv<1> > xor_ln340_162_fu_377_p2;
    sc_signal< sc_lv<1> > xor_ln340_210_fu_373_p2;
    sc_signal< sc_lv<1> > tmp_708_fu_394_p3;
    sc_signal< sc_lv<1> > xor_ln779_fu_401_p2;
    sc_signal< sc_lv<1> > and_ln779_fu_407_p2;
    sc_signal< sc_lv<1> > underflow_1_fu_368_p2;
    sc_signal< sc_lv<1> > deleted_zeros_fu_355_p3;
    sc_signal< sc_lv<1> > p_Result_6_fu_337_p3;
    sc_signal< sc_lv<1> > xor_ln785_9_fu_433_p2;
    sc_signal< sc_lv<1> > or_ln785_7_fu_439_p2;
    sc_signal< sc_lv<1> > xor_ln785_10_fu_445_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_412_p3;
    sc_signal< sc_lv<1> > and_ln781_fu_427_p2;
    sc_signal< sc_lv<1> > and_ln786_fu_456_p2;
    sc_signal< sc_lv<1> > or_ln786_fu_462_p2;
    sc_signal< sc_lv<1> > xor_ln786_161_fu_468_p2;
    sc_signal< sc_lv<1> > underflow_2_fu_474_p2;
    sc_signal< sc_lv<1> > overflow_fu_450_p2;
    sc_signal< sc_lv<1> > or_ln340_319_fu_485_p2;
    sc_signal< sc_lv<1> > and_ln340_fu_505_p2;
    sc_signal< sc_lv<14> > select_ln388_161_fu_420_p3;
    sc_signal< sc_lv<14> > select_ln388_162_fu_497_p3;
    sc_signal< sc_lv<1> > or_ln340_fu_382_p2;
    sc_signal< sc_lv<1> > and_ln340_1_fu_518_p2;
    sc_signal< sc_lv<14> > select_ln340_162_fu_387_p3;
    sc_signal< sc_lv<14> > select_ln340_289_fu_510_p3;
    sc_signal< sc_lv<1> > or_ln340_320_fu_491_p2;
    sc_signal< sc_lv<1> > xor_ln1494_fu_531_p2;
    sc_signal< sc_lv<14> > select_ln340_163_fu_542_p3;
    sc_signal< sc_lv<14> > select_ln340_291_fu_548_p3;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<14> > norm_V_int_reg;
    sc_signal< sc_lv<11> > shiftx_V_int_reg;
    sc_signal< sc_lv<11> > shifty_V_int_reg;
    sc_signal< sc_lv<11> > weight_V_int_reg;
    sc_signal< sc_lv<14> > ap_return_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_1FFF;
    static const sc_lv<14> ap_const_lv14_2000;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Range1_all_ones_fu_345_p2();
    void thread_Range1_all_zeros_fu_350_p2();
    void thread_Range2_all_ones_fu_287_p2();
    void thread_and_ln340_1_fu_518_p2();
    void thread_and_ln340_2_fu_536_p2();
    void thread_and_ln340_fu_505_p2();
    void thread_and_ln779_fu_407_p2();
    void thread_and_ln781_fu_427_p2();
    void thread_and_ln786_fu_456_p2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_return();
    void thread_carry_1_fu_331_p2();
    void thread_deleted_ones_fu_412_p3();
    void thread_deleted_zeros_fu_355_p3();
    void thread_icmp_ln1494_fu_188_p2();
    void thread_lhs_V_5_fu_193_p1();
    void thread_lhs_V_fu_86_p0();
    void thread_lhs_V_fu_86_p1();
    void thread_or_ln340_21_fu_158_p2();
    void thread_or_ln340_23_fu_479_p2();
    void thread_or_ln340_319_fu_485_p2();
    void thread_or_ln340_320_fu_491_p2();
    void thread_or_ln340_fu_382_p2();
    void thread_or_ln785_7_fu_439_p2();
    void thread_or_ln786_fu_462_p2();
    void thread_overflow_fu_450_p2();
    void thread_p_Result_1_fu_126_p3();
    void thread_p_Result_5_fu_302_p3();
    void thread_p_Result_6_fu_337_p3();
    void thread_p_Result_s_fu_112_p3();
    void thread_p_Val2_10_fu_180_p3();
    void thread_p_Val2_12_fu_225_p2();
    void thread_p_Val2_16_fu_312_p2();
    void thread_ret_V_5_fu_211_p2();
    void thread_ret_V_fu_106_p2();
    void thread_rhs_V_6_fu_196_p3();
    void thread_rhs_V_7_fu_244_p3();
    void thread_rhs_V_fu_90_p3();
    void thread_select_ln340_162_fu_387_p3();
    void thread_select_ln340_163_fu_542_p3();
    void thread_select_ln340_289_fu_510_p3();
    void thread_select_ln340_290_fu_523_p3();
    void thread_select_ln340_291_fu_548_p3();
    void thread_select_ln340_fu_164_p3();
    void thread_select_ln388_161_fu_420_p3();
    void thread_select_ln388_162_fu_497_p3();
    void thread_select_ln388_fu_172_p3();
    void thread_sext_ln1192_128_fu_207_p1();
    void thread_sext_ln1192_fu_102_p1();
    void thread_sext_ln728_128_fu_203_p1();
    void thread_sext_ln728_fu_98_p1();
    void thread_tmp_1_fu_278_p4();
    void thread_tmp_706_fu_317_p3();
    void thread_tmp_708_fu_394_p3();
    void thread_tmp_V_fu_120_p0();
    void thread_tmp_V_fu_120_p2();
    void thread_underflow_1_fu_368_p2();
    void thread_underflow_2_fu_474_p2();
    void thread_underflow_fu_140_p2();
    void thread_xor_ln1494_fu_531_p2();
    void thread_xor_ln340_162_fu_377_p2();
    void thread_xor_ln340_209_fu_146_p2();
    void thread_xor_ln340_210_fu_373_p2();
    void thread_xor_ln340_fu_152_p2();
    void thread_xor_ln416_fu_325_p2();
    void thread_xor_ln779_fu_401_p2();
    void thread_xor_ln785_10_fu_445_p2();
    void thread_xor_ln785_9_fu_433_p2();
    void thread_xor_ln786_161_fu_468_p2();
    void thread_xor_ln786_6_fu_363_p2();
    void thread_xor_ln786_fu_134_p2();
    void thread_zext_ln415_fu_309_p1();
};

}

using namespace ap_rtl;

#endif
