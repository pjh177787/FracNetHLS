-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_engine_64 is
port (
    ap_ready : OUT STD_LOGIC;
    b_V : IN STD_LOGIC_VECTOR (63 downto 0);
    w_V : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of compute_engine_64 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_AAAAAAAA : STD_LOGIC_VECTOR (31 downto 0) := "10101010101010101010101010101010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal trunc_ln769_fu_120_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln769_fu_124_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln769_1_fu_130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln769_1_fu_134_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln769_3_fu_146_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_152_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_272_fu_160_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_273_fu_168_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_274_fu_176_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_275_fu_184_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_276_fu_192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_fu_200_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_278_fu_208_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_279_fu_216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_fu_224_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_281_fu_232_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_fu_240_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_283_fu_248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_284_fu_256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_285_fu_264_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_286_fu_272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_280_p32 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_2_fu_140_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1355_fu_346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_V_4_fu_350_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_360_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_271_fu_370_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_287_fu_380_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_288_fu_390_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_289_fu_400_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_290_fu_410_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_291_fu_420_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1355_fu_356_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_1_fu_430_p16 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_292_fu_478_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_293_fu_488_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_294_fu_498_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_295_fu_508_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_296_fu_518_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_297_fu_528_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_298_fu_538_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1355_1_fu_468_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_2_fu_548_p16 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln1355_2_fu_582_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1355_1_fu_464_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln209_2_fu_626_p15 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln209_1_fu_594_p15 : STD_LOGIC_VECTOR (27 downto 0);
    signal x_V_fu_664_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_299_fu_676_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln209_1_fu_658_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln209_2_fu_686_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln209_2_fu_670_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln4_fu_690_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln209_1_fu_590_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln209_fu_586_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln209_4_fu_706_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln209_fu_700_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_300_fu_718_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_301_fu_728_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_302_fu_738_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln209_fu_748_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_4_fu_770_p6 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln209_3_fu_712_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_V_3_fu_752_p8 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_fu_784_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln700_fu_800_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln700_fu_788_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln5_fu_792_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln214_1_fu_816_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln700_1_fu_806_p4 : STD_LOGIC_VECTOR (5 downto 0);


begin



    add_ln209_1_fu_658_p2 <= std_logic_vector(unsigned(ret_V_1_fu_430_p16) + unsigned(ret_V_2_fu_548_p16));
    add_ln209_2_fu_670_p2 <= std_logic_vector(unsigned(trunc_ln209_2_fu_626_p15) + unsigned(trunc_ln209_1_fu_594_p15));
    add_ln209_3_fu_712_p2 <= std_logic_vector(unsigned(zext_ln209_fu_586_p1) + unsigned(add_ln209_4_fu_706_p2));
    add_ln209_4_fu_706_p2 <= std_logic_vector(unsigned(trunc_ln4_fu_690_p4) + unsigned(zext_ln209_1_fu_590_p1));
    add_ln209_fu_700_p2 <= std_logic_vector(unsigned(zext_ln209_2_fu_686_p1) + unsigned(add_ln209_2_fu_670_p2));
    add_ln214_1_fu_816_p2 <= std_logic_vector(unsigned(zext_ln700_fu_788_p1) + unsigned(trunc_ln5_fu_792_p3));
    add_ln700_fu_800_p2 <= std_logic_vector(unsigned(x_V_3_fu_752_p8) + unsigned(r_V_fu_784_p1));
    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(add_ln214_1_fu_816_p2) + unsigned(trunc_ln700_1_fu_806_p4));
    r_V_2_fu_140_p2 <= (xor_ln769_fu_124_p2 xor b_V);
    r_V_4_fu_770_p6 <= ((((tmp_300_fu_718_p4 & ap_const_lv4_0) & tmp_301_fu_728_p4) & ap_const_lv4_0) & tmp_302_fu_738_p4);
    r_V_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_fu_770_p6),28));
    ret_V_1_fu_430_p16 <= ((((((((((((((tmp_s_fu_360_p4 & ap_const_lv2_0) & tmp_271_fu_370_p4) & ap_const_lv2_0) & tmp_287_fu_380_p4) & ap_const_lv2_0) & tmp_288_fu_390_p4) & ap_const_lv2_0) & tmp_289_fu_400_p4) & ap_const_lv2_0) & tmp_290_fu_410_p4) & ap_const_lv2_0) & tmp_291_fu_420_p4) & ap_const_lv2_0) & trunc_ln1355_fu_356_p1);
    ret_V_2_fu_548_p16 <= ((((((((((((((tmp_292_fu_478_p4 & ap_const_lv2_0) & tmp_293_fu_488_p4) & ap_const_lv2_0) & tmp_294_fu_498_p4) & ap_const_lv2_0) & tmp_295_fu_508_p4) & ap_const_lv2_0) & tmp_296_fu_518_p4) & ap_const_lv2_0) & tmp_297_fu_528_p4) & ap_const_lv2_0) & tmp_298_fu_538_p4) & ap_const_lv2_0) & trunc_ln1355_1_fu_468_p4);
    ret_V_fu_280_p32 <= ((((((((((((((((((((((((((((((tmp_fu_152_p3 & ap_const_lv1_0) & tmp_272_fu_160_p3) & ap_const_lv1_0) & tmp_273_fu_168_p3) & ap_const_lv1_0) & tmp_274_fu_176_p3) & ap_const_lv1_0) & tmp_275_fu_184_p3) & ap_const_lv1_0) & tmp_276_fu_192_p3) & ap_const_lv1_0) & tmp_277_fu_200_p3) & ap_const_lv1_0) & tmp_278_fu_208_p3) & ap_const_lv1_0) & tmp_279_fu_216_p3) & ap_const_lv1_0) & tmp_280_fu_224_p3) & ap_const_lv1_0) & tmp_281_fu_232_p3) & ap_const_lv1_0) & tmp_282_fu_240_p3) & ap_const_lv1_0) & tmp_283_fu_248_p3) & ap_const_lv1_0) & tmp_284_fu_256_p3) & ap_const_lv1_0) & tmp_285_fu_264_p3) & ap_const_lv1_0) & tmp_286_fu_272_p3);
    tmp_271_fu_370_p4 <= x_V_4_fu_350_p2(25 downto 24);
    tmp_272_fu_160_p3 <= xor_ln769_3_fu_146_p2(29 downto 29);
    tmp_273_fu_168_p3 <= xor_ln769_3_fu_146_p2(27 downto 27);
    tmp_274_fu_176_p3 <= xor_ln769_3_fu_146_p2(25 downto 25);
    tmp_275_fu_184_p3 <= xor_ln769_3_fu_146_p2(23 downto 23);
    tmp_276_fu_192_p3 <= xor_ln769_3_fu_146_p2(21 downto 21);
    tmp_277_fu_200_p3 <= xor_ln769_3_fu_146_p2(19 downto 19);
    tmp_278_fu_208_p3 <= xor_ln769_3_fu_146_p2(17 downto 17);
    tmp_279_fu_216_p3 <= xor_ln769_3_fu_146_p2(15 downto 15);
    tmp_280_fu_224_p3 <= xor_ln769_3_fu_146_p2(13 downto 13);
    tmp_281_fu_232_p3 <= xor_ln769_3_fu_146_p2(11 downto 11);
    tmp_282_fu_240_p3 <= xor_ln769_3_fu_146_p2(9 downto 9);
    tmp_283_fu_248_p3 <= xor_ln769_3_fu_146_p2(7 downto 7);
    tmp_284_fu_256_p3 <= xor_ln769_3_fu_146_p2(5 downto 5);
    tmp_285_fu_264_p3 <= xor_ln769_3_fu_146_p2(3 downto 3);
    tmp_286_fu_272_p3 <= xor_ln769_3_fu_146_p2(1 downto 1);
    tmp_287_fu_380_p4 <= x_V_4_fu_350_p2(21 downto 20);
    tmp_288_fu_390_p4 <= x_V_4_fu_350_p2(17 downto 16);
    tmp_289_fu_400_p4 <= x_V_4_fu_350_p2(13 downto 12);
    tmp_290_fu_410_p4 <= x_V_4_fu_350_p2(9 downto 8);
    tmp_291_fu_420_p4 <= x_V_4_fu_350_p2(5 downto 4);
    tmp_292_fu_478_p4 <= x_V_4_fu_350_p2(31 downto 30);
    tmp_293_fu_488_p4 <= x_V_4_fu_350_p2(27 downto 26);
    tmp_294_fu_498_p4 <= x_V_4_fu_350_p2(23 downto 22);
    tmp_295_fu_508_p4 <= x_V_4_fu_350_p2(19 downto 18);
    tmp_296_fu_518_p4 <= x_V_4_fu_350_p2(15 downto 14);
    tmp_297_fu_528_p4 <= x_V_4_fu_350_p2(11 downto 10);
    tmp_298_fu_538_p4 <= x_V_4_fu_350_p2(7 downto 6);
    tmp_299_fu_676_p4 <= x_V_fu_664_p2(30 downto 4);
    tmp_300_fu_718_p4 <= add_ln209_fu_700_p2(27 downto 24);
    tmp_301_fu_728_p4 <= add_ln209_fu_700_p2(19 downto 16);
    tmp_302_fu_738_p4 <= add_ln209_fu_700_p2(11 downto 8);
    tmp_fu_152_p3 <= xor_ln769_3_fu_146_p2(31 downto 31);
    tmp_s_fu_360_p4 <= x_V_4_fu_350_p2(29 downto 28);
    trunc_ln1355_1_fu_468_p4 <= x_V_4_fu_350_p2(3 downto 2);
    trunc_ln1355_fu_356_p1 <= x_V_4_fu_350_p2(2 - 1 downto 0);
    trunc_ln209_1_fu_594_p15 <= (((((((((((((ap_const_lv2_0 & tmp_293_fu_488_p4) & ap_const_lv2_0) & tmp_294_fu_498_p4) & ap_const_lv2_0) & tmp_295_fu_508_p4) & ap_const_lv2_0) & tmp_296_fu_518_p4) & ap_const_lv2_0) & tmp_297_fu_528_p4) & ap_const_lv2_0) & tmp_298_fu_538_p4) & ap_const_lv2_0) & trunc_ln1355_1_fu_468_p4);
    trunc_ln209_2_fu_626_p15 <= (((((((((((((ap_const_lv2_0 & tmp_271_fu_370_p4) & ap_const_lv2_0) & tmp_287_fu_380_p4) & ap_const_lv2_0) & tmp_288_fu_390_p4) & ap_const_lv2_0) & tmp_289_fu_400_p4) & ap_const_lv2_0) & tmp_290_fu_410_p4) & ap_const_lv2_0) & tmp_291_fu_420_p4) & ap_const_lv2_0) & trunc_ln1355_fu_356_p1);
    trunc_ln209_fu_748_p1 <= add_ln209_fu_700_p2(4 - 1 downto 0);
    trunc_ln4_fu_690_p4 <= add_ln209_1_fu_658_p2(7 downto 4);
    trunc_ln5_fu_792_p3 <= (ap_const_lv2_0 & tmp_302_fu_738_p4);
    trunc_ln700_1_fu_806_p4 <= add_ln700_fu_800_p2(21 downto 16);
    trunc_ln769_1_fu_130_p1 <= b_V(32 - 1 downto 0);
    trunc_ln769_fu_120_p1 <= w_V(32 - 1 downto 0);
    x_V_3_fu_752_p8 <= ((((((tmp_300_fu_718_p4 & ap_const_lv4_0) & tmp_301_fu_728_p4) & ap_const_lv4_0) & tmp_302_fu_738_p4) & ap_const_lv4_0) & trunc_ln209_fu_748_p1);
    x_V_4_fu_350_p2 <= std_logic_vector(unsigned(r_V_2_fu_140_p2) - unsigned(zext_ln1355_fu_346_p1));
    x_V_fu_664_p2 <= std_logic_vector(unsigned(zext_ln1355_2_fu_582_p1) + unsigned(zext_ln1355_1_fu_464_p1));
    xor_ln769_1_fu_134_p2 <= (trunc_ln769_fu_120_p1 xor ap_const_lv32_AAAAAAAA);
    xor_ln769_3_fu_146_p2 <= (xor_ln769_1_fu_134_p2 xor trunc_ln769_1_fu_130_p1);
    xor_ln769_fu_124_p2 <= (w_V xor ap_const_lv64_FFFFFFFFFFFFFFFF);
    zext_ln1355_1_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_1_fu_430_p16),31));
    zext_ln1355_2_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_2_fu_548_p16),31));
    zext_ln1355_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_280_p32),64));
    zext_ln209_1_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1355_fu_356_p1),4));
    zext_ln209_2_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_299_fu_676_p4),28));
    zext_ln209_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1355_1_fu_468_p4),4));
    zext_ln700_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln209_3_fu_712_p2),6));
end behav;
