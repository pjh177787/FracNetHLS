-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    norm_V : IN STD_LOGIC_VECTOR (13 downto 0);
    shiftx_V : IN STD_LOGIC_VECTOR (10 downto 0);
    shifty_V : IN STD_LOGIC_VECTOR (10 downto 0);
    weight_V : IN STD_LOGIC_VECTOR (10 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of relu is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_1FFF : STD_LOGIC_VECTOR (13 downto 0) := "01111111111111";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal weight_V_read_reg_567 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal shifty_V_read_reg_572 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_10_fu_180_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_10_reg_578 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_reg_586 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_reg_586_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_593 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_593_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_225_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_12_reg_600 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_12_reg_600_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_3_reg_606 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_606_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_557_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_6_reg_613 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Result_4_reg_622 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_628 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_fu_288_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_16_reg_633 : STD_LOGIC_VECTOR (13 downto 0);
    signal underflow_2_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_reg_639 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_23_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_23_reg_644 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln340_2_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln340_2_reg_649 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_86_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal rhs_V_fu_90_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_fu_86_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_fu_98_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_fu_106_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_V_fu_120_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_fu_102_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_V_fu_120_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_1_fu_126_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_112_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_209_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_21_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_164_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln388_fu_172_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_6_fu_196_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_5_fu_193_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_128_fu_203_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_5_fu_211_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_128_fu_207_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_7_fu_244_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_15_fu_269_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln415_fu_285_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_706_fu_294_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_278_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_322_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_337_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal carry_1_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_708_fu_366_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_358_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_314_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_9_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_7_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_10_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_385_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_161_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_319_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_320_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1494_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_162_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_210_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln340_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln388_161_fu_505_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln388_162_fu_518_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln340_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln340_1_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_162_fu_498_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln340_289_fu_529_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln340_163_fu_512_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln340_290_fu_542_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln340_291_fu_550_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal norm_V_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal shiftx_V_int_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal shifty_V_int_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal weight_V_int_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (13 downto 0);

    component FracNet_mac_muladmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;



begin
    FracNet_mac_muladmb6_U555 : component FracNet_mac_muladmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 14,
        din2_WIDTH => 19,
        dout_WIDTH => 25)
    port map (
        din0 => weight_V_read_reg_567,
        din1 => p_Val2_10_reg_578,
        din2 => rhs_V_7_fu_244_p3,
        dout => grp_fu_557_p3);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln340_2_reg_649 <= and_ln340_2_fu_468_p2;
                icmp_ln1494_reg_586 <= icmp_ln1494_fu_188_p2;
                icmp_ln1494_reg_586_pp0_iter2_reg <= icmp_ln1494_reg_586;
                or_ln340_23_reg_644 <= or_ln340_23_fu_445_p2;
                p_Result_2_reg_593 <= ret_V_5_fu_211_p2(14 downto 14);
                p_Result_2_reg_593_pp0_iter2_reg <= p_Result_2_reg_593;
                p_Result_3_reg_606 <= p_Val2_12_fu_225_p2(13 downto 13);
                p_Result_3_reg_606_pp0_iter2_reg <= p_Result_3_reg_606;
                p_Result_4_reg_622 <= grp_fu_557_p3(24 downto 24);
                p_Val2_10_reg_578 <= p_Val2_10_fu_180_p3;
                p_Val2_12_reg_600 <= p_Val2_12_fu_225_p2;
                p_Val2_12_reg_600_pp0_iter2_reg <= p_Val2_12_reg_600;
                p_Val2_16_reg_633 <= p_Val2_16_fu_288_p2;
                ret_V_6_reg_613 <= grp_fu_557_p3;
                shifty_V_read_reg_572 <= shifty_V_int_reg;
                tmp_reg_628 <= grp_fu_557_p3(6 downto 6);
                underflow_2_reg_639 <= underflow_2_fu_440_p2;
                weight_V_read_reg_567 <= weight_V_int_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= select_ln340_291_fu_550_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                norm_V_int_reg <= norm_V;
                shiftx_V_int_reg <= shiftx_V;
                shifty_V_int_reg <= shifty_V;
                weight_V_int_reg <= weight_V;
            end if;
        end if;
    end process;
    Range1_all_ones_fu_346_p2 <= "1" when (tmp_2_fu_337_p4 = ap_const_lv4_F) else "0";
    Range1_all_zeros_fu_352_p2 <= "1" when (tmp_2_fu_337_p4 = ap_const_lv4_0) else "0";
    Range2_all_ones_fu_331_p2 <= "1" when (tmp_1_fu_322_p4 = ap_const_lv3_7) else "0";
    and_ln340_1_fu_537_p2 <= (or_ln340_fu_493_p2 and icmp_ln1494_reg_586_pp0_iter2_reg);
    and_ln340_2_fu_468_p2 <= (xor_ln1494_fu_463_p2 and or_ln340_320_fu_457_p2);
    and_ln340_fu_524_p2 <= (underflow_1_fu_479_p2 and icmp_ln1494_reg_586_pp0_iter2_reg);
    and_ln779_fu_379_p2 <= (xor_ln779_fu_373_p2 and Range2_all_ones_fu_331_p2);
    and_ln781_fu_393_p2 <= (carry_1_fu_308_p2 and Range1_all_ones_fu_346_p2);
    and_ln786_fu_422_p2 <= (p_Result_6_fu_314_p3 and deleted_ones_fu_385_p3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(select_ln340_291_fu_550_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= select_ln340_291_fu_550_p3;
        end if; 
    end process;

    carry_1_fu_308_p2 <= (xor_ln416_fu_302_p2 and p_Result_5_fu_278_p3);
    deleted_ones_fu_385_p3 <= 
        and_ln779_fu_379_p2 when (carry_1_fu_308_p2(0) = '1') else 
        Range1_all_ones_fu_346_p2;
    deleted_zeros_fu_358_p3 <= 
        Range1_all_ones_fu_346_p2 when (carry_1_fu_308_p2(0) = '1') else 
        Range1_all_zeros_fu_352_p2;
    icmp_ln1494_fu_188_p2 <= "1" when (signed(p_Val2_10_reg_578) > signed(ap_const_lv14_0)) else "0";
    lhs_V_5_fu_193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_10_reg_578),15));
    lhs_V_fu_86_p0 <= norm_V_int_reg;
        lhs_V_fu_86_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_86_p0),15));

    or_ln340_21_fu_158_p2 <= (xor_ln340_fu_152_p2 or p_Result_1_fu_126_p3);
    or_ln340_23_fu_445_p2 <= (underflow_2_fu_440_p2 or overflow_fu_416_p2);
    or_ln340_319_fu_451_p2 <= (xor_ln785_10_fu_411_p2 or and_ln786_fu_422_p2);
    or_ln340_320_fu_457_p2 <= (or_ln340_319_fu_451_p2 or and_ln781_fu_393_p2);
    or_ln340_fu_493_p2 <= (xor_ln340_162_fu_488_p2 or p_Result_3_reg_606_pp0_iter2_reg);
    or_ln785_7_fu_405_p2 <= (xor_ln785_9_fu_399_p2 or p_Result_6_fu_314_p3);
    or_ln786_fu_428_p2 <= (and_ln786_fu_422_p2 or and_ln781_fu_393_p2);
    overflow_fu_416_p2 <= (xor_ln785_10_fu_411_p2 and or_ln785_7_fu_405_p2);
    p_Result_1_fu_126_p3 <= tmp_V_fu_120_p2(13 downto 13);
    p_Result_5_fu_278_p3 <= ret_V_6_reg_613(20 downto 20);
    p_Result_6_fu_314_p3 <= p_Val2_16_fu_288_p2(13 downto 13);
    p_Result_s_fu_112_p3 <= ret_V_fu_106_p2(14 downto 14);
    p_Val2_10_fu_180_p3 <= 
        select_ln340_fu_164_p3 when (or_ln340_21_fu_158_p2(0) = '1') else 
        select_ln388_fu_172_p3;
    p_Val2_12_fu_225_p2 <= std_logic_vector(signed(sext_ln1192_128_fu_207_p1) + signed(p_Val2_10_reg_578));
    p_Val2_15_fu_269_p4 <= ret_V_6_reg_613(20 downto 7);
    p_Val2_16_fu_288_p2 <= std_logic_vector(unsigned(p_Val2_15_fu_269_p4) + unsigned(zext_ln415_fu_285_p1));
    ret_V_5_fu_211_p2 <= std_logic_vector(unsigned(lhs_V_5_fu_193_p1) + unsigned(sext_ln728_128_fu_203_p1));
    ret_V_fu_106_p2 <= std_logic_vector(signed(lhs_V_fu_86_p1) + signed(sext_ln728_fu_98_p1));
    rhs_V_6_fu_196_p3 <= (shifty_V_read_reg_572 & ap_const_lv1_0);
    rhs_V_7_fu_244_p3 <= (shifty_V_read_reg_572 & ap_const_lv8_0);
    rhs_V_fu_90_p3 <= (shiftx_V_int_reg & ap_const_lv1_0);
    select_ln340_162_fu_498_p3 <= 
        ap_const_lv14_1FFF when (xor_ln340_210_fu_484_p2(0) = '1') else 
        p_Val2_12_reg_600_pp0_iter2_reg;
    select_ln340_163_fu_512_p3 <= 
        ap_const_lv14_1FFF when (or_ln340_23_reg_644(0) = '1') else 
        p_Val2_16_reg_633;
    select_ln340_289_fu_529_p3 <= 
        select_ln388_161_fu_505_p3 when (and_ln340_fu_524_p2(0) = '1') else 
        select_ln388_162_fu_518_p3;
    select_ln340_290_fu_542_p3 <= 
        select_ln340_162_fu_498_p3 when (and_ln340_1_fu_537_p2(0) = '1') else 
        select_ln340_289_fu_529_p3;
    select_ln340_291_fu_550_p3 <= 
        select_ln340_163_fu_512_p3 when (and_ln340_2_reg_649(0) = '1') else 
        select_ln340_290_fu_542_p3;
    select_ln340_fu_164_p3 <= 
        ap_const_lv14_1FFF when (xor_ln340_209_fu_146_p2(0) = '1') else 
        tmp_V_fu_120_p2;
    select_ln388_161_fu_505_p3 <= 
        ap_const_lv14_2000 when (underflow_1_fu_479_p2(0) = '1') else 
        p_Val2_12_reg_600_pp0_iter2_reg;
    select_ln388_162_fu_518_p3 <= 
        ap_const_lv14_2000 when (underflow_2_reg_639(0) = '1') else 
        p_Val2_16_reg_633;
    select_ln388_fu_172_p3 <= 
        ap_const_lv14_2000 when (underflow_fu_140_p2(0) = '1') else 
        tmp_V_fu_120_p2;
        sext_ln1192_128_fu_207_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_6_fu_196_p3),14));

        sext_ln1192_fu_102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_90_p3),14));

        sext_ln728_128_fu_203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_6_fu_196_p3),15));

        sext_ln728_fu_98_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_90_p3),15));

    tmp_1_fu_322_p4 <= ret_V_6_reg_613(24 downto 22);
    tmp_2_fu_337_p4 <= ret_V_6_reg_613(24 downto 21);
    tmp_706_fu_294_p3 <= p_Val2_16_fu_288_p2(13 downto 13);
    tmp_708_fu_366_p3 <= ret_V_6_reg_613(21 downto 21);
    tmp_V_fu_120_p0 <= norm_V_int_reg;
    tmp_V_fu_120_p2 <= std_logic_vector(signed(tmp_V_fu_120_p0) + signed(sext_ln1192_fu_102_p1));
    underflow_1_fu_479_p2 <= (xor_ln786_6_fu_474_p2 and p_Result_2_reg_593_pp0_iter2_reg);
    underflow_2_fu_440_p2 <= (xor_ln786_161_fu_434_p2 and p_Result_4_reg_622);
    underflow_fu_140_p2 <= (xor_ln786_fu_134_p2 and p_Result_s_fu_112_p3);
    xor_ln1494_fu_463_p2 <= (icmp_ln1494_reg_586 xor ap_const_lv1_1);
    xor_ln340_162_fu_488_p2 <= (p_Result_2_reg_593_pp0_iter2_reg xor ap_const_lv1_1);
    xor_ln340_209_fu_146_p2 <= (p_Result_s_fu_112_p3 xor p_Result_1_fu_126_p3);
    xor_ln340_210_fu_484_p2 <= (p_Result_3_reg_606_pp0_iter2_reg xor p_Result_2_reg_593_pp0_iter2_reg);
    xor_ln340_fu_152_p2 <= (p_Result_s_fu_112_p3 xor ap_const_lv1_1);
    xor_ln416_fu_302_p2 <= (tmp_706_fu_294_p3 xor ap_const_lv1_1);
    xor_ln779_fu_373_p2 <= (tmp_708_fu_366_p3 xor ap_const_lv1_1);
    xor_ln785_10_fu_411_p2 <= (p_Result_4_reg_622 xor ap_const_lv1_1);
    xor_ln785_9_fu_399_p2 <= (deleted_zeros_fu_358_p3 xor ap_const_lv1_1);
    xor_ln786_161_fu_434_p2 <= (or_ln786_fu_428_p2 xor ap_const_lv1_1);
    xor_ln786_6_fu_474_p2 <= (p_Result_3_reg_606_pp0_iter2_reg xor ap_const_lv1_1);
    xor_ln786_fu_134_p2 <= (p_Result_1_fu_126_p3 xor ap_const_lv1_1);
    zext_ln415_fu_285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_628),14));
end behav;
