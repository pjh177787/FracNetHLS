-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    norm_V : IN STD_LOGIC_VECTOR (13 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of relu is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_100 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_const_lv13_100 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv22_8000 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_const_lv21_8000 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_1FFF : STD_LOGIC_VECTOR (13 downto 0) := "01111111111111";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";

    signal icmp_ln1494_fu_48_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_reg_235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal xor_ln785_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_reg_245 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_190_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln340_reg_250 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_fu_206_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_reg_255 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal trunc_ln703_fu_54_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_s_fu_58_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_s_fu_70_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln746_fu_64_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln785_fu_78_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_fu_90_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_fu_98_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_fu_102_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_32_fu_108_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_2_fu_132_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_140_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_114_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_122_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln785_fu_86_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln388_fu_198_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln340_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1494_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln340_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_64_fu_229_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return_int_reg : STD_LOGIC_VECTOR (13 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                and_ln786_reg_245 <= and_ln786_fu_166_p2;
                icmp_ln1494_reg_235 <= icmp_ln1494_fu_48_p2;
                select_ln1494_reg_255 <= select_ln1494_fu_206_p3;
                select_ln340_reg_250 <= select_ln340_fu_190_p3;
                xor_ln785_reg_240 <= xor_ln785_fu_154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= select_ln340_64_fu_229_p3;
            end if;
        end if;
    end process;
    Range1_all_ones_fu_140_p3 <= add_ln1192_fu_102_p2(21 downto 21);
    add_ln1192_32_fu_108_p2 <= std_logic_vector(unsigned(ap_const_lv21_8000) + unsigned(r_V_fu_90_p3));
    add_ln1192_fu_102_p2 <= std_logic_vector(unsigned(ap_const_lv22_8000) + unsigned(sext_ln1118_fu_98_p1));
    add_ln746_fu_64_p2 <= std_logic_vector(unsigned(ap_const_lv13_100) + unsigned(trunc_ln703_fu_54_p1));
    and_ln340_fu_223_p2 <= (xor_ln1494_fu_218_p2 and or_ln340_fu_214_p2);
    and_ln786_fu_166_p2 <= (p_Result_2_fu_132_p3 and Range1_all_ones_fu_140_p3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(select_ln340_64_fu_229_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= select_ln340_64_fu_229_p3;
        end if; 
    end process;

    icmp_ln1494_fu_48_p2 <= "1" when (signed(norm_V) > signed(ap_const_lv14_0)) else "0";
    or_ln340_3_fu_184_p2 <= (underflow_fu_178_p2 or overflow_fu_160_p2);
    or_ln340_fu_214_p2 <= (xor_ln785_reg_240 or and_ln786_reg_245);
    or_ln785_fu_148_p2 <= (p_Result_2_fu_132_p3 or Range1_all_ones_fu_140_p3);
    overflow_fu_160_p2 <= (xor_ln785_fu_154_p2 and or_ln785_fu_148_p2);
    p_Result_1_fu_114_p3 <= add_ln1192_fu_102_p2(21 downto 21);
    p_Result_2_fu_132_p3 <= add_ln1192_32_fu_108_p2(20 downto 20);
    p_Result_s_fu_70_p3 <= p_Val2_s_fu_58_p2(13 downto 13);
    p_Val2_2_fu_122_p4 <= add_ln1192_32_fu_108_p2(20 downto 7);
    p_Val2_s_fu_58_p2 <= std_logic_vector(unsigned(ap_const_lv14_100) + unsigned(norm_V));
    r_V_fu_90_p3 <= (norm_V & ap_const_lv7_0);
    select_ln1494_fu_206_p3 <= 
        zext_ln785_fu_86_p1 when (icmp_ln1494_fu_48_p2(0) = '1') else 
        select_ln388_fu_198_p3;
    select_ln340_64_fu_229_p3 <= 
        select_ln340_reg_250 when (and_ln340_fu_223_p2(0) = '1') else 
        select_ln1494_reg_255;
    select_ln340_fu_190_p3 <= 
        ap_const_lv14_1FFF when (or_ln340_3_fu_184_p2(0) = '1') else 
        p_Val2_2_fu_122_p4;
    select_ln388_fu_198_p3 <= 
        ap_const_lv14_2000 when (underflow_fu_178_p2(0) = '1') else 
        p_Val2_2_fu_122_p4;
    select_ln785_fu_78_p3 <= 
        ap_const_lv13_1FFF when (p_Result_s_fu_70_p3(0) = '1') else 
        add_ln746_fu_64_p2;
        sext_ln1118_fu_98_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_90_p3),22));

    trunc_ln703_fu_54_p1 <= norm_V(13 - 1 downto 0);
    underflow_fu_178_p2 <= (xor_ln786_1_fu_172_p2 and p_Result_1_fu_114_p3);
    xor_ln1494_fu_218_p2 <= (icmp_ln1494_reg_235 xor ap_const_lv1_1);
    xor_ln785_fu_154_p2 <= (p_Result_1_fu_114_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_172_p2 <= (ap_const_lv1_1 xor and_ln786_fu_166_p2);
    zext_ln785_fu_86_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln785_fu_78_p3),14));
end behav;
