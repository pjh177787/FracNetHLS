-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity load_weight_3x3_from_axi is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dest_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_0_V_ce0 : OUT STD_LOGIC;
    dest_0_V_we0 : OUT STD_LOGIC;
    dest_0_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_1_V_ce0 : OUT STD_LOGIC;
    dest_1_V_we0 : OUT STD_LOGIC;
    dest_1_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_2_V_ce0 : OUT STD_LOGIC;
    dest_2_V_we0 : OUT STD_LOGIC;
    dest_2_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_3_V_ce0 : OUT STD_LOGIC;
    dest_3_V_we0 : OUT STD_LOGIC;
    dest_3_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_4_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_4_V_ce0 : OUT STD_LOGIC;
    dest_4_V_we0 : OUT STD_LOGIC;
    dest_4_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_5_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_5_V_ce0 : OUT STD_LOGIC;
    dest_5_V_we0 : OUT STD_LOGIC;
    dest_5_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_6_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_6_V_ce0 : OUT STD_LOGIC;
    dest_6_V_we0 : OUT STD_LOGIC;
    dest_6_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_7_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_7_V_ce0 : OUT STD_LOGIC;
    dest_7_V_we0 : OUT STD_LOGIC;
    dest_7_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_8_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_8_V_ce0 : OUT STD_LOGIC;
    dest_8_V_we0 : OUT STD_LOGIC;
    dest_8_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_9_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_9_V_ce0 : OUT STD_LOGIC;
    dest_9_V_we0 : OUT STD_LOGIC;
    dest_9_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_10_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_10_V_ce0 : OUT STD_LOGIC;
    dest_10_V_we0 : OUT STD_LOGIC;
    dest_10_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_11_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_11_V_ce0 : OUT STD_LOGIC;
    dest_11_V_we0 : OUT STD_LOGIC;
    dest_11_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_12_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_12_V_ce0 : OUT STD_LOGIC;
    dest_12_V_we0 : OUT STD_LOGIC;
    dest_12_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_13_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_13_V_ce0 : OUT STD_LOGIC;
    dest_13_V_we0 : OUT STD_LOGIC;
    dest_13_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_14_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_14_V_ce0 : OUT STD_LOGIC;
    dest_14_V_we0 : OUT STD_LOGIC;
    dest_14_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_15_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_15_V_ce0 : OUT STD_LOGIC;
    dest_15_V_we0 : OUT STD_LOGIC;
    dest_15_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_16_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_16_V_ce0 : OUT STD_LOGIC;
    dest_16_V_we0 : OUT STD_LOGIC;
    dest_16_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_17_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_17_V_ce0 : OUT STD_LOGIC;
    dest_17_V_we0 : OUT STD_LOGIC;
    dest_17_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_18_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_18_V_ce0 : OUT STD_LOGIC;
    dest_18_V_we0 : OUT STD_LOGIC;
    dest_18_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_19_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_19_V_ce0 : OUT STD_LOGIC;
    dest_19_V_we0 : OUT STD_LOGIC;
    dest_19_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_20_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_20_V_ce0 : OUT STD_LOGIC;
    dest_20_V_we0 : OUT STD_LOGIC;
    dest_20_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_21_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_21_V_ce0 : OUT STD_LOGIC;
    dest_21_V_we0 : OUT STD_LOGIC;
    dest_21_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_22_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_22_V_ce0 : OUT STD_LOGIC;
    dest_22_V_we0 : OUT STD_LOGIC;
    dest_22_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_23_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_23_V_ce0 : OUT STD_LOGIC;
    dest_23_V_we0 : OUT STD_LOGIC;
    dest_23_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_24_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_24_V_ce0 : OUT STD_LOGIC;
    dest_24_V_we0 : OUT STD_LOGIC;
    dest_24_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_25_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_25_V_ce0 : OUT STD_LOGIC;
    dest_25_V_we0 : OUT STD_LOGIC;
    dest_25_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_26_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_26_V_ce0 : OUT STD_LOGIC;
    dest_26_V_we0 : OUT STD_LOGIC;
    dest_26_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_27_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_27_V_ce0 : OUT STD_LOGIC;
    dest_27_V_we0 : OUT STD_LOGIC;
    dest_27_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_28_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_28_V_ce0 : OUT STD_LOGIC;
    dest_28_V_we0 : OUT STD_LOGIC;
    dest_28_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_29_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_29_V_ce0 : OUT STD_LOGIC;
    dest_29_V_we0 : OUT STD_LOGIC;
    dest_29_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_30_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_30_V_ce0 : OUT STD_LOGIC;
    dest_30_V_we0 : OUT STD_LOGIC;
    dest_30_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dest_31_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dest_31_V_ce0 : OUT STD_LOGIC;
    dest_31_V_we0 : OUT STD_LOGIC;
    dest_31_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    src_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    src_V_ce0 : OUT STD_LOGIC;
    src_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    index : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of load_weight_3x3_from_axi is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "load_weight_3x3_from_axi,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.423000,HLS_SYN_LAT=81,HLS_SYN_TPT=none,HLS_SYN_MEM=15,HLS_SYN_DSP=0,HLS_SYN_FF=836,HLS_SYN_LUT=795,HLS_VERSION=2019_2_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten13_reg_634 : STD_LOGIC_VECTOR (5 downto 0);
    signal cc_0_reg_645 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_656 : STD_LOGIC_VECTOR (3 downto 0);
    signal m_0_reg_667 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_0_reg_679 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten66_reg_691 : STD_LOGIC_VECTOR (5 downto 0);
    signal m7_0_reg_702 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten52_reg_714 : STD_LOGIC_VECTOR (4 downto 0);
    signal n8_0_reg_725 : STD_LOGIC_VECTOR (1 downto 0);
    signal cc9_0_reg_737 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln147_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln147_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln147_reg_1323_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln147_reg_1323_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln147_reg_1323_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln147_1_fu_754_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln148_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln148_reg_1332 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln147_1_fu_772_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln147_1_reg_1339 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln148_fu_786_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln152_fu_883_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln152_reg_1352 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln152_1_fu_891_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln152_1_reg_1358 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal trunc_ln647_fu_913_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln647_reg_1363 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln647_1_fu_917_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln647_1_reg_1368 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln321_fu_921_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln321_reg_1373 : STD_LOGIC_VECTOR (6 downto 0);
    signal n_fu_927_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_reg_1379 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln321_1_fu_972_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln321_1_reg_1389 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln321_1_reg_1389_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_1_reg_1394 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln157_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln157_reg_1399 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln157_reg_1399_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln157_fu_988_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln158_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln158_reg_1408 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1414 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln161_2_fu_1024_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln161_2_reg_1419 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln321_fu_1032_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_reg_1425 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_reg_1425_pp1_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_reg_1425_pp1_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal cc_1_fu_1036_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln158_fu_1048_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln161_1_fu_1069_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln161_1_reg_1439 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal select_ln161_1_reg_1439_pp1_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln161_3_fu_1086_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln161_3_reg_1446 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln161_3_reg_1446_pp1_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln161_fu_1117_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln161_reg_1453 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal src_buf_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal src_buf_V_ce0 : STD_LOGIC;
    signal src_buf_V_we0 : STD_LOGIC;
    signal src_buf_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_mux_cc_0_phi_fu_649_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_m_0_phi_fu_671_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_n_0_phi_fu_683_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_m7_0_phi_fu_706_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_n8_0_phi_fu_729_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln647_2_fu_967_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_2_fu_978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_4_fu_1142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln321_1_fu_1176_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln647_2_fu_1212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cc_fu_760_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln148_1_fu_780_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln147_fu_801_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln147_fu_804_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_813_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln647_1_fu_821_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln647_fu_809_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_3_fu_834_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln321_1_fu_841_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln321_fu_831_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln321_fu_845_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln149_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln147_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln147_fu_794_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln147_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln152_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_2_fu_872_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln152_1_fu_903_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal sub_ln647_fu_825_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln647_fu_907_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal zext_ln152_fu_899_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln321_fu_851_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl1_cast_fu_933_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln321_fu_945_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln647_1_fu_958_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln647_1_fu_940_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln647_1_fu_961_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln647_fu_955_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln321_1_fu_950_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln159_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln161_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln161_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln158_1_fu_1042_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal m_fu_1056_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln161_fu_1062_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_2_fu_1080_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_1096_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln161_3_fu_1103_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln161_2_fu_1093_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln161_fu_1107_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln321_3_fu_1076_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln161_fu_1113_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln161_fu_1126_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln161_fu_1123_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln161_1_fu_1131_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln161_1_fu_1136_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_6_fu_1150_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln321_5_fu_1157_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln321_4_fu_1147_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln161_1_fu_1167_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln321_2_fu_1161_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln321_2_fu_1170_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component load_weight_3x3_fbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (511 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;



begin
    src_buf_V_U : component load_weight_3x3_fbkb
    generic map (
        DataWidth => 512,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => src_buf_V_address0,
        ce0 => src_buf_V_ce0,
        we0 => src_buf_V_we0,
        d0 => p_Val2_1_reg_1394,
        q0 => src_buf_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cc9_0_reg_737_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                cc9_0_reg_737 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln157_fu_982_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                cc9_0_reg_737 <= cc_1_fu_1036_p2;
            end if; 
        end if;
    end process;

    cc_0_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln147_reg_1323 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                cc_0_reg_645 <= select_ln147_1_reg_1339;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                cc_0_reg_645 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten13_reg_634_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln147_fu_748_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten13_reg_634 <= add_ln147_1_fu_754_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten13_reg_634 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten52_reg_714_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten52_reg_714 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln157_fu_982_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                indvar_flatten52_reg_714 <= select_ln158_fu_1048_p3;
            end if; 
        end if;
    end process;

    indvar_flatten66_reg_691_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten66_reg_691 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln157_fu_982_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                indvar_flatten66_reg_691 <= add_ln157_fu_988_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_656_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln147_fu_748_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_656 <= select_ln148_fu_786_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_656 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    m7_0_reg_702_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                m7_0_reg_702 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln157_reg_1399_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                m7_0_reg_702 <= select_ln161_1_reg_1439;
            end if; 
        end if;
    end process;

    m_0_reg_667_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln147_reg_1323_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                m_0_reg_667 <= select_ln152_1_reg_1358;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                m_0_reg_667 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    n8_0_reg_725_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                n8_0_reg_725 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln157_reg_1399_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                n8_0_reg_725 <= select_ln161_3_reg_1446;
            end if; 
        end if;
    end process;

    n_0_reg_679_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln147_reg_1323_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                n_0_reg_679 <= n_reg_1379;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                n_0_reg_679 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln157_reg_1399 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                add_ln161_reg_1453 <= add_ln161_fu_1117_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln147_reg_1323_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln321_1_reg_1389 <= add_ln321_1_fu_972_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln321_1_reg_1389_pp0_iter3_reg <= add_ln321_1_reg_1389;
                icmp_ln147_reg_1323_pp0_iter2_reg <= icmp_ln147_reg_1323_pp0_iter1_reg;
                icmp_ln147_reg_1323_pp0_iter3_reg <= icmp_ln147_reg_1323_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln147_reg_1323 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln321_reg_1373 <= add_ln321_fu_921_p2;
                select_ln152_reg_1352 <= select_ln152_fu_883_p3;
                trunc_ln647_1_reg_1368 <= trunc_ln647_1_fu_917_p1;
                trunc_ln647_reg_1363 <= trunc_ln647_fu_913_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln157_fu_982_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                and_ln161_reg_1414 <= and_ln161_fu_1012_p2;
                icmp_ln158_reg_1408 <= icmp_ln158_fu_994_p2;
                select_ln161_2_reg_1419 <= select_ln161_2_fu_1024_p3;
                trunc_ln321_reg_1425 <= trunc_ln321_fu_1032_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln147_reg_1323 <= icmp_ln147_fu_748_p2;
                icmp_ln147_reg_1323_pp0_iter1_reg <= icmp_ln147_reg_1323;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln147_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln148_reg_1332 <= icmp_ln148_fu_766_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln157_reg_1399 <= icmp_ln157_fu_982_p2;
                icmp_ln157_reg_1399_pp1_iter1_reg <= icmp_ln157_reg_1399;
                trunc_ln321_reg_1425_pp1_iter1_reg <= trunc_ln321_reg_1425;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln147_reg_1323 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                n_reg_1379 <= n_fu_927_p2;
                select_ln152_1_reg_1358 <= select_ln152_1_fu_891_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln147_reg_1323_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_1_reg_1394 <= src_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln147_fu_748_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln147_1_reg_1339 <= select_ln147_1_fu_772_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln157_reg_1399 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                select_ln161_1_reg_1439 <= select_ln161_1_fu_1069_p3;
                select_ln161_3_reg_1446 <= select_ln161_3_fu_1086_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                select_ln161_1_reg_1439_pp1_iter2_reg <= select_ln161_1_reg_1439;
                select_ln161_3_reg_1446_pp1_iter2_reg <= select_ln161_3_reg_1446;
                trunc_ln321_reg_1425_pp1_iter2_reg <= trunc_ln321_reg_1425_pp1_iter1_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln147_fu_748_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln157_fu_982_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln147_fu_748_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln147_fu_748_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln157_fu_982_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln157_fu_982_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln147_1_fu_754_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_634) + unsigned(ap_const_lv6_1));
    add_ln147_fu_804_p2 <= std_logic_vector(unsigned(zext_ln147_fu_801_p1) + unsigned(index));
    add_ln148_1_fu_780_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(indvar_flatten_reg_656));
    add_ln157_fu_988_p2 <= std_logic_vector(unsigned(indvar_flatten66_reg_691) + unsigned(ap_const_lv6_1));
    add_ln158_1_fu_1042_p2 <= std_logic_vector(unsigned(indvar_flatten52_reg_714) + unsigned(ap_const_lv5_1));
    add_ln161_1_fu_1136_p2 <= std_logic_vector(unsigned(zext_ln161_fu_1123_p1) + unsigned(sub_ln161_1_fu_1131_p2));
    add_ln161_fu_1117_p2 <= std_logic_vector(unsigned(zext_ln321_3_fu_1076_p1) + unsigned(sext_ln161_fu_1113_p1));
    add_ln321_1_fu_972_p2 <= std_logic_vector(unsigned(zext_ln647_fu_955_p1) + unsigned(sub_ln321_1_fu_950_p2));
    add_ln321_2_fu_1170_p2 <= std_logic_vector(unsigned(zext_ln161_1_fu_1167_p1) + unsigned(sub_ln321_2_fu_1161_p2));
    add_ln321_fu_921_p2 <= std_logic_vector(unsigned(zext_ln152_fu_899_p1) + unsigned(sext_ln321_fu_851_p1));
    add_ln647_1_fu_961_p2 <= std_logic_vector(unsigned(zext_ln647_1_fu_958_p1) + unsigned(sub_ln647_1_fu_940_p2));
    add_ln647_fu_907_p2 <= std_logic_vector(unsigned(zext_ln152_1_fu_903_p1) + unsigned(sub_ln647_fu_825_p2));
    and_ln147_fu_866_p2 <= (xor_ln147_fu_855_p2 and icmp_ln149_fu_860_p2);
    and_ln161_fu_1012_p2 <= (xor_ln161_fu_1000_p2 and icmp_ln159_fu_1006_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln147_fu_748_p2)
    begin
        if ((icmp_ln147_fu_748_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state8_assign_proc : process(icmp_ln157_fu_982_p2)
    begin
        if ((icmp_ln157_fu_982_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_cc_0_phi_fu_649_p4_assign_proc : process(cc_0_reg_645, icmp_ln147_reg_1323, ap_CS_fsm_pp0_stage0, select_ln147_1_reg_1339, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln147_reg_1323 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_cc_0_phi_fu_649_p4 <= select_ln147_1_reg_1339;
        else 
            ap_phi_mux_cc_0_phi_fu_649_p4 <= cc_0_reg_645;
        end if; 
    end process;


    ap_phi_mux_m7_0_phi_fu_706_p4_assign_proc : process(m7_0_reg_702, icmp_ln157_reg_1399_pp1_iter1_reg, select_ln161_1_reg_1439, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln157_reg_1399_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_m7_0_phi_fu_706_p4 <= select_ln161_1_reg_1439;
        else 
            ap_phi_mux_m7_0_phi_fu_706_p4 <= m7_0_reg_702;
        end if; 
    end process;


    ap_phi_mux_m_0_phi_fu_671_p4_assign_proc : process(m_0_reg_667, icmp_ln147_reg_1323_pp0_iter1_reg, select_ln152_1_reg_1358, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln147_reg_1323_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_m_0_phi_fu_671_p4 <= select_ln152_1_reg_1358;
        else 
            ap_phi_mux_m_0_phi_fu_671_p4 <= m_0_reg_667;
        end if; 
    end process;


    ap_phi_mux_n8_0_phi_fu_729_p4_assign_proc : process(n8_0_reg_725, icmp_ln157_reg_1399_pp1_iter1_reg, select_ln161_3_reg_1446, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln157_reg_1399_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_n8_0_phi_fu_729_p4 <= select_ln161_3_reg_1446;
        else 
            ap_phi_mux_n8_0_phi_fu_729_p4 <= n8_0_reg_725;
        end if; 
    end process;


    ap_phi_mux_n_0_phi_fu_683_p4_assign_proc : process(n_0_reg_679, icmp_ln147_reg_1323_pp0_iter1_reg, n_reg_1379, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln147_reg_1323_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_n_0_phi_fu_683_p4 <= n_reg_1379;
        else 
            ap_phi_mux_n_0_phi_fu_683_p4 <= n_0_reg_679;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cc_1_fu_1036_p2 <= std_logic_vector(unsigned(select_ln161_2_fu_1024_p3) + unsigned(ap_const_lv3_1));
    cc_fu_760_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(ap_phi_mux_cc_0_phi_fu_649_p4));
    dest_0_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_0_V_ce0 <= ap_const_logic_1;
        else 
            dest_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_0_V_d0 <= trunc_ln647_2_fu_1212_p1;

    dest_0_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_0_V_we0 <= ap_const_logic_1;
        else 
            dest_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_10_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_10_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_10_V_ce0 <= ap_const_logic_1;
        else 
            dest_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_10_V_d0 <= src_buf_V_q0(191 downto 128);

    dest_10_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_10_V_we0 <= ap_const_logic_1;
        else 
            dest_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_11_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_11_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_11_V_ce0 <= ap_const_logic_1;
        else 
            dest_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_11_V_d0 <= src_buf_V_q0(255 downto 192);

    dest_11_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_11_V_we0 <= ap_const_logic_1;
        else 
            dest_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_12_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_12_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_12_V_ce0 <= ap_const_logic_1;
        else 
            dest_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_12_V_d0 <= src_buf_V_q0(319 downto 256);

    dest_12_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_12_V_we0 <= ap_const_logic_1;
        else 
            dest_12_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_13_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_13_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_13_V_ce0 <= ap_const_logic_1;
        else 
            dest_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_13_V_d0 <= src_buf_V_q0(383 downto 320);

    dest_13_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_13_V_we0 <= ap_const_logic_1;
        else 
            dest_13_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_14_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_14_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_14_V_ce0 <= ap_const_logic_1;
        else 
            dest_14_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_14_V_d0 <= src_buf_V_q0(447 downto 384);

    dest_14_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_14_V_we0 <= ap_const_logic_1;
        else 
            dest_14_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_15_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_15_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_15_V_ce0 <= ap_const_logic_1;
        else 
            dest_15_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_15_V_d0 <= src_buf_V_q0(511 downto 448);

    dest_15_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_15_V_we0 <= ap_const_logic_1;
        else 
            dest_15_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_16_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_16_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_16_V_ce0 <= ap_const_logic_1;
        else 
            dest_16_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_16_V_d0 <= trunc_ln647_2_fu_1212_p1;

    dest_16_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_16_V_we0 <= ap_const_logic_1;
        else 
            dest_16_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_17_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_17_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_17_V_ce0 <= ap_const_logic_1;
        else 
            dest_17_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_17_V_d0 <= src_buf_V_q0(127 downto 64);

    dest_17_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_17_V_we0 <= ap_const_logic_1;
        else 
            dest_17_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_18_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_18_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_18_V_ce0 <= ap_const_logic_1;
        else 
            dest_18_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_18_V_d0 <= src_buf_V_q0(191 downto 128);

    dest_18_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_18_V_we0 <= ap_const_logic_1;
        else 
            dest_18_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_19_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_19_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_19_V_ce0 <= ap_const_logic_1;
        else 
            dest_19_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_19_V_d0 <= src_buf_V_q0(255 downto 192);

    dest_19_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_19_V_we0 <= ap_const_logic_1;
        else 
            dest_19_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_1_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_1_V_ce0 <= ap_const_logic_1;
        else 
            dest_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_1_V_d0 <= src_buf_V_q0(127 downto 64);

    dest_1_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_1_V_we0 <= ap_const_logic_1;
        else 
            dest_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_20_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_20_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_20_V_ce0 <= ap_const_logic_1;
        else 
            dest_20_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_20_V_d0 <= src_buf_V_q0(319 downto 256);

    dest_20_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_20_V_we0 <= ap_const_logic_1;
        else 
            dest_20_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_21_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_21_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_21_V_ce0 <= ap_const_logic_1;
        else 
            dest_21_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_21_V_d0 <= src_buf_V_q0(383 downto 320);

    dest_21_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_21_V_we0 <= ap_const_logic_1;
        else 
            dest_21_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_22_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_22_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_22_V_ce0 <= ap_const_logic_1;
        else 
            dest_22_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_22_V_d0 <= src_buf_V_q0(447 downto 384);

    dest_22_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_22_V_we0 <= ap_const_logic_1;
        else 
            dest_22_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_23_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_23_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_23_V_ce0 <= ap_const_logic_1;
        else 
            dest_23_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_23_V_d0 <= src_buf_V_q0(511 downto 448);

    dest_23_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_23_V_we0 <= ap_const_logic_1;
        else 
            dest_23_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_24_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_24_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_24_V_ce0 <= ap_const_logic_1;
        else 
            dest_24_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_24_V_d0 <= trunc_ln647_2_fu_1212_p1;

    dest_24_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_24_V_we0 <= ap_const_logic_1;
        else 
            dest_24_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_25_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_25_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_25_V_ce0 <= ap_const_logic_1;
        else 
            dest_25_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_25_V_d0 <= src_buf_V_q0(127 downto 64);

    dest_25_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_25_V_we0 <= ap_const_logic_1;
        else 
            dest_25_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_26_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_26_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_26_V_ce0 <= ap_const_logic_1;
        else 
            dest_26_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_26_V_d0 <= src_buf_V_q0(191 downto 128);

    dest_26_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_26_V_we0 <= ap_const_logic_1;
        else 
            dest_26_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_27_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_27_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_27_V_ce0 <= ap_const_logic_1;
        else 
            dest_27_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_27_V_d0 <= src_buf_V_q0(255 downto 192);

    dest_27_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_27_V_we0 <= ap_const_logic_1;
        else 
            dest_27_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_28_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_28_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_28_V_ce0 <= ap_const_logic_1;
        else 
            dest_28_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_28_V_d0 <= src_buf_V_q0(319 downto 256);

    dest_28_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_28_V_we0 <= ap_const_logic_1;
        else 
            dest_28_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_29_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_29_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_29_V_ce0 <= ap_const_logic_1;
        else 
            dest_29_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_29_V_d0 <= src_buf_V_q0(383 downto 320);

    dest_29_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_29_V_we0 <= ap_const_logic_1;
        else 
            dest_29_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_2_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_2_V_ce0 <= ap_const_logic_1;
        else 
            dest_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_2_V_d0 <= src_buf_V_q0(191 downto 128);

    dest_2_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_2_V_we0 <= ap_const_logic_1;
        else 
            dest_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_30_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_30_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_30_V_ce0 <= ap_const_logic_1;
        else 
            dest_30_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_30_V_d0 <= src_buf_V_q0(447 downto 384);

    dest_30_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_30_V_we0 <= ap_const_logic_1;
        else 
            dest_30_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_31_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_31_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_31_V_ce0 <= ap_const_logic_1;
        else 
            dest_31_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_31_V_d0 <= src_buf_V_q0(511 downto 448);

    dest_31_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_31_V_we0 <= ap_const_logic_1;
        else 
            dest_31_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_3_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_3_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_3_V_ce0 <= ap_const_logic_1;
        else 
            dest_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_3_V_d0 <= src_buf_V_q0(255 downto 192);

    dest_3_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_3_V_we0 <= ap_const_logic_1;
        else 
            dest_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_4_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_4_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_4_V_ce0 <= ap_const_logic_1;
        else 
            dest_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_4_V_d0 <= src_buf_V_q0(319 downto 256);

    dest_4_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_4_V_we0 <= ap_const_logic_1;
        else 
            dest_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_5_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_5_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_5_V_ce0 <= ap_const_logic_1;
        else 
            dest_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_5_V_d0 <= src_buf_V_q0(383 downto 320);

    dest_5_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_5_V_we0 <= ap_const_logic_1;
        else 
            dest_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_6_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_6_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_6_V_ce0 <= ap_const_logic_1;
        else 
            dest_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_6_V_d0 <= src_buf_V_q0(447 downto 384);

    dest_6_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_6_V_we0 <= ap_const_logic_1;
        else 
            dest_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_7_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_7_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_7_V_ce0 <= ap_const_logic_1;
        else 
            dest_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_7_V_d0 <= src_buf_V_q0(511 downto 448);

    dest_7_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_7_V_we0 <= ap_const_logic_1;
        else 
            dest_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_8_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_8_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_8_V_ce0 <= ap_const_logic_1;
        else 
            dest_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_8_V_d0 <= trunc_ln647_2_fu_1212_p1;

    dest_8_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_8_V_we0 <= ap_const_logic_1;
        else 
            dest_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_9_V_address0 <= sext_ln321_1_fu_1176_p1(4 - 1 downto 0);

    dest_9_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_9_V_ce0 <= ap_const_logic_1;
        else 
            dest_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_9_V_d0 <= src_buf_V_q0(127 downto 64);

    dest_9_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, trunc_ln321_reg_1425_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((trunc_ln321_reg_1425_pp1_iter2_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            dest_9_V_we0 <= ap_const_logic_1;
        else 
            dest_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln147_fu_748_p2 <= "1" when (indvar_flatten13_reg_634 = ap_const_lv6_24) else "0";
    icmp_ln148_fu_766_p2 <= "1" when (indvar_flatten_reg_656 = ap_const_lv4_9) else "0";
    icmp_ln149_fu_860_p2 <= "1" when (ap_phi_mux_n_0_phi_fu_683_p4 = ap_const_lv2_3) else "0";
    icmp_ln157_fu_982_p2 <= "1" when (indvar_flatten66_reg_691 = ap_const_lv6_24) else "0";
    icmp_ln158_fu_994_p2 <= "1" when (indvar_flatten52_reg_714 = ap_const_lv5_C) else "0";
    icmp_ln159_fu_1006_p2 <= "1" when (cc9_0_reg_737 = ap_const_lv3_4) else "0";
    m_2_fu_872_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln147_fu_794_p3));
    m_fu_1056_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_m7_0_phi_fu_706_p4));
    n_2_fu_1080_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln161_fu_1062_p3));
    n_fu_927_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln152_fu_883_p3));
    or_ln152_fu_878_p2 <= (icmp_ln148_reg_1332 or and_ln147_fu_866_p2);
    or_ln161_fu_1018_p2 <= (icmp_ln158_fu_994_p2 or and_ln161_fu_1012_p2);
    p_shl1_cast_fu_933_p3 <= (trunc_ln647_1_reg_1368 & ap_const_lv2_0);
    select_ln147_1_fu_772_p3 <= 
        cc_fu_760_p2 when (icmp_ln148_fu_766_p2(0) = '1') else 
        ap_phi_mux_cc_0_phi_fu_649_p4;
    select_ln147_fu_794_p3 <= 
        ap_const_lv2_0 when (icmp_ln148_reg_1332(0) = '1') else 
        ap_phi_mux_m_0_phi_fu_671_p4;
    select_ln148_fu_786_p3 <= 
        ap_const_lv4_1 when (icmp_ln148_fu_766_p2(0) = '1') else 
        add_ln148_1_fu_780_p2;
    select_ln152_1_fu_891_p3 <= 
        m_2_fu_872_p2 when (and_ln147_fu_866_p2(0) = '1') else 
        select_ln147_fu_794_p3;
    select_ln152_fu_883_p3 <= 
        ap_const_lv2_0 when (or_ln152_fu_878_p2(0) = '1') else 
        ap_phi_mux_n_0_phi_fu_683_p4;
    select_ln158_fu_1048_p3 <= 
        ap_const_lv5_1 when (icmp_ln158_fu_994_p2(0) = '1') else 
        add_ln158_1_fu_1042_p2;
    select_ln161_1_fu_1069_p3 <= 
        m_fu_1056_p2 when (icmp_ln158_reg_1408(0) = '1') else 
        ap_phi_mux_m7_0_phi_fu_706_p4;
    select_ln161_2_fu_1024_p3 <= 
        ap_const_lv3_0 when (or_ln161_fu_1018_p2(0) = '1') else 
        cc9_0_reg_737;
    select_ln161_3_fu_1086_p3 <= 
        n_2_fu_1080_p2 when (and_ln161_reg_1414(0) = '1') else 
        select_ln161_fu_1062_p3;
    select_ln161_fu_1062_p3 <= 
        ap_const_lv2_0 when (icmp_ln158_reg_1408(0) = '1') else 
        ap_phi_mux_n8_0_phi_fu_729_p4;
        sext_ln161_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln161_fu_1107_p2),7));

        sext_ln321_1_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln321_2_fu_1170_p2),64));

        sext_ln321_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln321_fu_845_p2),7));

        sext_ln647_1_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_813_p3),35));

        sext_ln647_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln147_fu_804_p2),35));

    shl_ln161_fu_1126_p2 <= std_logic_vector(shift_left(unsigned(add_ln161_reg_1453),to_integer(unsigned('0' & ap_const_lv7_2(7-1 downto 0)))));
    shl_ln321_fu_945_p2 <= std_logic_vector(shift_left(unsigned(add_ln321_reg_1373),to_integer(unsigned('0' & ap_const_lv7_2(7-1 downto 0)))));
    src_V_address0 <= zext_ln647_2_fu_967_p1(14 - 1 downto 0);

    src_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            src_V_ce0 <= ap_const_logic_1;
        else 
            src_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    src_buf_V_address0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter2, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln321_2_fu_978_p1, zext_ln161_4_fu_1142_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            src_buf_V_address0 <= zext_ln161_4_fu_1142_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            src_buf_V_address0 <= zext_ln321_2_fu_978_p1(6 - 1 downto 0);
        else 
            src_buf_V_address0 <= "XXXXXX";
        end if; 
    end process;


    src_buf_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then 
            src_buf_V_ce0 <= ap_const_logic_1;
        else 
            src_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    src_buf_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln147_reg_1323_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((icmp_ln147_reg_1323_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            src_buf_V_we0 <= ap_const_logic_1;
        else 
            src_buf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln161_1_fu_1131_p2 <= std_logic_vector(unsigned(shl_ln161_fu_1126_p2) - unsigned(add_ln161_reg_1453));
    sub_ln161_fu_1107_p2 <= std_logic_vector(unsigned(zext_ln161_3_fu_1103_p1) - unsigned(zext_ln161_2_fu_1093_p1));
    sub_ln321_1_fu_950_p2 <= std_logic_vector(unsigned(shl_ln321_fu_945_p2) - unsigned(add_ln321_reg_1373));
    sub_ln321_2_fu_1161_p2 <= std_logic_vector(unsigned(zext_ln321_5_fu_1157_p1) - unsigned(zext_ln321_4_fu_1147_p1));
    sub_ln321_fu_845_p2 <= std_logic_vector(unsigned(zext_ln321_1_fu_841_p1) - unsigned(zext_ln321_fu_831_p1));
    sub_ln647_1_fu_940_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_933_p3) - unsigned(trunc_ln647_reg_1363));
    sub_ln647_fu_825_p2 <= std_logic_vector(signed(sext_ln647_1_fu_821_p1) - signed(sext_ln647_fu_809_p1));
    tmp_2_fu_813_p3 <= (add_ln147_fu_804_p2 & ap_const_lv2_0);
    tmp_3_fu_834_p3 <= (select_ln147_1_reg_1339 & ap_const_lv2_0);
    tmp_6_fu_1150_p3 <= (select_ln161_1_reg_1439_pp1_iter2_reg & ap_const_lv2_0);
    tmp_7_fu_1096_p3 <= (select_ln161_2_reg_1419 & ap_const_lv2_0);
    trunc_ln321_fu_1032_p1 <= select_ln161_2_fu_1024_p3(2 - 1 downto 0);
    trunc_ln647_1_fu_917_p1 <= add_ln647_fu_907_p2(13 - 1 downto 0);
    trunc_ln647_2_fu_1212_p1 <= src_buf_V_q0(64 - 1 downto 0);
    trunc_ln647_fu_913_p1 <= add_ln647_fu_907_p2(15 - 1 downto 0);
    xor_ln147_fu_855_p2 <= (icmp_ln148_reg_1332 xor ap_const_lv1_1);
    xor_ln161_fu_1000_p2 <= (icmp_ln158_fu_994_p2 xor ap_const_lv1_1);
    zext_ln147_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln147_1_reg_1339),32));
    zext_ln152_1_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln152_1_fu_891_p3),35));
    zext_ln152_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln152_1_fu_891_p3),7));
    zext_ln161_1_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln161_3_reg_1446_pp1_iter2_reg),5));
    zext_ln161_2_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln161_2_reg_1419),6));
    zext_ln161_3_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1096_p3),6));
    zext_ln161_4_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln161_1_fu_1136_p2),64));
    zext_ln161_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln161_3_reg_1446),7));
    zext_ln321_1_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_834_p3),6));
    zext_ln321_2_fu_978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_1_reg_1389_pp0_iter3_reg),64));
    zext_ln321_3_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln161_1_fu_1069_p3),7));
    zext_ln321_4_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln161_1_reg_1439_pp1_iter2_reg),5));
    zext_ln321_5_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1150_p3),5));
    zext_ln321_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln147_1_reg_1339),6));
    zext_ln647_1_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln152_reg_1352),15));
    zext_ln647_2_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln647_1_fu_961_p2),64));
    zext_ln647_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln152_reg_1352),7));
end behav;
