// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_weights_3x3_all (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_conv_weight_3x3_all_V_AWVALID,
        m_axi_conv_weight_3x3_all_V_AWREADY,
        m_axi_conv_weight_3x3_all_V_AWADDR,
        m_axi_conv_weight_3x3_all_V_AWID,
        m_axi_conv_weight_3x3_all_V_AWLEN,
        m_axi_conv_weight_3x3_all_V_AWSIZE,
        m_axi_conv_weight_3x3_all_V_AWBURST,
        m_axi_conv_weight_3x3_all_V_AWLOCK,
        m_axi_conv_weight_3x3_all_V_AWCACHE,
        m_axi_conv_weight_3x3_all_V_AWPROT,
        m_axi_conv_weight_3x3_all_V_AWQOS,
        m_axi_conv_weight_3x3_all_V_AWREGION,
        m_axi_conv_weight_3x3_all_V_AWUSER,
        m_axi_conv_weight_3x3_all_V_WVALID,
        m_axi_conv_weight_3x3_all_V_WREADY,
        m_axi_conv_weight_3x3_all_V_WDATA,
        m_axi_conv_weight_3x3_all_V_WSTRB,
        m_axi_conv_weight_3x3_all_V_WLAST,
        m_axi_conv_weight_3x3_all_V_WID,
        m_axi_conv_weight_3x3_all_V_WUSER,
        m_axi_conv_weight_3x3_all_V_ARVALID,
        m_axi_conv_weight_3x3_all_V_ARREADY,
        m_axi_conv_weight_3x3_all_V_ARADDR,
        m_axi_conv_weight_3x3_all_V_ARID,
        m_axi_conv_weight_3x3_all_V_ARLEN,
        m_axi_conv_weight_3x3_all_V_ARSIZE,
        m_axi_conv_weight_3x3_all_V_ARBURST,
        m_axi_conv_weight_3x3_all_V_ARLOCK,
        m_axi_conv_weight_3x3_all_V_ARCACHE,
        m_axi_conv_weight_3x3_all_V_ARPROT,
        m_axi_conv_weight_3x3_all_V_ARQOS,
        m_axi_conv_weight_3x3_all_V_ARREGION,
        m_axi_conv_weight_3x3_all_V_ARUSER,
        m_axi_conv_weight_3x3_all_V_RVALID,
        m_axi_conv_weight_3x3_all_V_RREADY,
        m_axi_conv_weight_3x3_all_V_RDATA,
        m_axi_conv_weight_3x3_all_V_RLAST,
        m_axi_conv_weight_3x3_all_V_RID,
        m_axi_conv_weight_3x3_all_V_RUSER,
        m_axi_conv_weight_3x3_all_V_RRESP,
        m_axi_conv_weight_3x3_all_V_BVALID,
        m_axi_conv_weight_3x3_all_V_BREADY,
        m_axi_conv_weight_3x3_all_V_BRESP,
        m_axi_conv_weight_3x3_all_V_BID,
        m_axi_conv_weight_3x3_all_V_BUSER,
        conv_weight_3x3_all_V_offset,
        weights_all_V_offset,
        weight_buf_3x3_V_0_0_8_i,
        weight_buf_3x3_V_0_0_8_o,
        weight_buf_3x3_V_0_0_8_o_ap_vld,
        weight_buf_3x3_V_0_0_7_i,
        weight_buf_3x3_V_0_0_7_o,
        weight_buf_3x3_V_0_0_7_o_ap_vld,
        weight_buf_3x3_V_0_0_6_i,
        weight_buf_3x3_V_0_0_6_o,
        weight_buf_3x3_V_0_0_6_o_ap_vld,
        weight_buf_3x3_V_0_0_5_i,
        weight_buf_3x3_V_0_0_5_o,
        weight_buf_3x3_V_0_0_5_o_ap_vld,
        weight_buf_3x3_V_0_0_4_i,
        weight_buf_3x3_V_0_0_4_o,
        weight_buf_3x3_V_0_0_4_o_ap_vld,
        weight_buf_3x3_V_0_0_3_i,
        weight_buf_3x3_V_0_0_3_o,
        weight_buf_3x3_V_0_0_3_o_ap_vld,
        weight_buf_3x3_V_0_0_2_i,
        weight_buf_3x3_V_0_0_2_o,
        weight_buf_3x3_V_0_0_2_o_ap_vld,
        weight_buf_3x3_V_0_0_1_i,
        weight_buf_3x3_V_0_0_1_o,
        weight_buf_3x3_V_0_0_1_o_ap_vld,
        weight_buf_3x3_V_0_0_i,
        weight_buf_3x3_V_0_0_o,
        weight_buf_3x3_V_0_0_o_ap_vld,
        weight_buf_3x3_V_0_1_98_i,
        weight_buf_3x3_V_0_1_98_o,
        weight_buf_3x3_V_0_1_98_o_ap_vld,
        weight_buf_3x3_V_0_1_97_i,
        weight_buf_3x3_V_0_1_97_o,
        weight_buf_3x3_V_0_1_97_o_ap_vld,
        weight_buf_3x3_V_0_1_96_i,
        weight_buf_3x3_V_0_1_96_o,
        weight_buf_3x3_V_0_1_96_o_ap_vld,
        weight_buf_3x3_V_0_1_95_i,
        weight_buf_3x3_V_0_1_95_o,
        weight_buf_3x3_V_0_1_95_o_ap_vld,
        weight_buf_3x3_V_0_1_94_i,
        weight_buf_3x3_V_0_1_94_o,
        weight_buf_3x3_V_0_1_94_o_ap_vld,
        weight_buf_3x3_V_0_1_93_i,
        weight_buf_3x3_V_0_1_93_o,
        weight_buf_3x3_V_0_1_93_o_ap_vld,
        weight_buf_3x3_V_0_1_92_i,
        weight_buf_3x3_V_0_1_92_o,
        weight_buf_3x3_V_0_1_92_o_ap_vld,
        weight_buf_3x3_V_0_1_91_i,
        weight_buf_3x3_V_0_1_91_o,
        weight_buf_3x3_V_0_1_91_o_ap_vld,
        weight_buf_3x3_V_0_1_90_i,
        weight_buf_3x3_V_0_1_90_o,
        weight_buf_3x3_V_0_1_90_o_ap_vld,
        weight_buf_3x3_V_0_2_98_i,
        weight_buf_3x3_V_0_2_98_o,
        weight_buf_3x3_V_0_2_98_o_ap_vld,
        weight_buf_3x3_V_0_2_97_i,
        weight_buf_3x3_V_0_2_97_o,
        weight_buf_3x3_V_0_2_97_o_ap_vld,
        weight_buf_3x3_V_0_2_96_i,
        weight_buf_3x3_V_0_2_96_o,
        weight_buf_3x3_V_0_2_96_o_ap_vld,
        weight_buf_3x3_V_0_2_95_i,
        weight_buf_3x3_V_0_2_95_o,
        weight_buf_3x3_V_0_2_95_o_ap_vld,
        weight_buf_3x3_V_0_2_94_i,
        weight_buf_3x3_V_0_2_94_o,
        weight_buf_3x3_V_0_2_94_o_ap_vld,
        weight_buf_3x3_V_0_2_93_i,
        weight_buf_3x3_V_0_2_93_o,
        weight_buf_3x3_V_0_2_93_o_ap_vld,
        weight_buf_3x3_V_0_2_92_i,
        weight_buf_3x3_V_0_2_92_o,
        weight_buf_3x3_V_0_2_92_o_ap_vld,
        weight_buf_3x3_V_0_2_91_i,
        weight_buf_3x3_V_0_2_91_o,
        weight_buf_3x3_V_0_2_91_o_ap_vld,
        weight_buf_3x3_V_0_2_90_i,
        weight_buf_3x3_V_0_2_90_o,
        weight_buf_3x3_V_0_2_90_o_ap_vld,
        weight_buf_3x3_V_0_3_26_i,
        weight_buf_3x3_V_0_3_26_o,
        weight_buf_3x3_V_0_3_26_o_ap_vld,
        weight_buf_3x3_V_0_3_25_i,
        weight_buf_3x3_V_0_3_25_o,
        weight_buf_3x3_V_0_3_25_o_ap_vld,
        weight_buf_3x3_V_0_3_24_i,
        weight_buf_3x3_V_0_3_24_o,
        weight_buf_3x3_V_0_3_24_o_ap_vld,
        weight_buf_3x3_V_0_3_23_i,
        weight_buf_3x3_V_0_3_23_o,
        weight_buf_3x3_V_0_3_23_o_ap_vld,
        weight_buf_3x3_V_0_3_22_i,
        weight_buf_3x3_V_0_3_22_o,
        weight_buf_3x3_V_0_3_22_o_ap_vld,
        weight_buf_3x3_V_0_3_21_i,
        weight_buf_3x3_V_0_3_21_o,
        weight_buf_3x3_V_0_3_21_o_ap_vld,
        weight_buf_3x3_V_0_3_20_i,
        weight_buf_3x3_V_0_3_20_o,
        weight_buf_3x3_V_0_3_20_o_ap_vld,
        weight_buf_3x3_V_0_3_19_i,
        weight_buf_3x3_V_0_3_19_o,
        weight_buf_3x3_V_0_3_19_o_ap_vld,
        weight_buf_3x3_V_0_3_18_i,
        weight_buf_3x3_V_0_3_18_o,
        weight_buf_3x3_V_0_3_18_o_ap_vld,
        weight_buf_3x3_V_0_4_8_i,
        weight_buf_3x3_V_0_4_8_o,
        weight_buf_3x3_V_0_4_8_o_ap_vld,
        weight_buf_3x3_V_0_4_7_i,
        weight_buf_3x3_V_0_4_7_o,
        weight_buf_3x3_V_0_4_7_o_ap_vld,
        weight_buf_3x3_V_0_4_6_i,
        weight_buf_3x3_V_0_4_6_o,
        weight_buf_3x3_V_0_4_6_o_ap_vld,
        weight_buf_3x3_V_0_4_5_i,
        weight_buf_3x3_V_0_4_5_o,
        weight_buf_3x3_V_0_4_5_o_ap_vld,
        weight_buf_3x3_V_0_4_4_i,
        weight_buf_3x3_V_0_4_4_o,
        weight_buf_3x3_V_0_4_4_o_ap_vld,
        weight_buf_3x3_V_0_4_3_i,
        weight_buf_3x3_V_0_4_3_o,
        weight_buf_3x3_V_0_4_3_o_ap_vld,
        weight_buf_3x3_V_0_4_2_i,
        weight_buf_3x3_V_0_4_2_o,
        weight_buf_3x3_V_0_4_2_o_ap_vld,
        weight_buf_3x3_V_0_4_1_i,
        weight_buf_3x3_V_0_4_1_o,
        weight_buf_3x3_V_0_4_1_o_ap_vld,
        weight_buf_3x3_V_0_4_i,
        weight_buf_3x3_V_0_4_o,
        weight_buf_3x3_V_0_4_o_ap_vld,
        weight_buf_3x3_V_0_5_8_i,
        weight_buf_3x3_V_0_5_8_o,
        weight_buf_3x3_V_0_5_8_o_ap_vld,
        weight_buf_3x3_V_0_5_7_i,
        weight_buf_3x3_V_0_5_7_o,
        weight_buf_3x3_V_0_5_7_o_ap_vld,
        weight_buf_3x3_V_0_5_6_i,
        weight_buf_3x3_V_0_5_6_o,
        weight_buf_3x3_V_0_5_6_o_ap_vld,
        weight_buf_3x3_V_0_5_5_i,
        weight_buf_3x3_V_0_5_5_o,
        weight_buf_3x3_V_0_5_5_o_ap_vld,
        weight_buf_3x3_V_0_5_4_i,
        weight_buf_3x3_V_0_5_4_o,
        weight_buf_3x3_V_0_5_4_o_ap_vld,
        weight_buf_3x3_V_0_5_3_i,
        weight_buf_3x3_V_0_5_3_o,
        weight_buf_3x3_V_0_5_3_o_ap_vld,
        weight_buf_3x3_V_0_5_2_i,
        weight_buf_3x3_V_0_5_2_o,
        weight_buf_3x3_V_0_5_2_o_ap_vld,
        weight_buf_3x3_V_0_5_1_i,
        weight_buf_3x3_V_0_5_1_o,
        weight_buf_3x3_V_0_5_1_o_ap_vld,
        weight_buf_3x3_V_0_5_i,
        weight_buf_3x3_V_0_5_o,
        weight_buf_3x3_V_0_5_o_ap_vld,
        weight_buf_3x3_V_0_6_8_i,
        weight_buf_3x3_V_0_6_8_o,
        weight_buf_3x3_V_0_6_8_o_ap_vld,
        weight_buf_3x3_V_0_6_7_i,
        weight_buf_3x3_V_0_6_7_o,
        weight_buf_3x3_V_0_6_7_o_ap_vld,
        weight_buf_3x3_V_0_6_6_i,
        weight_buf_3x3_V_0_6_6_o,
        weight_buf_3x3_V_0_6_6_o_ap_vld,
        weight_buf_3x3_V_0_6_5_i,
        weight_buf_3x3_V_0_6_5_o,
        weight_buf_3x3_V_0_6_5_o_ap_vld,
        weight_buf_3x3_V_0_6_4_i,
        weight_buf_3x3_V_0_6_4_o,
        weight_buf_3x3_V_0_6_4_o_ap_vld,
        weight_buf_3x3_V_0_6_3_i,
        weight_buf_3x3_V_0_6_3_o,
        weight_buf_3x3_V_0_6_3_o_ap_vld,
        weight_buf_3x3_V_0_6_2_i,
        weight_buf_3x3_V_0_6_2_o,
        weight_buf_3x3_V_0_6_2_o_ap_vld,
        weight_buf_3x3_V_0_6_1_i,
        weight_buf_3x3_V_0_6_1_o,
        weight_buf_3x3_V_0_6_1_o_ap_vld,
        weight_buf_3x3_V_0_6_i,
        weight_buf_3x3_V_0_6_o,
        weight_buf_3x3_V_0_6_o_ap_vld,
        weight_buf_3x3_V_0_7_8_i,
        weight_buf_3x3_V_0_7_8_o,
        weight_buf_3x3_V_0_7_8_o_ap_vld,
        weight_buf_3x3_V_0_7_7_i,
        weight_buf_3x3_V_0_7_7_o,
        weight_buf_3x3_V_0_7_7_o_ap_vld,
        weight_buf_3x3_V_0_7_6_i,
        weight_buf_3x3_V_0_7_6_o,
        weight_buf_3x3_V_0_7_6_o_ap_vld,
        weight_buf_3x3_V_0_7_5_i,
        weight_buf_3x3_V_0_7_5_o,
        weight_buf_3x3_V_0_7_5_o_ap_vld,
        weight_buf_3x3_V_0_7_4_i,
        weight_buf_3x3_V_0_7_4_o,
        weight_buf_3x3_V_0_7_4_o_ap_vld,
        weight_buf_3x3_V_0_7_3_i,
        weight_buf_3x3_V_0_7_3_o,
        weight_buf_3x3_V_0_7_3_o_ap_vld,
        weight_buf_3x3_V_0_7_2_i,
        weight_buf_3x3_V_0_7_2_o,
        weight_buf_3x3_V_0_7_2_o_ap_vld,
        weight_buf_3x3_V_0_7_1_i,
        weight_buf_3x3_V_0_7_1_o,
        weight_buf_3x3_V_0_7_1_o_ap_vld,
        weight_buf_3x3_V_0_7_i,
        weight_buf_3x3_V_0_7_o,
        weight_buf_3x3_V_0_7_o_ap_vld,
        weight_buf_3x3_V_0_8_8_i,
        weight_buf_3x3_V_0_8_8_o,
        weight_buf_3x3_V_0_8_8_o_ap_vld,
        weight_buf_3x3_V_0_8_7_i,
        weight_buf_3x3_V_0_8_7_o,
        weight_buf_3x3_V_0_8_7_o_ap_vld,
        weight_buf_3x3_V_0_8_6_i,
        weight_buf_3x3_V_0_8_6_o,
        weight_buf_3x3_V_0_8_6_o_ap_vld,
        weight_buf_3x3_V_0_8_5_i,
        weight_buf_3x3_V_0_8_5_o,
        weight_buf_3x3_V_0_8_5_o_ap_vld,
        weight_buf_3x3_V_0_8_4_i,
        weight_buf_3x3_V_0_8_4_o,
        weight_buf_3x3_V_0_8_4_o_ap_vld,
        weight_buf_3x3_V_0_8_3_i,
        weight_buf_3x3_V_0_8_3_o,
        weight_buf_3x3_V_0_8_3_o_ap_vld,
        weight_buf_3x3_V_0_8_2_i,
        weight_buf_3x3_V_0_8_2_o,
        weight_buf_3x3_V_0_8_2_o_ap_vld,
        weight_buf_3x3_V_0_8_1_i,
        weight_buf_3x3_V_0_8_1_o,
        weight_buf_3x3_V_0_8_1_o_ap_vld,
        weight_buf_3x3_V_0_8_i,
        weight_buf_3x3_V_0_8_o,
        weight_buf_3x3_V_0_8_o_ap_vld,
        weight_buf_3x3_V_0_9_8_i,
        weight_buf_3x3_V_0_9_8_o,
        weight_buf_3x3_V_0_9_8_o_ap_vld,
        weight_buf_3x3_V_0_9_7_i,
        weight_buf_3x3_V_0_9_7_o,
        weight_buf_3x3_V_0_9_7_o_ap_vld,
        weight_buf_3x3_V_0_9_6_i,
        weight_buf_3x3_V_0_9_6_o,
        weight_buf_3x3_V_0_9_6_o_ap_vld,
        weight_buf_3x3_V_0_9_5_i,
        weight_buf_3x3_V_0_9_5_o,
        weight_buf_3x3_V_0_9_5_o_ap_vld,
        weight_buf_3x3_V_0_9_4_i,
        weight_buf_3x3_V_0_9_4_o,
        weight_buf_3x3_V_0_9_4_o_ap_vld,
        weight_buf_3x3_V_0_9_3_i,
        weight_buf_3x3_V_0_9_3_o,
        weight_buf_3x3_V_0_9_3_o_ap_vld,
        weight_buf_3x3_V_0_9_2_i,
        weight_buf_3x3_V_0_9_2_o,
        weight_buf_3x3_V_0_9_2_o_ap_vld,
        weight_buf_3x3_V_0_9_1_i,
        weight_buf_3x3_V_0_9_1_o,
        weight_buf_3x3_V_0_9_1_o_ap_vld,
        weight_buf_3x3_V_0_9_i,
        weight_buf_3x3_V_0_9_o,
        weight_buf_3x3_V_0_9_o_ap_vld,
        weight_buf_3x3_V_0_1_89_i,
        weight_buf_3x3_V_0_1_89_o,
        weight_buf_3x3_V_0_1_89_o_ap_vld,
        weight_buf_3x3_V_0_1_88_i,
        weight_buf_3x3_V_0_1_88_o,
        weight_buf_3x3_V_0_1_88_o_ap_vld,
        weight_buf_3x3_V_0_1_87_i,
        weight_buf_3x3_V_0_1_87_o,
        weight_buf_3x3_V_0_1_87_o_ap_vld,
        weight_buf_3x3_V_0_1_86_i,
        weight_buf_3x3_V_0_1_86_o,
        weight_buf_3x3_V_0_1_86_o_ap_vld,
        weight_buf_3x3_V_0_1_85_i,
        weight_buf_3x3_V_0_1_85_o,
        weight_buf_3x3_V_0_1_85_o_ap_vld,
        weight_buf_3x3_V_0_1_84_i,
        weight_buf_3x3_V_0_1_84_o,
        weight_buf_3x3_V_0_1_84_o_ap_vld,
        weight_buf_3x3_V_0_1_83_i,
        weight_buf_3x3_V_0_1_83_o,
        weight_buf_3x3_V_0_1_83_o_ap_vld,
        weight_buf_3x3_V_0_1_82_i,
        weight_buf_3x3_V_0_1_82_o,
        weight_buf_3x3_V_0_1_82_o_ap_vld,
        weight_buf_3x3_V_0_1_81_i,
        weight_buf_3x3_V_0_1_81_o,
        weight_buf_3x3_V_0_1_81_o_ap_vld,
        weight_buf_3x3_V_0_1_80_i,
        weight_buf_3x3_V_0_1_80_o,
        weight_buf_3x3_V_0_1_80_o_ap_vld,
        weight_buf_3x3_V_0_1_79_i,
        weight_buf_3x3_V_0_1_79_o,
        weight_buf_3x3_V_0_1_79_o_ap_vld,
        weight_buf_3x3_V_0_1_78_i,
        weight_buf_3x3_V_0_1_78_o,
        weight_buf_3x3_V_0_1_78_o_ap_vld,
        weight_buf_3x3_V_0_1_77_i,
        weight_buf_3x3_V_0_1_77_o,
        weight_buf_3x3_V_0_1_77_o_ap_vld,
        weight_buf_3x3_V_0_1_76_i,
        weight_buf_3x3_V_0_1_76_o,
        weight_buf_3x3_V_0_1_76_o_ap_vld,
        weight_buf_3x3_V_0_1_75_i,
        weight_buf_3x3_V_0_1_75_o,
        weight_buf_3x3_V_0_1_75_o_ap_vld,
        weight_buf_3x3_V_0_1_74_i,
        weight_buf_3x3_V_0_1_74_o,
        weight_buf_3x3_V_0_1_74_o_ap_vld,
        weight_buf_3x3_V_0_1_73_i,
        weight_buf_3x3_V_0_1_73_o,
        weight_buf_3x3_V_0_1_73_o_ap_vld,
        weight_buf_3x3_V_0_1_72_i,
        weight_buf_3x3_V_0_1_72_o,
        weight_buf_3x3_V_0_1_72_o_ap_vld,
        weight_buf_3x3_V_0_1_71_i,
        weight_buf_3x3_V_0_1_71_o,
        weight_buf_3x3_V_0_1_71_o_ap_vld,
        weight_buf_3x3_V_0_1_70_i,
        weight_buf_3x3_V_0_1_70_o,
        weight_buf_3x3_V_0_1_70_o_ap_vld,
        weight_buf_3x3_V_0_1_69_i,
        weight_buf_3x3_V_0_1_69_o,
        weight_buf_3x3_V_0_1_69_o_ap_vld,
        weight_buf_3x3_V_0_1_68_i,
        weight_buf_3x3_V_0_1_68_o,
        weight_buf_3x3_V_0_1_68_o_ap_vld,
        weight_buf_3x3_V_0_1_67_i,
        weight_buf_3x3_V_0_1_67_o,
        weight_buf_3x3_V_0_1_67_o_ap_vld,
        weight_buf_3x3_V_0_1_66_i,
        weight_buf_3x3_V_0_1_66_o,
        weight_buf_3x3_V_0_1_66_o_ap_vld,
        weight_buf_3x3_V_0_1_65_i,
        weight_buf_3x3_V_0_1_65_o,
        weight_buf_3x3_V_0_1_65_o_ap_vld,
        weight_buf_3x3_V_0_1_64_i,
        weight_buf_3x3_V_0_1_64_o,
        weight_buf_3x3_V_0_1_64_o_ap_vld,
        weight_buf_3x3_V_0_1_63_i,
        weight_buf_3x3_V_0_1_63_o,
        weight_buf_3x3_V_0_1_63_o_ap_vld,
        weight_buf_3x3_V_0_1_62_i,
        weight_buf_3x3_V_0_1_62_o,
        weight_buf_3x3_V_0_1_62_o_ap_vld,
        weight_buf_3x3_V_0_1_61_i,
        weight_buf_3x3_V_0_1_61_o,
        weight_buf_3x3_V_0_1_61_o_ap_vld,
        weight_buf_3x3_V_0_1_60_i,
        weight_buf_3x3_V_0_1_60_o,
        weight_buf_3x3_V_0_1_60_o_ap_vld,
        weight_buf_3x3_V_0_1_59_i,
        weight_buf_3x3_V_0_1_59_o,
        weight_buf_3x3_V_0_1_59_o_ap_vld,
        weight_buf_3x3_V_0_1_58_i,
        weight_buf_3x3_V_0_1_58_o,
        weight_buf_3x3_V_0_1_58_o_ap_vld,
        weight_buf_3x3_V_0_1_57_i,
        weight_buf_3x3_V_0_1_57_o,
        weight_buf_3x3_V_0_1_57_o_ap_vld,
        weight_buf_3x3_V_0_1_56_i,
        weight_buf_3x3_V_0_1_56_o,
        weight_buf_3x3_V_0_1_56_o_ap_vld,
        weight_buf_3x3_V_0_1_55_i,
        weight_buf_3x3_V_0_1_55_o,
        weight_buf_3x3_V_0_1_55_o_ap_vld,
        weight_buf_3x3_V_0_1_54_i,
        weight_buf_3x3_V_0_1_54_o,
        weight_buf_3x3_V_0_1_54_o_ap_vld,
        weight_buf_3x3_V_0_1_53_i,
        weight_buf_3x3_V_0_1_53_o,
        weight_buf_3x3_V_0_1_53_o_ap_vld,
        weight_buf_3x3_V_0_1_52_i,
        weight_buf_3x3_V_0_1_52_o,
        weight_buf_3x3_V_0_1_52_o_ap_vld,
        weight_buf_3x3_V_0_1_51_i,
        weight_buf_3x3_V_0_1_51_o,
        weight_buf_3x3_V_0_1_51_o_ap_vld,
        weight_buf_3x3_V_0_1_50_i,
        weight_buf_3x3_V_0_1_50_o,
        weight_buf_3x3_V_0_1_50_o_ap_vld,
        weight_buf_3x3_V_0_1_49_i,
        weight_buf_3x3_V_0_1_49_o,
        weight_buf_3x3_V_0_1_49_o_ap_vld,
        weight_buf_3x3_V_0_1_48_i,
        weight_buf_3x3_V_0_1_48_o,
        weight_buf_3x3_V_0_1_48_o_ap_vld,
        weight_buf_3x3_V_0_1_47_i,
        weight_buf_3x3_V_0_1_47_o,
        weight_buf_3x3_V_0_1_47_o_ap_vld,
        weight_buf_3x3_V_0_1_46_i,
        weight_buf_3x3_V_0_1_46_o,
        weight_buf_3x3_V_0_1_46_o_ap_vld,
        weight_buf_3x3_V_0_1_45_i,
        weight_buf_3x3_V_0_1_45_o,
        weight_buf_3x3_V_0_1_45_o_ap_vld,
        weight_buf_3x3_V_0_1_44_i,
        weight_buf_3x3_V_0_1_44_o,
        weight_buf_3x3_V_0_1_44_o_ap_vld,
        weight_buf_3x3_V_0_1_43_i,
        weight_buf_3x3_V_0_1_43_o,
        weight_buf_3x3_V_0_1_43_o_ap_vld,
        weight_buf_3x3_V_0_1_42_i,
        weight_buf_3x3_V_0_1_42_o,
        weight_buf_3x3_V_0_1_42_o_ap_vld,
        weight_buf_3x3_V_0_1_41_i,
        weight_buf_3x3_V_0_1_41_o,
        weight_buf_3x3_V_0_1_41_o_ap_vld,
        weight_buf_3x3_V_0_1_40_i,
        weight_buf_3x3_V_0_1_40_o,
        weight_buf_3x3_V_0_1_40_o_ap_vld,
        weight_buf_3x3_V_0_1_39_i,
        weight_buf_3x3_V_0_1_39_o,
        weight_buf_3x3_V_0_1_39_o_ap_vld,
        weight_buf_3x3_V_0_1_38_i,
        weight_buf_3x3_V_0_1_38_o,
        weight_buf_3x3_V_0_1_38_o_ap_vld,
        weight_buf_3x3_V_0_1_37_i,
        weight_buf_3x3_V_0_1_37_o,
        weight_buf_3x3_V_0_1_37_o_ap_vld,
        weight_buf_3x3_V_0_1_36_i,
        weight_buf_3x3_V_0_1_36_o,
        weight_buf_3x3_V_0_1_36_o_ap_vld,
        weight_buf_3x3_V_0_1_35_i,
        weight_buf_3x3_V_0_1_35_o,
        weight_buf_3x3_V_0_1_35_o_ap_vld,
        weight_buf_3x3_V_0_1_34_i,
        weight_buf_3x3_V_0_1_34_o,
        weight_buf_3x3_V_0_1_34_o_ap_vld,
        weight_buf_3x3_V_0_1_33_i,
        weight_buf_3x3_V_0_1_33_o,
        weight_buf_3x3_V_0_1_33_o_ap_vld,
        weight_buf_3x3_V_0_1_32_i,
        weight_buf_3x3_V_0_1_32_o,
        weight_buf_3x3_V_0_1_32_o_ap_vld,
        weight_buf_3x3_V_0_1_31_i,
        weight_buf_3x3_V_0_1_31_o,
        weight_buf_3x3_V_0_1_31_o_ap_vld,
        weight_buf_3x3_V_0_1_30_i,
        weight_buf_3x3_V_0_1_30_o,
        weight_buf_3x3_V_0_1_30_o_ap_vld,
        weight_buf_3x3_V_0_1_29_i,
        weight_buf_3x3_V_0_1_29_o,
        weight_buf_3x3_V_0_1_29_o_ap_vld,
        weight_buf_3x3_V_0_1_28_i,
        weight_buf_3x3_V_0_1_28_o,
        weight_buf_3x3_V_0_1_28_o_ap_vld,
        weight_buf_3x3_V_0_1_27_i,
        weight_buf_3x3_V_0_1_27_o,
        weight_buf_3x3_V_0_1_27_o_ap_vld,
        weight_buf_3x3_V_0_1_26_i,
        weight_buf_3x3_V_0_1_26_o,
        weight_buf_3x3_V_0_1_26_o_ap_vld,
        weight_buf_3x3_V_0_1_25_i,
        weight_buf_3x3_V_0_1_25_o,
        weight_buf_3x3_V_0_1_25_o_ap_vld,
        weight_buf_3x3_V_0_1_24_i,
        weight_buf_3x3_V_0_1_24_o,
        weight_buf_3x3_V_0_1_24_o_ap_vld,
        weight_buf_3x3_V_0_1_23_i,
        weight_buf_3x3_V_0_1_23_o,
        weight_buf_3x3_V_0_1_23_o_ap_vld,
        weight_buf_3x3_V_0_1_22_i,
        weight_buf_3x3_V_0_1_22_o,
        weight_buf_3x3_V_0_1_22_o_ap_vld,
        weight_buf_3x3_V_0_1_21_i,
        weight_buf_3x3_V_0_1_21_o,
        weight_buf_3x3_V_0_1_21_o_ap_vld,
        weight_buf_3x3_V_0_1_20_i,
        weight_buf_3x3_V_0_1_20_o,
        weight_buf_3x3_V_0_1_20_o_ap_vld,
        weight_buf_3x3_V_0_1_19_i,
        weight_buf_3x3_V_0_1_19_o,
        weight_buf_3x3_V_0_1_19_o_ap_vld,
        weight_buf_3x3_V_0_1_18_i,
        weight_buf_3x3_V_0_1_18_o,
        weight_buf_3x3_V_0_1_18_o_ap_vld,
        weight_buf_3x3_V_0_1_17_i,
        weight_buf_3x3_V_0_1_17_o,
        weight_buf_3x3_V_0_1_17_o_ap_vld,
        weight_buf_3x3_V_0_1_16_i,
        weight_buf_3x3_V_0_1_16_o,
        weight_buf_3x3_V_0_1_16_o_ap_vld,
        weight_buf_3x3_V_0_1_15_i,
        weight_buf_3x3_V_0_1_15_o,
        weight_buf_3x3_V_0_1_15_o_ap_vld,
        weight_buf_3x3_V_0_1_14_i,
        weight_buf_3x3_V_0_1_14_o,
        weight_buf_3x3_V_0_1_14_o_ap_vld,
        weight_buf_3x3_V_0_1_13_i,
        weight_buf_3x3_V_0_1_13_o,
        weight_buf_3x3_V_0_1_13_o_ap_vld,
        weight_buf_3x3_V_0_1_12_i,
        weight_buf_3x3_V_0_1_12_o,
        weight_buf_3x3_V_0_1_12_o_ap_vld,
        weight_buf_3x3_V_0_1_11_i,
        weight_buf_3x3_V_0_1_11_o,
        weight_buf_3x3_V_0_1_11_o_ap_vld,
        weight_buf_3x3_V_0_1_10_i,
        weight_buf_3x3_V_0_1_10_o,
        weight_buf_3x3_V_0_1_10_o_ap_vld,
        weight_buf_3x3_V_0_1_9_i,
        weight_buf_3x3_V_0_1_9_o,
        weight_buf_3x3_V_0_1_9_o_ap_vld,
        weight_buf_3x3_V_0_1_8_i,
        weight_buf_3x3_V_0_1_8_o,
        weight_buf_3x3_V_0_1_8_o_ap_vld,
        weight_buf_3x3_V_0_1_7_i,
        weight_buf_3x3_V_0_1_7_o,
        weight_buf_3x3_V_0_1_7_o_ap_vld,
        weight_buf_3x3_V_0_1_6_i,
        weight_buf_3x3_V_0_1_6_o,
        weight_buf_3x3_V_0_1_6_o_ap_vld,
        weight_buf_3x3_V_0_1_5_i,
        weight_buf_3x3_V_0_1_5_o,
        weight_buf_3x3_V_0_1_5_o_ap_vld,
        weight_buf_3x3_V_0_1_4_i,
        weight_buf_3x3_V_0_1_4_o,
        weight_buf_3x3_V_0_1_4_o_ap_vld,
        weight_buf_3x3_V_0_1_3_i,
        weight_buf_3x3_V_0_1_3_o,
        weight_buf_3x3_V_0_1_3_o_ap_vld,
        weight_buf_3x3_V_0_1_2_i,
        weight_buf_3x3_V_0_1_2_o,
        weight_buf_3x3_V_0_1_2_o_ap_vld,
        weight_buf_3x3_V_0_1_1_i,
        weight_buf_3x3_V_0_1_1_o,
        weight_buf_3x3_V_0_1_1_o_ap_vld,
        weight_buf_3x3_V_0_1_i,
        weight_buf_3x3_V_0_1_o,
        weight_buf_3x3_V_0_1_o_ap_vld,
        weight_buf_3x3_V_0_2_89_i,
        weight_buf_3x3_V_0_2_89_o,
        weight_buf_3x3_V_0_2_89_o_ap_vld,
        weight_buf_3x3_V_0_2_88_i,
        weight_buf_3x3_V_0_2_88_o,
        weight_buf_3x3_V_0_2_88_o_ap_vld,
        weight_buf_3x3_V_0_2_87_i,
        weight_buf_3x3_V_0_2_87_o,
        weight_buf_3x3_V_0_2_87_o_ap_vld,
        weight_buf_3x3_V_0_2_86_i,
        weight_buf_3x3_V_0_2_86_o,
        weight_buf_3x3_V_0_2_86_o_ap_vld,
        weight_buf_3x3_V_0_2_85_i,
        weight_buf_3x3_V_0_2_85_o,
        weight_buf_3x3_V_0_2_85_o_ap_vld,
        weight_buf_3x3_V_0_2_84_i,
        weight_buf_3x3_V_0_2_84_o,
        weight_buf_3x3_V_0_2_84_o_ap_vld,
        weight_buf_3x3_V_0_2_83_i,
        weight_buf_3x3_V_0_2_83_o,
        weight_buf_3x3_V_0_2_83_o_ap_vld,
        weight_buf_3x3_V_0_2_82_i,
        weight_buf_3x3_V_0_2_82_o,
        weight_buf_3x3_V_0_2_82_o_ap_vld,
        weight_buf_3x3_V_0_2_81_i,
        weight_buf_3x3_V_0_2_81_o,
        weight_buf_3x3_V_0_2_81_o_ap_vld,
        weight_buf_3x3_V_0_2_80_i,
        weight_buf_3x3_V_0_2_80_o,
        weight_buf_3x3_V_0_2_80_o_ap_vld,
        weight_buf_3x3_V_0_2_79_i,
        weight_buf_3x3_V_0_2_79_o,
        weight_buf_3x3_V_0_2_79_o_ap_vld,
        weight_buf_3x3_V_0_2_78_i,
        weight_buf_3x3_V_0_2_78_o,
        weight_buf_3x3_V_0_2_78_o_ap_vld,
        weight_buf_3x3_V_0_2_77_i,
        weight_buf_3x3_V_0_2_77_o,
        weight_buf_3x3_V_0_2_77_o_ap_vld,
        weight_buf_3x3_V_0_2_76_i,
        weight_buf_3x3_V_0_2_76_o,
        weight_buf_3x3_V_0_2_76_o_ap_vld,
        weight_buf_3x3_V_0_2_75_i,
        weight_buf_3x3_V_0_2_75_o,
        weight_buf_3x3_V_0_2_75_o_ap_vld,
        weight_buf_3x3_V_0_2_74_i,
        weight_buf_3x3_V_0_2_74_o,
        weight_buf_3x3_V_0_2_74_o_ap_vld,
        weight_buf_3x3_V_0_2_73_i,
        weight_buf_3x3_V_0_2_73_o,
        weight_buf_3x3_V_0_2_73_o_ap_vld,
        weight_buf_3x3_V_0_2_72_i,
        weight_buf_3x3_V_0_2_72_o,
        weight_buf_3x3_V_0_2_72_o_ap_vld,
        weight_buf_3x3_V_0_2_71_i,
        weight_buf_3x3_V_0_2_71_o,
        weight_buf_3x3_V_0_2_71_o_ap_vld,
        weight_buf_3x3_V_0_2_70_i,
        weight_buf_3x3_V_0_2_70_o,
        weight_buf_3x3_V_0_2_70_o_ap_vld,
        weight_buf_3x3_V_0_2_69_i,
        weight_buf_3x3_V_0_2_69_o,
        weight_buf_3x3_V_0_2_69_o_ap_vld,
        weight_buf_3x3_V_0_2_68_i,
        weight_buf_3x3_V_0_2_68_o,
        weight_buf_3x3_V_0_2_68_o_ap_vld,
        weight_buf_3x3_V_0_2_67_i,
        weight_buf_3x3_V_0_2_67_o,
        weight_buf_3x3_V_0_2_67_o_ap_vld,
        weight_buf_3x3_V_0_2_66_i,
        weight_buf_3x3_V_0_2_66_o,
        weight_buf_3x3_V_0_2_66_o_ap_vld,
        weight_buf_3x3_V_0_2_65_i,
        weight_buf_3x3_V_0_2_65_o,
        weight_buf_3x3_V_0_2_65_o_ap_vld,
        weight_buf_3x3_V_0_2_64_i,
        weight_buf_3x3_V_0_2_64_o,
        weight_buf_3x3_V_0_2_64_o_ap_vld,
        weight_buf_3x3_V_0_2_63_i,
        weight_buf_3x3_V_0_2_63_o,
        weight_buf_3x3_V_0_2_63_o_ap_vld,
        weight_buf_3x3_V_0_2_62_i,
        weight_buf_3x3_V_0_2_62_o,
        weight_buf_3x3_V_0_2_62_o_ap_vld,
        weight_buf_3x3_V_0_2_61_i,
        weight_buf_3x3_V_0_2_61_o,
        weight_buf_3x3_V_0_2_61_o_ap_vld,
        weight_buf_3x3_V_0_2_60_i,
        weight_buf_3x3_V_0_2_60_o,
        weight_buf_3x3_V_0_2_60_o_ap_vld,
        weight_buf_3x3_V_0_2_59_i,
        weight_buf_3x3_V_0_2_59_o,
        weight_buf_3x3_V_0_2_59_o_ap_vld,
        weight_buf_3x3_V_0_2_58_i,
        weight_buf_3x3_V_0_2_58_o,
        weight_buf_3x3_V_0_2_58_o_ap_vld,
        weight_buf_3x3_V_0_2_57_i,
        weight_buf_3x3_V_0_2_57_o,
        weight_buf_3x3_V_0_2_57_o_ap_vld,
        weight_buf_3x3_V_0_2_56_i,
        weight_buf_3x3_V_0_2_56_o,
        weight_buf_3x3_V_0_2_56_o_ap_vld,
        weight_buf_3x3_V_0_2_55_i,
        weight_buf_3x3_V_0_2_55_o,
        weight_buf_3x3_V_0_2_55_o_ap_vld,
        weight_buf_3x3_V_0_2_54_i,
        weight_buf_3x3_V_0_2_54_o,
        weight_buf_3x3_V_0_2_54_o_ap_vld,
        weight_buf_3x3_V_0_2_53_i,
        weight_buf_3x3_V_0_2_53_o,
        weight_buf_3x3_V_0_2_53_o_ap_vld,
        weight_buf_3x3_V_0_2_52_i,
        weight_buf_3x3_V_0_2_52_o,
        weight_buf_3x3_V_0_2_52_o_ap_vld,
        weight_buf_3x3_V_0_2_51_i,
        weight_buf_3x3_V_0_2_51_o,
        weight_buf_3x3_V_0_2_51_o_ap_vld,
        weight_buf_3x3_V_0_2_50_i,
        weight_buf_3x3_V_0_2_50_o,
        weight_buf_3x3_V_0_2_50_o_ap_vld,
        weight_buf_3x3_V_0_2_49_i,
        weight_buf_3x3_V_0_2_49_o,
        weight_buf_3x3_V_0_2_49_o_ap_vld,
        weight_buf_3x3_V_0_2_48_i,
        weight_buf_3x3_V_0_2_48_o,
        weight_buf_3x3_V_0_2_48_o_ap_vld,
        weight_buf_3x3_V_0_2_47_i,
        weight_buf_3x3_V_0_2_47_o,
        weight_buf_3x3_V_0_2_47_o_ap_vld,
        weight_buf_3x3_V_0_2_46_i,
        weight_buf_3x3_V_0_2_46_o,
        weight_buf_3x3_V_0_2_46_o_ap_vld,
        weight_buf_3x3_V_0_2_45_i,
        weight_buf_3x3_V_0_2_45_o,
        weight_buf_3x3_V_0_2_45_o_ap_vld,
        weight_buf_3x3_V_0_2_44_i,
        weight_buf_3x3_V_0_2_44_o,
        weight_buf_3x3_V_0_2_44_o_ap_vld,
        weight_buf_3x3_V_0_2_43_i,
        weight_buf_3x3_V_0_2_43_o,
        weight_buf_3x3_V_0_2_43_o_ap_vld,
        weight_buf_3x3_V_0_2_42_i,
        weight_buf_3x3_V_0_2_42_o,
        weight_buf_3x3_V_0_2_42_o_ap_vld,
        weight_buf_3x3_V_0_2_41_i,
        weight_buf_3x3_V_0_2_41_o,
        weight_buf_3x3_V_0_2_41_o_ap_vld,
        weight_buf_3x3_V_0_2_40_i,
        weight_buf_3x3_V_0_2_40_o,
        weight_buf_3x3_V_0_2_40_o_ap_vld,
        weight_buf_3x3_V_0_2_39_i,
        weight_buf_3x3_V_0_2_39_o,
        weight_buf_3x3_V_0_2_39_o_ap_vld,
        weight_buf_3x3_V_0_2_38_i,
        weight_buf_3x3_V_0_2_38_o,
        weight_buf_3x3_V_0_2_38_o_ap_vld,
        weight_buf_3x3_V_0_2_37_i,
        weight_buf_3x3_V_0_2_37_o,
        weight_buf_3x3_V_0_2_37_o_ap_vld,
        weight_buf_3x3_V_0_2_36_i,
        weight_buf_3x3_V_0_2_36_o,
        weight_buf_3x3_V_0_2_36_o_ap_vld,
        weight_buf_3x3_V_0_2_35_i,
        weight_buf_3x3_V_0_2_35_o,
        weight_buf_3x3_V_0_2_35_o_ap_vld,
        weight_buf_3x3_V_0_2_34_i,
        weight_buf_3x3_V_0_2_34_o,
        weight_buf_3x3_V_0_2_34_o_ap_vld,
        weight_buf_3x3_V_0_2_33_i,
        weight_buf_3x3_V_0_2_33_o,
        weight_buf_3x3_V_0_2_33_o_ap_vld,
        weight_buf_3x3_V_0_2_32_i,
        weight_buf_3x3_V_0_2_32_o,
        weight_buf_3x3_V_0_2_32_o_ap_vld,
        weight_buf_3x3_V_0_2_31_i,
        weight_buf_3x3_V_0_2_31_o,
        weight_buf_3x3_V_0_2_31_o_ap_vld,
        weight_buf_3x3_V_0_2_30_i,
        weight_buf_3x3_V_0_2_30_o,
        weight_buf_3x3_V_0_2_30_o_ap_vld,
        weight_buf_3x3_V_0_2_29_i,
        weight_buf_3x3_V_0_2_29_o,
        weight_buf_3x3_V_0_2_29_o_ap_vld,
        weight_buf_3x3_V_0_2_28_i,
        weight_buf_3x3_V_0_2_28_o,
        weight_buf_3x3_V_0_2_28_o_ap_vld,
        weight_buf_3x3_V_0_2_27_i,
        weight_buf_3x3_V_0_2_27_o,
        weight_buf_3x3_V_0_2_27_o_ap_vld,
        weight_buf_3x3_V_0_2_26_i,
        weight_buf_3x3_V_0_2_26_o,
        weight_buf_3x3_V_0_2_26_o_ap_vld,
        weight_buf_3x3_V_0_2_25_i,
        weight_buf_3x3_V_0_2_25_o,
        weight_buf_3x3_V_0_2_25_o_ap_vld,
        weight_buf_3x3_V_0_2_24_i,
        weight_buf_3x3_V_0_2_24_o,
        weight_buf_3x3_V_0_2_24_o_ap_vld,
        weight_buf_3x3_V_0_2_23_i,
        weight_buf_3x3_V_0_2_23_o,
        weight_buf_3x3_V_0_2_23_o_ap_vld,
        weight_buf_3x3_V_0_2_22_i,
        weight_buf_3x3_V_0_2_22_o,
        weight_buf_3x3_V_0_2_22_o_ap_vld,
        weight_buf_3x3_V_0_2_21_i,
        weight_buf_3x3_V_0_2_21_o,
        weight_buf_3x3_V_0_2_21_o_ap_vld,
        weight_buf_3x3_V_0_2_20_i,
        weight_buf_3x3_V_0_2_20_o,
        weight_buf_3x3_V_0_2_20_o_ap_vld,
        weight_buf_3x3_V_0_2_19_i,
        weight_buf_3x3_V_0_2_19_o,
        weight_buf_3x3_V_0_2_19_o_ap_vld,
        weight_buf_3x3_V_0_2_18_i,
        weight_buf_3x3_V_0_2_18_o,
        weight_buf_3x3_V_0_2_18_o_ap_vld,
        weight_buf_3x3_V_0_2_17_i,
        weight_buf_3x3_V_0_2_17_o,
        weight_buf_3x3_V_0_2_17_o_ap_vld,
        weight_buf_3x3_V_0_2_16_i,
        weight_buf_3x3_V_0_2_16_o,
        weight_buf_3x3_V_0_2_16_o_ap_vld,
        weight_buf_3x3_V_0_2_15_i,
        weight_buf_3x3_V_0_2_15_o,
        weight_buf_3x3_V_0_2_15_o_ap_vld,
        weight_buf_3x3_V_0_2_14_i,
        weight_buf_3x3_V_0_2_14_o,
        weight_buf_3x3_V_0_2_14_o_ap_vld,
        weight_buf_3x3_V_0_2_13_i,
        weight_buf_3x3_V_0_2_13_o,
        weight_buf_3x3_V_0_2_13_o_ap_vld,
        weight_buf_3x3_V_0_2_12_i,
        weight_buf_3x3_V_0_2_12_o,
        weight_buf_3x3_V_0_2_12_o_ap_vld,
        weight_buf_3x3_V_0_2_11_i,
        weight_buf_3x3_V_0_2_11_o,
        weight_buf_3x3_V_0_2_11_o_ap_vld,
        weight_buf_3x3_V_0_2_10_i,
        weight_buf_3x3_V_0_2_10_o,
        weight_buf_3x3_V_0_2_10_o_ap_vld,
        weight_buf_3x3_V_0_2_9_i,
        weight_buf_3x3_V_0_2_9_o,
        weight_buf_3x3_V_0_2_9_o_ap_vld,
        weight_buf_3x3_V_0_2_8_i,
        weight_buf_3x3_V_0_2_8_o,
        weight_buf_3x3_V_0_2_8_o_ap_vld,
        weight_buf_3x3_V_0_2_7_i,
        weight_buf_3x3_V_0_2_7_o,
        weight_buf_3x3_V_0_2_7_o_ap_vld,
        weight_buf_3x3_V_0_2_6_i,
        weight_buf_3x3_V_0_2_6_o,
        weight_buf_3x3_V_0_2_6_o_ap_vld,
        weight_buf_3x3_V_0_2_5_i,
        weight_buf_3x3_V_0_2_5_o,
        weight_buf_3x3_V_0_2_5_o_ap_vld,
        weight_buf_3x3_V_0_2_4_i,
        weight_buf_3x3_V_0_2_4_o,
        weight_buf_3x3_V_0_2_4_o_ap_vld,
        weight_buf_3x3_V_0_2_3_i,
        weight_buf_3x3_V_0_2_3_o,
        weight_buf_3x3_V_0_2_3_o_ap_vld,
        weight_buf_3x3_V_0_2_2_i,
        weight_buf_3x3_V_0_2_2_o,
        weight_buf_3x3_V_0_2_2_o_ap_vld,
        weight_buf_3x3_V_0_2_1_i,
        weight_buf_3x3_V_0_2_1_o,
        weight_buf_3x3_V_0_2_1_o_ap_vld,
        weight_buf_3x3_V_0_2_i,
        weight_buf_3x3_V_0_2_o,
        weight_buf_3x3_V_0_2_o_ap_vld,
        weight_buf_3x3_V_0_3_17_i,
        weight_buf_3x3_V_0_3_17_o,
        weight_buf_3x3_V_0_3_17_o_ap_vld,
        weight_buf_3x3_V_0_3_16_i,
        weight_buf_3x3_V_0_3_16_o,
        weight_buf_3x3_V_0_3_16_o_ap_vld,
        weight_buf_3x3_V_0_3_15_i,
        weight_buf_3x3_V_0_3_15_o,
        weight_buf_3x3_V_0_3_15_o_ap_vld,
        weight_buf_3x3_V_0_3_14_i,
        weight_buf_3x3_V_0_3_14_o,
        weight_buf_3x3_V_0_3_14_o_ap_vld,
        weight_buf_3x3_V_0_3_13_i,
        weight_buf_3x3_V_0_3_13_o,
        weight_buf_3x3_V_0_3_13_o_ap_vld,
        weight_buf_3x3_V_0_3_12_i,
        weight_buf_3x3_V_0_3_12_o,
        weight_buf_3x3_V_0_3_12_o_ap_vld,
        weight_buf_3x3_V_0_3_11_i,
        weight_buf_3x3_V_0_3_11_o,
        weight_buf_3x3_V_0_3_11_o_ap_vld,
        weight_buf_3x3_V_0_3_10_i,
        weight_buf_3x3_V_0_3_10_o,
        weight_buf_3x3_V_0_3_10_o_ap_vld,
        weight_buf_3x3_V_0_3_9_i,
        weight_buf_3x3_V_0_3_9_o,
        weight_buf_3x3_V_0_3_9_o_ap_vld,
        weight_buf_3x3_V_0_3_8_i,
        weight_buf_3x3_V_0_3_8_o,
        weight_buf_3x3_V_0_3_8_o_ap_vld,
        weight_buf_3x3_V_0_3_7_i,
        weight_buf_3x3_V_0_3_7_o,
        weight_buf_3x3_V_0_3_7_o_ap_vld,
        weight_buf_3x3_V_0_3_6_i,
        weight_buf_3x3_V_0_3_6_o,
        weight_buf_3x3_V_0_3_6_o_ap_vld,
        weight_buf_3x3_V_0_3_5_i,
        weight_buf_3x3_V_0_3_5_o,
        weight_buf_3x3_V_0_3_5_o_ap_vld,
        weight_buf_3x3_V_0_3_4_i,
        weight_buf_3x3_V_0_3_4_o,
        weight_buf_3x3_V_0_3_4_o_ap_vld,
        weight_buf_3x3_V_0_3_3_i,
        weight_buf_3x3_V_0_3_3_o,
        weight_buf_3x3_V_0_3_3_o_ap_vld,
        weight_buf_3x3_V_0_3_2_i,
        weight_buf_3x3_V_0_3_2_o,
        weight_buf_3x3_V_0_3_2_o_ap_vld,
        weight_buf_3x3_V_0_3_1_i,
        weight_buf_3x3_V_0_3_1_o,
        weight_buf_3x3_V_0_3_1_o_ap_vld,
        weight_buf_3x3_V_0_3_i,
        weight_buf_3x3_V_0_3_o,
        weight_buf_3x3_V_0_3_o_ap_vld,
        bn_weight_buf_V_0_0,
        bn_weight_buf_V_0_0_ap_vld,
        bn_bias_buf_V_0_0,
        bn_bias_buf_V_0_0_ap_vld,
        bn_weight_buf_V_1_0,
        bn_weight_buf_V_1_0_ap_vld,
        bn_bias_buf_V_1_0,
        bn_bias_buf_V_1_0_ap_vld,
        bn_weight_buf_V_2_0,
        bn_weight_buf_V_2_0_ap_vld,
        bn_bias_buf_V_2_0,
        bn_bias_buf_V_2_0_ap_vld,
        bn_weight_buf_V_3_0,
        bn_weight_buf_V_3_0_ap_vld,
        bn_bias_buf_V_3_0,
        bn_bias_buf_V_3_0_ap_vld,
        bn_weight_buf_V_4_0,
        bn_weight_buf_V_4_0_ap_vld,
        bn_bias_buf_V_4_0,
        bn_bias_buf_V_4_0_ap_vld,
        bn_weight_buf_V_5_0,
        bn_weight_buf_V_5_0_ap_vld,
        bn_bias_buf_V_5_0,
        bn_bias_buf_V_5_0_ap_vld,
        bn_weight_buf_V_6_0,
        bn_weight_buf_V_6_0_ap_vld,
        bn_bias_buf_V_6_0,
        bn_bias_buf_V_6_0_ap_vld,
        bn_weight_buf_V_7_0,
        bn_weight_buf_V_7_0_ap_vld,
        bn_bias_buf_V_7_0,
        bn_bias_buf_V_7_0_ap_vld,
        bn_weight_buf_V_8_0,
        bn_weight_buf_V_8_0_ap_vld,
        bn_bias_buf_V_8_0,
        bn_bias_buf_V_8_0_ap_vld,
        bn_weight_buf_V_9_0,
        bn_weight_buf_V_9_0_ap_vld,
        bn_bias_buf_V_9_0,
        bn_bias_buf_V_9_0_ap_vld,
        bn_weight_buf_V_10_0,
        bn_weight_buf_V_10_0_ap_vld,
        bn_bias_buf_V_10_0,
        bn_bias_buf_V_10_0_ap_vld,
        bn_weight_buf_V_11_0,
        bn_weight_buf_V_11_0_ap_vld,
        bn_bias_buf_V_11_0,
        bn_bias_buf_V_11_0_ap_vld,
        bn_weight_buf_V_12_0,
        bn_weight_buf_V_12_0_ap_vld,
        bn_bias_buf_V_12_0,
        bn_bias_buf_V_12_0_ap_vld,
        bn_weight_buf_V_13_0,
        bn_weight_buf_V_13_0_ap_vld,
        bn_bias_buf_V_13_0,
        bn_bias_buf_V_13_0_ap_vld,
        bn_weight_buf_V_14_0,
        bn_weight_buf_V_14_0_ap_vld,
        bn_bias_buf_V_14_0,
        bn_bias_buf_V_14_0_ap_vld,
        bn_weight_buf_V_15_0,
        bn_weight_buf_V_15_0_ap_vld,
        bn_bias_buf_V_15_0,
        bn_bias_buf_V_15_0_ap_vld,
        bn_weight_buf_V_16_0,
        bn_weight_buf_V_16_0_ap_vld,
        bn_bias_buf_V_16_0,
        bn_bias_buf_V_16_0_ap_vld,
        bn_weight_buf_V_17_0,
        bn_weight_buf_V_17_0_ap_vld,
        bn_bias_buf_V_17_0,
        bn_bias_buf_V_17_0_ap_vld,
        bn_weight_buf_V_18_0,
        bn_weight_buf_V_18_0_ap_vld,
        bn_bias_buf_V_18_0,
        bn_bias_buf_V_18_0_ap_vld,
        bn_weight_buf_V_19_0,
        bn_weight_buf_V_19_0_ap_vld,
        bn_bias_buf_V_19_0,
        bn_bias_buf_V_19_0_ap_vld,
        bn_weight_buf_V_20_0,
        bn_weight_buf_V_20_0_ap_vld,
        bn_bias_buf_V_20_0,
        bn_bias_buf_V_20_0_ap_vld,
        bn_weight_buf_V_21_0,
        bn_weight_buf_V_21_0_ap_vld,
        bn_bias_buf_V_21_0,
        bn_bias_buf_V_21_0_ap_vld,
        bn_weight_buf_V_22_0,
        bn_weight_buf_V_22_0_ap_vld,
        bn_bias_buf_V_22_0,
        bn_bias_buf_V_22_0_ap_vld,
        bn_weight_buf_V_23_0,
        bn_weight_buf_V_23_0_ap_vld,
        bn_bias_buf_V_23_0,
        bn_bias_buf_V_23_0_ap_vld,
        bn_weight_buf_V_24_0,
        bn_weight_buf_V_24_0_ap_vld,
        bn_bias_buf_V_24_0,
        bn_bias_buf_V_24_0_ap_vld,
        bn_weight_buf_V_25_0,
        bn_weight_buf_V_25_0_ap_vld,
        bn_bias_buf_V_25_0,
        bn_bias_buf_V_25_0_ap_vld,
        bn_weight_buf_V_26_0,
        bn_weight_buf_V_26_0_ap_vld,
        bn_bias_buf_V_26_0,
        bn_bias_buf_V_26_0_ap_vld,
        bn_weight_buf_V_27_0,
        bn_weight_buf_V_27_0_ap_vld,
        bn_bias_buf_V_27_0,
        bn_bias_buf_V_27_0_ap_vld,
        bn_weight_buf_V_28_0,
        bn_weight_buf_V_28_0_ap_vld,
        bn_bias_buf_V_28_0,
        bn_bias_buf_V_28_0_ap_vld,
        bn_weight_buf_V_29_0,
        bn_weight_buf_V_29_0_ap_vld,
        bn_bias_buf_V_29_0,
        bn_bias_buf_V_29_0_ap_vld,
        bn_weight_buf_V_30_0,
        bn_weight_buf_V_30_0_ap_vld,
        bn_bias_buf_V_30_0,
        bn_bias_buf_V_30_0_ap_vld,
        bn_weight_buf_V_31_0,
        bn_weight_buf_V_31_0_ap_vld,
        bn_bias_buf_V_31_0,
        bn_bias_buf_V_31_0_ap_vld
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_pp0_stage0 = 11'd512;
parameter    ap_ST_fsm_state12 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_conv_weight_3x3_all_V_AWVALID;
input   m_axi_conv_weight_3x3_all_V_AWREADY;
output  [31:0] m_axi_conv_weight_3x3_all_V_AWADDR;
output  [0:0] m_axi_conv_weight_3x3_all_V_AWID;
output  [31:0] m_axi_conv_weight_3x3_all_V_AWLEN;
output  [2:0] m_axi_conv_weight_3x3_all_V_AWSIZE;
output  [1:0] m_axi_conv_weight_3x3_all_V_AWBURST;
output  [1:0] m_axi_conv_weight_3x3_all_V_AWLOCK;
output  [3:0] m_axi_conv_weight_3x3_all_V_AWCACHE;
output  [2:0] m_axi_conv_weight_3x3_all_V_AWPROT;
output  [3:0] m_axi_conv_weight_3x3_all_V_AWQOS;
output  [3:0] m_axi_conv_weight_3x3_all_V_AWREGION;
output  [0:0] m_axi_conv_weight_3x3_all_V_AWUSER;
output   m_axi_conv_weight_3x3_all_V_WVALID;
input   m_axi_conv_weight_3x3_all_V_WREADY;
output  [511:0] m_axi_conv_weight_3x3_all_V_WDATA;
output  [63:0] m_axi_conv_weight_3x3_all_V_WSTRB;
output   m_axi_conv_weight_3x3_all_V_WLAST;
output  [0:0] m_axi_conv_weight_3x3_all_V_WID;
output  [0:0] m_axi_conv_weight_3x3_all_V_WUSER;
output   m_axi_conv_weight_3x3_all_V_ARVALID;
input   m_axi_conv_weight_3x3_all_V_ARREADY;
output  [31:0] m_axi_conv_weight_3x3_all_V_ARADDR;
output  [0:0] m_axi_conv_weight_3x3_all_V_ARID;
output  [31:0] m_axi_conv_weight_3x3_all_V_ARLEN;
output  [2:0] m_axi_conv_weight_3x3_all_V_ARSIZE;
output  [1:0] m_axi_conv_weight_3x3_all_V_ARBURST;
output  [1:0] m_axi_conv_weight_3x3_all_V_ARLOCK;
output  [3:0] m_axi_conv_weight_3x3_all_V_ARCACHE;
output  [2:0] m_axi_conv_weight_3x3_all_V_ARPROT;
output  [3:0] m_axi_conv_weight_3x3_all_V_ARQOS;
output  [3:0] m_axi_conv_weight_3x3_all_V_ARREGION;
output  [0:0] m_axi_conv_weight_3x3_all_V_ARUSER;
input   m_axi_conv_weight_3x3_all_V_RVALID;
output   m_axi_conv_weight_3x3_all_V_RREADY;
input  [511:0] m_axi_conv_weight_3x3_all_V_RDATA;
input   m_axi_conv_weight_3x3_all_V_RLAST;
input  [0:0] m_axi_conv_weight_3x3_all_V_RID;
input  [0:0] m_axi_conv_weight_3x3_all_V_RUSER;
input  [1:0] m_axi_conv_weight_3x3_all_V_RRESP;
input   m_axi_conv_weight_3x3_all_V_BVALID;
output   m_axi_conv_weight_3x3_all_V_BREADY;
input  [1:0] m_axi_conv_weight_3x3_all_V_BRESP;
input  [0:0] m_axi_conv_weight_3x3_all_V_BID;
input  [0:0] m_axi_conv_weight_3x3_all_V_BUSER;
input  [25:0] conv_weight_3x3_all_V_offset;
input  [25:0] weights_all_V_offset;
input  [63:0] weight_buf_3x3_V_0_0_8_i;
output  [63:0] weight_buf_3x3_V_0_0_8_o;
output   weight_buf_3x3_V_0_0_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_0_7_i;
output  [63:0] weight_buf_3x3_V_0_0_7_o;
output   weight_buf_3x3_V_0_0_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_0_6_i;
output  [63:0] weight_buf_3x3_V_0_0_6_o;
output   weight_buf_3x3_V_0_0_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_0_5_i;
output  [63:0] weight_buf_3x3_V_0_0_5_o;
output   weight_buf_3x3_V_0_0_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_0_4_i;
output  [63:0] weight_buf_3x3_V_0_0_4_o;
output   weight_buf_3x3_V_0_0_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_0_3_i;
output  [63:0] weight_buf_3x3_V_0_0_3_o;
output   weight_buf_3x3_V_0_0_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_0_2_i;
output  [63:0] weight_buf_3x3_V_0_0_2_o;
output   weight_buf_3x3_V_0_0_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_0_1_i;
output  [63:0] weight_buf_3x3_V_0_0_1_o;
output   weight_buf_3x3_V_0_0_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_0_i;
output  [63:0] weight_buf_3x3_V_0_0_o;
output   weight_buf_3x3_V_0_0_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_98_i;
output  [63:0] weight_buf_3x3_V_0_1_98_o;
output   weight_buf_3x3_V_0_1_98_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_97_i;
output  [63:0] weight_buf_3x3_V_0_1_97_o;
output   weight_buf_3x3_V_0_1_97_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_96_i;
output  [63:0] weight_buf_3x3_V_0_1_96_o;
output   weight_buf_3x3_V_0_1_96_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_95_i;
output  [63:0] weight_buf_3x3_V_0_1_95_o;
output   weight_buf_3x3_V_0_1_95_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_94_i;
output  [63:0] weight_buf_3x3_V_0_1_94_o;
output   weight_buf_3x3_V_0_1_94_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_93_i;
output  [63:0] weight_buf_3x3_V_0_1_93_o;
output   weight_buf_3x3_V_0_1_93_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_92_i;
output  [63:0] weight_buf_3x3_V_0_1_92_o;
output   weight_buf_3x3_V_0_1_92_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_91_i;
output  [63:0] weight_buf_3x3_V_0_1_91_o;
output   weight_buf_3x3_V_0_1_91_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_90_i;
output  [63:0] weight_buf_3x3_V_0_1_90_o;
output   weight_buf_3x3_V_0_1_90_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_98_i;
output  [63:0] weight_buf_3x3_V_0_2_98_o;
output   weight_buf_3x3_V_0_2_98_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_97_i;
output  [63:0] weight_buf_3x3_V_0_2_97_o;
output   weight_buf_3x3_V_0_2_97_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_96_i;
output  [63:0] weight_buf_3x3_V_0_2_96_o;
output   weight_buf_3x3_V_0_2_96_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_95_i;
output  [63:0] weight_buf_3x3_V_0_2_95_o;
output   weight_buf_3x3_V_0_2_95_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_94_i;
output  [63:0] weight_buf_3x3_V_0_2_94_o;
output   weight_buf_3x3_V_0_2_94_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_93_i;
output  [63:0] weight_buf_3x3_V_0_2_93_o;
output   weight_buf_3x3_V_0_2_93_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_92_i;
output  [63:0] weight_buf_3x3_V_0_2_92_o;
output   weight_buf_3x3_V_0_2_92_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_91_i;
output  [63:0] weight_buf_3x3_V_0_2_91_o;
output   weight_buf_3x3_V_0_2_91_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_90_i;
output  [63:0] weight_buf_3x3_V_0_2_90_o;
output   weight_buf_3x3_V_0_2_90_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_26_i;
output  [63:0] weight_buf_3x3_V_0_3_26_o;
output   weight_buf_3x3_V_0_3_26_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_25_i;
output  [63:0] weight_buf_3x3_V_0_3_25_o;
output   weight_buf_3x3_V_0_3_25_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_24_i;
output  [63:0] weight_buf_3x3_V_0_3_24_o;
output   weight_buf_3x3_V_0_3_24_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_23_i;
output  [63:0] weight_buf_3x3_V_0_3_23_o;
output   weight_buf_3x3_V_0_3_23_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_22_i;
output  [63:0] weight_buf_3x3_V_0_3_22_o;
output   weight_buf_3x3_V_0_3_22_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_21_i;
output  [63:0] weight_buf_3x3_V_0_3_21_o;
output   weight_buf_3x3_V_0_3_21_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_20_i;
output  [63:0] weight_buf_3x3_V_0_3_20_o;
output   weight_buf_3x3_V_0_3_20_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_19_i;
output  [63:0] weight_buf_3x3_V_0_3_19_o;
output   weight_buf_3x3_V_0_3_19_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_18_i;
output  [63:0] weight_buf_3x3_V_0_3_18_o;
output   weight_buf_3x3_V_0_3_18_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_4_8_i;
output  [63:0] weight_buf_3x3_V_0_4_8_o;
output   weight_buf_3x3_V_0_4_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_4_7_i;
output  [63:0] weight_buf_3x3_V_0_4_7_o;
output   weight_buf_3x3_V_0_4_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_4_6_i;
output  [63:0] weight_buf_3x3_V_0_4_6_o;
output   weight_buf_3x3_V_0_4_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_4_5_i;
output  [63:0] weight_buf_3x3_V_0_4_5_o;
output   weight_buf_3x3_V_0_4_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_4_4_i;
output  [63:0] weight_buf_3x3_V_0_4_4_o;
output   weight_buf_3x3_V_0_4_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_4_3_i;
output  [63:0] weight_buf_3x3_V_0_4_3_o;
output   weight_buf_3x3_V_0_4_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_4_2_i;
output  [63:0] weight_buf_3x3_V_0_4_2_o;
output   weight_buf_3x3_V_0_4_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_4_1_i;
output  [63:0] weight_buf_3x3_V_0_4_1_o;
output   weight_buf_3x3_V_0_4_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_4_i;
output  [63:0] weight_buf_3x3_V_0_4_o;
output   weight_buf_3x3_V_0_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_5_8_i;
output  [63:0] weight_buf_3x3_V_0_5_8_o;
output   weight_buf_3x3_V_0_5_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_5_7_i;
output  [63:0] weight_buf_3x3_V_0_5_7_o;
output   weight_buf_3x3_V_0_5_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_5_6_i;
output  [63:0] weight_buf_3x3_V_0_5_6_o;
output   weight_buf_3x3_V_0_5_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_5_5_i;
output  [63:0] weight_buf_3x3_V_0_5_5_o;
output   weight_buf_3x3_V_0_5_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_5_4_i;
output  [63:0] weight_buf_3x3_V_0_5_4_o;
output   weight_buf_3x3_V_0_5_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_5_3_i;
output  [63:0] weight_buf_3x3_V_0_5_3_o;
output   weight_buf_3x3_V_0_5_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_5_2_i;
output  [63:0] weight_buf_3x3_V_0_5_2_o;
output   weight_buf_3x3_V_0_5_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_5_1_i;
output  [63:0] weight_buf_3x3_V_0_5_1_o;
output   weight_buf_3x3_V_0_5_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_5_i;
output  [63:0] weight_buf_3x3_V_0_5_o;
output   weight_buf_3x3_V_0_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_6_8_i;
output  [63:0] weight_buf_3x3_V_0_6_8_o;
output   weight_buf_3x3_V_0_6_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_6_7_i;
output  [63:0] weight_buf_3x3_V_0_6_7_o;
output   weight_buf_3x3_V_0_6_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_6_6_i;
output  [63:0] weight_buf_3x3_V_0_6_6_o;
output   weight_buf_3x3_V_0_6_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_6_5_i;
output  [63:0] weight_buf_3x3_V_0_6_5_o;
output   weight_buf_3x3_V_0_6_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_6_4_i;
output  [63:0] weight_buf_3x3_V_0_6_4_o;
output   weight_buf_3x3_V_0_6_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_6_3_i;
output  [63:0] weight_buf_3x3_V_0_6_3_o;
output   weight_buf_3x3_V_0_6_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_6_2_i;
output  [63:0] weight_buf_3x3_V_0_6_2_o;
output   weight_buf_3x3_V_0_6_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_6_1_i;
output  [63:0] weight_buf_3x3_V_0_6_1_o;
output   weight_buf_3x3_V_0_6_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_6_i;
output  [63:0] weight_buf_3x3_V_0_6_o;
output   weight_buf_3x3_V_0_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_7_8_i;
output  [63:0] weight_buf_3x3_V_0_7_8_o;
output   weight_buf_3x3_V_0_7_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_7_7_i;
output  [63:0] weight_buf_3x3_V_0_7_7_o;
output   weight_buf_3x3_V_0_7_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_7_6_i;
output  [63:0] weight_buf_3x3_V_0_7_6_o;
output   weight_buf_3x3_V_0_7_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_7_5_i;
output  [63:0] weight_buf_3x3_V_0_7_5_o;
output   weight_buf_3x3_V_0_7_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_7_4_i;
output  [63:0] weight_buf_3x3_V_0_7_4_o;
output   weight_buf_3x3_V_0_7_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_7_3_i;
output  [63:0] weight_buf_3x3_V_0_7_3_o;
output   weight_buf_3x3_V_0_7_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_7_2_i;
output  [63:0] weight_buf_3x3_V_0_7_2_o;
output   weight_buf_3x3_V_0_7_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_7_1_i;
output  [63:0] weight_buf_3x3_V_0_7_1_o;
output   weight_buf_3x3_V_0_7_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_7_i;
output  [63:0] weight_buf_3x3_V_0_7_o;
output   weight_buf_3x3_V_0_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_8_8_i;
output  [63:0] weight_buf_3x3_V_0_8_8_o;
output   weight_buf_3x3_V_0_8_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_8_7_i;
output  [63:0] weight_buf_3x3_V_0_8_7_o;
output   weight_buf_3x3_V_0_8_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_8_6_i;
output  [63:0] weight_buf_3x3_V_0_8_6_o;
output   weight_buf_3x3_V_0_8_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_8_5_i;
output  [63:0] weight_buf_3x3_V_0_8_5_o;
output   weight_buf_3x3_V_0_8_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_8_4_i;
output  [63:0] weight_buf_3x3_V_0_8_4_o;
output   weight_buf_3x3_V_0_8_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_8_3_i;
output  [63:0] weight_buf_3x3_V_0_8_3_o;
output   weight_buf_3x3_V_0_8_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_8_2_i;
output  [63:0] weight_buf_3x3_V_0_8_2_o;
output   weight_buf_3x3_V_0_8_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_8_1_i;
output  [63:0] weight_buf_3x3_V_0_8_1_o;
output   weight_buf_3x3_V_0_8_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_8_i;
output  [63:0] weight_buf_3x3_V_0_8_o;
output   weight_buf_3x3_V_0_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_9_8_i;
output  [63:0] weight_buf_3x3_V_0_9_8_o;
output   weight_buf_3x3_V_0_9_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_9_7_i;
output  [63:0] weight_buf_3x3_V_0_9_7_o;
output   weight_buf_3x3_V_0_9_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_9_6_i;
output  [63:0] weight_buf_3x3_V_0_9_6_o;
output   weight_buf_3x3_V_0_9_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_9_5_i;
output  [63:0] weight_buf_3x3_V_0_9_5_o;
output   weight_buf_3x3_V_0_9_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_9_4_i;
output  [63:0] weight_buf_3x3_V_0_9_4_o;
output   weight_buf_3x3_V_0_9_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_9_3_i;
output  [63:0] weight_buf_3x3_V_0_9_3_o;
output   weight_buf_3x3_V_0_9_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_9_2_i;
output  [63:0] weight_buf_3x3_V_0_9_2_o;
output   weight_buf_3x3_V_0_9_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_9_1_i;
output  [63:0] weight_buf_3x3_V_0_9_1_o;
output   weight_buf_3x3_V_0_9_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_9_i;
output  [63:0] weight_buf_3x3_V_0_9_o;
output   weight_buf_3x3_V_0_9_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_89_i;
output  [63:0] weight_buf_3x3_V_0_1_89_o;
output   weight_buf_3x3_V_0_1_89_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_88_i;
output  [63:0] weight_buf_3x3_V_0_1_88_o;
output   weight_buf_3x3_V_0_1_88_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_87_i;
output  [63:0] weight_buf_3x3_V_0_1_87_o;
output   weight_buf_3x3_V_0_1_87_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_86_i;
output  [63:0] weight_buf_3x3_V_0_1_86_o;
output   weight_buf_3x3_V_0_1_86_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_85_i;
output  [63:0] weight_buf_3x3_V_0_1_85_o;
output   weight_buf_3x3_V_0_1_85_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_84_i;
output  [63:0] weight_buf_3x3_V_0_1_84_o;
output   weight_buf_3x3_V_0_1_84_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_83_i;
output  [63:0] weight_buf_3x3_V_0_1_83_o;
output   weight_buf_3x3_V_0_1_83_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_82_i;
output  [63:0] weight_buf_3x3_V_0_1_82_o;
output   weight_buf_3x3_V_0_1_82_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_81_i;
output  [63:0] weight_buf_3x3_V_0_1_81_o;
output   weight_buf_3x3_V_0_1_81_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_80_i;
output  [63:0] weight_buf_3x3_V_0_1_80_o;
output   weight_buf_3x3_V_0_1_80_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_79_i;
output  [63:0] weight_buf_3x3_V_0_1_79_o;
output   weight_buf_3x3_V_0_1_79_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_78_i;
output  [63:0] weight_buf_3x3_V_0_1_78_o;
output   weight_buf_3x3_V_0_1_78_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_77_i;
output  [63:0] weight_buf_3x3_V_0_1_77_o;
output   weight_buf_3x3_V_0_1_77_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_76_i;
output  [63:0] weight_buf_3x3_V_0_1_76_o;
output   weight_buf_3x3_V_0_1_76_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_75_i;
output  [63:0] weight_buf_3x3_V_0_1_75_o;
output   weight_buf_3x3_V_0_1_75_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_74_i;
output  [63:0] weight_buf_3x3_V_0_1_74_o;
output   weight_buf_3x3_V_0_1_74_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_73_i;
output  [63:0] weight_buf_3x3_V_0_1_73_o;
output   weight_buf_3x3_V_0_1_73_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_72_i;
output  [63:0] weight_buf_3x3_V_0_1_72_o;
output   weight_buf_3x3_V_0_1_72_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_71_i;
output  [63:0] weight_buf_3x3_V_0_1_71_o;
output   weight_buf_3x3_V_0_1_71_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_70_i;
output  [63:0] weight_buf_3x3_V_0_1_70_o;
output   weight_buf_3x3_V_0_1_70_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_69_i;
output  [63:0] weight_buf_3x3_V_0_1_69_o;
output   weight_buf_3x3_V_0_1_69_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_68_i;
output  [63:0] weight_buf_3x3_V_0_1_68_o;
output   weight_buf_3x3_V_0_1_68_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_67_i;
output  [63:0] weight_buf_3x3_V_0_1_67_o;
output   weight_buf_3x3_V_0_1_67_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_66_i;
output  [63:0] weight_buf_3x3_V_0_1_66_o;
output   weight_buf_3x3_V_0_1_66_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_65_i;
output  [63:0] weight_buf_3x3_V_0_1_65_o;
output   weight_buf_3x3_V_0_1_65_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_64_i;
output  [63:0] weight_buf_3x3_V_0_1_64_o;
output   weight_buf_3x3_V_0_1_64_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_63_i;
output  [63:0] weight_buf_3x3_V_0_1_63_o;
output   weight_buf_3x3_V_0_1_63_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_62_i;
output  [63:0] weight_buf_3x3_V_0_1_62_o;
output   weight_buf_3x3_V_0_1_62_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_61_i;
output  [63:0] weight_buf_3x3_V_0_1_61_o;
output   weight_buf_3x3_V_0_1_61_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_60_i;
output  [63:0] weight_buf_3x3_V_0_1_60_o;
output   weight_buf_3x3_V_0_1_60_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_59_i;
output  [63:0] weight_buf_3x3_V_0_1_59_o;
output   weight_buf_3x3_V_0_1_59_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_58_i;
output  [63:0] weight_buf_3x3_V_0_1_58_o;
output   weight_buf_3x3_V_0_1_58_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_57_i;
output  [63:0] weight_buf_3x3_V_0_1_57_o;
output   weight_buf_3x3_V_0_1_57_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_56_i;
output  [63:0] weight_buf_3x3_V_0_1_56_o;
output   weight_buf_3x3_V_0_1_56_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_55_i;
output  [63:0] weight_buf_3x3_V_0_1_55_o;
output   weight_buf_3x3_V_0_1_55_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_54_i;
output  [63:0] weight_buf_3x3_V_0_1_54_o;
output   weight_buf_3x3_V_0_1_54_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_53_i;
output  [63:0] weight_buf_3x3_V_0_1_53_o;
output   weight_buf_3x3_V_0_1_53_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_52_i;
output  [63:0] weight_buf_3x3_V_0_1_52_o;
output   weight_buf_3x3_V_0_1_52_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_51_i;
output  [63:0] weight_buf_3x3_V_0_1_51_o;
output   weight_buf_3x3_V_0_1_51_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_50_i;
output  [63:0] weight_buf_3x3_V_0_1_50_o;
output   weight_buf_3x3_V_0_1_50_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_49_i;
output  [63:0] weight_buf_3x3_V_0_1_49_o;
output   weight_buf_3x3_V_0_1_49_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_48_i;
output  [63:0] weight_buf_3x3_V_0_1_48_o;
output   weight_buf_3x3_V_0_1_48_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_47_i;
output  [63:0] weight_buf_3x3_V_0_1_47_o;
output   weight_buf_3x3_V_0_1_47_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_46_i;
output  [63:0] weight_buf_3x3_V_0_1_46_o;
output   weight_buf_3x3_V_0_1_46_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_45_i;
output  [63:0] weight_buf_3x3_V_0_1_45_o;
output   weight_buf_3x3_V_0_1_45_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_44_i;
output  [63:0] weight_buf_3x3_V_0_1_44_o;
output   weight_buf_3x3_V_0_1_44_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_43_i;
output  [63:0] weight_buf_3x3_V_0_1_43_o;
output   weight_buf_3x3_V_0_1_43_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_42_i;
output  [63:0] weight_buf_3x3_V_0_1_42_o;
output   weight_buf_3x3_V_0_1_42_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_41_i;
output  [63:0] weight_buf_3x3_V_0_1_41_o;
output   weight_buf_3x3_V_0_1_41_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_40_i;
output  [63:0] weight_buf_3x3_V_0_1_40_o;
output   weight_buf_3x3_V_0_1_40_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_39_i;
output  [63:0] weight_buf_3x3_V_0_1_39_o;
output   weight_buf_3x3_V_0_1_39_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_38_i;
output  [63:0] weight_buf_3x3_V_0_1_38_o;
output   weight_buf_3x3_V_0_1_38_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_37_i;
output  [63:0] weight_buf_3x3_V_0_1_37_o;
output   weight_buf_3x3_V_0_1_37_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_36_i;
output  [63:0] weight_buf_3x3_V_0_1_36_o;
output   weight_buf_3x3_V_0_1_36_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_35_i;
output  [63:0] weight_buf_3x3_V_0_1_35_o;
output   weight_buf_3x3_V_0_1_35_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_34_i;
output  [63:0] weight_buf_3x3_V_0_1_34_o;
output   weight_buf_3x3_V_0_1_34_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_33_i;
output  [63:0] weight_buf_3x3_V_0_1_33_o;
output   weight_buf_3x3_V_0_1_33_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_32_i;
output  [63:0] weight_buf_3x3_V_0_1_32_o;
output   weight_buf_3x3_V_0_1_32_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_31_i;
output  [63:0] weight_buf_3x3_V_0_1_31_o;
output   weight_buf_3x3_V_0_1_31_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_30_i;
output  [63:0] weight_buf_3x3_V_0_1_30_o;
output   weight_buf_3x3_V_0_1_30_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_29_i;
output  [63:0] weight_buf_3x3_V_0_1_29_o;
output   weight_buf_3x3_V_0_1_29_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_28_i;
output  [63:0] weight_buf_3x3_V_0_1_28_o;
output   weight_buf_3x3_V_0_1_28_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_27_i;
output  [63:0] weight_buf_3x3_V_0_1_27_o;
output   weight_buf_3x3_V_0_1_27_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_26_i;
output  [63:0] weight_buf_3x3_V_0_1_26_o;
output   weight_buf_3x3_V_0_1_26_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_25_i;
output  [63:0] weight_buf_3x3_V_0_1_25_o;
output   weight_buf_3x3_V_0_1_25_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_24_i;
output  [63:0] weight_buf_3x3_V_0_1_24_o;
output   weight_buf_3x3_V_0_1_24_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_23_i;
output  [63:0] weight_buf_3x3_V_0_1_23_o;
output   weight_buf_3x3_V_0_1_23_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_22_i;
output  [63:0] weight_buf_3x3_V_0_1_22_o;
output   weight_buf_3x3_V_0_1_22_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_21_i;
output  [63:0] weight_buf_3x3_V_0_1_21_o;
output   weight_buf_3x3_V_0_1_21_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_20_i;
output  [63:0] weight_buf_3x3_V_0_1_20_o;
output   weight_buf_3x3_V_0_1_20_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_19_i;
output  [63:0] weight_buf_3x3_V_0_1_19_o;
output   weight_buf_3x3_V_0_1_19_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_18_i;
output  [63:0] weight_buf_3x3_V_0_1_18_o;
output   weight_buf_3x3_V_0_1_18_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_17_i;
output  [63:0] weight_buf_3x3_V_0_1_17_o;
output   weight_buf_3x3_V_0_1_17_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_16_i;
output  [63:0] weight_buf_3x3_V_0_1_16_o;
output   weight_buf_3x3_V_0_1_16_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_15_i;
output  [63:0] weight_buf_3x3_V_0_1_15_o;
output   weight_buf_3x3_V_0_1_15_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_14_i;
output  [63:0] weight_buf_3x3_V_0_1_14_o;
output   weight_buf_3x3_V_0_1_14_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_13_i;
output  [63:0] weight_buf_3x3_V_0_1_13_o;
output   weight_buf_3x3_V_0_1_13_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_12_i;
output  [63:0] weight_buf_3x3_V_0_1_12_o;
output   weight_buf_3x3_V_0_1_12_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_11_i;
output  [63:0] weight_buf_3x3_V_0_1_11_o;
output   weight_buf_3x3_V_0_1_11_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_10_i;
output  [63:0] weight_buf_3x3_V_0_1_10_o;
output   weight_buf_3x3_V_0_1_10_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_9_i;
output  [63:0] weight_buf_3x3_V_0_1_9_o;
output   weight_buf_3x3_V_0_1_9_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_8_i;
output  [63:0] weight_buf_3x3_V_0_1_8_o;
output   weight_buf_3x3_V_0_1_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_7_i;
output  [63:0] weight_buf_3x3_V_0_1_7_o;
output   weight_buf_3x3_V_0_1_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_6_i;
output  [63:0] weight_buf_3x3_V_0_1_6_o;
output   weight_buf_3x3_V_0_1_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_5_i;
output  [63:0] weight_buf_3x3_V_0_1_5_o;
output   weight_buf_3x3_V_0_1_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_4_i;
output  [63:0] weight_buf_3x3_V_0_1_4_o;
output   weight_buf_3x3_V_0_1_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_3_i;
output  [63:0] weight_buf_3x3_V_0_1_3_o;
output   weight_buf_3x3_V_0_1_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_2_i;
output  [63:0] weight_buf_3x3_V_0_1_2_o;
output   weight_buf_3x3_V_0_1_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_1_i;
output  [63:0] weight_buf_3x3_V_0_1_1_o;
output   weight_buf_3x3_V_0_1_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_1_i;
output  [63:0] weight_buf_3x3_V_0_1_o;
output   weight_buf_3x3_V_0_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_89_i;
output  [63:0] weight_buf_3x3_V_0_2_89_o;
output   weight_buf_3x3_V_0_2_89_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_88_i;
output  [63:0] weight_buf_3x3_V_0_2_88_o;
output   weight_buf_3x3_V_0_2_88_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_87_i;
output  [63:0] weight_buf_3x3_V_0_2_87_o;
output   weight_buf_3x3_V_0_2_87_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_86_i;
output  [63:0] weight_buf_3x3_V_0_2_86_o;
output   weight_buf_3x3_V_0_2_86_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_85_i;
output  [63:0] weight_buf_3x3_V_0_2_85_o;
output   weight_buf_3x3_V_0_2_85_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_84_i;
output  [63:0] weight_buf_3x3_V_0_2_84_o;
output   weight_buf_3x3_V_0_2_84_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_83_i;
output  [63:0] weight_buf_3x3_V_0_2_83_o;
output   weight_buf_3x3_V_0_2_83_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_82_i;
output  [63:0] weight_buf_3x3_V_0_2_82_o;
output   weight_buf_3x3_V_0_2_82_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_81_i;
output  [63:0] weight_buf_3x3_V_0_2_81_o;
output   weight_buf_3x3_V_0_2_81_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_80_i;
output  [63:0] weight_buf_3x3_V_0_2_80_o;
output   weight_buf_3x3_V_0_2_80_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_79_i;
output  [63:0] weight_buf_3x3_V_0_2_79_o;
output   weight_buf_3x3_V_0_2_79_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_78_i;
output  [63:0] weight_buf_3x3_V_0_2_78_o;
output   weight_buf_3x3_V_0_2_78_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_77_i;
output  [63:0] weight_buf_3x3_V_0_2_77_o;
output   weight_buf_3x3_V_0_2_77_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_76_i;
output  [63:0] weight_buf_3x3_V_0_2_76_o;
output   weight_buf_3x3_V_0_2_76_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_75_i;
output  [63:0] weight_buf_3x3_V_0_2_75_o;
output   weight_buf_3x3_V_0_2_75_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_74_i;
output  [63:0] weight_buf_3x3_V_0_2_74_o;
output   weight_buf_3x3_V_0_2_74_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_73_i;
output  [63:0] weight_buf_3x3_V_0_2_73_o;
output   weight_buf_3x3_V_0_2_73_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_72_i;
output  [63:0] weight_buf_3x3_V_0_2_72_o;
output   weight_buf_3x3_V_0_2_72_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_71_i;
output  [63:0] weight_buf_3x3_V_0_2_71_o;
output   weight_buf_3x3_V_0_2_71_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_70_i;
output  [63:0] weight_buf_3x3_V_0_2_70_o;
output   weight_buf_3x3_V_0_2_70_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_69_i;
output  [63:0] weight_buf_3x3_V_0_2_69_o;
output   weight_buf_3x3_V_0_2_69_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_68_i;
output  [63:0] weight_buf_3x3_V_0_2_68_o;
output   weight_buf_3x3_V_0_2_68_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_67_i;
output  [63:0] weight_buf_3x3_V_0_2_67_o;
output   weight_buf_3x3_V_0_2_67_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_66_i;
output  [63:0] weight_buf_3x3_V_0_2_66_o;
output   weight_buf_3x3_V_0_2_66_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_65_i;
output  [63:0] weight_buf_3x3_V_0_2_65_o;
output   weight_buf_3x3_V_0_2_65_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_64_i;
output  [63:0] weight_buf_3x3_V_0_2_64_o;
output   weight_buf_3x3_V_0_2_64_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_63_i;
output  [63:0] weight_buf_3x3_V_0_2_63_o;
output   weight_buf_3x3_V_0_2_63_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_62_i;
output  [63:0] weight_buf_3x3_V_0_2_62_o;
output   weight_buf_3x3_V_0_2_62_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_61_i;
output  [63:0] weight_buf_3x3_V_0_2_61_o;
output   weight_buf_3x3_V_0_2_61_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_60_i;
output  [63:0] weight_buf_3x3_V_0_2_60_o;
output   weight_buf_3x3_V_0_2_60_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_59_i;
output  [63:0] weight_buf_3x3_V_0_2_59_o;
output   weight_buf_3x3_V_0_2_59_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_58_i;
output  [63:0] weight_buf_3x3_V_0_2_58_o;
output   weight_buf_3x3_V_0_2_58_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_57_i;
output  [63:0] weight_buf_3x3_V_0_2_57_o;
output   weight_buf_3x3_V_0_2_57_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_56_i;
output  [63:0] weight_buf_3x3_V_0_2_56_o;
output   weight_buf_3x3_V_0_2_56_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_55_i;
output  [63:0] weight_buf_3x3_V_0_2_55_o;
output   weight_buf_3x3_V_0_2_55_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_54_i;
output  [63:0] weight_buf_3x3_V_0_2_54_o;
output   weight_buf_3x3_V_0_2_54_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_53_i;
output  [63:0] weight_buf_3x3_V_0_2_53_o;
output   weight_buf_3x3_V_0_2_53_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_52_i;
output  [63:0] weight_buf_3x3_V_0_2_52_o;
output   weight_buf_3x3_V_0_2_52_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_51_i;
output  [63:0] weight_buf_3x3_V_0_2_51_o;
output   weight_buf_3x3_V_0_2_51_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_50_i;
output  [63:0] weight_buf_3x3_V_0_2_50_o;
output   weight_buf_3x3_V_0_2_50_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_49_i;
output  [63:0] weight_buf_3x3_V_0_2_49_o;
output   weight_buf_3x3_V_0_2_49_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_48_i;
output  [63:0] weight_buf_3x3_V_0_2_48_o;
output   weight_buf_3x3_V_0_2_48_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_47_i;
output  [63:0] weight_buf_3x3_V_0_2_47_o;
output   weight_buf_3x3_V_0_2_47_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_46_i;
output  [63:0] weight_buf_3x3_V_0_2_46_o;
output   weight_buf_3x3_V_0_2_46_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_45_i;
output  [63:0] weight_buf_3x3_V_0_2_45_o;
output   weight_buf_3x3_V_0_2_45_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_44_i;
output  [63:0] weight_buf_3x3_V_0_2_44_o;
output   weight_buf_3x3_V_0_2_44_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_43_i;
output  [63:0] weight_buf_3x3_V_0_2_43_o;
output   weight_buf_3x3_V_0_2_43_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_42_i;
output  [63:0] weight_buf_3x3_V_0_2_42_o;
output   weight_buf_3x3_V_0_2_42_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_41_i;
output  [63:0] weight_buf_3x3_V_0_2_41_o;
output   weight_buf_3x3_V_0_2_41_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_40_i;
output  [63:0] weight_buf_3x3_V_0_2_40_o;
output   weight_buf_3x3_V_0_2_40_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_39_i;
output  [63:0] weight_buf_3x3_V_0_2_39_o;
output   weight_buf_3x3_V_0_2_39_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_38_i;
output  [63:0] weight_buf_3x3_V_0_2_38_o;
output   weight_buf_3x3_V_0_2_38_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_37_i;
output  [63:0] weight_buf_3x3_V_0_2_37_o;
output   weight_buf_3x3_V_0_2_37_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_36_i;
output  [63:0] weight_buf_3x3_V_0_2_36_o;
output   weight_buf_3x3_V_0_2_36_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_35_i;
output  [63:0] weight_buf_3x3_V_0_2_35_o;
output   weight_buf_3x3_V_0_2_35_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_34_i;
output  [63:0] weight_buf_3x3_V_0_2_34_o;
output   weight_buf_3x3_V_0_2_34_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_33_i;
output  [63:0] weight_buf_3x3_V_0_2_33_o;
output   weight_buf_3x3_V_0_2_33_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_32_i;
output  [63:0] weight_buf_3x3_V_0_2_32_o;
output   weight_buf_3x3_V_0_2_32_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_31_i;
output  [63:0] weight_buf_3x3_V_0_2_31_o;
output   weight_buf_3x3_V_0_2_31_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_30_i;
output  [63:0] weight_buf_3x3_V_0_2_30_o;
output   weight_buf_3x3_V_0_2_30_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_29_i;
output  [63:0] weight_buf_3x3_V_0_2_29_o;
output   weight_buf_3x3_V_0_2_29_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_28_i;
output  [63:0] weight_buf_3x3_V_0_2_28_o;
output   weight_buf_3x3_V_0_2_28_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_27_i;
output  [63:0] weight_buf_3x3_V_0_2_27_o;
output   weight_buf_3x3_V_0_2_27_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_26_i;
output  [63:0] weight_buf_3x3_V_0_2_26_o;
output   weight_buf_3x3_V_0_2_26_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_25_i;
output  [63:0] weight_buf_3x3_V_0_2_25_o;
output   weight_buf_3x3_V_0_2_25_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_24_i;
output  [63:0] weight_buf_3x3_V_0_2_24_o;
output   weight_buf_3x3_V_0_2_24_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_23_i;
output  [63:0] weight_buf_3x3_V_0_2_23_o;
output   weight_buf_3x3_V_0_2_23_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_22_i;
output  [63:0] weight_buf_3x3_V_0_2_22_o;
output   weight_buf_3x3_V_0_2_22_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_21_i;
output  [63:0] weight_buf_3x3_V_0_2_21_o;
output   weight_buf_3x3_V_0_2_21_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_20_i;
output  [63:0] weight_buf_3x3_V_0_2_20_o;
output   weight_buf_3x3_V_0_2_20_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_19_i;
output  [63:0] weight_buf_3x3_V_0_2_19_o;
output   weight_buf_3x3_V_0_2_19_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_18_i;
output  [63:0] weight_buf_3x3_V_0_2_18_o;
output   weight_buf_3x3_V_0_2_18_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_17_i;
output  [63:0] weight_buf_3x3_V_0_2_17_o;
output   weight_buf_3x3_V_0_2_17_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_16_i;
output  [63:0] weight_buf_3x3_V_0_2_16_o;
output   weight_buf_3x3_V_0_2_16_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_15_i;
output  [63:0] weight_buf_3x3_V_0_2_15_o;
output   weight_buf_3x3_V_0_2_15_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_14_i;
output  [63:0] weight_buf_3x3_V_0_2_14_o;
output   weight_buf_3x3_V_0_2_14_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_13_i;
output  [63:0] weight_buf_3x3_V_0_2_13_o;
output   weight_buf_3x3_V_0_2_13_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_12_i;
output  [63:0] weight_buf_3x3_V_0_2_12_o;
output   weight_buf_3x3_V_0_2_12_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_11_i;
output  [63:0] weight_buf_3x3_V_0_2_11_o;
output   weight_buf_3x3_V_0_2_11_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_10_i;
output  [63:0] weight_buf_3x3_V_0_2_10_o;
output   weight_buf_3x3_V_0_2_10_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_9_i;
output  [63:0] weight_buf_3x3_V_0_2_9_o;
output   weight_buf_3x3_V_0_2_9_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_8_i;
output  [63:0] weight_buf_3x3_V_0_2_8_o;
output   weight_buf_3x3_V_0_2_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_7_i;
output  [63:0] weight_buf_3x3_V_0_2_7_o;
output   weight_buf_3x3_V_0_2_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_6_i;
output  [63:0] weight_buf_3x3_V_0_2_6_o;
output   weight_buf_3x3_V_0_2_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_5_i;
output  [63:0] weight_buf_3x3_V_0_2_5_o;
output   weight_buf_3x3_V_0_2_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_4_i;
output  [63:0] weight_buf_3x3_V_0_2_4_o;
output   weight_buf_3x3_V_0_2_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_3_i;
output  [63:0] weight_buf_3x3_V_0_2_3_o;
output   weight_buf_3x3_V_0_2_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_2_i;
output  [63:0] weight_buf_3x3_V_0_2_2_o;
output   weight_buf_3x3_V_0_2_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_1_i;
output  [63:0] weight_buf_3x3_V_0_2_1_o;
output   weight_buf_3x3_V_0_2_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_2_i;
output  [63:0] weight_buf_3x3_V_0_2_o;
output   weight_buf_3x3_V_0_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_17_i;
output  [63:0] weight_buf_3x3_V_0_3_17_o;
output   weight_buf_3x3_V_0_3_17_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_16_i;
output  [63:0] weight_buf_3x3_V_0_3_16_o;
output   weight_buf_3x3_V_0_3_16_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_15_i;
output  [63:0] weight_buf_3x3_V_0_3_15_o;
output   weight_buf_3x3_V_0_3_15_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_14_i;
output  [63:0] weight_buf_3x3_V_0_3_14_o;
output   weight_buf_3x3_V_0_3_14_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_13_i;
output  [63:0] weight_buf_3x3_V_0_3_13_o;
output   weight_buf_3x3_V_0_3_13_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_12_i;
output  [63:0] weight_buf_3x3_V_0_3_12_o;
output   weight_buf_3x3_V_0_3_12_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_11_i;
output  [63:0] weight_buf_3x3_V_0_3_11_o;
output   weight_buf_3x3_V_0_3_11_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_10_i;
output  [63:0] weight_buf_3x3_V_0_3_10_o;
output   weight_buf_3x3_V_0_3_10_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_9_i;
output  [63:0] weight_buf_3x3_V_0_3_9_o;
output   weight_buf_3x3_V_0_3_9_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_8_i;
output  [63:0] weight_buf_3x3_V_0_3_8_o;
output   weight_buf_3x3_V_0_3_8_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_7_i;
output  [63:0] weight_buf_3x3_V_0_3_7_o;
output   weight_buf_3x3_V_0_3_7_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_6_i;
output  [63:0] weight_buf_3x3_V_0_3_6_o;
output   weight_buf_3x3_V_0_3_6_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_5_i;
output  [63:0] weight_buf_3x3_V_0_3_5_o;
output   weight_buf_3x3_V_0_3_5_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_4_i;
output  [63:0] weight_buf_3x3_V_0_3_4_o;
output   weight_buf_3x3_V_0_3_4_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_3_i;
output  [63:0] weight_buf_3x3_V_0_3_3_o;
output   weight_buf_3x3_V_0_3_3_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_2_i;
output  [63:0] weight_buf_3x3_V_0_3_2_o;
output   weight_buf_3x3_V_0_3_2_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_1_i;
output  [63:0] weight_buf_3x3_V_0_3_1_o;
output   weight_buf_3x3_V_0_3_1_o_ap_vld;
input  [63:0] weight_buf_3x3_V_0_3_i;
output  [63:0] weight_buf_3x3_V_0_3_o;
output   weight_buf_3x3_V_0_3_o_ap_vld;
output  [9:0] bn_weight_buf_V_0_0;
output   bn_weight_buf_V_0_0_ap_vld;
output  [9:0] bn_bias_buf_V_0_0;
output   bn_bias_buf_V_0_0_ap_vld;
output  [9:0] bn_weight_buf_V_1_0;
output   bn_weight_buf_V_1_0_ap_vld;
output  [9:0] bn_bias_buf_V_1_0;
output   bn_bias_buf_V_1_0_ap_vld;
output  [9:0] bn_weight_buf_V_2_0;
output   bn_weight_buf_V_2_0_ap_vld;
output  [9:0] bn_bias_buf_V_2_0;
output   bn_bias_buf_V_2_0_ap_vld;
output  [9:0] bn_weight_buf_V_3_0;
output   bn_weight_buf_V_3_0_ap_vld;
output  [9:0] bn_bias_buf_V_3_0;
output   bn_bias_buf_V_3_0_ap_vld;
output  [9:0] bn_weight_buf_V_4_0;
output   bn_weight_buf_V_4_0_ap_vld;
output  [9:0] bn_bias_buf_V_4_0;
output   bn_bias_buf_V_4_0_ap_vld;
output  [9:0] bn_weight_buf_V_5_0;
output   bn_weight_buf_V_5_0_ap_vld;
output  [9:0] bn_bias_buf_V_5_0;
output   bn_bias_buf_V_5_0_ap_vld;
output  [9:0] bn_weight_buf_V_6_0;
output   bn_weight_buf_V_6_0_ap_vld;
output  [9:0] bn_bias_buf_V_6_0;
output   bn_bias_buf_V_6_0_ap_vld;
output  [9:0] bn_weight_buf_V_7_0;
output   bn_weight_buf_V_7_0_ap_vld;
output  [9:0] bn_bias_buf_V_7_0;
output   bn_bias_buf_V_7_0_ap_vld;
output  [9:0] bn_weight_buf_V_8_0;
output   bn_weight_buf_V_8_0_ap_vld;
output  [9:0] bn_bias_buf_V_8_0;
output   bn_bias_buf_V_8_0_ap_vld;
output  [9:0] bn_weight_buf_V_9_0;
output   bn_weight_buf_V_9_0_ap_vld;
output  [9:0] bn_bias_buf_V_9_0;
output   bn_bias_buf_V_9_0_ap_vld;
output  [9:0] bn_weight_buf_V_10_0;
output   bn_weight_buf_V_10_0_ap_vld;
output  [9:0] bn_bias_buf_V_10_0;
output   bn_bias_buf_V_10_0_ap_vld;
output  [9:0] bn_weight_buf_V_11_0;
output   bn_weight_buf_V_11_0_ap_vld;
output  [9:0] bn_bias_buf_V_11_0;
output   bn_bias_buf_V_11_0_ap_vld;
output  [9:0] bn_weight_buf_V_12_0;
output   bn_weight_buf_V_12_0_ap_vld;
output  [9:0] bn_bias_buf_V_12_0;
output   bn_bias_buf_V_12_0_ap_vld;
output  [9:0] bn_weight_buf_V_13_0;
output   bn_weight_buf_V_13_0_ap_vld;
output  [9:0] bn_bias_buf_V_13_0;
output   bn_bias_buf_V_13_0_ap_vld;
output  [9:0] bn_weight_buf_V_14_0;
output   bn_weight_buf_V_14_0_ap_vld;
output  [9:0] bn_bias_buf_V_14_0;
output   bn_bias_buf_V_14_0_ap_vld;
output  [9:0] bn_weight_buf_V_15_0;
output   bn_weight_buf_V_15_0_ap_vld;
output  [9:0] bn_bias_buf_V_15_0;
output   bn_bias_buf_V_15_0_ap_vld;
output  [9:0] bn_weight_buf_V_16_0;
output   bn_weight_buf_V_16_0_ap_vld;
output  [9:0] bn_bias_buf_V_16_0;
output   bn_bias_buf_V_16_0_ap_vld;
output  [9:0] bn_weight_buf_V_17_0;
output   bn_weight_buf_V_17_0_ap_vld;
output  [9:0] bn_bias_buf_V_17_0;
output   bn_bias_buf_V_17_0_ap_vld;
output  [9:0] bn_weight_buf_V_18_0;
output   bn_weight_buf_V_18_0_ap_vld;
output  [9:0] bn_bias_buf_V_18_0;
output   bn_bias_buf_V_18_0_ap_vld;
output  [9:0] bn_weight_buf_V_19_0;
output   bn_weight_buf_V_19_0_ap_vld;
output  [9:0] bn_bias_buf_V_19_0;
output   bn_bias_buf_V_19_0_ap_vld;
output  [9:0] bn_weight_buf_V_20_0;
output   bn_weight_buf_V_20_0_ap_vld;
output  [9:0] bn_bias_buf_V_20_0;
output   bn_bias_buf_V_20_0_ap_vld;
output  [9:0] bn_weight_buf_V_21_0;
output   bn_weight_buf_V_21_0_ap_vld;
output  [9:0] bn_bias_buf_V_21_0;
output   bn_bias_buf_V_21_0_ap_vld;
output  [9:0] bn_weight_buf_V_22_0;
output   bn_weight_buf_V_22_0_ap_vld;
output  [9:0] bn_bias_buf_V_22_0;
output   bn_bias_buf_V_22_0_ap_vld;
output  [9:0] bn_weight_buf_V_23_0;
output   bn_weight_buf_V_23_0_ap_vld;
output  [9:0] bn_bias_buf_V_23_0;
output   bn_bias_buf_V_23_0_ap_vld;
output  [9:0] bn_weight_buf_V_24_0;
output   bn_weight_buf_V_24_0_ap_vld;
output  [9:0] bn_bias_buf_V_24_0;
output   bn_bias_buf_V_24_0_ap_vld;
output  [9:0] bn_weight_buf_V_25_0;
output   bn_weight_buf_V_25_0_ap_vld;
output  [9:0] bn_bias_buf_V_25_0;
output   bn_bias_buf_V_25_0_ap_vld;
output  [9:0] bn_weight_buf_V_26_0;
output   bn_weight_buf_V_26_0_ap_vld;
output  [9:0] bn_bias_buf_V_26_0;
output   bn_bias_buf_V_26_0_ap_vld;
output  [9:0] bn_weight_buf_V_27_0;
output   bn_weight_buf_V_27_0_ap_vld;
output  [9:0] bn_bias_buf_V_27_0;
output   bn_bias_buf_V_27_0_ap_vld;
output  [9:0] bn_weight_buf_V_28_0;
output   bn_weight_buf_V_28_0_ap_vld;
output  [9:0] bn_bias_buf_V_28_0;
output   bn_bias_buf_V_28_0_ap_vld;
output  [9:0] bn_weight_buf_V_29_0;
output   bn_weight_buf_V_29_0_ap_vld;
output  [9:0] bn_bias_buf_V_29_0;
output   bn_bias_buf_V_29_0_ap_vld;
output  [9:0] bn_weight_buf_V_30_0;
output   bn_weight_buf_V_30_0_ap_vld;
output  [9:0] bn_bias_buf_V_30_0;
output   bn_bias_buf_V_30_0_ap_vld;
output  [9:0] bn_weight_buf_V_31_0;
output   bn_weight_buf_V_31_0_ap_vld;
output  [9:0] bn_bias_buf_V_31_0;
output   bn_bias_buf_V_31_0_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_conv_weight_3x3_all_V_ARVALID;
reg[31:0] m_axi_conv_weight_3x3_all_V_ARADDR;
reg[0:0] m_axi_conv_weight_3x3_all_V_ARID;
reg[31:0] m_axi_conv_weight_3x3_all_V_ARLEN;
reg[2:0] m_axi_conv_weight_3x3_all_V_ARSIZE;
reg[1:0] m_axi_conv_weight_3x3_all_V_ARBURST;
reg[1:0] m_axi_conv_weight_3x3_all_V_ARLOCK;
reg[3:0] m_axi_conv_weight_3x3_all_V_ARCACHE;
reg[2:0] m_axi_conv_weight_3x3_all_V_ARPROT;
reg[3:0] m_axi_conv_weight_3x3_all_V_ARQOS;
reg[3:0] m_axi_conv_weight_3x3_all_V_ARREGION;
reg[0:0] m_axi_conv_weight_3x3_all_V_ARUSER;
reg m_axi_conv_weight_3x3_all_V_RREADY;
reg[63:0] weight_buf_3x3_V_0_0_8_o;
reg weight_buf_3x3_V_0_0_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_0_7_o;
reg weight_buf_3x3_V_0_0_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_0_6_o;
reg weight_buf_3x3_V_0_0_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_0_5_o;
reg weight_buf_3x3_V_0_0_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_0_4_o;
reg weight_buf_3x3_V_0_0_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_0_3_o;
reg weight_buf_3x3_V_0_0_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_0_2_o;
reg weight_buf_3x3_V_0_0_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_0_1_o;
reg weight_buf_3x3_V_0_0_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_0_o;
reg weight_buf_3x3_V_0_0_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_98_o;
reg weight_buf_3x3_V_0_1_98_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_97_o;
reg weight_buf_3x3_V_0_1_97_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_96_o;
reg weight_buf_3x3_V_0_1_96_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_95_o;
reg weight_buf_3x3_V_0_1_95_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_94_o;
reg weight_buf_3x3_V_0_1_94_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_93_o;
reg weight_buf_3x3_V_0_1_93_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_92_o;
reg weight_buf_3x3_V_0_1_92_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_91_o;
reg weight_buf_3x3_V_0_1_91_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_90_o;
reg weight_buf_3x3_V_0_1_90_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_98_o;
reg weight_buf_3x3_V_0_2_98_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_97_o;
reg weight_buf_3x3_V_0_2_97_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_96_o;
reg weight_buf_3x3_V_0_2_96_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_95_o;
reg weight_buf_3x3_V_0_2_95_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_94_o;
reg weight_buf_3x3_V_0_2_94_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_93_o;
reg weight_buf_3x3_V_0_2_93_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_92_o;
reg weight_buf_3x3_V_0_2_92_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_91_o;
reg weight_buf_3x3_V_0_2_91_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_90_o;
reg weight_buf_3x3_V_0_2_90_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_26_o;
reg weight_buf_3x3_V_0_3_26_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_25_o;
reg weight_buf_3x3_V_0_3_25_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_24_o;
reg weight_buf_3x3_V_0_3_24_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_23_o;
reg weight_buf_3x3_V_0_3_23_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_22_o;
reg weight_buf_3x3_V_0_3_22_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_21_o;
reg weight_buf_3x3_V_0_3_21_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_20_o;
reg weight_buf_3x3_V_0_3_20_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_19_o;
reg weight_buf_3x3_V_0_3_19_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_18_o;
reg weight_buf_3x3_V_0_3_18_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_4_8_o;
reg weight_buf_3x3_V_0_4_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_4_7_o;
reg weight_buf_3x3_V_0_4_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_4_6_o;
reg weight_buf_3x3_V_0_4_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_4_5_o;
reg weight_buf_3x3_V_0_4_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_4_4_o;
reg weight_buf_3x3_V_0_4_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_4_3_o;
reg weight_buf_3x3_V_0_4_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_4_2_o;
reg weight_buf_3x3_V_0_4_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_4_1_o;
reg weight_buf_3x3_V_0_4_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_4_o;
reg weight_buf_3x3_V_0_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_5_8_o;
reg weight_buf_3x3_V_0_5_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_5_7_o;
reg weight_buf_3x3_V_0_5_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_5_6_o;
reg weight_buf_3x3_V_0_5_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_5_5_o;
reg weight_buf_3x3_V_0_5_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_5_4_o;
reg weight_buf_3x3_V_0_5_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_5_3_o;
reg weight_buf_3x3_V_0_5_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_5_2_o;
reg weight_buf_3x3_V_0_5_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_5_1_o;
reg weight_buf_3x3_V_0_5_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_5_o;
reg weight_buf_3x3_V_0_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_6_8_o;
reg weight_buf_3x3_V_0_6_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_6_7_o;
reg weight_buf_3x3_V_0_6_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_6_6_o;
reg weight_buf_3x3_V_0_6_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_6_5_o;
reg weight_buf_3x3_V_0_6_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_6_4_o;
reg weight_buf_3x3_V_0_6_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_6_3_o;
reg weight_buf_3x3_V_0_6_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_6_2_o;
reg weight_buf_3x3_V_0_6_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_6_1_o;
reg weight_buf_3x3_V_0_6_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_6_o;
reg weight_buf_3x3_V_0_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_7_8_o;
reg weight_buf_3x3_V_0_7_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_7_7_o;
reg weight_buf_3x3_V_0_7_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_7_6_o;
reg weight_buf_3x3_V_0_7_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_7_5_o;
reg weight_buf_3x3_V_0_7_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_7_4_o;
reg weight_buf_3x3_V_0_7_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_7_3_o;
reg weight_buf_3x3_V_0_7_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_7_2_o;
reg weight_buf_3x3_V_0_7_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_7_1_o;
reg weight_buf_3x3_V_0_7_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_7_o;
reg weight_buf_3x3_V_0_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_8_8_o;
reg weight_buf_3x3_V_0_8_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_8_7_o;
reg weight_buf_3x3_V_0_8_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_8_6_o;
reg weight_buf_3x3_V_0_8_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_8_5_o;
reg weight_buf_3x3_V_0_8_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_8_4_o;
reg weight_buf_3x3_V_0_8_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_8_3_o;
reg weight_buf_3x3_V_0_8_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_8_2_o;
reg weight_buf_3x3_V_0_8_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_8_1_o;
reg weight_buf_3x3_V_0_8_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_8_o;
reg weight_buf_3x3_V_0_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_9_8_o;
reg weight_buf_3x3_V_0_9_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_9_7_o;
reg weight_buf_3x3_V_0_9_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_9_6_o;
reg weight_buf_3x3_V_0_9_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_9_5_o;
reg weight_buf_3x3_V_0_9_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_9_4_o;
reg weight_buf_3x3_V_0_9_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_9_3_o;
reg weight_buf_3x3_V_0_9_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_9_2_o;
reg weight_buf_3x3_V_0_9_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_9_1_o;
reg weight_buf_3x3_V_0_9_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_9_o;
reg weight_buf_3x3_V_0_9_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_89_o;
reg weight_buf_3x3_V_0_1_89_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_88_o;
reg weight_buf_3x3_V_0_1_88_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_87_o;
reg weight_buf_3x3_V_0_1_87_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_86_o;
reg weight_buf_3x3_V_0_1_86_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_85_o;
reg weight_buf_3x3_V_0_1_85_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_84_o;
reg weight_buf_3x3_V_0_1_84_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_83_o;
reg weight_buf_3x3_V_0_1_83_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_82_o;
reg weight_buf_3x3_V_0_1_82_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_81_o;
reg weight_buf_3x3_V_0_1_81_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_80_o;
reg weight_buf_3x3_V_0_1_80_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_79_o;
reg weight_buf_3x3_V_0_1_79_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_78_o;
reg weight_buf_3x3_V_0_1_78_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_77_o;
reg weight_buf_3x3_V_0_1_77_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_76_o;
reg weight_buf_3x3_V_0_1_76_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_75_o;
reg weight_buf_3x3_V_0_1_75_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_74_o;
reg weight_buf_3x3_V_0_1_74_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_73_o;
reg weight_buf_3x3_V_0_1_73_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_72_o;
reg weight_buf_3x3_V_0_1_72_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_71_o;
reg weight_buf_3x3_V_0_1_71_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_70_o;
reg weight_buf_3x3_V_0_1_70_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_69_o;
reg weight_buf_3x3_V_0_1_69_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_68_o;
reg weight_buf_3x3_V_0_1_68_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_67_o;
reg weight_buf_3x3_V_0_1_67_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_66_o;
reg weight_buf_3x3_V_0_1_66_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_65_o;
reg weight_buf_3x3_V_0_1_65_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_64_o;
reg weight_buf_3x3_V_0_1_64_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_63_o;
reg weight_buf_3x3_V_0_1_63_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_62_o;
reg weight_buf_3x3_V_0_1_62_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_61_o;
reg weight_buf_3x3_V_0_1_61_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_60_o;
reg weight_buf_3x3_V_0_1_60_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_59_o;
reg weight_buf_3x3_V_0_1_59_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_58_o;
reg weight_buf_3x3_V_0_1_58_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_57_o;
reg weight_buf_3x3_V_0_1_57_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_56_o;
reg weight_buf_3x3_V_0_1_56_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_55_o;
reg weight_buf_3x3_V_0_1_55_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_54_o;
reg weight_buf_3x3_V_0_1_54_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_53_o;
reg weight_buf_3x3_V_0_1_53_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_52_o;
reg weight_buf_3x3_V_0_1_52_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_51_o;
reg weight_buf_3x3_V_0_1_51_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_50_o;
reg weight_buf_3x3_V_0_1_50_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_49_o;
reg weight_buf_3x3_V_0_1_49_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_48_o;
reg weight_buf_3x3_V_0_1_48_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_47_o;
reg weight_buf_3x3_V_0_1_47_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_46_o;
reg weight_buf_3x3_V_0_1_46_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_45_o;
reg weight_buf_3x3_V_0_1_45_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_44_o;
reg weight_buf_3x3_V_0_1_44_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_43_o;
reg weight_buf_3x3_V_0_1_43_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_42_o;
reg weight_buf_3x3_V_0_1_42_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_41_o;
reg weight_buf_3x3_V_0_1_41_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_40_o;
reg weight_buf_3x3_V_0_1_40_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_39_o;
reg weight_buf_3x3_V_0_1_39_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_38_o;
reg weight_buf_3x3_V_0_1_38_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_37_o;
reg weight_buf_3x3_V_0_1_37_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_36_o;
reg weight_buf_3x3_V_0_1_36_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_35_o;
reg weight_buf_3x3_V_0_1_35_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_34_o;
reg weight_buf_3x3_V_0_1_34_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_33_o;
reg weight_buf_3x3_V_0_1_33_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_32_o;
reg weight_buf_3x3_V_0_1_32_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_31_o;
reg weight_buf_3x3_V_0_1_31_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_30_o;
reg weight_buf_3x3_V_0_1_30_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_29_o;
reg weight_buf_3x3_V_0_1_29_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_28_o;
reg weight_buf_3x3_V_0_1_28_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_27_o;
reg weight_buf_3x3_V_0_1_27_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_26_o;
reg weight_buf_3x3_V_0_1_26_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_25_o;
reg weight_buf_3x3_V_0_1_25_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_24_o;
reg weight_buf_3x3_V_0_1_24_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_23_o;
reg weight_buf_3x3_V_0_1_23_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_22_o;
reg weight_buf_3x3_V_0_1_22_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_21_o;
reg weight_buf_3x3_V_0_1_21_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_20_o;
reg weight_buf_3x3_V_0_1_20_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_19_o;
reg weight_buf_3x3_V_0_1_19_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_18_o;
reg weight_buf_3x3_V_0_1_18_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_17_o;
reg weight_buf_3x3_V_0_1_17_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_16_o;
reg weight_buf_3x3_V_0_1_16_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_15_o;
reg weight_buf_3x3_V_0_1_15_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_14_o;
reg weight_buf_3x3_V_0_1_14_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_13_o;
reg weight_buf_3x3_V_0_1_13_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_12_o;
reg weight_buf_3x3_V_0_1_12_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_11_o;
reg weight_buf_3x3_V_0_1_11_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_10_o;
reg weight_buf_3x3_V_0_1_10_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_9_o;
reg weight_buf_3x3_V_0_1_9_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_8_o;
reg weight_buf_3x3_V_0_1_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_7_o;
reg weight_buf_3x3_V_0_1_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_6_o;
reg weight_buf_3x3_V_0_1_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_5_o;
reg weight_buf_3x3_V_0_1_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_4_o;
reg weight_buf_3x3_V_0_1_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_3_o;
reg weight_buf_3x3_V_0_1_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_2_o;
reg weight_buf_3x3_V_0_1_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_1_o;
reg weight_buf_3x3_V_0_1_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_1_o;
reg weight_buf_3x3_V_0_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_89_o;
reg weight_buf_3x3_V_0_2_89_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_88_o;
reg weight_buf_3x3_V_0_2_88_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_87_o;
reg weight_buf_3x3_V_0_2_87_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_86_o;
reg weight_buf_3x3_V_0_2_86_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_85_o;
reg weight_buf_3x3_V_0_2_85_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_84_o;
reg weight_buf_3x3_V_0_2_84_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_83_o;
reg weight_buf_3x3_V_0_2_83_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_82_o;
reg weight_buf_3x3_V_0_2_82_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_81_o;
reg weight_buf_3x3_V_0_2_81_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_80_o;
reg weight_buf_3x3_V_0_2_80_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_79_o;
reg weight_buf_3x3_V_0_2_79_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_78_o;
reg weight_buf_3x3_V_0_2_78_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_77_o;
reg weight_buf_3x3_V_0_2_77_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_76_o;
reg weight_buf_3x3_V_0_2_76_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_75_o;
reg weight_buf_3x3_V_0_2_75_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_74_o;
reg weight_buf_3x3_V_0_2_74_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_73_o;
reg weight_buf_3x3_V_0_2_73_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_72_o;
reg weight_buf_3x3_V_0_2_72_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_71_o;
reg weight_buf_3x3_V_0_2_71_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_70_o;
reg weight_buf_3x3_V_0_2_70_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_69_o;
reg weight_buf_3x3_V_0_2_69_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_68_o;
reg weight_buf_3x3_V_0_2_68_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_67_o;
reg weight_buf_3x3_V_0_2_67_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_66_o;
reg weight_buf_3x3_V_0_2_66_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_65_o;
reg weight_buf_3x3_V_0_2_65_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_64_o;
reg weight_buf_3x3_V_0_2_64_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_63_o;
reg weight_buf_3x3_V_0_2_63_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_62_o;
reg weight_buf_3x3_V_0_2_62_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_61_o;
reg weight_buf_3x3_V_0_2_61_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_60_o;
reg weight_buf_3x3_V_0_2_60_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_59_o;
reg weight_buf_3x3_V_0_2_59_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_58_o;
reg weight_buf_3x3_V_0_2_58_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_57_o;
reg weight_buf_3x3_V_0_2_57_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_56_o;
reg weight_buf_3x3_V_0_2_56_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_55_o;
reg weight_buf_3x3_V_0_2_55_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_54_o;
reg weight_buf_3x3_V_0_2_54_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_53_o;
reg weight_buf_3x3_V_0_2_53_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_52_o;
reg weight_buf_3x3_V_0_2_52_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_51_o;
reg weight_buf_3x3_V_0_2_51_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_50_o;
reg weight_buf_3x3_V_0_2_50_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_49_o;
reg weight_buf_3x3_V_0_2_49_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_48_o;
reg weight_buf_3x3_V_0_2_48_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_47_o;
reg weight_buf_3x3_V_0_2_47_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_46_o;
reg weight_buf_3x3_V_0_2_46_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_45_o;
reg weight_buf_3x3_V_0_2_45_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_44_o;
reg weight_buf_3x3_V_0_2_44_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_43_o;
reg weight_buf_3x3_V_0_2_43_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_42_o;
reg weight_buf_3x3_V_0_2_42_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_41_o;
reg weight_buf_3x3_V_0_2_41_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_40_o;
reg weight_buf_3x3_V_0_2_40_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_39_o;
reg weight_buf_3x3_V_0_2_39_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_38_o;
reg weight_buf_3x3_V_0_2_38_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_37_o;
reg weight_buf_3x3_V_0_2_37_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_36_o;
reg weight_buf_3x3_V_0_2_36_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_35_o;
reg weight_buf_3x3_V_0_2_35_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_34_o;
reg weight_buf_3x3_V_0_2_34_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_33_o;
reg weight_buf_3x3_V_0_2_33_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_32_o;
reg weight_buf_3x3_V_0_2_32_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_31_o;
reg weight_buf_3x3_V_0_2_31_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_30_o;
reg weight_buf_3x3_V_0_2_30_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_29_o;
reg weight_buf_3x3_V_0_2_29_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_28_o;
reg weight_buf_3x3_V_0_2_28_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_27_o;
reg weight_buf_3x3_V_0_2_27_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_26_o;
reg weight_buf_3x3_V_0_2_26_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_25_o;
reg weight_buf_3x3_V_0_2_25_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_24_o;
reg weight_buf_3x3_V_0_2_24_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_23_o;
reg weight_buf_3x3_V_0_2_23_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_22_o;
reg weight_buf_3x3_V_0_2_22_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_21_o;
reg weight_buf_3x3_V_0_2_21_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_20_o;
reg weight_buf_3x3_V_0_2_20_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_19_o;
reg weight_buf_3x3_V_0_2_19_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_18_o;
reg weight_buf_3x3_V_0_2_18_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_17_o;
reg weight_buf_3x3_V_0_2_17_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_16_o;
reg weight_buf_3x3_V_0_2_16_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_15_o;
reg weight_buf_3x3_V_0_2_15_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_14_o;
reg weight_buf_3x3_V_0_2_14_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_13_o;
reg weight_buf_3x3_V_0_2_13_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_12_o;
reg weight_buf_3x3_V_0_2_12_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_11_o;
reg weight_buf_3x3_V_0_2_11_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_10_o;
reg weight_buf_3x3_V_0_2_10_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_9_o;
reg weight_buf_3x3_V_0_2_9_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_8_o;
reg weight_buf_3x3_V_0_2_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_7_o;
reg weight_buf_3x3_V_0_2_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_6_o;
reg weight_buf_3x3_V_0_2_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_5_o;
reg weight_buf_3x3_V_0_2_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_4_o;
reg weight_buf_3x3_V_0_2_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_3_o;
reg weight_buf_3x3_V_0_2_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_2_o;
reg weight_buf_3x3_V_0_2_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_1_o;
reg weight_buf_3x3_V_0_2_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_2_o;
reg weight_buf_3x3_V_0_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_17_o;
reg weight_buf_3x3_V_0_3_17_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_16_o;
reg weight_buf_3x3_V_0_3_16_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_15_o;
reg weight_buf_3x3_V_0_3_15_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_14_o;
reg weight_buf_3x3_V_0_3_14_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_13_o;
reg weight_buf_3x3_V_0_3_13_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_12_o;
reg weight_buf_3x3_V_0_3_12_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_11_o;
reg weight_buf_3x3_V_0_3_11_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_10_o;
reg weight_buf_3x3_V_0_3_10_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_9_o;
reg weight_buf_3x3_V_0_3_9_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_8_o;
reg weight_buf_3x3_V_0_3_8_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_7_o;
reg weight_buf_3x3_V_0_3_7_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_6_o;
reg weight_buf_3x3_V_0_3_6_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_5_o;
reg weight_buf_3x3_V_0_3_5_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_4_o;
reg weight_buf_3x3_V_0_3_4_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_3_o;
reg weight_buf_3x3_V_0_3_3_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_2_o;
reg weight_buf_3x3_V_0_3_2_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_1_o;
reg weight_buf_3x3_V_0_3_1_o_ap_vld;
reg[63:0] weight_buf_3x3_V_0_3_o;
reg weight_buf_3x3_V_0_3_o_ap_vld;
reg bn_weight_buf_V_0_0_ap_vld;
reg bn_bias_buf_V_0_0_ap_vld;
reg bn_weight_buf_V_1_0_ap_vld;
reg bn_bias_buf_V_1_0_ap_vld;
reg bn_weight_buf_V_2_0_ap_vld;
reg bn_bias_buf_V_2_0_ap_vld;
reg bn_weight_buf_V_3_0_ap_vld;
reg bn_bias_buf_V_3_0_ap_vld;
reg bn_weight_buf_V_4_0_ap_vld;
reg bn_bias_buf_V_4_0_ap_vld;
reg bn_weight_buf_V_5_0_ap_vld;
reg bn_bias_buf_V_5_0_ap_vld;
reg bn_weight_buf_V_6_0_ap_vld;
reg bn_bias_buf_V_6_0_ap_vld;
reg bn_weight_buf_V_7_0_ap_vld;
reg bn_bias_buf_V_7_0_ap_vld;
reg bn_weight_buf_V_8_0_ap_vld;
reg bn_bias_buf_V_8_0_ap_vld;
reg bn_weight_buf_V_9_0_ap_vld;
reg bn_bias_buf_V_9_0_ap_vld;
reg bn_weight_buf_V_10_0_ap_vld;
reg bn_bias_buf_V_10_0_ap_vld;
reg bn_weight_buf_V_11_0_ap_vld;
reg bn_bias_buf_V_11_0_ap_vld;
reg bn_weight_buf_V_12_0_ap_vld;
reg bn_bias_buf_V_12_0_ap_vld;
reg bn_weight_buf_V_13_0_ap_vld;
reg bn_bias_buf_V_13_0_ap_vld;
reg bn_weight_buf_V_14_0_ap_vld;
reg bn_bias_buf_V_14_0_ap_vld;
reg bn_weight_buf_V_15_0_ap_vld;
reg bn_bias_buf_V_15_0_ap_vld;
reg bn_weight_buf_V_16_0_ap_vld;
reg bn_bias_buf_V_16_0_ap_vld;
reg bn_weight_buf_V_17_0_ap_vld;
reg bn_bias_buf_V_17_0_ap_vld;
reg bn_weight_buf_V_18_0_ap_vld;
reg bn_bias_buf_V_18_0_ap_vld;
reg bn_weight_buf_V_19_0_ap_vld;
reg bn_bias_buf_V_19_0_ap_vld;
reg bn_weight_buf_V_20_0_ap_vld;
reg bn_bias_buf_V_20_0_ap_vld;
reg bn_weight_buf_V_21_0_ap_vld;
reg bn_bias_buf_V_21_0_ap_vld;
reg bn_weight_buf_V_22_0_ap_vld;
reg bn_bias_buf_V_22_0_ap_vld;
reg bn_weight_buf_V_23_0_ap_vld;
reg bn_bias_buf_V_23_0_ap_vld;
reg bn_weight_buf_V_24_0_ap_vld;
reg bn_bias_buf_V_24_0_ap_vld;
reg bn_weight_buf_V_25_0_ap_vld;
reg bn_bias_buf_V_25_0_ap_vld;
reg bn_weight_buf_V_26_0_ap_vld;
reg bn_bias_buf_V_26_0_ap_vld;
reg bn_weight_buf_V_27_0_ap_vld;
reg bn_bias_buf_V_27_0_ap_vld;
reg bn_weight_buf_V_28_0_ap_vld;
reg bn_bias_buf_V_28_0_ap_vld;
reg bn_weight_buf_V_29_0_ap_vld;
reg bn_bias_buf_V_29_0_ap_vld;
reg bn_weight_buf_V_30_0_ap_vld;
reg bn_bias_buf_V_30_0_ap_vld;
reg bn_weight_buf_V_31_0_ap_vld;
reg bn_bias_buf_V_31_0_ap_vld;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    conv_weight_3x3_all_V_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    conv_weight_3x3_all_V_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [3:0] i_0_reg_1130;
wire   [0:0] icmp_ln231_fu_5768_p2;
wire    ap_block_state10_pp0_stage0_iter0;
reg    ap_block_state11_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] i_fu_5774_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] trunc_ln414_fu_5780_p1;
reg   [2:0] trunc_ln414_reg_11228;
wire    ap_CS_fsm_state9;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
wire    grp_load_weight_3x3_from_fu_1141_ap_start;
wire    grp_load_weight_3x3_from_fu_1141_ap_done;
wire    grp_load_weight_3x3_from_fu_1141_ap_idle;
wire    grp_load_weight_3x3_from_fu_1141_ap_ready;
wire    grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWVALID;
wire   [31:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWADDR;
wire   [0:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWID;
wire   [31:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWLEN;
wire   [2:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWSIZE;
wire   [1:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWBURST;
wire   [1:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWLOCK;
wire   [3:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWCACHE;
wire   [2:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWPROT;
wire   [3:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWQOS;
wire   [3:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWREGION;
wire   [0:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWUSER;
wire    grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WVALID;
wire   [511:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WDATA;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WSTRB;
wire    grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WLAST;
wire   [0:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WID;
wire   [0:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WUSER;
wire    grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARVALID;
wire   [31:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARADDR;
wire   [0:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARID;
wire   [31:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARLEN;
wire   [2:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARSIZE;
wire   [1:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARBURST;
wire   [1:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARLOCK;
wire   [3:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARCACHE;
wire   [2:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARPROT;
wire   [3:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARQOS;
wire   [3:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARREGION;
wire   [0:0] grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARUSER;
wire    grp_load_weight_3x3_from_fu_1141_m_axi_src_V_RREADY;
wire    grp_load_weight_3x3_from_fu_1141_m_axi_src_V_BREADY;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_0;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_1;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_2;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_3;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_4;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_5;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_6;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_7;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_8;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_9;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_10;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_11;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_12;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_13;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_14;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_15;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_16;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_17;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_18;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_19;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_20;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_21;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_22;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_23;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_24;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_25;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_26;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_27;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_28;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_29;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_30;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_31;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_32;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_33;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_34;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_35;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_36;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_37;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_38;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_39;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_40;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_41;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_42;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_43;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_44;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_45;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_46;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_47;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_48;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_49;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_50;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_51;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_52;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_53;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_54;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_55;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_56;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_57;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_58;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_59;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_60;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_61;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_62;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_63;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_64;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_65;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_66;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_67;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_68;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_69;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_70;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_71;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_72;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_73;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_74;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_75;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_76;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_77;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_78;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_79;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_80;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_81;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_82;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_83;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_84;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_85;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_86;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_87;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_88;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_89;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_90;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_91;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_92;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_93;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_94;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_95;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_96;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_97;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_98;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_99;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_100;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_101;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_102;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_103;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_104;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_105;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_106;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_107;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_108;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_109;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_110;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_111;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_112;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_113;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_114;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_115;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_116;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_117;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_118;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_119;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_120;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_121;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_122;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_123;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_124;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_125;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_126;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_127;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_128;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_129;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_130;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_131;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_132;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_133;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_134;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_135;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_136;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_137;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_138;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_139;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_140;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_141;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_142;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_143;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_144;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_145;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_146;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_147;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_148;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_149;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_150;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_151;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_152;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_153;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_154;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_155;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_156;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_157;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_158;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_159;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_160;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_161;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_162;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_163;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_164;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_165;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_166;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_167;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_168;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_169;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_170;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_171;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_172;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_173;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_174;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_175;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_176;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_177;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_178;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_179;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_180;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_181;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_182;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_183;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_184;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_185;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_186;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_187;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_188;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_189;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_190;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_191;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_192;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_193;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_194;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_195;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_196;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_197;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_198;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_199;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_200;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_201;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_202;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_203;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_204;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_205;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_206;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_207;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_208;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_209;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_210;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_211;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_212;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_213;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_214;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_215;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_216;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_217;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_218;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_219;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_220;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_221;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_222;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_223;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_224;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_225;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_226;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_227;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_228;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_229;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_230;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_231;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_232;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_233;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_234;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_235;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_236;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_237;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_238;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_239;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_240;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_241;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_242;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_243;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_244;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_245;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_246;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_247;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_248;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_249;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_250;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_251;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_252;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_253;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_254;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_255;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_256;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_257;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_258;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_259;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_260;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_261;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_262;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_263;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_264;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_265;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_266;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_267;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_268;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_269;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_270;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_271;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_272;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_273;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_274;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_275;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_276;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_277;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_278;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_279;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_280;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_281;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_282;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_283;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_284;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_285;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_286;
wire   [63:0] grp_load_weight_3x3_from_fu_1141_ap_return_287;
reg    grp_load_weight_3x3_from_fu_1141_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln647_fu_5757_p1;
reg   [511:0] DATA_7_V_fu_1098;
wire    ap_CS_fsm_state12;
reg   [511:0] DATA_7_V_1_fu_1102;
wire   [2:0] trunc_ln746_fu_5800_p1;
wire   [6:0] tmp_fu_5820_p4;
wire   [0:0] tmp_178_fu_5812_p3;
wire   [0:0] icmp_ln785_fu_5830_p2;
wire   [0:0] or_ln785_fu_5836_p2;
wire   [9:0] trunc_ln_fu_5804_p3;
wire   [2:0] trunc_ln746_77_fu_5856_p1;
wire   [6:0] tmp_s_fu_5876_p4;
wire   [0:0] tmp_179_fu_5868_p3;
wire   [0:0] icmp_ln785_16_fu_5886_p2;
wire   [0:0] or_ln785_16_fu_5892_p2;
wire   [9:0] trunc_ln746_s_fu_5860_p3;
wire   [2:0] tmp_146_fu_5912_p4;
wire   [6:0] tmp_1_fu_5938_p4;
wire   [0:0] tmp_180_fu_5930_p3;
wire   [0:0] icmp_ln785_17_fu_5948_p2;
wire   [0:0] or_ln785_17_fu_5954_p2;
wire   [9:0] trunc_ln746_15_fu_5922_p3;
wire   [2:0] tmp_147_fu_5974_p4;
wire   [6:0] tmp_2_fu_6000_p4;
wire   [0:0] tmp_181_fu_5992_p3;
wire   [0:0] icmp_ln785_18_fu_6010_p2;
wire   [0:0] or_ln785_18_fu_6016_p2;
wire   [9:0] trunc_ln746_16_fu_5984_p3;
wire   [2:0] tmp_148_fu_6036_p4;
wire   [6:0] tmp_3_fu_6062_p4;
wire   [0:0] tmp_182_fu_6054_p3;
wire   [0:0] icmp_ln785_19_fu_6072_p2;
wire   [0:0] or_ln785_19_fu_6078_p2;
wire   [9:0] trunc_ln746_17_fu_6046_p3;
wire   [2:0] tmp_149_fu_6098_p4;
wire   [6:0] tmp_4_fu_6124_p4;
wire   [0:0] tmp_183_fu_6116_p3;
wire   [0:0] icmp_ln785_20_fu_6134_p2;
wire   [0:0] or_ln785_20_fu_6140_p2;
wire   [9:0] trunc_ln746_18_fu_6108_p3;
wire   [2:0] tmp_150_fu_6160_p4;
wire   [6:0] tmp_5_fu_6186_p4;
wire   [0:0] tmp_184_fu_6178_p3;
wire   [0:0] icmp_ln785_21_fu_6196_p2;
wire   [0:0] or_ln785_21_fu_6202_p2;
wire   [9:0] trunc_ln746_19_fu_6170_p3;
wire   [2:0] tmp_151_fu_6222_p4;
wire   [6:0] tmp_6_fu_6248_p4;
wire   [0:0] tmp_185_fu_6240_p3;
wire   [0:0] icmp_ln785_22_fu_6258_p2;
wire   [0:0] or_ln785_22_fu_6264_p2;
wire   [9:0] trunc_ln746_20_fu_6232_p3;
wire   [2:0] tmp_152_fu_6284_p4;
wire   [6:0] tmp_7_fu_6310_p4;
wire   [0:0] tmp_186_fu_6302_p3;
wire   [0:0] icmp_ln785_23_fu_6320_p2;
wire   [0:0] or_ln785_23_fu_6326_p2;
wire   [9:0] trunc_ln746_21_fu_6294_p3;
wire   [2:0] tmp_153_fu_6346_p4;
wire   [6:0] tmp_8_fu_6372_p4;
wire   [0:0] tmp_187_fu_6364_p3;
wire   [0:0] icmp_ln785_24_fu_6382_p2;
wire   [0:0] or_ln785_24_fu_6388_p2;
wire   [9:0] trunc_ln746_22_fu_6356_p3;
wire   [2:0] tmp_154_fu_6408_p4;
wire   [6:0] tmp_9_fu_6434_p4;
wire   [0:0] tmp_188_fu_6426_p3;
wire   [0:0] icmp_ln785_25_fu_6444_p2;
wire   [0:0] or_ln785_25_fu_6450_p2;
wire   [9:0] trunc_ln746_23_fu_6418_p3;
wire   [2:0] tmp_155_fu_6470_p4;
wire   [6:0] tmp_10_fu_6496_p4;
wire   [0:0] tmp_189_fu_6488_p3;
wire   [0:0] icmp_ln785_26_fu_6506_p2;
wire   [0:0] or_ln785_26_fu_6512_p2;
wire   [9:0] trunc_ln746_24_fu_6480_p3;
wire   [2:0] tmp_156_fu_6532_p4;
wire   [6:0] tmp_11_fu_6558_p4;
wire   [0:0] tmp_190_fu_6550_p3;
wire   [0:0] icmp_ln785_27_fu_6568_p2;
wire   [0:0] or_ln785_27_fu_6574_p2;
wire   [9:0] trunc_ln746_25_fu_6542_p3;
wire   [2:0] tmp_157_fu_6594_p4;
wire   [6:0] tmp_12_fu_6620_p4;
wire   [0:0] tmp_191_fu_6612_p3;
wire   [0:0] icmp_ln785_28_fu_6630_p2;
wire   [0:0] or_ln785_28_fu_6636_p2;
wire   [9:0] trunc_ln746_26_fu_6604_p3;
wire   [2:0] tmp_158_fu_6656_p4;
wire   [6:0] tmp_13_fu_6682_p4;
wire   [0:0] tmp_192_fu_6674_p3;
wire   [0:0] icmp_ln785_29_fu_6692_p2;
wire   [0:0] or_ln785_29_fu_6698_p2;
wire   [9:0] trunc_ln746_27_fu_6666_p3;
wire   [2:0] tmp_159_fu_6718_p4;
wire   [6:0] tmp_14_fu_6744_p4;
wire   [0:0] tmp_193_fu_6736_p3;
wire   [0:0] icmp_ln785_30_fu_6754_p2;
wire   [0:0] or_ln785_30_fu_6760_p2;
wire   [9:0] trunc_ln746_28_fu_6728_p3;
wire   [2:0] tmp_160_fu_6780_p4;
wire   [6:0] tmp_15_fu_6806_p4;
wire   [0:0] tmp_194_fu_6798_p3;
wire   [0:0] icmp_ln785_31_fu_6816_p2;
wire   [0:0] or_ln785_31_fu_6822_p2;
wire   [9:0] trunc_ln746_29_fu_6790_p3;
wire   [2:0] tmp_161_fu_6842_p4;
wire   [6:0] tmp_16_fu_6868_p4;
wire   [0:0] tmp_195_fu_6860_p3;
wire   [0:0] icmp_ln785_32_fu_6878_p2;
wire   [0:0] or_ln785_32_fu_6884_p2;
wire   [9:0] trunc_ln746_30_fu_6852_p3;
wire   [2:0] tmp_162_fu_6904_p4;
wire   [6:0] tmp_17_fu_6930_p4;
wire   [0:0] tmp_196_fu_6922_p3;
wire   [0:0] icmp_ln785_33_fu_6940_p2;
wire   [0:0] or_ln785_33_fu_6946_p2;
wire   [9:0] trunc_ln746_31_fu_6914_p3;
wire   [2:0] tmp_163_fu_6966_p4;
wire   [6:0] tmp_18_fu_6992_p4;
wire   [0:0] tmp_197_fu_6984_p3;
wire   [0:0] icmp_ln785_34_fu_7002_p2;
wire   [0:0] or_ln785_34_fu_7008_p2;
wire   [9:0] trunc_ln746_32_fu_6976_p3;
wire   [2:0] tmp_164_fu_7028_p4;
wire   [6:0] tmp_19_fu_7054_p4;
wire   [0:0] tmp_198_fu_7046_p3;
wire   [0:0] icmp_ln785_35_fu_7064_p2;
wire   [0:0] or_ln785_35_fu_7070_p2;
wire   [9:0] trunc_ln746_33_fu_7038_p3;
wire   [2:0] tmp_165_fu_7090_p4;
wire   [6:0] tmp_20_fu_7116_p4;
wire   [0:0] tmp_199_fu_7108_p3;
wire   [0:0] icmp_ln785_36_fu_7126_p2;
wire   [0:0] or_ln785_36_fu_7132_p2;
wire   [9:0] trunc_ln746_34_fu_7100_p3;
wire   [2:0] tmp_166_fu_7152_p4;
wire   [6:0] tmp_21_fu_7178_p4;
wire   [0:0] tmp_200_fu_7170_p3;
wire   [0:0] icmp_ln785_37_fu_7188_p2;
wire   [0:0] or_ln785_37_fu_7194_p2;
wire   [9:0] trunc_ln746_35_fu_7162_p3;
wire   [2:0] tmp_167_fu_7214_p4;
wire   [6:0] tmp_22_fu_7240_p4;
wire   [0:0] tmp_201_fu_7232_p3;
wire   [0:0] icmp_ln785_38_fu_7250_p2;
wire   [0:0] or_ln785_38_fu_7256_p2;
wire   [9:0] trunc_ln746_36_fu_7224_p3;
wire   [2:0] tmp_168_fu_7276_p4;
wire   [6:0] tmp_23_fu_7302_p4;
wire   [0:0] tmp_202_fu_7294_p3;
wire   [0:0] icmp_ln785_39_fu_7312_p2;
wire   [0:0] or_ln785_39_fu_7318_p2;
wire   [9:0] trunc_ln746_37_fu_7286_p3;
wire   [2:0] tmp_169_fu_7338_p4;
wire   [6:0] tmp_24_fu_7364_p4;
wire   [0:0] tmp_203_fu_7356_p3;
wire   [0:0] icmp_ln785_40_fu_7374_p2;
wire   [0:0] or_ln785_40_fu_7380_p2;
wire   [9:0] trunc_ln746_38_fu_7348_p3;
wire   [2:0] tmp_170_fu_7400_p4;
wire   [6:0] tmp_25_fu_7426_p4;
wire   [0:0] tmp_204_fu_7418_p3;
wire   [0:0] icmp_ln785_41_fu_7436_p2;
wire   [0:0] or_ln785_41_fu_7442_p2;
wire   [9:0] trunc_ln746_39_fu_7410_p3;
wire   [2:0] tmp_171_fu_7462_p4;
wire   [6:0] tmp_26_fu_7488_p4;
wire   [0:0] tmp_205_fu_7480_p3;
wire   [0:0] icmp_ln785_42_fu_7498_p2;
wire   [0:0] or_ln785_42_fu_7504_p2;
wire   [9:0] trunc_ln746_40_fu_7472_p3;
wire   [2:0] tmp_172_fu_7524_p4;
wire   [6:0] tmp_27_fu_7550_p4;
wire   [0:0] tmp_206_fu_7542_p3;
wire   [0:0] icmp_ln785_43_fu_7560_p2;
wire   [0:0] or_ln785_43_fu_7566_p2;
wire   [9:0] trunc_ln746_41_fu_7534_p3;
wire   [2:0] tmp_173_fu_7586_p4;
wire   [6:0] tmp_28_fu_7612_p4;
wire   [0:0] tmp_207_fu_7604_p3;
wire   [0:0] icmp_ln785_44_fu_7622_p2;
wire   [0:0] or_ln785_44_fu_7628_p2;
wire   [9:0] trunc_ln746_42_fu_7596_p3;
wire   [2:0] tmp_174_fu_7648_p4;
wire   [6:0] tmp_29_fu_7674_p4;
wire   [0:0] tmp_208_fu_7666_p3;
wire   [0:0] icmp_ln785_45_fu_7684_p2;
wire   [0:0] or_ln785_45_fu_7690_p2;
wire   [9:0] trunc_ln746_43_fu_7658_p3;
wire   [2:0] tmp_175_fu_7710_p4;
wire   [6:0] tmp_30_fu_7736_p4;
wire   [0:0] tmp_209_fu_7728_p3;
wire   [0:0] icmp_ln785_46_fu_7746_p2;
wire   [0:0] or_ln785_46_fu_7752_p2;
wire   [9:0] trunc_ln746_44_fu_7720_p3;
wire   [2:0] tmp_176_fu_7772_p4;
wire   [6:0] tmp_31_fu_7798_p4;
wire   [0:0] tmp_210_fu_7790_p3;
wire   [0:0] icmp_ln785_47_fu_7808_p2;
wire   [0:0] or_ln785_47_fu_7814_p2;
wire   [9:0] trunc_ln746_45_fu_7782_p3;
wire   [2:0] tmp_177_fu_7834_p4;
wire   [6:0] tmp_32_fu_7860_p4;
wire   [0:0] tmp_211_fu_7852_p3;
wire   [0:0] icmp_ln785_48_fu_7870_p2;
wire   [0:0] or_ln785_48_fu_7876_p2;
wire   [9:0] trunc_ln746_46_fu_7844_p3;
wire   [2:0] tmp_212_fu_7896_p4;
wire   [6:0] tmp_33_fu_7922_p4;
wire   [0:0] tmp_213_fu_7914_p3;
wire   [0:0] icmp_ln785_49_fu_7932_p2;
wire   [0:0] or_ln785_49_fu_7938_p2;
wire   [9:0] trunc_ln746_47_fu_7906_p3;
wire   [2:0] tmp_214_fu_7958_p4;
wire   [6:0] tmp_34_fu_7984_p4;
wire   [0:0] tmp_215_fu_7976_p3;
wire   [0:0] icmp_ln785_50_fu_7994_p2;
wire   [0:0] or_ln785_50_fu_8000_p2;
wire   [9:0] trunc_ln746_48_fu_7968_p3;
wire   [2:0] tmp_216_fu_8020_p4;
wire   [6:0] tmp_35_fu_8046_p4;
wire   [0:0] tmp_217_fu_8038_p3;
wire   [0:0] icmp_ln785_51_fu_8056_p2;
wire   [0:0] or_ln785_51_fu_8062_p2;
wire   [9:0] trunc_ln746_49_fu_8030_p3;
wire   [2:0] tmp_218_fu_8082_p4;
wire   [6:0] tmp_36_fu_8108_p4;
wire   [0:0] tmp_219_fu_8100_p3;
wire   [0:0] icmp_ln785_52_fu_8118_p2;
wire   [0:0] or_ln785_52_fu_8124_p2;
wire   [9:0] trunc_ln746_50_fu_8092_p3;
wire   [2:0] tmp_220_fu_8144_p4;
wire   [6:0] tmp_37_fu_8170_p4;
wire   [0:0] tmp_221_fu_8162_p3;
wire   [0:0] icmp_ln785_53_fu_8180_p2;
wire   [0:0] or_ln785_53_fu_8186_p2;
wire   [9:0] trunc_ln746_51_fu_8154_p3;
wire   [2:0] tmp_222_fu_8206_p4;
wire   [6:0] tmp_38_fu_8232_p4;
wire   [0:0] tmp_223_fu_8224_p3;
wire   [0:0] icmp_ln785_54_fu_8242_p2;
wire   [0:0] or_ln785_54_fu_8248_p2;
wire   [9:0] trunc_ln746_52_fu_8216_p3;
wire   [2:0] tmp_224_fu_8268_p4;
wire   [6:0] tmp_39_fu_8294_p4;
wire   [0:0] tmp_225_fu_8286_p3;
wire   [0:0] icmp_ln785_55_fu_8304_p2;
wire   [0:0] or_ln785_55_fu_8310_p2;
wire   [9:0] trunc_ln746_53_fu_8278_p3;
wire   [2:0] tmp_226_fu_8330_p4;
wire   [6:0] tmp_40_fu_8356_p4;
wire   [0:0] tmp_227_fu_8348_p3;
wire   [0:0] icmp_ln785_56_fu_8366_p2;
wire   [0:0] or_ln785_56_fu_8372_p2;
wire   [9:0] trunc_ln746_54_fu_8340_p3;
wire   [2:0] tmp_228_fu_8392_p4;
wire   [6:0] tmp_41_fu_8418_p4;
wire   [0:0] tmp_229_fu_8410_p3;
wire   [0:0] icmp_ln785_57_fu_8428_p2;
wire   [0:0] or_ln785_57_fu_8434_p2;
wire   [9:0] trunc_ln746_55_fu_8402_p3;
wire   [2:0] tmp_230_fu_8454_p4;
wire   [6:0] tmp_42_fu_8480_p4;
wire   [0:0] tmp_231_fu_8472_p3;
wire   [0:0] icmp_ln785_58_fu_8490_p2;
wire   [0:0] or_ln785_58_fu_8496_p2;
wire   [9:0] trunc_ln746_56_fu_8464_p3;
wire   [2:0] tmp_232_fu_8516_p4;
wire   [6:0] tmp_43_fu_8542_p4;
wire   [0:0] tmp_233_fu_8534_p3;
wire   [0:0] icmp_ln785_59_fu_8552_p2;
wire   [0:0] or_ln785_59_fu_8558_p2;
wire   [9:0] trunc_ln746_57_fu_8526_p3;
wire   [2:0] tmp_234_fu_8578_p4;
wire   [6:0] tmp_44_fu_8604_p4;
wire   [0:0] tmp_235_fu_8596_p3;
wire   [0:0] icmp_ln785_60_fu_8614_p2;
wire   [0:0] or_ln785_60_fu_8620_p2;
wire   [9:0] trunc_ln746_58_fu_8588_p3;
wire   [2:0] tmp_236_fu_8640_p4;
wire   [6:0] tmp_45_fu_8666_p4;
wire   [0:0] tmp_237_fu_8658_p3;
wire   [0:0] icmp_ln785_61_fu_8676_p2;
wire   [0:0] or_ln785_61_fu_8682_p2;
wire   [9:0] trunc_ln746_59_fu_8650_p3;
wire   [2:0] tmp_238_fu_8702_p4;
wire   [6:0] tmp_46_fu_8728_p4;
wire   [0:0] tmp_239_fu_8720_p3;
wire   [0:0] icmp_ln785_62_fu_8738_p2;
wire   [0:0] or_ln785_62_fu_8744_p2;
wire   [9:0] trunc_ln746_60_fu_8712_p3;
wire   [2:0] tmp_240_fu_8764_p4;
wire   [6:0] tmp_47_fu_8790_p4;
wire   [0:0] tmp_241_fu_8782_p3;
wire   [0:0] icmp_ln785_63_fu_8800_p2;
wire   [0:0] or_ln785_63_fu_8806_p2;
wire   [9:0] trunc_ln746_61_fu_8774_p3;
wire   [2:0] tmp_242_fu_8826_p4;
wire   [6:0] tmp_48_fu_8852_p4;
wire   [0:0] tmp_243_fu_8844_p3;
wire   [0:0] icmp_ln785_64_fu_8862_p2;
wire   [0:0] or_ln785_64_fu_8868_p2;
wire   [9:0] trunc_ln746_62_fu_8836_p3;
wire   [2:0] tmp_244_fu_8888_p4;
wire   [6:0] tmp_49_fu_8914_p4;
wire   [0:0] tmp_245_fu_8906_p3;
wire   [0:0] icmp_ln785_65_fu_8924_p2;
wire   [0:0] or_ln785_65_fu_8930_p2;
wire   [9:0] trunc_ln746_63_fu_8898_p3;
wire   [2:0] tmp_246_fu_8950_p4;
wire   [6:0] tmp_50_fu_8976_p4;
wire   [0:0] tmp_247_fu_8968_p3;
wire   [0:0] icmp_ln785_66_fu_8986_p2;
wire   [0:0] or_ln785_66_fu_8992_p2;
wire   [9:0] trunc_ln746_64_fu_8960_p3;
wire   [2:0] tmp_248_fu_9012_p4;
wire   [6:0] tmp_51_fu_9038_p4;
wire   [0:0] tmp_249_fu_9030_p3;
wire   [0:0] icmp_ln785_67_fu_9048_p2;
wire   [0:0] or_ln785_67_fu_9054_p2;
wire   [9:0] trunc_ln746_65_fu_9022_p3;
wire   [2:0] tmp_250_fu_9074_p4;
wire   [6:0] tmp_52_fu_9100_p4;
wire   [0:0] tmp_251_fu_9092_p3;
wire   [0:0] icmp_ln785_68_fu_9110_p2;
wire   [0:0] or_ln785_68_fu_9116_p2;
wire   [9:0] trunc_ln746_66_fu_9084_p3;
wire   [2:0] tmp_252_fu_9136_p4;
wire   [6:0] tmp_53_fu_9162_p4;
wire   [0:0] tmp_253_fu_9154_p3;
wire   [0:0] icmp_ln785_69_fu_9172_p2;
wire   [0:0] or_ln785_69_fu_9178_p2;
wire   [9:0] trunc_ln746_67_fu_9146_p3;
wire   [2:0] tmp_254_fu_9198_p4;
wire   [6:0] tmp_54_fu_9224_p4;
wire   [0:0] tmp_255_fu_9216_p3;
wire   [0:0] icmp_ln785_70_fu_9234_p2;
wire   [0:0] or_ln785_70_fu_9240_p2;
wire   [9:0] trunc_ln746_68_fu_9208_p3;
wire   [2:0] tmp_256_fu_9260_p4;
wire   [6:0] tmp_55_fu_9286_p4;
wire   [0:0] tmp_257_fu_9278_p3;
wire   [0:0] icmp_ln785_71_fu_9296_p2;
wire   [0:0] or_ln785_71_fu_9302_p2;
wire   [9:0] trunc_ln746_69_fu_9270_p3;
wire   [2:0] tmp_258_fu_9322_p4;
wire   [6:0] tmp_56_fu_9348_p4;
wire   [0:0] tmp_259_fu_9340_p3;
wire   [0:0] icmp_ln785_72_fu_9358_p2;
wire   [0:0] or_ln785_72_fu_9364_p2;
wire   [9:0] trunc_ln746_70_fu_9332_p3;
wire   [2:0] tmp_260_fu_9384_p4;
wire   [6:0] tmp_57_fu_9410_p4;
wire   [0:0] tmp_261_fu_9402_p3;
wire   [0:0] icmp_ln785_73_fu_9420_p2;
wire   [0:0] or_ln785_73_fu_9426_p2;
wire   [9:0] trunc_ln746_71_fu_9394_p3;
wire   [2:0] tmp_262_fu_9446_p4;
wire   [6:0] tmp_58_fu_9472_p4;
wire   [0:0] tmp_263_fu_9464_p3;
wire   [0:0] icmp_ln785_74_fu_9482_p2;
wire   [0:0] or_ln785_74_fu_9488_p2;
wire   [9:0] trunc_ln746_72_fu_9456_p3;
wire   [2:0] tmp_264_fu_9508_p4;
wire   [6:0] tmp_59_fu_9534_p4;
wire   [0:0] tmp_265_fu_9526_p3;
wire   [0:0] icmp_ln785_75_fu_9544_p2;
wire   [0:0] or_ln785_75_fu_9550_p2;
wire   [9:0] trunc_ln746_73_fu_9518_p3;
wire   [2:0] tmp_266_fu_9570_p4;
wire   [6:0] tmp_60_fu_9596_p4;
wire   [0:0] tmp_267_fu_9588_p3;
wire   [0:0] icmp_ln785_76_fu_9606_p2;
wire   [0:0] or_ln785_76_fu_9612_p2;
wire   [9:0] trunc_ln746_74_fu_9580_p3;
wire   [2:0] tmp_268_fu_9632_p4;
wire   [6:0] tmp_61_fu_9658_p4;
wire   [0:0] tmp_269_fu_9650_p3;
wire   [0:0] icmp_ln785_77_fu_9668_p2;
wire   [0:0] or_ln785_77_fu_9674_p2;
wire   [9:0] trunc_ln746_75_fu_9642_p3;
wire   [2:0] tmp_270_fu_9694_p4;
wire   [6:0] tmp_62_fu_9720_p4;
wire   [0:0] tmp_271_fu_9712_p3;
wire   [0:0] icmp_ln785_78_fu_9730_p2;
wire   [0:0] or_ln785_78_fu_9736_p2;
wire   [9:0] trunc_ln746_76_fu_9704_p3;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_load_weight_3x3_from_fu_1141_ap_start_reg = 1'b0;
end

load_weight_3x3_from grp_load_weight_3x3_from_fu_1141(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_weight_3x3_from_fu_1141_ap_start),
    .ap_done(grp_load_weight_3x3_from_fu_1141_ap_done),
    .ap_idle(grp_load_weight_3x3_from_fu_1141_ap_idle),
    .ap_ready(grp_load_weight_3x3_from_fu_1141_ap_ready),
    .dest_0_0_0_V_read(weight_buf_3x3_V_0_0_8_i),
    .dest_0_0_1_V_read(weight_buf_3x3_V_0_0_7_i),
    .dest_0_0_2_V_read(weight_buf_3x3_V_0_0_6_i),
    .dest_0_1_0_V_read(weight_buf_3x3_V_0_0_5_i),
    .dest_0_1_1_V_read(weight_buf_3x3_V_0_0_4_i),
    .dest_0_1_2_V_read(weight_buf_3x3_V_0_0_3_i),
    .dest_0_2_0_V_read(weight_buf_3x3_V_0_0_2_i),
    .dest_0_2_1_V_read(weight_buf_3x3_V_0_0_1_i),
    .dest_0_2_2_V_read(weight_buf_3x3_V_0_0_i),
    .dest_1_0_0_V_read(weight_buf_3x3_V_0_1_98_i),
    .dest_1_0_1_V_read(weight_buf_3x3_V_0_1_97_i),
    .dest_1_0_2_V_read(weight_buf_3x3_V_0_1_96_i),
    .dest_1_1_0_V_read(weight_buf_3x3_V_0_1_95_i),
    .dest_1_1_1_V_read(weight_buf_3x3_V_0_1_94_i),
    .dest_1_1_2_V_read(weight_buf_3x3_V_0_1_93_i),
    .dest_1_2_0_V_read(weight_buf_3x3_V_0_1_92_i),
    .dest_1_2_1_V_read(weight_buf_3x3_V_0_1_91_i),
    .dest_1_2_2_V_read(weight_buf_3x3_V_0_1_90_i),
    .dest_2_0_0_V_read(weight_buf_3x3_V_0_2_98_i),
    .dest_2_0_1_V_read(weight_buf_3x3_V_0_2_97_i),
    .dest_2_0_2_V_read(weight_buf_3x3_V_0_2_96_i),
    .dest_2_1_0_V_read(weight_buf_3x3_V_0_2_95_i),
    .dest_2_1_1_V_read(weight_buf_3x3_V_0_2_94_i),
    .dest_2_1_2_V_read(weight_buf_3x3_V_0_2_93_i),
    .dest_2_2_0_V_read(weight_buf_3x3_V_0_2_92_i),
    .dest_2_2_1_V_read(weight_buf_3x3_V_0_2_91_i),
    .dest_2_2_2_V_read(weight_buf_3x3_V_0_2_90_i),
    .dest_3_0_0_V_read(weight_buf_3x3_V_0_3_26_i),
    .dest_3_0_1_V_read(weight_buf_3x3_V_0_3_25_i),
    .dest_3_0_2_V_read(weight_buf_3x3_V_0_3_24_i),
    .dest_3_1_0_V_read(weight_buf_3x3_V_0_3_23_i),
    .dest_3_1_1_V_read(weight_buf_3x3_V_0_3_22_i),
    .dest_3_1_2_V_read(weight_buf_3x3_V_0_3_21_i),
    .dest_3_2_0_V_read(weight_buf_3x3_V_0_3_20_i),
    .dest_3_2_1_V_read(weight_buf_3x3_V_0_3_19_i),
    .dest_3_2_2_V_read(weight_buf_3x3_V_0_3_18_i),
    .dest_4_0_0_V_read(weight_buf_3x3_V_0_4_8_i),
    .dest_4_0_1_V_read(weight_buf_3x3_V_0_4_7_i),
    .dest_4_0_2_V_read(weight_buf_3x3_V_0_4_6_i),
    .dest_4_1_0_V_read(weight_buf_3x3_V_0_4_5_i),
    .dest_4_1_1_V_read(weight_buf_3x3_V_0_4_4_i),
    .dest_4_1_2_V_read(weight_buf_3x3_V_0_4_3_i),
    .dest_4_2_0_V_read(weight_buf_3x3_V_0_4_2_i),
    .dest_4_2_1_V_read(weight_buf_3x3_V_0_4_1_i),
    .dest_4_2_2_V_read(weight_buf_3x3_V_0_4_i),
    .dest_5_0_0_V_read(weight_buf_3x3_V_0_5_8_i),
    .dest_5_0_1_V_read(weight_buf_3x3_V_0_5_7_i),
    .dest_5_0_2_V_read(weight_buf_3x3_V_0_5_6_i),
    .dest_5_1_0_V_read(weight_buf_3x3_V_0_5_5_i),
    .dest_5_1_1_V_read(weight_buf_3x3_V_0_5_4_i),
    .dest_5_1_2_V_read(weight_buf_3x3_V_0_5_3_i),
    .dest_5_2_0_V_read(weight_buf_3x3_V_0_5_2_i),
    .dest_5_2_1_V_read(weight_buf_3x3_V_0_5_1_i),
    .dest_5_2_2_V_read(weight_buf_3x3_V_0_5_i),
    .dest_6_0_0_V_read(weight_buf_3x3_V_0_6_8_i),
    .dest_6_0_1_V_read(weight_buf_3x3_V_0_6_7_i),
    .dest_6_0_2_V_read(weight_buf_3x3_V_0_6_6_i),
    .dest_6_1_0_V_read(weight_buf_3x3_V_0_6_5_i),
    .dest_6_1_1_V_read(weight_buf_3x3_V_0_6_4_i),
    .dest_6_1_2_V_read(weight_buf_3x3_V_0_6_3_i),
    .dest_6_2_0_V_read(weight_buf_3x3_V_0_6_2_i),
    .dest_6_2_1_V_read(weight_buf_3x3_V_0_6_1_i),
    .dest_6_2_2_V_read(weight_buf_3x3_V_0_6_i),
    .dest_7_0_0_V_read(weight_buf_3x3_V_0_7_8_i),
    .dest_7_0_1_V_read(weight_buf_3x3_V_0_7_7_i),
    .dest_7_0_2_V_read(weight_buf_3x3_V_0_7_6_i),
    .dest_7_1_0_V_read(weight_buf_3x3_V_0_7_5_i),
    .dest_7_1_1_V_read(weight_buf_3x3_V_0_7_4_i),
    .dest_7_1_2_V_read(weight_buf_3x3_V_0_7_3_i),
    .dest_7_2_0_V_read(weight_buf_3x3_V_0_7_2_i),
    .dest_7_2_1_V_read(weight_buf_3x3_V_0_7_1_i),
    .dest_7_2_2_V_read(weight_buf_3x3_V_0_7_i),
    .dest_8_0_0_V_read(weight_buf_3x3_V_0_8_8_i),
    .dest_8_0_1_V_read(weight_buf_3x3_V_0_8_7_i),
    .dest_8_0_2_V_read(weight_buf_3x3_V_0_8_6_i),
    .dest_8_1_0_V_read(weight_buf_3x3_V_0_8_5_i),
    .dest_8_1_1_V_read(weight_buf_3x3_V_0_8_4_i),
    .dest_8_1_2_V_read(weight_buf_3x3_V_0_8_3_i),
    .dest_8_2_0_V_read(weight_buf_3x3_V_0_8_2_i),
    .dest_8_2_1_V_read(weight_buf_3x3_V_0_8_1_i),
    .dest_8_2_2_V_read(weight_buf_3x3_V_0_8_i),
    .dest_9_0_0_V_read(weight_buf_3x3_V_0_9_8_i),
    .dest_9_0_1_V_read(weight_buf_3x3_V_0_9_7_i),
    .dest_9_0_2_V_read(weight_buf_3x3_V_0_9_6_i),
    .dest_9_1_0_V_read(weight_buf_3x3_V_0_9_5_i),
    .dest_9_1_1_V_read(weight_buf_3x3_V_0_9_4_i),
    .dest_9_1_2_V_read(weight_buf_3x3_V_0_9_3_i),
    .dest_9_2_0_V_read(weight_buf_3x3_V_0_9_2_i),
    .dest_9_2_1_V_read(weight_buf_3x3_V_0_9_1_i),
    .dest_9_2_2_V_read(weight_buf_3x3_V_0_9_i),
    .dest_10_0_0_V_read(weight_buf_3x3_V_0_1_89_i),
    .dest_10_0_1_V_read(weight_buf_3x3_V_0_1_88_i),
    .dest_10_0_2_V_read(weight_buf_3x3_V_0_1_87_i),
    .dest_10_1_0_V_read(weight_buf_3x3_V_0_1_86_i),
    .dest_10_1_1_V_read(weight_buf_3x3_V_0_1_85_i),
    .dest_10_1_2_V_read(weight_buf_3x3_V_0_1_84_i),
    .dest_10_2_0_V_read(weight_buf_3x3_V_0_1_83_i),
    .dest_10_2_1_V_read(weight_buf_3x3_V_0_1_82_i),
    .dest_10_2_2_V_read(weight_buf_3x3_V_0_1_81_i),
    .dest_11_0_0_V_read(weight_buf_3x3_V_0_1_80_i),
    .dest_11_0_1_V_read(weight_buf_3x3_V_0_1_79_i),
    .dest_11_0_2_V_read(weight_buf_3x3_V_0_1_78_i),
    .dest_11_1_0_V_read(weight_buf_3x3_V_0_1_77_i),
    .dest_11_1_1_V_read(weight_buf_3x3_V_0_1_76_i),
    .dest_11_1_2_V_read(weight_buf_3x3_V_0_1_75_i),
    .dest_11_2_0_V_read(weight_buf_3x3_V_0_1_74_i),
    .dest_11_2_1_V_read(weight_buf_3x3_V_0_1_73_i),
    .dest_11_2_2_V_read(weight_buf_3x3_V_0_1_72_i),
    .dest_12_0_0_V_read(weight_buf_3x3_V_0_1_71_i),
    .dest_12_0_1_V_read(weight_buf_3x3_V_0_1_70_i),
    .dest_12_0_2_V_read(weight_buf_3x3_V_0_1_69_i),
    .dest_12_1_0_V_read(weight_buf_3x3_V_0_1_68_i),
    .dest_12_1_1_V_read(weight_buf_3x3_V_0_1_67_i),
    .dest_12_1_2_V_read(weight_buf_3x3_V_0_1_66_i),
    .dest_12_2_0_V_read(weight_buf_3x3_V_0_1_65_i),
    .dest_12_2_1_V_read(weight_buf_3x3_V_0_1_64_i),
    .dest_12_2_2_V_read(weight_buf_3x3_V_0_1_63_i),
    .dest_13_0_0_V_read(weight_buf_3x3_V_0_1_62_i),
    .dest_13_0_1_V_read(weight_buf_3x3_V_0_1_61_i),
    .dest_13_0_2_V_read(weight_buf_3x3_V_0_1_60_i),
    .dest_13_1_0_V_read(weight_buf_3x3_V_0_1_59_i),
    .dest_13_1_1_V_read(weight_buf_3x3_V_0_1_58_i),
    .dest_13_1_2_V_read(weight_buf_3x3_V_0_1_57_i),
    .dest_13_2_0_V_read(weight_buf_3x3_V_0_1_56_i),
    .dest_13_2_1_V_read(weight_buf_3x3_V_0_1_55_i),
    .dest_13_2_2_V_read(weight_buf_3x3_V_0_1_54_i),
    .dest_14_0_0_V_read(weight_buf_3x3_V_0_1_53_i),
    .dest_14_0_1_V_read(weight_buf_3x3_V_0_1_52_i),
    .dest_14_0_2_V_read(weight_buf_3x3_V_0_1_51_i),
    .dest_14_1_0_V_read(weight_buf_3x3_V_0_1_50_i),
    .dest_14_1_1_V_read(weight_buf_3x3_V_0_1_49_i),
    .dest_14_1_2_V_read(weight_buf_3x3_V_0_1_48_i),
    .dest_14_2_0_V_read(weight_buf_3x3_V_0_1_47_i),
    .dest_14_2_1_V_read(weight_buf_3x3_V_0_1_46_i),
    .dest_14_2_2_V_read(weight_buf_3x3_V_0_1_45_i),
    .dest_15_0_0_V_read(weight_buf_3x3_V_0_1_44_i),
    .dest_15_0_1_V_read(weight_buf_3x3_V_0_1_43_i),
    .dest_15_0_2_V_read(weight_buf_3x3_V_0_1_42_i),
    .dest_15_1_0_V_read(weight_buf_3x3_V_0_1_41_i),
    .dest_15_1_1_V_read(weight_buf_3x3_V_0_1_40_i),
    .dest_15_1_2_V_read(weight_buf_3x3_V_0_1_39_i),
    .dest_15_2_0_V_read(weight_buf_3x3_V_0_1_38_i),
    .dest_15_2_1_V_read(weight_buf_3x3_V_0_1_37_i),
    .dest_15_2_2_V_read(weight_buf_3x3_V_0_1_36_i),
    .dest_16_0_0_V_read(weight_buf_3x3_V_0_1_35_i),
    .dest_16_0_1_V_read(weight_buf_3x3_V_0_1_34_i),
    .dest_16_0_2_V_read(weight_buf_3x3_V_0_1_33_i),
    .dest_16_1_0_V_read(weight_buf_3x3_V_0_1_32_i),
    .dest_16_1_1_V_read(weight_buf_3x3_V_0_1_31_i),
    .dest_16_1_2_V_read(weight_buf_3x3_V_0_1_30_i),
    .dest_16_2_0_V_read(weight_buf_3x3_V_0_1_29_i),
    .dest_16_2_1_V_read(weight_buf_3x3_V_0_1_28_i),
    .dest_16_2_2_V_read(weight_buf_3x3_V_0_1_27_i),
    .dest_17_0_0_V_read(weight_buf_3x3_V_0_1_26_i),
    .dest_17_0_1_V_read(weight_buf_3x3_V_0_1_25_i),
    .dest_17_0_2_V_read(weight_buf_3x3_V_0_1_24_i),
    .dest_17_1_0_V_read(weight_buf_3x3_V_0_1_23_i),
    .dest_17_1_1_V_read(weight_buf_3x3_V_0_1_22_i),
    .dest_17_1_2_V_read(weight_buf_3x3_V_0_1_21_i),
    .dest_17_2_0_V_read(weight_buf_3x3_V_0_1_20_i),
    .dest_17_2_1_V_read(weight_buf_3x3_V_0_1_19_i),
    .dest_17_2_2_V_read(weight_buf_3x3_V_0_1_18_i),
    .dest_18_0_0_V_read(weight_buf_3x3_V_0_1_17_i),
    .dest_18_0_1_V_read(weight_buf_3x3_V_0_1_16_i),
    .dest_18_0_2_V_read(weight_buf_3x3_V_0_1_15_i),
    .dest_18_1_0_V_read(weight_buf_3x3_V_0_1_14_i),
    .dest_18_1_1_V_read(weight_buf_3x3_V_0_1_13_i),
    .dest_18_1_2_V_read(weight_buf_3x3_V_0_1_12_i),
    .dest_18_2_0_V_read(weight_buf_3x3_V_0_1_11_i),
    .dest_18_2_1_V_read(weight_buf_3x3_V_0_1_10_i),
    .dest_18_2_2_V_read(weight_buf_3x3_V_0_1_9_i),
    .dest_19_0_0_V_read(weight_buf_3x3_V_0_1_8_i),
    .dest_19_0_1_V_read(weight_buf_3x3_V_0_1_7_i),
    .dest_19_0_2_V_read(weight_buf_3x3_V_0_1_6_i),
    .dest_19_1_0_V_read(weight_buf_3x3_V_0_1_5_i),
    .dest_19_1_1_V_read(weight_buf_3x3_V_0_1_4_i),
    .dest_19_1_2_V_read(weight_buf_3x3_V_0_1_3_i),
    .dest_19_2_0_V_read(weight_buf_3x3_V_0_1_2_i),
    .dest_19_2_1_V_read(weight_buf_3x3_V_0_1_1_i),
    .dest_19_2_2_V_read(weight_buf_3x3_V_0_1_i),
    .dest_20_0_0_V_read(weight_buf_3x3_V_0_2_89_i),
    .dest_20_0_1_V_read(weight_buf_3x3_V_0_2_88_i),
    .dest_20_0_2_V_read(weight_buf_3x3_V_0_2_87_i),
    .dest_20_1_0_V_read(weight_buf_3x3_V_0_2_86_i),
    .dest_20_1_1_V_read(weight_buf_3x3_V_0_2_85_i),
    .dest_20_1_2_V_read(weight_buf_3x3_V_0_2_84_i),
    .dest_20_2_0_V_read(weight_buf_3x3_V_0_2_83_i),
    .dest_20_2_1_V_read(weight_buf_3x3_V_0_2_82_i),
    .dest_20_2_2_V_read(weight_buf_3x3_V_0_2_81_i),
    .dest_21_0_0_V_read(weight_buf_3x3_V_0_2_80_i),
    .dest_21_0_1_V_read(weight_buf_3x3_V_0_2_79_i),
    .dest_21_0_2_V_read(weight_buf_3x3_V_0_2_78_i),
    .dest_21_1_0_V_read(weight_buf_3x3_V_0_2_77_i),
    .dest_21_1_1_V_read(weight_buf_3x3_V_0_2_76_i),
    .dest_21_1_2_V_read(weight_buf_3x3_V_0_2_75_i),
    .dest_21_2_0_V_read(weight_buf_3x3_V_0_2_74_i),
    .dest_21_2_1_V_read(weight_buf_3x3_V_0_2_73_i),
    .dest_21_2_2_V_read(weight_buf_3x3_V_0_2_72_i),
    .dest_22_0_0_V_read(weight_buf_3x3_V_0_2_71_i),
    .dest_22_0_1_V_read(weight_buf_3x3_V_0_2_70_i),
    .dest_22_0_2_V_read(weight_buf_3x3_V_0_2_69_i),
    .dest_22_1_0_V_read(weight_buf_3x3_V_0_2_68_i),
    .dest_22_1_1_V_read(weight_buf_3x3_V_0_2_67_i),
    .dest_22_1_2_V_read(weight_buf_3x3_V_0_2_66_i),
    .dest_22_2_0_V_read(weight_buf_3x3_V_0_2_65_i),
    .dest_22_2_1_V_read(weight_buf_3x3_V_0_2_64_i),
    .dest_22_2_2_V_read(weight_buf_3x3_V_0_2_63_i),
    .dest_23_0_0_V_read(weight_buf_3x3_V_0_2_62_i),
    .dest_23_0_1_V_read(weight_buf_3x3_V_0_2_61_i),
    .dest_23_0_2_V_read(weight_buf_3x3_V_0_2_60_i),
    .dest_23_1_0_V_read(weight_buf_3x3_V_0_2_59_i),
    .dest_23_1_1_V_read(weight_buf_3x3_V_0_2_58_i),
    .dest_23_1_2_V_read(weight_buf_3x3_V_0_2_57_i),
    .dest_23_2_0_V_read(weight_buf_3x3_V_0_2_56_i),
    .dest_23_2_1_V_read(weight_buf_3x3_V_0_2_55_i),
    .dest_23_2_2_V_read(weight_buf_3x3_V_0_2_54_i),
    .dest_24_0_0_V_read(weight_buf_3x3_V_0_2_53_i),
    .dest_24_0_1_V_read(weight_buf_3x3_V_0_2_52_i),
    .dest_24_0_2_V_read(weight_buf_3x3_V_0_2_51_i),
    .dest_24_1_0_V_read(weight_buf_3x3_V_0_2_50_i),
    .dest_24_1_1_V_read(weight_buf_3x3_V_0_2_49_i),
    .dest_24_1_2_V_read(weight_buf_3x3_V_0_2_48_i),
    .dest_24_2_0_V_read(weight_buf_3x3_V_0_2_47_i),
    .dest_24_2_1_V_read(weight_buf_3x3_V_0_2_46_i),
    .dest_24_2_2_V_read(weight_buf_3x3_V_0_2_45_i),
    .dest_25_0_0_V_read(weight_buf_3x3_V_0_2_44_i),
    .dest_25_0_1_V_read(weight_buf_3x3_V_0_2_43_i),
    .dest_25_0_2_V_read(weight_buf_3x3_V_0_2_42_i),
    .dest_25_1_0_V_read(weight_buf_3x3_V_0_2_41_i),
    .dest_25_1_1_V_read(weight_buf_3x3_V_0_2_40_i),
    .dest_25_1_2_V_read(weight_buf_3x3_V_0_2_39_i),
    .dest_25_2_0_V_read(weight_buf_3x3_V_0_2_38_i),
    .dest_25_2_1_V_read(weight_buf_3x3_V_0_2_37_i),
    .dest_25_2_2_V_read(weight_buf_3x3_V_0_2_36_i),
    .dest_26_0_0_V_read(weight_buf_3x3_V_0_2_35_i),
    .dest_26_0_1_V_read(weight_buf_3x3_V_0_2_34_i),
    .dest_26_0_2_V_read(weight_buf_3x3_V_0_2_33_i),
    .dest_26_1_0_V_read(weight_buf_3x3_V_0_2_32_i),
    .dest_26_1_1_V_read(weight_buf_3x3_V_0_2_31_i),
    .dest_26_1_2_V_read(weight_buf_3x3_V_0_2_30_i),
    .dest_26_2_0_V_read(weight_buf_3x3_V_0_2_29_i),
    .dest_26_2_1_V_read(weight_buf_3x3_V_0_2_28_i),
    .dest_26_2_2_V_read(weight_buf_3x3_V_0_2_27_i),
    .dest_27_0_0_V_read(weight_buf_3x3_V_0_2_26_i),
    .dest_27_0_1_V_read(weight_buf_3x3_V_0_2_25_i),
    .dest_27_0_2_V_read(weight_buf_3x3_V_0_2_24_i),
    .dest_27_1_0_V_read(weight_buf_3x3_V_0_2_23_i),
    .dest_27_1_1_V_read(weight_buf_3x3_V_0_2_22_i),
    .dest_27_1_2_V_read(weight_buf_3x3_V_0_2_21_i),
    .dest_27_2_0_V_read(weight_buf_3x3_V_0_2_20_i),
    .dest_27_2_1_V_read(weight_buf_3x3_V_0_2_19_i),
    .dest_27_2_2_V_read(weight_buf_3x3_V_0_2_18_i),
    .dest_28_0_0_V_read(weight_buf_3x3_V_0_2_17_i),
    .dest_28_0_1_V_read(weight_buf_3x3_V_0_2_16_i),
    .dest_28_0_2_V_read(weight_buf_3x3_V_0_2_15_i),
    .dest_28_1_0_V_read(weight_buf_3x3_V_0_2_14_i),
    .dest_28_1_1_V_read(weight_buf_3x3_V_0_2_13_i),
    .dest_28_1_2_V_read(weight_buf_3x3_V_0_2_12_i),
    .dest_28_2_0_V_read(weight_buf_3x3_V_0_2_11_i),
    .dest_28_2_1_V_read(weight_buf_3x3_V_0_2_10_i),
    .dest_28_2_2_V_read(weight_buf_3x3_V_0_2_9_i),
    .dest_29_0_0_V_read(weight_buf_3x3_V_0_2_8_i),
    .dest_29_0_1_V_read(weight_buf_3x3_V_0_2_7_i),
    .dest_29_0_2_V_read(weight_buf_3x3_V_0_2_6_i),
    .dest_29_1_0_V_read(weight_buf_3x3_V_0_2_5_i),
    .dest_29_1_1_V_read(weight_buf_3x3_V_0_2_4_i),
    .dest_29_1_2_V_read(weight_buf_3x3_V_0_2_3_i),
    .dest_29_2_0_V_read(weight_buf_3x3_V_0_2_2_i),
    .dest_29_2_1_V_read(weight_buf_3x3_V_0_2_1_i),
    .dest_29_2_2_V_read(weight_buf_3x3_V_0_2_i),
    .dest_30_0_0_V_read(weight_buf_3x3_V_0_3_17_i),
    .dest_30_0_1_V_read(weight_buf_3x3_V_0_3_16_i),
    .dest_30_0_2_V_read(weight_buf_3x3_V_0_3_15_i),
    .dest_30_1_0_V_read(weight_buf_3x3_V_0_3_14_i),
    .dest_30_1_1_V_read(weight_buf_3x3_V_0_3_13_i),
    .dest_30_1_2_V_read(weight_buf_3x3_V_0_3_12_i),
    .dest_30_2_0_V_read(weight_buf_3x3_V_0_3_11_i),
    .dest_30_2_1_V_read(weight_buf_3x3_V_0_3_10_i),
    .dest_30_2_2_V_read(weight_buf_3x3_V_0_3_9_i),
    .dest_31_0_0_V_read(weight_buf_3x3_V_0_3_8_i),
    .dest_31_0_1_V_read(weight_buf_3x3_V_0_3_7_i),
    .dest_31_0_2_V_read(weight_buf_3x3_V_0_3_6_i),
    .dest_31_1_0_V_read(weight_buf_3x3_V_0_3_5_i),
    .dest_31_1_1_V_read(weight_buf_3x3_V_0_3_4_i),
    .dest_31_1_2_V_read(weight_buf_3x3_V_0_3_3_i),
    .dest_31_2_0_V_read(weight_buf_3x3_V_0_3_2_i),
    .dest_31_2_1_V_read(weight_buf_3x3_V_0_3_1_i),
    .dest_31_2_2_V_read(weight_buf_3x3_V_0_3_i),
    .m_axi_src_V_AWVALID(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWVALID),
    .m_axi_src_V_AWREADY(1'b0),
    .m_axi_src_V_AWADDR(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWADDR),
    .m_axi_src_V_AWID(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWID),
    .m_axi_src_V_AWLEN(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWLEN),
    .m_axi_src_V_AWSIZE(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWSIZE),
    .m_axi_src_V_AWBURST(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWBURST),
    .m_axi_src_V_AWLOCK(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWLOCK),
    .m_axi_src_V_AWCACHE(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWCACHE),
    .m_axi_src_V_AWPROT(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWPROT),
    .m_axi_src_V_AWQOS(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWQOS),
    .m_axi_src_V_AWREGION(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWREGION),
    .m_axi_src_V_AWUSER(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_AWUSER),
    .m_axi_src_V_WVALID(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WVALID),
    .m_axi_src_V_WREADY(1'b0),
    .m_axi_src_V_WDATA(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WDATA),
    .m_axi_src_V_WSTRB(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WSTRB),
    .m_axi_src_V_WLAST(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WLAST),
    .m_axi_src_V_WID(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WID),
    .m_axi_src_V_WUSER(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_WUSER),
    .m_axi_src_V_ARVALID(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARVALID),
    .m_axi_src_V_ARREADY(m_axi_conv_weight_3x3_all_V_ARREADY),
    .m_axi_src_V_ARADDR(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARADDR),
    .m_axi_src_V_ARID(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARID),
    .m_axi_src_V_ARLEN(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARLEN),
    .m_axi_src_V_ARSIZE(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARSIZE),
    .m_axi_src_V_ARBURST(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARBURST),
    .m_axi_src_V_ARLOCK(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARLOCK),
    .m_axi_src_V_ARCACHE(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARCACHE),
    .m_axi_src_V_ARPROT(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARPROT),
    .m_axi_src_V_ARQOS(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARQOS),
    .m_axi_src_V_ARREGION(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARREGION),
    .m_axi_src_V_ARUSER(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARUSER),
    .m_axi_src_V_RVALID(m_axi_conv_weight_3x3_all_V_RVALID),
    .m_axi_src_V_RREADY(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_RREADY),
    .m_axi_src_V_RDATA(m_axi_conv_weight_3x3_all_V_RDATA),
    .m_axi_src_V_RLAST(m_axi_conv_weight_3x3_all_V_RLAST),
    .m_axi_src_V_RID(m_axi_conv_weight_3x3_all_V_RID),
    .m_axi_src_V_RUSER(m_axi_conv_weight_3x3_all_V_RUSER),
    .m_axi_src_V_RRESP(m_axi_conv_weight_3x3_all_V_RRESP),
    .m_axi_src_V_BVALID(1'b0),
    .m_axi_src_V_BREADY(grp_load_weight_3x3_from_fu_1141_m_axi_src_V_BREADY),
    .m_axi_src_V_BRESP(2'd0),
    .m_axi_src_V_BID(1'd0),
    .m_axi_src_V_BUSER(1'd0),
    .src_V_offset(conv_weight_3x3_all_V_offset),
    .ap_return_0(grp_load_weight_3x3_from_fu_1141_ap_return_0),
    .ap_return_1(grp_load_weight_3x3_from_fu_1141_ap_return_1),
    .ap_return_2(grp_load_weight_3x3_from_fu_1141_ap_return_2),
    .ap_return_3(grp_load_weight_3x3_from_fu_1141_ap_return_3),
    .ap_return_4(grp_load_weight_3x3_from_fu_1141_ap_return_4),
    .ap_return_5(grp_load_weight_3x3_from_fu_1141_ap_return_5),
    .ap_return_6(grp_load_weight_3x3_from_fu_1141_ap_return_6),
    .ap_return_7(grp_load_weight_3x3_from_fu_1141_ap_return_7),
    .ap_return_8(grp_load_weight_3x3_from_fu_1141_ap_return_8),
    .ap_return_9(grp_load_weight_3x3_from_fu_1141_ap_return_9),
    .ap_return_10(grp_load_weight_3x3_from_fu_1141_ap_return_10),
    .ap_return_11(grp_load_weight_3x3_from_fu_1141_ap_return_11),
    .ap_return_12(grp_load_weight_3x3_from_fu_1141_ap_return_12),
    .ap_return_13(grp_load_weight_3x3_from_fu_1141_ap_return_13),
    .ap_return_14(grp_load_weight_3x3_from_fu_1141_ap_return_14),
    .ap_return_15(grp_load_weight_3x3_from_fu_1141_ap_return_15),
    .ap_return_16(grp_load_weight_3x3_from_fu_1141_ap_return_16),
    .ap_return_17(grp_load_weight_3x3_from_fu_1141_ap_return_17),
    .ap_return_18(grp_load_weight_3x3_from_fu_1141_ap_return_18),
    .ap_return_19(grp_load_weight_3x3_from_fu_1141_ap_return_19),
    .ap_return_20(grp_load_weight_3x3_from_fu_1141_ap_return_20),
    .ap_return_21(grp_load_weight_3x3_from_fu_1141_ap_return_21),
    .ap_return_22(grp_load_weight_3x3_from_fu_1141_ap_return_22),
    .ap_return_23(grp_load_weight_3x3_from_fu_1141_ap_return_23),
    .ap_return_24(grp_load_weight_3x3_from_fu_1141_ap_return_24),
    .ap_return_25(grp_load_weight_3x3_from_fu_1141_ap_return_25),
    .ap_return_26(grp_load_weight_3x3_from_fu_1141_ap_return_26),
    .ap_return_27(grp_load_weight_3x3_from_fu_1141_ap_return_27),
    .ap_return_28(grp_load_weight_3x3_from_fu_1141_ap_return_28),
    .ap_return_29(grp_load_weight_3x3_from_fu_1141_ap_return_29),
    .ap_return_30(grp_load_weight_3x3_from_fu_1141_ap_return_30),
    .ap_return_31(grp_load_weight_3x3_from_fu_1141_ap_return_31),
    .ap_return_32(grp_load_weight_3x3_from_fu_1141_ap_return_32),
    .ap_return_33(grp_load_weight_3x3_from_fu_1141_ap_return_33),
    .ap_return_34(grp_load_weight_3x3_from_fu_1141_ap_return_34),
    .ap_return_35(grp_load_weight_3x3_from_fu_1141_ap_return_35),
    .ap_return_36(grp_load_weight_3x3_from_fu_1141_ap_return_36),
    .ap_return_37(grp_load_weight_3x3_from_fu_1141_ap_return_37),
    .ap_return_38(grp_load_weight_3x3_from_fu_1141_ap_return_38),
    .ap_return_39(grp_load_weight_3x3_from_fu_1141_ap_return_39),
    .ap_return_40(grp_load_weight_3x3_from_fu_1141_ap_return_40),
    .ap_return_41(grp_load_weight_3x3_from_fu_1141_ap_return_41),
    .ap_return_42(grp_load_weight_3x3_from_fu_1141_ap_return_42),
    .ap_return_43(grp_load_weight_3x3_from_fu_1141_ap_return_43),
    .ap_return_44(grp_load_weight_3x3_from_fu_1141_ap_return_44),
    .ap_return_45(grp_load_weight_3x3_from_fu_1141_ap_return_45),
    .ap_return_46(grp_load_weight_3x3_from_fu_1141_ap_return_46),
    .ap_return_47(grp_load_weight_3x3_from_fu_1141_ap_return_47),
    .ap_return_48(grp_load_weight_3x3_from_fu_1141_ap_return_48),
    .ap_return_49(grp_load_weight_3x3_from_fu_1141_ap_return_49),
    .ap_return_50(grp_load_weight_3x3_from_fu_1141_ap_return_50),
    .ap_return_51(grp_load_weight_3x3_from_fu_1141_ap_return_51),
    .ap_return_52(grp_load_weight_3x3_from_fu_1141_ap_return_52),
    .ap_return_53(grp_load_weight_3x3_from_fu_1141_ap_return_53),
    .ap_return_54(grp_load_weight_3x3_from_fu_1141_ap_return_54),
    .ap_return_55(grp_load_weight_3x3_from_fu_1141_ap_return_55),
    .ap_return_56(grp_load_weight_3x3_from_fu_1141_ap_return_56),
    .ap_return_57(grp_load_weight_3x3_from_fu_1141_ap_return_57),
    .ap_return_58(grp_load_weight_3x3_from_fu_1141_ap_return_58),
    .ap_return_59(grp_load_weight_3x3_from_fu_1141_ap_return_59),
    .ap_return_60(grp_load_weight_3x3_from_fu_1141_ap_return_60),
    .ap_return_61(grp_load_weight_3x3_from_fu_1141_ap_return_61),
    .ap_return_62(grp_load_weight_3x3_from_fu_1141_ap_return_62),
    .ap_return_63(grp_load_weight_3x3_from_fu_1141_ap_return_63),
    .ap_return_64(grp_load_weight_3x3_from_fu_1141_ap_return_64),
    .ap_return_65(grp_load_weight_3x3_from_fu_1141_ap_return_65),
    .ap_return_66(grp_load_weight_3x3_from_fu_1141_ap_return_66),
    .ap_return_67(grp_load_weight_3x3_from_fu_1141_ap_return_67),
    .ap_return_68(grp_load_weight_3x3_from_fu_1141_ap_return_68),
    .ap_return_69(grp_load_weight_3x3_from_fu_1141_ap_return_69),
    .ap_return_70(grp_load_weight_3x3_from_fu_1141_ap_return_70),
    .ap_return_71(grp_load_weight_3x3_from_fu_1141_ap_return_71),
    .ap_return_72(grp_load_weight_3x3_from_fu_1141_ap_return_72),
    .ap_return_73(grp_load_weight_3x3_from_fu_1141_ap_return_73),
    .ap_return_74(grp_load_weight_3x3_from_fu_1141_ap_return_74),
    .ap_return_75(grp_load_weight_3x3_from_fu_1141_ap_return_75),
    .ap_return_76(grp_load_weight_3x3_from_fu_1141_ap_return_76),
    .ap_return_77(grp_load_weight_3x3_from_fu_1141_ap_return_77),
    .ap_return_78(grp_load_weight_3x3_from_fu_1141_ap_return_78),
    .ap_return_79(grp_load_weight_3x3_from_fu_1141_ap_return_79),
    .ap_return_80(grp_load_weight_3x3_from_fu_1141_ap_return_80),
    .ap_return_81(grp_load_weight_3x3_from_fu_1141_ap_return_81),
    .ap_return_82(grp_load_weight_3x3_from_fu_1141_ap_return_82),
    .ap_return_83(grp_load_weight_3x3_from_fu_1141_ap_return_83),
    .ap_return_84(grp_load_weight_3x3_from_fu_1141_ap_return_84),
    .ap_return_85(grp_load_weight_3x3_from_fu_1141_ap_return_85),
    .ap_return_86(grp_load_weight_3x3_from_fu_1141_ap_return_86),
    .ap_return_87(grp_load_weight_3x3_from_fu_1141_ap_return_87),
    .ap_return_88(grp_load_weight_3x3_from_fu_1141_ap_return_88),
    .ap_return_89(grp_load_weight_3x3_from_fu_1141_ap_return_89),
    .ap_return_90(grp_load_weight_3x3_from_fu_1141_ap_return_90),
    .ap_return_91(grp_load_weight_3x3_from_fu_1141_ap_return_91),
    .ap_return_92(grp_load_weight_3x3_from_fu_1141_ap_return_92),
    .ap_return_93(grp_load_weight_3x3_from_fu_1141_ap_return_93),
    .ap_return_94(grp_load_weight_3x3_from_fu_1141_ap_return_94),
    .ap_return_95(grp_load_weight_3x3_from_fu_1141_ap_return_95),
    .ap_return_96(grp_load_weight_3x3_from_fu_1141_ap_return_96),
    .ap_return_97(grp_load_weight_3x3_from_fu_1141_ap_return_97),
    .ap_return_98(grp_load_weight_3x3_from_fu_1141_ap_return_98),
    .ap_return_99(grp_load_weight_3x3_from_fu_1141_ap_return_99),
    .ap_return_100(grp_load_weight_3x3_from_fu_1141_ap_return_100),
    .ap_return_101(grp_load_weight_3x3_from_fu_1141_ap_return_101),
    .ap_return_102(grp_load_weight_3x3_from_fu_1141_ap_return_102),
    .ap_return_103(grp_load_weight_3x3_from_fu_1141_ap_return_103),
    .ap_return_104(grp_load_weight_3x3_from_fu_1141_ap_return_104),
    .ap_return_105(grp_load_weight_3x3_from_fu_1141_ap_return_105),
    .ap_return_106(grp_load_weight_3x3_from_fu_1141_ap_return_106),
    .ap_return_107(grp_load_weight_3x3_from_fu_1141_ap_return_107),
    .ap_return_108(grp_load_weight_3x3_from_fu_1141_ap_return_108),
    .ap_return_109(grp_load_weight_3x3_from_fu_1141_ap_return_109),
    .ap_return_110(grp_load_weight_3x3_from_fu_1141_ap_return_110),
    .ap_return_111(grp_load_weight_3x3_from_fu_1141_ap_return_111),
    .ap_return_112(grp_load_weight_3x3_from_fu_1141_ap_return_112),
    .ap_return_113(grp_load_weight_3x3_from_fu_1141_ap_return_113),
    .ap_return_114(grp_load_weight_3x3_from_fu_1141_ap_return_114),
    .ap_return_115(grp_load_weight_3x3_from_fu_1141_ap_return_115),
    .ap_return_116(grp_load_weight_3x3_from_fu_1141_ap_return_116),
    .ap_return_117(grp_load_weight_3x3_from_fu_1141_ap_return_117),
    .ap_return_118(grp_load_weight_3x3_from_fu_1141_ap_return_118),
    .ap_return_119(grp_load_weight_3x3_from_fu_1141_ap_return_119),
    .ap_return_120(grp_load_weight_3x3_from_fu_1141_ap_return_120),
    .ap_return_121(grp_load_weight_3x3_from_fu_1141_ap_return_121),
    .ap_return_122(grp_load_weight_3x3_from_fu_1141_ap_return_122),
    .ap_return_123(grp_load_weight_3x3_from_fu_1141_ap_return_123),
    .ap_return_124(grp_load_weight_3x3_from_fu_1141_ap_return_124),
    .ap_return_125(grp_load_weight_3x3_from_fu_1141_ap_return_125),
    .ap_return_126(grp_load_weight_3x3_from_fu_1141_ap_return_126),
    .ap_return_127(grp_load_weight_3x3_from_fu_1141_ap_return_127),
    .ap_return_128(grp_load_weight_3x3_from_fu_1141_ap_return_128),
    .ap_return_129(grp_load_weight_3x3_from_fu_1141_ap_return_129),
    .ap_return_130(grp_load_weight_3x3_from_fu_1141_ap_return_130),
    .ap_return_131(grp_load_weight_3x3_from_fu_1141_ap_return_131),
    .ap_return_132(grp_load_weight_3x3_from_fu_1141_ap_return_132),
    .ap_return_133(grp_load_weight_3x3_from_fu_1141_ap_return_133),
    .ap_return_134(grp_load_weight_3x3_from_fu_1141_ap_return_134),
    .ap_return_135(grp_load_weight_3x3_from_fu_1141_ap_return_135),
    .ap_return_136(grp_load_weight_3x3_from_fu_1141_ap_return_136),
    .ap_return_137(grp_load_weight_3x3_from_fu_1141_ap_return_137),
    .ap_return_138(grp_load_weight_3x3_from_fu_1141_ap_return_138),
    .ap_return_139(grp_load_weight_3x3_from_fu_1141_ap_return_139),
    .ap_return_140(grp_load_weight_3x3_from_fu_1141_ap_return_140),
    .ap_return_141(grp_load_weight_3x3_from_fu_1141_ap_return_141),
    .ap_return_142(grp_load_weight_3x3_from_fu_1141_ap_return_142),
    .ap_return_143(grp_load_weight_3x3_from_fu_1141_ap_return_143),
    .ap_return_144(grp_load_weight_3x3_from_fu_1141_ap_return_144),
    .ap_return_145(grp_load_weight_3x3_from_fu_1141_ap_return_145),
    .ap_return_146(grp_load_weight_3x3_from_fu_1141_ap_return_146),
    .ap_return_147(grp_load_weight_3x3_from_fu_1141_ap_return_147),
    .ap_return_148(grp_load_weight_3x3_from_fu_1141_ap_return_148),
    .ap_return_149(grp_load_weight_3x3_from_fu_1141_ap_return_149),
    .ap_return_150(grp_load_weight_3x3_from_fu_1141_ap_return_150),
    .ap_return_151(grp_load_weight_3x3_from_fu_1141_ap_return_151),
    .ap_return_152(grp_load_weight_3x3_from_fu_1141_ap_return_152),
    .ap_return_153(grp_load_weight_3x3_from_fu_1141_ap_return_153),
    .ap_return_154(grp_load_weight_3x3_from_fu_1141_ap_return_154),
    .ap_return_155(grp_load_weight_3x3_from_fu_1141_ap_return_155),
    .ap_return_156(grp_load_weight_3x3_from_fu_1141_ap_return_156),
    .ap_return_157(grp_load_weight_3x3_from_fu_1141_ap_return_157),
    .ap_return_158(grp_load_weight_3x3_from_fu_1141_ap_return_158),
    .ap_return_159(grp_load_weight_3x3_from_fu_1141_ap_return_159),
    .ap_return_160(grp_load_weight_3x3_from_fu_1141_ap_return_160),
    .ap_return_161(grp_load_weight_3x3_from_fu_1141_ap_return_161),
    .ap_return_162(grp_load_weight_3x3_from_fu_1141_ap_return_162),
    .ap_return_163(grp_load_weight_3x3_from_fu_1141_ap_return_163),
    .ap_return_164(grp_load_weight_3x3_from_fu_1141_ap_return_164),
    .ap_return_165(grp_load_weight_3x3_from_fu_1141_ap_return_165),
    .ap_return_166(grp_load_weight_3x3_from_fu_1141_ap_return_166),
    .ap_return_167(grp_load_weight_3x3_from_fu_1141_ap_return_167),
    .ap_return_168(grp_load_weight_3x3_from_fu_1141_ap_return_168),
    .ap_return_169(grp_load_weight_3x3_from_fu_1141_ap_return_169),
    .ap_return_170(grp_load_weight_3x3_from_fu_1141_ap_return_170),
    .ap_return_171(grp_load_weight_3x3_from_fu_1141_ap_return_171),
    .ap_return_172(grp_load_weight_3x3_from_fu_1141_ap_return_172),
    .ap_return_173(grp_load_weight_3x3_from_fu_1141_ap_return_173),
    .ap_return_174(grp_load_weight_3x3_from_fu_1141_ap_return_174),
    .ap_return_175(grp_load_weight_3x3_from_fu_1141_ap_return_175),
    .ap_return_176(grp_load_weight_3x3_from_fu_1141_ap_return_176),
    .ap_return_177(grp_load_weight_3x3_from_fu_1141_ap_return_177),
    .ap_return_178(grp_load_weight_3x3_from_fu_1141_ap_return_178),
    .ap_return_179(grp_load_weight_3x3_from_fu_1141_ap_return_179),
    .ap_return_180(grp_load_weight_3x3_from_fu_1141_ap_return_180),
    .ap_return_181(grp_load_weight_3x3_from_fu_1141_ap_return_181),
    .ap_return_182(grp_load_weight_3x3_from_fu_1141_ap_return_182),
    .ap_return_183(grp_load_weight_3x3_from_fu_1141_ap_return_183),
    .ap_return_184(grp_load_weight_3x3_from_fu_1141_ap_return_184),
    .ap_return_185(grp_load_weight_3x3_from_fu_1141_ap_return_185),
    .ap_return_186(grp_load_weight_3x3_from_fu_1141_ap_return_186),
    .ap_return_187(grp_load_weight_3x3_from_fu_1141_ap_return_187),
    .ap_return_188(grp_load_weight_3x3_from_fu_1141_ap_return_188),
    .ap_return_189(grp_load_weight_3x3_from_fu_1141_ap_return_189),
    .ap_return_190(grp_load_weight_3x3_from_fu_1141_ap_return_190),
    .ap_return_191(grp_load_weight_3x3_from_fu_1141_ap_return_191),
    .ap_return_192(grp_load_weight_3x3_from_fu_1141_ap_return_192),
    .ap_return_193(grp_load_weight_3x3_from_fu_1141_ap_return_193),
    .ap_return_194(grp_load_weight_3x3_from_fu_1141_ap_return_194),
    .ap_return_195(grp_load_weight_3x3_from_fu_1141_ap_return_195),
    .ap_return_196(grp_load_weight_3x3_from_fu_1141_ap_return_196),
    .ap_return_197(grp_load_weight_3x3_from_fu_1141_ap_return_197),
    .ap_return_198(grp_load_weight_3x3_from_fu_1141_ap_return_198),
    .ap_return_199(grp_load_weight_3x3_from_fu_1141_ap_return_199),
    .ap_return_200(grp_load_weight_3x3_from_fu_1141_ap_return_200),
    .ap_return_201(grp_load_weight_3x3_from_fu_1141_ap_return_201),
    .ap_return_202(grp_load_weight_3x3_from_fu_1141_ap_return_202),
    .ap_return_203(grp_load_weight_3x3_from_fu_1141_ap_return_203),
    .ap_return_204(grp_load_weight_3x3_from_fu_1141_ap_return_204),
    .ap_return_205(grp_load_weight_3x3_from_fu_1141_ap_return_205),
    .ap_return_206(grp_load_weight_3x3_from_fu_1141_ap_return_206),
    .ap_return_207(grp_load_weight_3x3_from_fu_1141_ap_return_207),
    .ap_return_208(grp_load_weight_3x3_from_fu_1141_ap_return_208),
    .ap_return_209(grp_load_weight_3x3_from_fu_1141_ap_return_209),
    .ap_return_210(grp_load_weight_3x3_from_fu_1141_ap_return_210),
    .ap_return_211(grp_load_weight_3x3_from_fu_1141_ap_return_211),
    .ap_return_212(grp_load_weight_3x3_from_fu_1141_ap_return_212),
    .ap_return_213(grp_load_weight_3x3_from_fu_1141_ap_return_213),
    .ap_return_214(grp_load_weight_3x3_from_fu_1141_ap_return_214),
    .ap_return_215(grp_load_weight_3x3_from_fu_1141_ap_return_215),
    .ap_return_216(grp_load_weight_3x3_from_fu_1141_ap_return_216),
    .ap_return_217(grp_load_weight_3x3_from_fu_1141_ap_return_217),
    .ap_return_218(grp_load_weight_3x3_from_fu_1141_ap_return_218),
    .ap_return_219(grp_load_weight_3x3_from_fu_1141_ap_return_219),
    .ap_return_220(grp_load_weight_3x3_from_fu_1141_ap_return_220),
    .ap_return_221(grp_load_weight_3x3_from_fu_1141_ap_return_221),
    .ap_return_222(grp_load_weight_3x3_from_fu_1141_ap_return_222),
    .ap_return_223(grp_load_weight_3x3_from_fu_1141_ap_return_223),
    .ap_return_224(grp_load_weight_3x3_from_fu_1141_ap_return_224),
    .ap_return_225(grp_load_weight_3x3_from_fu_1141_ap_return_225),
    .ap_return_226(grp_load_weight_3x3_from_fu_1141_ap_return_226),
    .ap_return_227(grp_load_weight_3x3_from_fu_1141_ap_return_227),
    .ap_return_228(grp_load_weight_3x3_from_fu_1141_ap_return_228),
    .ap_return_229(grp_load_weight_3x3_from_fu_1141_ap_return_229),
    .ap_return_230(grp_load_weight_3x3_from_fu_1141_ap_return_230),
    .ap_return_231(grp_load_weight_3x3_from_fu_1141_ap_return_231),
    .ap_return_232(grp_load_weight_3x3_from_fu_1141_ap_return_232),
    .ap_return_233(grp_load_weight_3x3_from_fu_1141_ap_return_233),
    .ap_return_234(grp_load_weight_3x3_from_fu_1141_ap_return_234),
    .ap_return_235(grp_load_weight_3x3_from_fu_1141_ap_return_235),
    .ap_return_236(grp_load_weight_3x3_from_fu_1141_ap_return_236),
    .ap_return_237(grp_load_weight_3x3_from_fu_1141_ap_return_237),
    .ap_return_238(grp_load_weight_3x3_from_fu_1141_ap_return_238),
    .ap_return_239(grp_load_weight_3x3_from_fu_1141_ap_return_239),
    .ap_return_240(grp_load_weight_3x3_from_fu_1141_ap_return_240),
    .ap_return_241(grp_load_weight_3x3_from_fu_1141_ap_return_241),
    .ap_return_242(grp_load_weight_3x3_from_fu_1141_ap_return_242),
    .ap_return_243(grp_load_weight_3x3_from_fu_1141_ap_return_243),
    .ap_return_244(grp_load_weight_3x3_from_fu_1141_ap_return_244),
    .ap_return_245(grp_load_weight_3x3_from_fu_1141_ap_return_245),
    .ap_return_246(grp_load_weight_3x3_from_fu_1141_ap_return_246),
    .ap_return_247(grp_load_weight_3x3_from_fu_1141_ap_return_247),
    .ap_return_248(grp_load_weight_3x3_from_fu_1141_ap_return_248),
    .ap_return_249(grp_load_weight_3x3_from_fu_1141_ap_return_249),
    .ap_return_250(grp_load_weight_3x3_from_fu_1141_ap_return_250),
    .ap_return_251(grp_load_weight_3x3_from_fu_1141_ap_return_251),
    .ap_return_252(grp_load_weight_3x3_from_fu_1141_ap_return_252),
    .ap_return_253(grp_load_weight_3x3_from_fu_1141_ap_return_253),
    .ap_return_254(grp_load_weight_3x3_from_fu_1141_ap_return_254),
    .ap_return_255(grp_load_weight_3x3_from_fu_1141_ap_return_255),
    .ap_return_256(grp_load_weight_3x3_from_fu_1141_ap_return_256),
    .ap_return_257(grp_load_weight_3x3_from_fu_1141_ap_return_257),
    .ap_return_258(grp_load_weight_3x3_from_fu_1141_ap_return_258),
    .ap_return_259(grp_load_weight_3x3_from_fu_1141_ap_return_259),
    .ap_return_260(grp_load_weight_3x3_from_fu_1141_ap_return_260),
    .ap_return_261(grp_load_weight_3x3_from_fu_1141_ap_return_261),
    .ap_return_262(grp_load_weight_3x3_from_fu_1141_ap_return_262),
    .ap_return_263(grp_load_weight_3x3_from_fu_1141_ap_return_263),
    .ap_return_264(grp_load_weight_3x3_from_fu_1141_ap_return_264),
    .ap_return_265(grp_load_weight_3x3_from_fu_1141_ap_return_265),
    .ap_return_266(grp_load_weight_3x3_from_fu_1141_ap_return_266),
    .ap_return_267(grp_load_weight_3x3_from_fu_1141_ap_return_267),
    .ap_return_268(grp_load_weight_3x3_from_fu_1141_ap_return_268),
    .ap_return_269(grp_load_weight_3x3_from_fu_1141_ap_return_269),
    .ap_return_270(grp_load_weight_3x3_from_fu_1141_ap_return_270),
    .ap_return_271(grp_load_weight_3x3_from_fu_1141_ap_return_271),
    .ap_return_272(grp_load_weight_3x3_from_fu_1141_ap_return_272),
    .ap_return_273(grp_load_weight_3x3_from_fu_1141_ap_return_273),
    .ap_return_274(grp_load_weight_3x3_from_fu_1141_ap_return_274),
    .ap_return_275(grp_load_weight_3x3_from_fu_1141_ap_return_275),
    .ap_return_276(grp_load_weight_3x3_from_fu_1141_ap_return_276),
    .ap_return_277(grp_load_weight_3x3_from_fu_1141_ap_return_277),
    .ap_return_278(grp_load_weight_3x3_from_fu_1141_ap_return_278),
    .ap_return_279(grp_load_weight_3x3_from_fu_1141_ap_return_279),
    .ap_return_280(grp_load_weight_3x3_from_fu_1141_ap_return_280),
    .ap_return_281(grp_load_weight_3x3_from_fu_1141_ap_return_281),
    .ap_return_282(grp_load_weight_3x3_from_fu_1141_ap_return_282),
    .ap_return_283(grp_load_weight_3x3_from_fu_1141_ap_return_283),
    .ap_return_284(grp_load_weight_3x3_from_fu_1141_ap_return_284),
    .ap_return_285(grp_load_weight_3x3_from_fu_1141_ap_return_285),
    .ap_return_286(grp_load_weight_3x3_from_fu_1141_ap_return_286),
    .ap_return_287(grp_load_weight_3x3_from_fu_1141_ap_return_287)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load_weight_3x3_from_fu_1141_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_load_weight_3x3_from_fu_1141_ap_start_reg <= 1'b1;
        end else if ((grp_load_weight_3x3_from_fu_1141_ap_ready == 1'b1)) begin
            grp_load_weight_3x3_from_fu_1141_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln231_fu_5768_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_1130 <= i_fu_5774_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        i_0_reg_1130 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln414_reg_11228 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        DATA_7_V_1_fu_1102 <= m_axi_conv_weight_3x3_all_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln414_reg_11228 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        DATA_7_V_fu_1098 <= m_axi_conv_weight_3x3_all_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln231_fu_5768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln414_reg_11228 <= trunc_ln414_fu_5780_p1;
    end
end

always @ (*) begin
    if ((icmp_ln231_fu_5768_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_0_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_0_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_10_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_10_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_11_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_11_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_12_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_12_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_13_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_13_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_14_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_14_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_15_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_15_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_16_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_16_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_17_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_17_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_18_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_18_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_19_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_19_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_1_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_1_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_20_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_20_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_21_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_21_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_22_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_22_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_23_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_23_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_24_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_24_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_25_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_25_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_26_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_26_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_27_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_27_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_28_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_28_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_29_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_29_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_2_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_2_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_30_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_30_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_31_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_31_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_3_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_3_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_4_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_4_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_5_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_5_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_6_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_6_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_7_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_7_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_8_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_8_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_bias_buf_V_9_0_ap_vld = 1'b1;
    end else begin
        bn_bias_buf_V_9_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_0_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_0_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_10_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_10_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_11_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_11_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_12_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_12_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_13_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_13_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_14_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_14_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_15_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_15_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_16_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_16_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_17_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_17_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_18_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_18_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_19_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_19_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_1_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_1_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_20_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_20_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_21_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_21_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_22_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_22_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_23_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_23_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_24_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_24_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_25_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_25_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_26_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_26_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_27_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_27_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_28_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_28_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_29_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_29_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_2_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_2_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_30_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_30_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_31_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_31_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_3_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_3_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_4_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_4_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_5_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_5_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_6_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_6_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_7_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_7_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_8_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_8_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bn_weight_buf_V_9_0_ap_vld = 1'b1;
    end else begin
        bn_weight_buf_V_9_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv_weight_3x3_all_V_blk_n_AR = m_axi_conv_weight_3x3_all_V_ARREADY;
    end else begin
        conv_weight_3x3_all_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        conv_weight_3x3_all_V_blk_n_R = m_axi_conv_weight_3x3_all_V_RVALID;
    end else begin
        conv_weight_3x3_all_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((m_axi_conv_weight_3x3_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_conv_weight_3x3_all_V_ARADDR = zext_ln647_fu_5757_p1;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARADDR = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARADDR;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARBURST = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARBURST;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARCACHE = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARCACHE;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARID = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARID;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((m_axi_conv_weight_3x3_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_conv_weight_3x3_all_V_ARLEN = 32'd8;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARLEN = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARLEN;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARLOCK = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARLOCK;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARPROT = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARPROT;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARQOS = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARQOS;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARREGION = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARREGION;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARSIZE = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARSIZE;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARUSER = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARUSER;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((m_axi_conv_weight_3x3_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_conv_weight_3x3_all_V_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_ARVALID = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_ARVALID;
    end else begin
        m_axi_conv_weight_3x3_all_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_conv_weight_3x3_all_V_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_conv_weight_3x3_all_V_RREADY = grp_load_weight_3x3_from_fu_1141_m_axi_src_V_RREADY;
    end else begin
        m_axi_conv_weight_3x3_all_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_7;
    end else begin
        weight_buf_3x3_V_0_0_1_o = weight_buf_3x3_V_0_0_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_0_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_6;
    end else begin
        weight_buf_3x3_V_0_0_2_o = weight_buf_3x3_V_0_0_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_0_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_5;
    end else begin
        weight_buf_3x3_V_0_0_3_o = weight_buf_3x3_V_0_0_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_0_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_4;
    end else begin
        weight_buf_3x3_V_0_0_4_o = weight_buf_3x3_V_0_0_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_0_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_3;
    end else begin
        weight_buf_3x3_V_0_0_5_o = weight_buf_3x3_V_0_0_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_0_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_2;
    end else begin
        weight_buf_3x3_V_0_0_6_o = weight_buf_3x3_V_0_0_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_0_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_1;
    end else begin
        weight_buf_3x3_V_0_0_7_o = weight_buf_3x3_V_0_0_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_0_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_0;
    end else begin
        weight_buf_3x3_V_0_0_8_o = weight_buf_3x3_V_0_0_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_0_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_o = grp_load_weight_3x3_from_fu_1141_ap_return_8;
    end else begin
        weight_buf_3x3_V_0_0_o = weight_buf_3x3_V_0_0_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_0_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_10_o = grp_load_weight_3x3_from_fu_1141_ap_return_169;
    end else begin
        weight_buf_3x3_V_0_1_10_o = weight_buf_3x3_V_0_1_10_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_10_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_10_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_11_o = grp_load_weight_3x3_from_fu_1141_ap_return_168;
    end else begin
        weight_buf_3x3_V_0_1_11_o = weight_buf_3x3_V_0_1_11_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_11_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_11_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_12_o = grp_load_weight_3x3_from_fu_1141_ap_return_167;
    end else begin
        weight_buf_3x3_V_0_1_12_o = weight_buf_3x3_V_0_1_12_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_12_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_12_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_13_o = grp_load_weight_3x3_from_fu_1141_ap_return_166;
    end else begin
        weight_buf_3x3_V_0_1_13_o = weight_buf_3x3_V_0_1_13_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_13_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_13_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_14_o = grp_load_weight_3x3_from_fu_1141_ap_return_165;
    end else begin
        weight_buf_3x3_V_0_1_14_o = weight_buf_3x3_V_0_1_14_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_14_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_14_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_15_o = grp_load_weight_3x3_from_fu_1141_ap_return_164;
    end else begin
        weight_buf_3x3_V_0_1_15_o = weight_buf_3x3_V_0_1_15_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_15_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_15_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_16_o = grp_load_weight_3x3_from_fu_1141_ap_return_163;
    end else begin
        weight_buf_3x3_V_0_1_16_o = weight_buf_3x3_V_0_1_16_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_16_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_16_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_17_o = grp_load_weight_3x3_from_fu_1141_ap_return_162;
    end else begin
        weight_buf_3x3_V_0_1_17_o = weight_buf_3x3_V_0_1_17_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_17_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_17_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_18_o = grp_load_weight_3x3_from_fu_1141_ap_return_161;
    end else begin
        weight_buf_3x3_V_0_1_18_o = weight_buf_3x3_V_0_1_18_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_18_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_18_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_19_o = grp_load_weight_3x3_from_fu_1141_ap_return_160;
    end else begin
        weight_buf_3x3_V_0_1_19_o = weight_buf_3x3_V_0_1_19_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_19_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_19_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_178;
    end else begin
        weight_buf_3x3_V_0_1_1_o = weight_buf_3x3_V_0_1_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_20_o = grp_load_weight_3x3_from_fu_1141_ap_return_159;
    end else begin
        weight_buf_3x3_V_0_1_20_o = weight_buf_3x3_V_0_1_20_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_20_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_20_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_21_o = grp_load_weight_3x3_from_fu_1141_ap_return_158;
    end else begin
        weight_buf_3x3_V_0_1_21_o = weight_buf_3x3_V_0_1_21_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_21_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_21_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_22_o = grp_load_weight_3x3_from_fu_1141_ap_return_157;
    end else begin
        weight_buf_3x3_V_0_1_22_o = weight_buf_3x3_V_0_1_22_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_22_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_22_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_23_o = grp_load_weight_3x3_from_fu_1141_ap_return_156;
    end else begin
        weight_buf_3x3_V_0_1_23_o = weight_buf_3x3_V_0_1_23_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_23_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_23_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_24_o = grp_load_weight_3x3_from_fu_1141_ap_return_155;
    end else begin
        weight_buf_3x3_V_0_1_24_o = weight_buf_3x3_V_0_1_24_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_24_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_24_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_25_o = grp_load_weight_3x3_from_fu_1141_ap_return_154;
    end else begin
        weight_buf_3x3_V_0_1_25_o = weight_buf_3x3_V_0_1_25_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_25_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_25_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_26_o = grp_load_weight_3x3_from_fu_1141_ap_return_153;
    end else begin
        weight_buf_3x3_V_0_1_26_o = weight_buf_3x3_V_0_1_26_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_26_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_26_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_27_o = grp_load_weight_3x3_from_fu_1141_ap_return_152;
    end else begin
        weight_buf_3x3_V_0_1_27_o = weight_buf_3x3_V_0_1_27_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_27_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_27_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_28_o = grp_load_weight_3x3_from_fu_1141_ap_return_151;
    end else begin
        weight_buf_3x3_V_0_1_28_o = weight_buf_3x3_V_0_1_28_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_28_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_28_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_29_o = grp_load_weight_3x3_from_fu_1141_ap_return_150;
    end else begin
        weight_buf_3x3_V_0_1_29_o = weight_buf_3x3_V_0_1_29_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_29_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_29_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_177;
    end else begin
        weight_buf_3x3_V_0_1_2_o = weight_buf_3x3_V_0_1_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_30_o = grp_load_weight_3x3_from_fu_1141_ap_return_149;
    end else begin
        weight_buf_3x3_V_0_1_30_o = weight_buf_3x3_V_0_1_30_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_30_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_30_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_31_o = grp_load_weight_3x3_from_fu_1141_ap_return_148;
    end else begin
        weight_buf_3x3_V_0_1_31_o = weight_buf_3x3_V_0_1_31_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_31_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_31_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_32_o = grp_load_weight_3x3_from_fu_1141_ap_return_147;
    end else begin
        weight_buf_3x3_V_0_1_32_o = weight_buf_3x3_V_0_1_32_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_32_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_32_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_33_o = grp_load_weight_3x3_from_fu_1141_ap_return_146;
    end else begin
        weight_buf_3x3_V_0_1_33_o = weight_buf_3x3_V_0_1_33_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_33_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_33_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_34_o = grp_load_weight_3x3_from_fu_1141_ap_return_145;
    end else begin
        weight_buf_3x3_V_0_1_34_o = weight_buf_3x3_V_0_1_34_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_34_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_34_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_35_o = grp_load_weight_3x3_from_fu_1141_ap_return_144;
    end else begin
        weight_buf_3x3_V_0_1_35_o = weight_buf_3x3_V_0_1_35_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_35_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_35_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_36_o = grp_load_weight_3x3_from_fu_1141_ap_return_143;
    end else begin
        weight_buf_3x3_V_0_1_36_o = weight_buf_3x3_V_0_1_36_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_36_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_36_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_37_o = grp_load_weight_3x3_from_fu_1141_ap_return_142;
    end else begin
        weight_buf_3x3_V_0_1_37_o = weight_buf_3x3_V_0_1_37_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_37_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_37_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_38_o = grp_load_weight_3x3_from_fu_1141_ap_return_141;
    end else begin
        weight_buf_3x3_V_0_1_38_o = weight_buf_3x3_V_0_1_38_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_38_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_38_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_39_o = grp_load_weight_3x3_from_fu_1141_ap_return_140;
    end else begin
        weight_buf_3x3_V_0_1_39_o = weight_buf_3x3_V_0_1_39_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_39_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_39_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_176;
    end else begin
        weight_buf_3x3_V_0_1_3_o = weight_buf_3x3_V_0_1_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_40_o = grp_load_weight_3x3_from_fu_1141_ap_return_139;
    end else begin
        weight_buf_3x3_V_0_1_40_o = weight_buf_3x3_V_0_1_40_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_40_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_40_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_41_o = grp_load_weight_3x3_from_fu_1141_ap_return_138;
    end else begin
        weight_buf_3x3_V_0_1_41_o = weight_buf_3x3_V_0_1_41_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_41_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_41_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_42_o = grp_load_weight_3x3_from_fu_1141_ap_return_137;
    end else begin
        weight_buf_3x3_V_0_1_42_o = weight_buf_3x3_V_0_1_42_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_42_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_42_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_43_o = grp_load_weight_3x3_from_fu_1141_ap_return_136;
    end else begin
        weight_buf_3x3_V_0_1_43_o = weight_buf_3x3_V_0_1_43_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_43_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_43_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_44_o = grp_load_weight_3x3_from_fu_1141_ap_return_135;
    end else begin
        weight_buf_3x3_V_0_1_44_o = weight_buf_3x3_V_0_1_44_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_44_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_44_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_45_o = grp_load_weight_3x3_from_fu_1141_ap_return_134;
    end else begin
        weight_buf_3x3_V_0_1_45_o = weight_buf_3x3_V_0_1_45_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_45_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_45_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_46_o = grp_load_weight_3x3_from_fu_1141_ap_return_133;
    end else begin
        weight_buf_3x3_V_0_1_46_o = weight_buf_3x3_V_0_1_46_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_46_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_46_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_47_o = grp_load_weight_3x3_from_fu_1141_ap_return_132;
    end else begin
        weight_buf_3x3_V_0_1_47_o = weight_buf_3x3_V_0_1_47_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_47_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_47_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_48_o = grp_load_weight_3x3_from_fu_1141_ap_return_131;
    end else begin
        weight_buf_3x3_V_0_1_48_o = weight_buf_3x3_V_0_1_48_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_48_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_48_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_49_o = grp_load_weight_3x3_from_fu_1141_ap_return_130;
    end else begin
        weight_buf_3x3_V_0_1_49_o = weight_buf_3x3_V_0_1_49_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_49_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_49_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_175;
    end else begin
        weight_buf_3x3_V_0_1_4_o = weight_buf_3x3_V_0_1_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_50_o = grp_load_weight_3x3_from_fu_1141_ap_return_129;
    end else begin
        weight_buf_3x3_V_0_1_50_o = weight_buf_3x3_V_0_1_50_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_50_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_50_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_51_o = grp_load_weight_3x3_from_fu_1141_ap_return_128;
    end else begin
        weight_buf_3x3_V_0_1_51_o = weight_buf_3x3_V_0_1_51_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_51_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_51_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_52_o = grp_load_weight_3x3_from_fu_1141_ap_return_127;
    end else begin
        weight_buf_3x3_V_0_1_52_o = weight_buf_3x3_V_0_1_52_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_52_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_52_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_53_o = grp_load_weight_3x3_from_fu_1141_ap_return_126;
    end else begin
        weight_buf_3x3_V_0_1_53_o = weight_buf_3x3_V_0_1_53_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_53_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_53_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_54_o = grp_load_weight_3x3_from_fu_1141_ap_return_125;
    end else begin
        weight_buf_3x3_V_0_1_54_o = weight_buf_3x3_V_0_1_54_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_54_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_54_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_55_o = grp_load_weight_3x3_from_fu_1141_ap_return_124;
    end else begin
        weight_buf_3x3_V_0_1_55_o = weight_buf_3x3_V_0_1_55_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_55_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_55_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_56_o = grp_load_weight_3x3_from_fu_1141_ap_return_123;
    end else begin
        weight_buf_3x3_V_0_1_56_o = weight_buf_3x3_V_0_1_56_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_56_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_56_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_57_o = grp_load_weight_3x3_from_fu_1141_ap_return_122;
    end else begin
        weight_buf_3x3_V_0_1_57_o = weight_buf_3x3_V_0_1_57_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_57_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_57_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_58_o = grp_load_weight_3x3_from_fu_1141_ap_return_121;
    end else begin
        weight_buf_3x3_V_0_1_58_o = weight_buf_3x3_V_0_1_58_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_58_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_58_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_59_o = grp_load_weight_3x3_from_fu_1141_ap_return_120;
    end else begin
        weight_buf_3x3_V_0_1_59_o = weight_buf_3x3_V_0_1_59_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_59_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_59_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_174;
    end else begin
        weight_buf_3x3_V_0_1_5_o = weight_buf_3x3_V_0_1_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_60_o = grp_load_weight_3x3_from_fu_1141_ap_return_119;
    end else begin
        weight_buf_3x3_V_0_1_60_o = weight_buf_3x3_V_0_1_60_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_60_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_60_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_61_o = grp_load_weight_3x3_from_fu_1141_ap_return_118;
    end else begin
        weight_buf_3x3_V_0_1_61_o = weight_buf_3x3_V_0_1_61_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_61_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_61_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_62_o = grp_load_weight_3x3_from_fu_1141_ap_return_117;
    end else begin
        weight_buf_3x3_V_0_1_62_o = weight_buf_3x3_V_0_1_62_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_62_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_62_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_63_o = grp_load_weight_3x3_from_fu_1141_ap_return_116;
    end else begin
        weight_buf_3x3_V_0_1_63_o = weight_buf_3x3_V_0_1_63_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_63_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_63_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_64_o = grp_load_weight_3x3_from_fu_1141_ap_return_115;
    end else begin
        weight_buf_3x3_V_0_1_64_o = weight_buf_3x3_V_0_1_64_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_64_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_64_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_65_o = grp_load_weight_3x3_from_fu_1141_ap_return_114;
    end else begin
        weight_buf_3x3_V_0_1_65_o = weight_buf_3x3_V_0_1_65_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_65_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_65_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_66_o = grp_load_weight_3x3_from_fu_1141_ap_return_113;
    end else begin
        weight_buf_3x3_V_0_1_66_o = weight_buf_3x3_V_0_1_66_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_66_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_66_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_67_o = grp_load_weight_3x3_from_fu_1141_ap_return_112;
    end else begin
        weight_buf_3x3_V_0_1_67_o = weight_buf_3x3_V_0_1_67_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_67_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_67_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_68_o = grp_load_weight_3x3_from_fu_1141_ap_return_111;
    end else begin
        weight_buf_3x3_V_0_1_68_o = weight_buf_3x3_V_0_1_68_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_68_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_68_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_69_o = grp_load_weight_3x3_from_fu_1141_ap_return_110;
    end else begin
        weight_buf_3x3_V_0_1_69_o = weight_buf_3x3_V_0_1_69_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_69_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_69_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_173;
    end else begin
        weight_buf_3x3_V_0_1_6_o = weight_buf_3x3_V_0_1_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_70_o = grp_load_weight_3x3_from_fu_1141_ap_return_109;
    end else begin
        weight_buf_3x3_V_0_1_70_o = weight_buf_3x3_V_0_1_70_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_70_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_70_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_71_o = grp_load_weight_3x3_from_fu_1141_ap_return_108;
    end else begin
        weight_buf_3x3_V_0_1_71_o = weight_buf_3x3_V_0_1_71_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_71_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_71_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_72_o = grp_load_weight_3x3_from_fu_1141_ap_return_107;
    end else begin
        weight_buf_3x3_V_0_1_72_o = weight_buf_3x3_V_0_1_72_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_72_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_72_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_73_o = grp_load_weight_3x3_from_fu_1141_ap_return_106;
    end else begin
        weight_buf_3x3_V_0_1_73_o = weight_buf_3x3_V_0_1_73_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_73_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_73_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_74_o = grp_load_weight_3x3_from_fu_1141_ap_return_105;
    end else begin
        weight_buf_3x3_V_0_1_74_o = weight_buf_3x3_V_0_1_74_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_74_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_74_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_75_o = grp_load_weight_3x3_from_fu_1141_ap_return_104;
    end else begin
        weight_buf_3x3_V_0_1_75_o = weight_buf_3x3_V_0_1_75_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_75_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_75_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_76_o = grp_load_weight_3x3_from_fu_1141_ap_return_103;
    end else begin
        weight_buf_3x3_V_0_1_76_o = weight_buf_3x3_V_0_1_76_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_76_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_76_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_77_o = grp_load_weight_3x3_from_fu_1141_ap_return_102;
    end else begin
        weight_buf_3x3_V_0_1_77_o = weight_buf_3x3_V_0_1_77_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_77_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_77_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_78_o = grp_load_weight_3x3_from_fu_1141_ap_return_101;
    end else begin
        weight_buf_3x3_V_0_1_78_o = weight_buf_3x3_V_0_1_78_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_78_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_78_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_79_o = grp_load_weight_3x3_from_fu_1141_ap_return_100;
    end else begin
        weight_buf_3x3_V_0_1_79_o = weight_buf_3x3_V_0_1_79_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_79_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_79_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_172;
    end else begin
        weight_buf_3x3_V_0_1_7_o = weight_buf_3x3_V_0_1_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_80_o = grp_load_weight_3x3_from_fu_1141_ap_return_99;
    end else begin
        weight_buf_3x3_V_0_1_80_o = weight_buf_3x3_V_0_1_80_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_80_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_80_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_81_o = grp_load_weight_3x3_from_fu_1141_ap_return_98;
    end else begin
        weight_buf_3x3_V_0_1_81_o = weight_buf_3x3_V_0_1_81_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_81_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_81_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_82_o = grp_load_weight_3x3_from_fu_1141_ap_return_97;
    end else begin
        weight_buf_3x3_V_0_1_82_o = weight_buf_3x3_V_0_1_82_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_82_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_82_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_83_o = grp_load_weight_3x3_from_fu_1141_ap_return_96;
    end else begin
        weight_buf_3x3_V_0_1_83_o = weight_buf_3x3_V_0_1_83_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_83_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_83_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_84_o = grp_load_weight_3x3_from_fu_1141_ap_return_95;
    end else begin
        weight_buf_3x3_V_0_1_84_o = weight_buf_3x3_V_0_1_84_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_84_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_84_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_85_o = grp_load_weight_3x3_from_fu_1141_ap_return_94;
    end else begin
        weight_buf_3x3_V_0_1_85_o = weight_buf_3x3_V_0_1_85_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_85_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_85_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_86_o = grp_load_weight_3x3_from_fu_1141_ap_return_93;
    end else begin
        weight_buf_3x3_V_0_1_86_o = weight_buf_3x3_V_0_1_86_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_86_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_86_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_87_o = grp_load_weight_3x3_from_fu_1141_ap_return_92;
    end else begin
        weight_buf_3x3_V_0_1_87_o = weight_buf_3x3_V_0_1_87_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_87_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_87_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_88_o = grp_load_weight_3x3_from_fu_1141_ap_return_91;
    end else begin
        weight_buf_3x3_V_0_1_88_o = weight_buf_3x3_V_0_1_88_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_88_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_88_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_89_o = grp_load_weight_3x3_from_fu_1141_ap_return_90;
    end else begin
        weight_buf_3x3_V_0_1_89_o = weight_buf_3x3_V_0_1_89_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_89_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_89_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_171;
    end else begin
        weight_buf_3x3_V_0_1_8_o = weight_buf_3x3_V_0_1_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_90_o = grp_load_weight_3x3_from_fu_1141_ap_return_17;
    end else begin
        weight_buf_3x3_V_0_1_90_o = weight_buf_3x3_V_0_1_90_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_90_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_90_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_91_o = grp_load_weight_3x3_from_fu_1141_ap_return_16;
    end else begin
        weight_buf_3x3_V_0_1_91_o = weight_buf_3x3_V_0_1_91_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_91_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_91_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_92_o = grp_load_weight_3x3_from_fu_1141_ap_return_15;
    end else begin
        weight_buf_3x3_V_0_1_92_o = weight_buf_3x3_V_0_1_92_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_92_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_92_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_93_o = grp_load_weight_3x3_from_fu_1141_ap_return_14;
    end else begin
        weight_buf_3x3_V_0_1_93_o = weight_buf_3x3_V_0_1_93_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_93_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_93_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_94_o = grp_load_weight_3x3_from_fu_1141_ap_return_13;
    end else begin
        weight_buf_3x3_V_0_1_94_o = weight_buf_3x3_V_0_1_94_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_94_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_94_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_95_o = grp_load_weight_3x3_from_fu_1141_ap_return_12;
    end else begin
        weight_buf_3x3_V_0_1_95_o = weight_buf_3x3_V_0_1_95_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_95_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_95_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_96_o = grp_load_weight_3x3_from_fu_1141_ap_return_11;
    end else begin
        weight_buf_3x3_V_0_1_96_o = weight_buf_3x3_V_0_1_96_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_96_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_96_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_97_o = grp_load_weight_3x3_from_fu_1141_ap_return_10;
    end else begin
        weight_buf_3x3_V_0_1_97_o = weight_buf_3x3_V_0_1_97_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_97_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_97_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_98_o = grp_load_weight_3x3_from_fu_1141_ap_return_9;
    end else begin
        weight_buf_3x3_V_0_1_98_o = weight_buf_3x3_V_0_1_98_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_98_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_98_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_9_o = grp_load_weight_3x3_from_fu_1141_ap_return_170;
    end else begin
        weight_buf_3x3_V_0_1_9_o = weight_buf_3x3_V_0_1_9_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_9_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_9_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_179;
    end else begin
        weight_buf_3x3_V_0_1_o = weight_buf_3x3_V_0_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_10_o = grp_load_weight_3x3_from_fu_1141_ap_return_259;
    end else begin
        weight_buf_3x3_V_0_2_10_o = weight_buf_3x3_V_0_2_10_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_10_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_10_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_11_o = grp_load_weight_3x3_from_fu_1141_ap_return_258;
    end else begin
        weight_buf_3x3_V_0_2_11_o = weight_buf_3x3_V_0_2_11_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_11_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_11_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_12_o = grp_load_weight_3x3_from_fu_1141_ap_return_257;
    end else begin
        weight_buf_3x3_V_0_2_12_o = weight_buf_3x3_V_0_2_12_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_12_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_12_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_13_o = grp_load_weight_3x3_from_fu_1141_ap_return_256;
    end else begin
        weight_buf_3x3_V_0_2_13_o = weight_buf_3x3_V_0_2_13_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_13_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_13_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_14_o = grp_load_weight_3x3_from_fu_1141_ap_return_255;
    end else begin
        weight_buf_3x3_V_0_2_14_o = weight_buf_3x3_V_0_2_14_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_14_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_14_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_15_o = grp_load_weight_3x3_from_fu_1141_ap_return_254;
    end else begin
        weight_buf_3x3_V_0_2_15_o = weight_buf_3x3_V_0_2_15_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_15_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_15_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_16_o = grp_load_weight_3x3_from_fu_1141_ap_return_253;
    end else begin
        weight_buf_3x3_V_0_2_16_o = weight_buf_3x3_V_0_2_16_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_16_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_16_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_17_o = grp_load_weight_3x3_from_fu_1141_ap_return_252;
    end else begin
        weight_buf_3x3_V_0_2_17_o = weight_buf_3x3_V_0_2_17_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_17_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_17_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_18_o = grp_load_weight_3x3_from_fu_1141_ap_return_251;
    end else begin
        weight_buf_3x3_V_0_2_18_o = weight_buf_3x3_V_0_2_18_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_18_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_18_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_19_o = grp_load_weight_3x3_from_fu_1141_ap_return_250;
    end else begin
        weight_buf_3x3_V_0_2_19_o = weight_buf_3x3_V_0_2_19_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_19_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_19_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_268;
    end else begin
        weight_buf_3x3_V_0_2_1_o = weight_buf_3x3_V_0_2_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_20_o = grp_load_weight_3x3_from_fu_1141_ap_return_249;
    end else begin
        weight_buf_3x3_V_0_2_20_o = weight_buf_3x3_V_0_2_20_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_20_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_20_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_21_o = grp_load_weight_3x3_from_fu_1141_ap_return_248;
    end else begin
        weight_buf_3x3_V_0_2_21_o = weight_buf_3x3_V_0_2_21_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_21_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_21_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_22_o = grp_load_weight_3x3_from_fu_1141_ap_return_247;
    end else begin
        weight_buf_3x3_V_0_2_22_o = weight_buf_3x3_V_0_2_22_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_22_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_22_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_23_o = grp_load_weight_3x3_from_fu_1141_ap_return_246;
    end else begin
        weight_buf_3x3_V_0_2_23_o = weight_buf_3x3_V_0_2_23_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_23_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_23_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_24_o = grp_load_weight_3x3_from_fu_1141_ap_return_245;
    end else begin
        weight_buf_3x3_V_0_2_24_o = weight_buf_3x3_V_0_2_24_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_24_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_24_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_25_o = grp_load_weight_3x3_from_fu_1141_ap_return_244;
    end else begin
        weight_buf_3x3_V_0_2_25_o = weight_buf_3x3_V_0_2_25_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_25_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_25_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_26_o = grp_load_weight_3x3_from_fu_1141_ap_return_243;
    end else begin
        weight_buf_3x3_V_0_2_26_o = weight_buf_3x3_V_0_2_26_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_26_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_26_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_27_o = grp_load_weight_3x3_from_fu_1141_ap_return_242;
    end else begin
        weight_buf_3x3_V_0_2_27_o = weight_buf_3x3_V_0_2_27_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_27_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_27_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_28_o = grp_load_weight_3x3_from_fu_1141_ap_return_241;
    end else begin
        weight_buf_3x3_V_0_2_28_o = weight_buf_3x3_V_0_2_28_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_28_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_28_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_29_o = grp_load_weight_3x3_from_fu_1141_ap_return_240;
    end else begin
        weight_buf_3x3_V_0_2_29_o = weight_buf_3x3_V_0_2_29_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_29_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_29_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_267;
    end else begin
        weight_buf_3x3_V_0_2_2_o = weight_buf_3x3_V_0_2_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_30_o = grp_load_weight_3x3_from_fu_1141_ap_return_239;
    end else begin
        weight_buf_3x3_V_0_2_30_o = weight_buf_3x3_V_0_2_30_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_30_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_30_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_31_o = grp_load_weight_3x3_from_fu_1141_ap_return_238;
    end else begin
        weight_buf_3x3_V_0_2_31_o = weight_buf_3x3_V_0_2_31_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_31_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_31_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_32_o = grp_load_weight_3x3_from_fu_1141_ap_return_237;
    end else begin
        weight_buf_3x3_V_0_2_32_o = weight_buf_3x3_V_0_2_32_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_32_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_32_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_33_o = grp_load_weight_3x3_from_fu_1141_ap_return_236;
    end else begin
        weight_buf_3x3_V_0_2_33_o = weight_buf_3x3_V_0_2_33_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_33_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_33_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_34_o = grp_load_weight_3x3_from_fu_1141_ap_return_235;
    end else begin
        weight_buf_3x3_V_0_2_34_o = weight_buf_3x3_V_0_2_34_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_34_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_34_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_35_o = grp_load_weight_3x3_from_fu_1141_ap_return_234;
    end else begin
        weight_buf_3x3_V_0_2_35_o = weight_buf_3x3_V_0_2_35_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_35_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_35_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_36_o = grp_load_weight_3x3_from_fu_1141_ap_return_233;
    end else begin
        weight_buf_3x3_V_0_2_36_o = weight_buf_3x3_V_0_2_36_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_36_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_36_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_37_o = grp_load_weight_3x3_from_fu_1141_ap_return_232;
    end else begin
        weight_buf_3x3_V_0_2_37_o = weight_buf_3x3_V_0_2_37_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_37_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_37_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_38_o = grp_load_weight_3x3_from_fu_1141_ap_return_231;
    end else begin
        weight_buf_3x3_V_0_2_38_o = weight_buf_3x3_V_0_2_38_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_38_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_38_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_39_o = grp_load_weight_3x3_from_fu_1141_ap_return_230;
    end else begin
        weight_buf_3x3_V_0_2_39_o = weight_buf_3x3_V_0_2_39_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_39_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_39_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_266;
    end else begin
        weight_buf_3x3_V_0_2_3_o = weight_buf_3x3_V_0_2_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_40_o = grp_load_weight_3x3_from_fu_1141_ap_return_229;
    end else begin
        weight_buf_3x3_V_0_2_40_o = weight_buf_3x3_V_0_2_40_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_40_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_40_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_41_o = grp_load_weight_3x3_from_fu_1141_ap_return_228;
    end else begin
        weight_buf_3x3_V_0_2_41_o = weight_buf_3x3_V_0_2_41_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_41_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_41_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_42_o = grp_load_weight_3x3_from_fu_1141_ap_return_227;
    end else begin
        weight_buf_3x3_V_0_2_42_o = weight_buf_3x3_V_0_2_42_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_42_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_42_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_43_o = grp_load_weight_3x3_from_fu_1141_ap_return_226;
    end else begin
        weight_buf_3x3_V_0_2_43_o = weight_buf_3x3_V_0_2_43_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_43_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_43_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_44_o = grp_load_weight_3x3_from_fu_1141_ap_return_225;
    end else begin
        weight_buf_3x3_V_0_2_44_o = weight_buf_3x3_V_0_2_44_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_44_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_44_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_45_o = grp_load_weight_3x3_from_fu_1141_ap_return_224;
    end else begin
        weight_buf_3x3_V_0_2_45_o = weight_buf_3x3_V_0_2_45_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_45_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_45_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_46_o = grp_load_weight_3x3_from_fu_1141_ap_return_223;
    end else begin
        weight_buf_3x3_V_0_2_46_o = weight_buf_3x3_V_0_2_46_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_46_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_46_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_47_o = grp_load_weight_3x3_from_fu_1141_ap_return_222;
    end else begin
        weight_buf_3x3_V_0_2_47_o = weight_buf_3x3_V_0_2_47_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_47_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_47_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_48_o = grp_load_weight_3x3_from_fu_1141_ap_return_221;
    end else begin
        weight_buf_3x3_V_0_2_48_o = weight_buf_3x3_V_0_2_48_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_48_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_48_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_49_o = grp_load_weight_3x3_from_fu_1141_ap_return_220;
    end else begin
        weight_buf_3x3_V_0_2_49_o = weight_buf_3x3_V_0_2_49_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_49_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_49_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_265;
    end else begin
        weight_buf_3x3_V_0_2_4_o = weight_buf_3x3_V_0_2_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_50_o = grp_load_weight_3x3_from_fu_1141_ap_return_219;
    end else begin
        weight_buf_3x3_V_0_2_50_o = weight_buf_3x3_V_0_2_50_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_50_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_50_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_51_o = grp_load_weight_3x3_from_fu_1141_ap_return_218;
    end else begin
        weight_buf_3x3_V_0_2_51_o = weight_buf_3x3_V_0_2_51_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_51_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_51_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_52_o = grp_load_weight_3x3_from_fu_1141_ap_return_217;
    end else begin
        weight_buf_3x3_V_0_2_52_o = weight_buf_3x3_V_0_2_52_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_52_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_52_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_53_o = grp_load_weight_3x3_from_fu_1141_ap_return_216;
    end else begin
        weight_buf_3x3_V_0_2_53_o = weight_buf_3x3_V_0_2_53_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_53_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_53_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_54_o = grp_load_weight_3x3_from_fu_1141_ap_return_215;
    end else begin
        weight_buf_3x3_V_0_2_54_o = weight_buf_3x3_V_0_2_54_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_54_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_54_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_55_o = grp_load_weight_3x3_from_fu_1141_ap_return_214;
    end else begin
        weight_buf_3x3_V_0_2_55_o = weight_buf_3x3_V_0_2_55_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_55_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_55_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_56_o = grp_load_weight_3x3_from_fu_1141_ap_return_213;
    end else begin
        weight_buf_3x3_V_0_2_56_o = weight_buf_3x3_V_0_2_56_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_56_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_56_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_57_o = grp_load_weight_3x3_from_fu_1141_ap_return_212;
    end else begin
        weight_buf_3x3_V_0_2_57_o = weight_buf_3x3_V_0_2_57_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_57_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_57_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_58_o = grp_load_weight_3x3_from_fu_1141_ap_return_211;
    end else begin
        weight_buf_3x3_V_0_2_58_o = weight_buf_3x3_V_0_2_58_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_58_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_58_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_59_o = grp_load_weight_3x3_from_fu_1141_ap_return_210;
    end else begin
        weight_buf_3x3_V_0_2_59_o = weight_buf_3x3_V_0_2_59_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_59_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_59_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_264;
    end else begin
        weight_buf_3x3_V_0_2_5_o = weight_buf_3x3_V_0_2_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_60_o = grp_load_weight_3x3_from_fu_1141_ap_return_209;
    end else begin
        weight_buf_3x3_V_0_2_60_o = weight_buf_3x3_V_0_2_60_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_60_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_60_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_61_o = grp_load_weight_3x3_from_fu_1141_ap_return_208;
    end else begin
        weight_buf_3x3_V_0_2_61_o = weight_buf_3x3_V_0_2_61_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_61_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_61_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_62_o = grp_load_weight_3x3_from_fu_1141_ap_return_207;
    end else begin
        weight_buf_3x3_V_0_2_62_o = weight_buf_3x3_V_0_2_62_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_62_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_62_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_63_o = grp_load_weight_3x3_from_fu_1141_ap_return_206;
    end else begin
        weight_buf_3x3_V_0_2_63_o = weight_buf_3x3_V_0_2_63_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_63_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_63_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_64_o = grp_load_weight_3x3_from_fu_1141_ap_return_205;
    end else begin
        weight_buf_3x3_V_0_2_64_o = weight_buf_3x3_V_0_2_64_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_64_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_64_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_65_o = grp_load_weight_3x3_from_fu_1141_ap_return_204;
    end else begin
        weight_buf_3x3_V_0_2_65_o = weight_buf_3x3_V_0_2_65_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_65_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_65_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_66_o = grp_load_weight_3x3_from_fu_1141_ap_return_203;
    end else begin
        weight_buf_3x3_V_0_2_66_o = weight_buf_3x3_V_0_2_66_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_66_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_66_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_67_o = grp_load_weight_3x3_from_fu_1141_ap_return_202;
    end else begin
        weight_buf_3x3_V_0_2_67_o = weight_buf_3x3_V_0_2_67_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_67_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_67_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_68_o = grp_load_weight_3x3_from_fu_1141_ap_return_201;
    end else begin
        weight_buf_3x3_V_0_2_68_o = weight_buf_3x3_V_0_2_68_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_68_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_68_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_69_o = grp_load_weight_3x3_from_fu_1141_ap_return_200;
    end else begin
        weight_buf_3x3_V_0_2_69_o = weight_buf_3x3_V_0_2_69_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_69_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_69_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_263;
    end else begin
        weight_buf_3x3_V_0_2_6_o = weight_buf_3x3_V_0_2_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_70_o = grp_load_weight_3x3_from_fu_1141_ap_return_199;
    end else begin
        weight_buf_3x3_V_0_2_70_o = weight_buf_3x3_V_0_2_70_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_70_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_70_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_71_o = grp_load_weight_3x3_from_fu_1141_ap_return_198;
    end else begin
        weight_buf_3x3_V_0_2_71_o = weight_buf_3x3_V_0_2_71_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_71_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_71_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_72_o = grp_load_weight_3x3_from_fu_1141_ap_return_197;
    end else begin
        weight_buf_3x3_V_0_2_72_o = weight_buf_3x3_V_0_2_72_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_72_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_72_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_73_o = grp_load_weight_3x3_from_fu_1141_ap_return_196;
    end else begin
        weight_buf_3x3_V_0_2_73_o = weight_buf_3x3_V_0_2_73_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_73_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_73_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_74_o = grp_load_weight_3x3_from_fu_1141_ap_return_195;
    end else begin
        weight_buf_3x3_V_0_2_74_o = weight_buf_3x3_V_0_2_74_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_74_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_74_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_75_o = grp_load_weight_3x3_from_fu_1141_ap_return_194;
    end else begin
        weight_buf_3x3_V_0_2_75_o = weight_buf_3x3_V_0_2_75_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_75_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_75_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_76_o = grp_load_weight_3x3_from_fu_1141_ap_return_193;
    end else begin
        weight_buf_3x3_V_0_2_76_o = weight_buf_3x3_V_0_2_76_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_76_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_76_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_77_o = grp_load_weight_3x3_from_fu_1141_ap_return_192;
    end else begin
        weight_buf_3x3_V_0_2_77_o = weight_buf_3x3_V_0_2_77_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_77_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_77_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_78_o = grp_load_weight_3x3_from_fu_1141_ap_return_191;
    end else begin
        weight_buf_3x3_V_0_2_78_o = weight_buf_3x3_V_0_2_78_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_78_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_78_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_79_o = grp_load_weight_3x3_from_fu_1141_ap_return_190;
    end else begin
        weight_buf_3x3_V_0_2_79_o = weight_buf_3x3_V_0_2_79_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_79_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_79_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_262;
    end else begin
        weight_buf_3x3_V_0_2_7_o = weight_buf_3x3_V_0_2_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_80_o = grp_load_weight_3x3_from_fu_1141_ap_return_189;
    end else begin
        weight_buf_3x3_V_0_2_80_o = weight_buf_3x3_V_0_2_80_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_80_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_80_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_81_o = grp_load_weight_3x3_from_fu_1141_ap_return_188;
    end else begin
        weight_buf_3x3_V_0_2_81_o = weight_buf_3x3_V_0_2_81_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_81_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_81_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_82_o = grp_load_weight_3x3_from_fu_1141_ap_return_187;
    end else begin
        weight_buf_3x3_V_0_2_82_o = weight_buf_3x3_V_0_2_82_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_82_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_82_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_83_o = grp_load_weight_3x3_from_fu_1141_ap_return_186;
    end else begin
        weight_buf_3x3_V_0_2_83_o = weight_buf_3x3_V_0_2_83_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_83_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_83_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_84_o = grp_load_weight_3x3_from_fu_1141_ap_return_185;
    end else begin
        weight_buf_3x3_V_0_2_84_o = weight_buf_3x3_V_0_2_84_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_84_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_84_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_85_o = grp_load_weight_3x3_from_fu_1141_ap_return_184;
    end else begin
        weight_buf_3x3_V_0_2_85_o = weight_buf_3x3_V_0_2_85_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_85_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_85_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_86_o = grp_load_weight_3x3_from_fu_1141_ap_return_183;
    end else begin
        weight_buf_3x3_V_0_2_86_o = weight_buf_3x3_V_0_2_86_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_86_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_86_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_87_o = grp_load_weight_3x3_from_fu_1141_ap_return_182;
    end else begin
        weight_buf_3x3_V_0_2_87_o = weight_buf_3x3_V_0_2_87_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_87_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_87_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_88_o = grp_load_weight_3x3_from_fu_1141_ap_return_181;
    end else begin
        weight_buf_3x3_V_0_2_88_o = weight_buf_3x3_V_0_2_88_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_88_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_88_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_89_o = grp_load_weight_3x3_from_fu_1141_ap_return_180;
    end else begin
        weight_buf_3x3_V_0_2_89_o = weight_buf_3x3_V_0_2_89_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_89_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_89_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_261;
    end else begin
        weight_buf_3x3_V_0_2_8_o = weight_buf_3x3_V_0_2_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_90_o = grp_load_weight_3x3_from_fu_1141_ap_return_26;
    end else begin
        weight_buf_3x3_V_0_2_90_o = weight_buf_3x3_V_0_2_90_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_90_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_90_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_91_o = grp_load_weight_3x3_from_fu_1141_ap_return_25;
    end else begin
        weight_buf_3x3_V_0_2_91_o = weight_buf_3x3_V_0_2_91_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_91_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_91_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_92_o = grp_load_weight_3x3_from_fu_1141_ap_return_24;
    end else begin
        weight_buf_3x3_V_0_2_92_o = weight_buf_3x3_V_0_2_92_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_92_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_92_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_93_o = grp_load_weight_3x3_from_fu_1141_ap_return_23;
    end else begin
        weight_buf_3x3_V_0_2_93_o = weight_buf_3x3_V_0_2_93_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_93_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_93_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_94_o = grp_load_weight_3x3_from_fu_1141_ap_return_22;
    end else begin
        weight_buf_3x3_V_0_2_94_o = weight_buf_3x3_V_0_2_94_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_94_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_94_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_95_o = grp_load_weight_3x3_from_fu_1141_ap_return_21;
    end else begin
        weight_buf_3x3_V_0_2_95_o = weight_buf_3x3_V_0_2_95_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_95_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_95_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_96_o = grp_load_weight_3x3_from_fu_1141_ap_return_20;
    end else begin
        weight_buf_3x3_V_0_2_96_o = weight_buf_3x3_V_0_2_96_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_96_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_96_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_97_o = grp_load_weight_3x3_from_fu_1141_ap_return_19;
    end else begin
        weight_buf_3x3_V_0_2_97_o = weight_buf_3x3_V_0_2_97_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_97_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_97_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_98_o = grp_load_weight_3x3_from_fu_1141_ap_return_18;
    end else begin
        weight_buf_3x3_V_0_2_98_o = weight_buf_3x3_V_0_2_98_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_98_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_98_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_9_o = grp_load_weight_3x3_from_fu_1141_ap_return_260;
    end else begin
        weight_buf_3x3_V_0_2_9_o = weight_buf_3x3_V_0_2_9_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_9_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_9_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_269;
    end else begin
        weight_buf_3x3_V_0_2_o = weight_buf_3x3_V_0_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_10_o = grp_load_weight_3x3_from_fu_1141_ap_return_277;
    end else begin
        weight_buf_3x3_V_0_3_10_o = weight_buf_3x3_V_0_3_10_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_10_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_10_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_11_o = grp_load_weight_3x3_from_fu_1141_ap_return_276;
    end else begin
        weight_buf_3x3_V_0_3_11_o = weight_buf_3x3_V_0_3_11_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_11_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_11_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_12_o = grp_load_weight_3x3_from_fu_1141_ap_return_275;
    end else begin
        weight_buf_3x3_V_0_3_12_o = weight_buf_3x3_V_0_3_12_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_12_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_12_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_13_o = grp_load_weight_3x3_from_fu_1141_ap_return_274;
    end else begin
        weight_buf_3x3_V_0_3_13_o = weight_buf_3x3_V_0_3_13_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_13_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_13_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_14_o = grp_load_weight_3x3_from_fu_1141_ap_return_273;
    end else begin
        weight_buf_3x3_V_0_3_14_o = weight_buf_3x3_V_0_3_14_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_14_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_14_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_15_o = grp_load_weight_3x3_from_fu_1141_ap_return_272;
    end else begin
        weight_buf_3x3_V_0_3_15_o = weight_buf_3x3_V_0_3_15_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_15_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_15_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_16_o = grp_load_weight_3x3_from_fu_1141_ap_return_271;
    end else begin
        weight_buf_3x3_V_0_3_16_o = weight_buf_3x3_V_0_3_16_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_16_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_16_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_17_o = grp_load_weight_3x3_from_fu_1141_ap_return_270;
    end else begin
        weight_buf_3x3_V_0_3_17_o = weight_buf_3x3_V_0_3_17_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_17_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_17_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_18_o = grp_load_weight_3x3_from_fu_1141_ap_return_35;
    end else begin
        weight_buf_3x3_V_0_3_18_o = weight_buf_3x3_V_0_3_18_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_18_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_18_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_19_o = grp_load_weight_3x3_from_fu_1141_ap_return_34;
    end else begin
        weight_buf_3x3_V_0_3_19_o = weight_buf_3x3_V_0_3_19_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_19_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_19_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_286;
    end else begin
        weight_buf_3x3_V_0_3_1_o = weight_buf_3x3_V_0_3_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_20_o = grp_load_weight_3x3_from_fu_1141_ap_return_33;
    end else begin
        weight_buf_3x3_V_0_3_20_o = weight_buf_3x3_V_0_3_20_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_20_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_20_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_21_o = grp_load_weight_3x3_from_fu_1141_ap_return_32;
    end else begin
        weight_buf_3x3_V_0_3_21_o = weight_buf_3x3_V_0_3_21_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_21_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_21_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_22_o = grp_load_weight_3x3_from_fu_1141_ap_return_31;
    end else begin
        weight_buf_3x3_V_0_3_22_o = weight_buf_3x3_V_0_3_22_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_22_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_22_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_23_o = grp_load_weight_3x3_from_fu_1141_ap_return_30;
    end else begin
        weight_buf_3x3_V_0_3_23_o = weight_buf_3x3_V_0_3_23_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_23_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_23_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_24_o = grp_load_weight_3x3_from_fu_1141_ap_return_29;
    end else begin
        weight_buf_3x3_V_0_3_24_o = weight_buf_3x3_V_0_3_24_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_24_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_24_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_25_o = grp_load_weight_3x3_from_fu_1141_ap_return_28;
    end else begin
        weight_buf_3x3_V_0_3_25_o = weight_buf_3x3_V_0_3_25_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_25_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_25_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_26_o = grp_load_weight_3x3_from_fu_1141_ap_return_27;
    end else begin
        weight_buf_3x3_V_0_3_26_o = weight_buf_3x3_V_0_3_26_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_26_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_26_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_285;
    end else begin
        weight_buf_3x3_V_0_3_2_o = weight_buf_3x3_V_0_3_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_284;
    end else begin
        weight_buf_3x3_V_0_3_3_o = weight_buf_3x3_V_0_3_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_283;
    end else begin
        weight_buf_3x3_V_0_3_4_o = weight_buf_3x3_V_0_3_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_282;
    end else begin
        weight_buf_3x3_V_0_3_5_o = weight_buf_3x3_V_0_3_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_281;
    end else begin
        weight_buf_3x3_V_0_3_6_o = weight_buf_3x3_V_0_3_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_280;
    end else begin
        weight_buf_3x3_V_0_3_7_o = weight_buf_3x3_V_0_3_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_279;
    end else begin
        weight_buf_3x3_V_0_3_8_o = weight_buf_3x3_V_0_3_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_9_o = grp_load_weight_3x3_from_fu_1141_ap_return_278;
    end else begin
        weight_buf_3x3_V_0_3_9_o = weight_buf_3x3_V_0_3_9_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_9_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_9_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_287;
    end else begin
        weight_buf_3x3_V_0_3_o = weight_buf_3x3_V_0_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_43;
    end else begin
        weight_buf_3x3_V_0_4_1_o = weight_buf_3x3_V_0_4_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_4_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_42;
    end else begin
        weight_buf_3x3_V_0_4_2_o = weight_buf_3x3_V_0_4_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_4_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_41;
    end else begin
        weight_buf_3x3_V_0_4_3_o = weight_buf_3x3_V_0_4_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_4_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_40;
    end else begin
        weight_buf_3x3_V_0_4_4_o = weight_buf_3x3_V_0_4_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_4_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_39;
    end else begin
        weight_buf_3x3_V_0_4_5_o = weight_buf_3x3_V_0_4_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_4_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_38;
    end else begin
        weight_buf_3x3_V_0_4_6_o = weight_buf_3x3_V_0_4_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_4_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_37;
    end else begin
        weight_buf_3x3_V_0_4_7_o = weight_buf_3x3_V_0_4_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_4_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_36;
    end else begin
        weight_buf_3x3_V_0_4_8_o = weight_buf_3x3_V_0_4_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_4_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_44;
    end else begin
        weight_buf_3x3_V_0_4_o = weight_buf_3x3_V_0_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_52;
    end else begin
        weight_buf_3x3_V_0_5_1_o = weight_buf_3x3_V_0_5_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_5_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_51;
    end else begin
        weight_buf_3x3_V_0_5_2_o = weight_buf_3x3_V_0_5_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_5_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_50;
    end else begin
        weight_buf_3x3_V_0_5_3_o = weight_buf_3x3_V_0_5_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_5_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_49;
    end else begin
        weight_buf_3x3_V_0_5_4_o = weight_buf_3x3_V_0_5_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_5_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_48;
    end else begin
        weight_buf_3x3_V_0_5_5_o = weight_buf_3x3_V_0_5_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_5_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_47;
    end else begin
        weight_buf_3x3_V_0_5_6_o = weight_buf_3x3_V_0_5_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_5_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_46;
    end else begin
        weight_buf_3x3_V_0_5_7_o = weight_buf_3x3_V_0_5_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_5_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_45;
    end else begin
        weight_buf_3x3_V_0_5_8_o = weight_buf_3x3_V_0_5_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_5_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_53;
    end else begin
        weight_buf_3x3_V_0_5_o = weight_buf_3x3_V_0_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_61;
    end else begin
        weight_buf_3x3_V_0_6_1_o = weight_buf_3x3_V_0_6_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_6_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_60;
    end else begin
        weight_buf_3x3_V_0_6_2_o = weight_buf_3x3_V_0_6_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_6_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_59;
    end else begin
        weight_buf_3x3_V_0_6_3_o = weight_buf_3x3_V_0_6_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_6_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_58;
    end else begin
        weight_buf_3x3_V_0_6_4_o = weight_buf_3x3_V_0_6_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_6_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_57;
    end else begin
        weight_buf_3x3_V_0_6_5_o = weight_buf_3x3_V_0_6_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_6_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_56;
    end else begin
        weight_buf_3x3_V_0_6_6_o = weight_buf_3x3_V_0_6_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_6_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_55;
    end else begin
        weight_buf_3x3_V_0_6_7_o = weight_buf_3x3_V_0_6_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_6_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_54;
    end else begin
        weight_buf_3x3_V_0_6_8_o = weight_buf_3x3_V_0_6_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_6_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_62;
    end else begin
        weight_buf_3x3_V_0_6_o = weight_buf_3x3_V_0_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_70;
    end else begin
        weight_buf_3x3_V_0_7_1_o = weight_buf_3x3_V_0_7_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_7_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_69;
    end else begin
        weight_buf_3x3_V_0_7_2_o = weight_buf_3x3_V_0_7_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_7_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_68;
    end else begin
        weight_buf_3x3_V_0_7_3_o = weight_buf_3x3_V_0_7_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_7_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_67;
    end else begin
        weight_buf_3x3_V_0_7_4_o = weight_buf_3x3_V_0_7_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_7_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_66;
    end else begin
        weight_buf_3x3_V_0_7_5_o = weight_buf_3x3_V_0_7_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_7_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_65;
    end else begin
        weight_buf_3x3_V_0_7_6_o = weight_buf_3x3_V_0_7_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_7_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_64;
    end else begin
        weight_buf_3x3_V_0_7_7_o = weight_buf_3x3_V_0_7_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_7_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_63;
    end else begin
        weight_buf_3x3_V_0_7_8_o = weight_buf_3x3_V_0_7_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_7_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_71;
    end else begin
        weight_buf_3x3_V_0_7_o = weight_buf_3x3_V_0_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_79;
    end else begin
        weight_buf_3x3_V_0_8_1_o = weight_buf_3x3_V_0_8_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_8_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_78;
    end else begin
        weight_buf_3x3_V_0_8_2_o = weight_buf_3x3_V_0_8_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_8_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_77;
    end else begin
        weight_buf_3x3_V_0_8_3_o = weight_buf_3x3_V_0_8_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_8_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_76;
    end else begin
        weight_buf_3x3_V_0_8_4_o = weight_buf_3x3_V_0_8_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_8_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_75;
    end else begin
        weight_buf_3x3_V_0_8_5_o = weight_buf_3x3_V_0_8_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_8_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_74;
    end else begin
        weight_buf_3x3_V_0_8_6_o = weight_buf_3x3_V_0_8_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_8_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_73;
    end else begin
        weight_buf_3x3_V_0_8_7_o = weight_buf_3x3_V_0_8_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_8_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_72;
    end else begin
        weight_buf_3x3_V_0_8_8_o = weight_buf_3x3_V_0_8_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_8_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_80;
    end else begin
        weight_buf_3x3_V_0_8_o = weight_buf_3x3_V_0_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_1_o = grp_load_weight_3x3_from_fu_1141_ap_return_88;
    end else begin
        weight_buf_3x3_V_0_9_1_o = weight_buf_3x3_V_0_9_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_1_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_9_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_2_o = grp_load_weight_3x3_from_fu_1141_ap_return_87;
    end else begin
        weight_buf_3x3_V_0_9_2_o = weight_buf_3x3_V_0_9_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_2_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_9_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_3_o = grp_load_weight_3x3_from_fu_1141_ap_return_86;
    end else begin
        weight_buf_3x3_V_0_9_3_o = weight_buf_3x3_V_0_9_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_3_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_9_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_4_o = grp_load_weight_3x3_from_fu_1141_ap_return_85;
    end else begin
        weight_buf_3x3_V_0_9_4_o = weight_buf_3x3_V_0_9_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_4_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_9_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_5_o = grp_load_weight_3x3_from_fu_1141_ap_return_84;
    end else begin
        weight_buf_3x3_V_0_9_5_o = weight_buf_3x3_V_0_9_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_5_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_9_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_6_o = grp_load_weight_3x3_from_fu_1141_ap_return_83;
    end else begin
        weight_buf_3x3_V_0_9_6_o = weight_buf_3x3_V_0_9_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_6_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_9_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_7_o = grp_load_weight_3x3_from_fu_1141_ap_return_82;
    end else begin
        weight_buf_3x3_V_0_9_7_o = weight_buf_3x3_V_0_9_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_7_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_9_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_8_o = grp_load_weight_3x3_from_fu_1141_ap_return_81;
    end else begin
        weight_buf_3x3_V_0_9_8_o = weight_buf_3x3_V_0_9_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_8_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_9_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_o = grp_load_weight_3x3_from_fu_1141_ap_return_89;
    end else begin
        weight_buf_3x3_V_0_9_o = weight_buf_3x3_V_0_9_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
        weight_buf_3x3_V_0_9_o_ap_vld = 1'b1;
    end else begin
        weight_buf_3x3_V_0_9_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_load_weight_3x3_from_fu_1141_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((m_axi_conv_weight_3x3_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln231_fu_5768_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln231_fu_5768_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_conv_weight_3x3_all_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_conv_weight_3x3_all_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1 = (m_axi_conv_weight_3x3_all_V_RVALID == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bn_bias_buf_V_0_0 = ((or_ln785_16_fu_5892_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_s_fu_5860_p3);

assign bn_bias_buf_V_10_0 = ((or_ln785_36_fu_7132_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_34_fu_7100_p3);

assign bn_bias_buf_V_11_0 = ((or_ln785_38_fu_7256_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_36_fu_7224_p3);

assign bn_bias_buf_V_12_0 = ((or_ln785_40_fu_7380_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_38_fu_7348_p3);

assign bn_bias_buf_V_13_0 = ((or_ln785_42_fu_7504_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_40_fu_7472_p3);

assign bn_bias_buf_V_14_0 = ((or_ln785_44_fu_7628_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_42_fu_7596_p3);

assign bn_bias_buf_V_15_0 = ((or_ln785_46_fu_7752_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_44_fu_7720_p3);

assign bn_bias_buf_V_16_0 = ((or_ln785_48_fu_7876_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_46_fu_7844_p3);

assign bn_bias_buf_V_17_0 = ((or_ln785_50_fu_8000_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_48_fu_7968_p3);

assign bn_bias_buf_V_18_0 = ((or_ln785_52_fu_8124_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_50_fu_8092_p3);

assign bn_bias_buf_V_19_0 = ((or_ln785_54_fu_8248_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_52_fu_8216_p3);

assign bn_bias_buf_V_1_0 = ((or_ln785_18_fu_6016_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_16_fu_5984_p3);

assign bn_bias_buf_V_20_0 = ((or_ln785_56_fu_8372_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_54_fu_8340_p3);

assign bn_bias_buf_V_21_0 = ((or_ln785_58_fu_8496_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_56_fu_8464_p3);

assign bn_bias_buf_V_22_0 = ((or_ln785_60_fu_8620_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_58_fu_8588_p3);

assign bn_bias_buf_V_23_0 = ((or_ln785_62_fu_8744_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_60_fu_8712_p3);

assign bn_bias_buf_V_24_0 = ((or_ln785_64_fu_8868_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_62_fu_8836_p3);

assign bn_bias_buf_V_25_0 = ((or_ln785_66_fu_8992_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_64_fu_8960_p3);

assign bn_bias_buf_V_26_0 = ((or_ln785_68_fu_9116_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_66_fu_9084_p3);

assign bn_bias_buf_V_27_0 = ((or_ln785_70_fu_9240_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_68_fu_9208_p3);

assign bn_bias_buf_V_28_0 = ((or_ln785_72_fu_9364_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_70_fu_9332_p3);

assign bn_bias_buf_V_29_0 = ((or_ln785_74_fu_9488_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_72_fu_9456_p3);

assign bn_bias_buf_V_2_0 = ((or_ln785_20_fu_6140_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_18_fu_6108_p3);

assign bn_bias_buf_V_30_0 = ((or_ln785_76_fu_9612_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_74_fu_9580_p3);

assign bn_bias_buf_V_31_0 = ((or_ln785_78_fu_9736_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_76_fu_9704_p3);

assign bn_bias_buf_V_3_0 = ((or_ln785_22_fu_6264_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_20_fu_6232_p3);

assign bn_bias_buf_V_4_0 = ((or_ln785_24_fu_6388_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_22_fu_6356_p3);

assign bn_bias_buf_V_5_0 = ((or_ln785_26_fu_6512_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_24_fu_6480_p3);

assign bn_bias_buf_V_6_0 = ((or_ln785_28_fu_6636_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_26_fu_6604_p3);

assign bn_bias_buf_V_7_0 = ((or_ln785_30_fu_6760_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_28_fu_6728_p3);

assign bn_bias_buf_V_8_0 = ((or_ln785_32_fu_6884_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_30_fu_6852_p3);

assign bn_bias_buf_V_9_0 = ((or_ln785_34_fu_7008_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_32_fu_6976_p3);

assign bn_weight_buf_V_0_0 = ((or_ln785_fu_5836_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln_fu_5804_p3);

assign bn_weight_buf_V_10_0 = ((or_ln785_35_fu_7070_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_33_fu_7038_p3);

assign bn_weight_buf_V_11_0 = ((or_ln785_37_fu_7194_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_35_fu_7162_p3);

assign bn_weight_buf_V_12_0 = ((or_ln785_39_fu_7318_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_37_fu_7286_p3);

assign bn_weight_buf_V_13_0 = ((or_ln785_41_fu_7442_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_39_fu_7410_p3);

assign bn_weight_buf_V_14_0 = ((or_ln785_43_fu_7566_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_41_fu_7534_p3);

assign bn_weight_buf_V_15_0 = ((or_ln785_45_fu_7690_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_43_fu_7658_p3);

assign bn_weight_buf_V_16_0 = ((or_ln785_47_fu_7814_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_45_fu_7782_p3);

assign bn_weight_buf_V_17_0 = ((or_ln785_49_fu_7938_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_47_fu_7906_p3);

assign bn_weight_buf_V_18_0 = ((or_ln785_51_fu_8062_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_49_fu_8030_p3);

assign bn_weight_buf_V_19_0 = ((or_ln785_53_fu_8186_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_51_fu_8154_p3);

assign bn_weight_buf_V_1_0 = ((or_ln785_17_fu_5954_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_15_fu_5922_p3);

assign bn_weight_buf_V_20_0 = ((or_ln785_55_fu_8310_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_53_fu_8278_p3);

assign bn_weight_buf_V_21_0 = ((or_ln785_57_fu_8434_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_55_fu_8402_p3);

assign bn_weight_buf_V_22_0 = ((or_ln785_59_fu_8558_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_57_fu_8526_p3);

assign bn_weight_buf_V_23_0 = ((or_ln785_61_fu_8682_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_59_fu_8650_p3);

assign bn_weight_buf_V_24_0 = ((or_ln785_63_fu_8806_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_61_fu_8774_p3);

assign bn_weight_buf_V_25_0 = ((or_ln785_65_fu_8930_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_63_fu_8898_p3);

assign bn_weight_buf_V_26_0 = ((or_ln785_67_fu_9054_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_65_fu_9022_p3);

assign bn_weight_buf_V_27_0 = ((or_ln785_69_fu_9178_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_67_fu_9146_p3);

assign bn_weight_buf_V_28_0 = ((or_ln785_71_fu_9302_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_69_fu_9270_p3);

assign bn_weight_buf_V_29_0 = ((or_ln785_73_fu_9426_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_71_fu_9394_p3);

assign bn_weight_buf_V_2_0 = ((or_ln785_19_fu_6078_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_17_fu_6046_p3);

assign bn_weight_buf_V_30_0 = ((or_ln785_75_fu_9550_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_73_fu_9518_p3);

assign bn_weight_buf_V_31_0 = ((or_ln785_77_fu_9674_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_75_fu_9642_p3);

assign bn_weight_buf_V_3_0 = ((or_ln785_21_fu_6202_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_19_fu_6170_p3);

assign bn_weight_buf_V_4_0 = ((or_ln785_23_fu_6326_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_21_fu_6294_p3);

assign bn_weight_buf_V_5_0 = ((or_ln785_25_fu_6450_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_23_fu_6418_p3);

assign bn_weight_buf_V_6_0 = ((or_ln785_27_fu_6574_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_25_fu_6542_p3);

assign bn_weight_buf_V_7_0 = ((or_ln785_29_fu_6698_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_27_fu_6666_p3);

assign bn_weight_buf_V_8_0 = ((or_ln785_31_fu_6822_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_29_fu_6790_p3);

assign bn_weight_buf_V_9_0 = ((or_ln785_33_fu_6946_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln746_31_fu_6914_p3);

assign grp_load_weight_3x3_from_fu_1141_ap_start = grp_load_weight_3x3_from_fu_1141_ap_start_reg;

assign i_fu_5774_p2 = (i_0_reg_1130 + 4'd1);

assign icmp_ln231_fu_5768_p2 = ((i_0_reg_1130 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln785_16_fu_5886_p2 = ((tmp_s_fu_5876_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_17_fu_5948_p2 = ((tmp_1_fu_5938_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_18_fu_6010_p2 = ((tmp_2_fu_6000_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_19_fu_6072_p2 = ((tmp_3_fu_6062_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_20_fu_6134_p2 = ((tmp_4_fu_6124_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_21_fu_6196_p2 = ((tmp_5_fu_6186_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_22_fu_6258_p2 = ((tmp_6_fu_6248_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_23_fu_6320_p2 = ((tmp_7_fu_6310_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_24_fu_6382_p2 = ((tmp_8_fu_6372_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_25_fu_6444_p2 = ((tmp_9_fu_6434_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_26_fu_6506_p2 = ((tmp_10_fu_6496_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_27_fu_6568_p2 = ((tmp_11_fu_6558_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_28_fu_6630_p2 = ((tmp_12_fu_6620_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_29_fu_6692_p2 = ((tmp_13_fu_6682_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_30_fu_6754_p2 = ((tmp_14_fu_6744_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_31_fu_6816_p2 = ((tmp_15_fu_6806_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_32_fu_6878_p2 = ((tmp_16_fu_6868_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_33_fu_6940_p2 = ((tmp_17_fu_6930_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_34_fu_7002_p2 = ((tmp_18_fu_6992_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_35_fu_7064_p2 = ((tmp_19_fu_7054_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_36_fu_7126_p2 = ((tmp_20_fu_7116_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_37_fu_7188_p2 = ((tmp_21_fu_7178_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_38_fu_7250_p2 = ((tmp_22_fu_7240_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_39_fu_7312_p2 = ((tmp_23_fu_7302_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_40_fu_7374_p2 = ((tmp_24_fu_7364_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_41_fu_7436_p2 = ((tmp_25_fu_7426_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_42_fu_7498_p2 = ((tmp_26_fu_7488_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_43_fu_7560_p2 = ((tmp_27_fu_7550_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_44_fu_7622_p2 = ((tmp_28_fu_7612_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_45_fu_7684_p2 = ((tmp_29_fu_7674_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_46_fu_7746_p2 = ((tmp_30_fu_7736_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_47_fu_7808_p2 = ((tmp_31_fu_7798_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_48_fu_7870_p2 = ((tmp_32_fu_7860_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_49_fu_7932_p2 = ((tmp_33_fu_7922_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_50_fu_7994_p2 = ((tmp_34_fu_7984_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_51_fu_8056_p2 = ((tmp_35_fu_8046_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_52_fu_8118_p2 = ((tmp_36_fu_8108_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_53_fu_8180_p2 = ((tmp_37_fu_8170_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_54_fu_8242_p2 = ((tmp_38_fu_8232_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_55_fu_8304_p2 = ((tmp_39_fu_8294_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_56_fu_8366_p2 = ((tmp_40_fu_8356_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_57_fu_8428_p2 = ((tmp_41_fu_8418_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_58_fu_8490_p2 = ((tmp_42_fu_8480_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_59_fu_8552_p2 = ((tmp_43_fu_8542_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_60_fu_8614_p2 = ((tmp_44_fu_8604_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_61_fu_8676_p2 = ((tmp_45_fu_8666_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_62_fu_8738_p2 = ((tmp_46_fu_8728_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_63_fu_8800_p2 = ((tmp_47_fu_8790_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_64_fu_8862_p2 = ((tmp_48_fu_8852_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_65_fu_8924_p2 = ((tmp_49_fu_8914_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_66_fu_8986_p2 = ((tmp_50_fu_8976_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_67_fu_9048_p2 = ((tmp_51_fu_9038_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_68_fu_9110_p2 = ((tmp_52_fu_9100_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_69_fu_9172_p2 = ((tmp_53_fu_9162_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_70_fu_9234_p2 = ((tmp_54_fu_9224_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_71_fu_9296_p2 = ((tmp_55_fu_9286_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_72_fu_9358_p2 = ((tmp_56_fu_9348_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_73_fu_9420_p2 = ((tmp_57_fu_9410_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_74_fu_9482_p2 = ((tmp_58_fu_9472_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_75_fu_9544_p2 = ((tmp_59_fu_9534_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_76_fu_9606_p2 = ((tmp_60_fu_9596_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_77_fu_9668_p2 = ((tmp_61_fu_9658_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_78_fu_9730_p2 = ((tmp_62_fu_9720_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_5830_p2 = ((tmp_fu_5820_p4 != 7'd0) ? 1'b1 : 1'b0);

assign m_axi_conv_weight_3x3_all_V_AWADDR = 32'd0;

assign m_axi_conv_weight_3x3_all_V_AWBURST = 2'd0;

assign m_axi_conv_weight_3x3_all_V_AWCACHE = 4'd0;

assign m_axi_conv_weight_3x3_all_V_AWID = 1'd0;

assign m_axi_conv_weight_3x3_all_V_AWLEN = 32'd0;

assign m_axi_conv_weight_3x3_all_V_AWLOCK = 2'd0;

assign m_axi_conv_weight_3x3_all_V_AWPROT = 3'd0;

assign m_axi_conv_weight_3x3_all_V_AWQOS = 4'd0;

assign m_axi_conv_weight_3x3_all_V_AWREGION = 4'd0;

assign m_axi_conv_weight_3x3_all_V_AWSIZE = 3'd0;

assign m_axi_conv_weight_3x3_all_V_AWUSER = 1'd0;

assign m_axi_conv_weight_3x3_all_V_AWVALID = 1'b0;

assign m_axi_conv_weight_3x3_all_V_BREADY = 1'b0;

assign m_axi_conv_weight_3x3_all_V_WDATA = 512'd0;

assign m_axi_conv_weight_3x3_all_V_WID = 1'd0;

assign m_axi_conv_weight_3x3_all_V_WLAST = 1'b0;

assign m_axi_conv_weight_3x3_all_V_WSTRB = 64'd0;

assign m_axi_conv_weight_3x3_all_V_WUSER = 1'd0;

assign m_axi_conv_weight_3x3_all_V_WVALID = 1'b0;

assign or_ln785_16_fu_5892_p2 = (tmp_179_fu_5868_p3 | icmp_ln785_16_fu_5886_p2);

assign or_ln785_17_fu_5954_p2 = (tmp_180_fu_5930_p3 | icmp_ln785_17_fu_5948_p2);

assign or_ln785_18_fu_6016_p2 = (tmp_181_fu_5992_p3 | icmp_ln785_18_fu_6010_p2);

assign or_ln785_19_fu_6078_p2 = (tmp_182_fu_6054_p3 | icmp_ln785_19_fu_6072_p2);

assign or_ln785_20_fu_6140_p2 = (tmp_183_fu_6116_p3 | icmp_ln785_20_fu_6134_p2);

assign or_ln785_21_fu_6202_p2 = (tmp_184_fu_6178_p3 | icmp_ln785_21_fu_6196_p2);

assign or_ln785_22_fu_6264_p2 = (tmp_185_fu_6240_p3 | icmp_ln785_22_fu_6258_p2);

assign or_ln785_23_fu_6326_p2 = (tmp_186_fu_6302_p3 | icmp_ln785_23_fu_6320_p2);

assign or_ln785_24_fu_6388_p2 = (tmp_187_fu_6364_p3 | icmp_ln785_24_fu_6382_p2);

assign or_ln785_25_fu_6450_p2 = (tmp_188_fu_6426_p3 | icmp_ln785_25_fu_6444_p2);

assign or_ln785_26_fu_6512_p2 = (tmp_189_fu_6488_p3 | icmp_ln785_26_fu_6506_p2);

assign or_ln785_27_fu_6574_p2 = (tmp_190_fu_6550_p3 | icmp_ln785_27_fu_6568_p2);

assign or_ln785_28_fu_6636_p2 = (tmp_191_fu_6612_p3 | icmp_ln785_28_fu_6630_p2);

assign or_ln785_29_fu_6698_p2 = (tmp_192_fu_6674_p3 | icmp_ln785_29_fu_6692_p2);

assign or_ln785_30_fu_6760_p2 = (tmp_193_fu_6736_p3 | icmp_ln785_30_fu_6754_p2);

assign or_ln785_31_fu_6822_p2 = (tmp_194_fu_6798_p3 | icmp_ln785_31_fu_6816_p2);

assign or_ln785_32_fu_6884_p2 = (tmp_195_fu_6860_p3 | icmp_ln785_32_fu_6878_p2);

assign or_ln785_33_fu_6946_p2 = (tmp_196_fu_6922_p3 | icmp_ln785_33_fu_6940_p2);

assign or_ln785_34_fu_7008_p2 = (tmp_197_fu_6984_p3 | icmp_ln785_34_fu_7002_p2);

assign or_ln785_35_fu_7070_p2 = (tmp_198_fu_7046_p3 | icmp_ln785_35_fu_7064_p2);

assign or_ln785_36_fu_7132_p2 = (tmp_199_fu_7108_p3 | icmp_ln785_36_fu_7126_p2);

assign or_ln785_37_fu_7194_p2 = (tmp_200_fu_7170_p3 | icmp_ln785_37_fu_7188_p2);

assign or_ln785_38_fu_7256_p2 = (tmp_201_fu_7232_p3 | icmp_ln785_38_fu_7250_p2);

assign or_ln785_39_fu_7318_p2 = (tmp_202_fu_7294_p3 | icmp_ln785_39_fu_7312_p2);

assign or_ln785_40_fu_7380_p2 = (tmp_203_fu_7356_p3 | icmp_ln785_40_fu_7374_p2);

assign or_ln785_41_fu_7442_p2 = (tmp_204_fu_7418_p3 | icmp_ln785_41_fu_7436_p2);

assign or_ln785_42_fu_7504_p2 = (tmp_205_fu_7480_p3 | icmp_ln785_42_fu_7498_p2);

assign or_ln785_43_fu_7566_p2 = (tmp_206_fu_7542_p3 | icmp_ln785_43_fu_7560_p2);

assign or_ln785_44_fu_7628_p2 = (tmp_207_fu_7604_p3 | icmp_ln785_44_fu_7622_p2);

assign or_ln785_45_fu_7690_p2 = (tmp_208_fu_7666_p3 | icmp_ln785_45_fu_7684_p2);

assign or_ln785_46_fu_7752_p2 = (tmp_209_fu_7728_p3 | icmp_ln785_46_fu_7746_p2);

assign or_ln785_47_fu_7814_p2 = (tmp_210_fu_7790_p3 | icmp_ln785_47_fu_7808_p2);

assign or_ln785_48_fu_7876_p2 = (tmp_211_fu_7852_p3 | icmp_ln785_48_fu_7870_p2);

assign or_ln785_49_fu_7938_p2 = (tmp_213_fu_7914_p3 | icmp_ln785_49_fu_7932_p2);

assign or_ln785_50_fu_8000_p2 = (tmp_215_fu_7976_p3 | icmp_ln785_50_fu_7994_p2);

assign or_ln785_51_fu_8062_p2 = (tmp_217_fu_8038_p3 | icmp_ln785_51_fu_8056_p2);

assign or_ln785_52_fu_8124_p2 = (tmp_219_fu_8100_p3 | icmp_ln785_52_fu_8118_p2);

assign or_ln785_53_fu_8186_p2 = (tmp_221_fu_8162_p3 | icmp_ln785_53_fu_8180_p2);

assign or_ln785_54_fu_8248_p2 = (tmp_223_fu_8224_p3 | icmp_ln785_54_fu_8242_p2);

assign or_ln785_55_fu_8310_p2 = (tmp_225_fu_8286_p3 | icmp_ln785_55_fu_8304_p2);

assign or_ln785_56_fu_8372_p2 = (tmp_227_fu_8348_p3 | icmp_ln785_56_fu_8366_p2);

assign or_ln785_57_fu_8434_p2 = (tmp_229_fu_8410_p3 | icmp_ln785_57_fu_8428_p2);

assign or_ln785_58_fu_8496_p2 = (tmp_231_fu_8472_p3 | icmp_ln785_58_fu_8490_p2);

assign or_ln785_59_fu_8558_p2 = (tmp_233_fu_8534_p3 | icmp_ln785_59_fu_8552_p2);

assign or_ln785_60_fu_8620_p2 = (tmp_235_fu_8596_p3 | icmp_ln785_60_fu_8614_p2);

assign or_ln785_61_fu_8682_p2 = (tmp_237_fu_8658_p3 | icmp_ln785_61_fu_8676_p2);

assign or_ln785_62_fu_8744_p2 = (tmp_239_fu_8720_p3 | icmp_ln785_62_fu_8738_p2);

assign or_ln785_63_fu_8806_p2 = (tmp_241_fu_8782_p3 | icmp_ln785_63_fu_8800_p2);

assign or_ln785_64_fu_8868_p2 = (tmp_243_fu_8844_p3 | icmp_ln785_64_fu_8862_p2);

assign or_ln785_65_fu_8930_p2 = (tmp_245_fu_8906_p3 | icmp_ln785_65_fu_8924_p2);

assign or_ln785_66_fu_8992_p2 = (tmp_247_fu_8968_p3 | icmp_ln785_66_fu_8986_p2);

assign or_ln785_67_fu_9054_p2 = (tmp_249_fu_9030_p3 | icmp_ln785_67_fu_9048_p2);

assign or_ln785_68_fu_9116_p2 = (tmp_251_fu_9092_p3 | icmp_ln785_68_fu_9110_p2);

assign or_ln785_69_fu_9178_p2 = (tmp_253_fu_9154_p3 | icmp_ln785_69_fu_9172_p2);

assign or_ln785_70_fu_9240_p2 = (tmp_255_fu_9216_p3 | icmp_ln785_70_fu_9234_p2);

assign or_ln785_71_fu_9302_p2 = (tmp_257_fu_9278_p3 | icmp_ln785_71_fu_9296_p2);

assign or_ln785_72_fu_9364_p2 = (tmp_259_fu_9340_p3 | icmp_ln785_72_fu_9358_p2);

assign or_ln785_73_fu_9426_p2 = (tmp_261_fu_9402_p3 | icmp_ln785_73_fu_9420_p2);

assign or_ln785_74_fu_9488_p2 = (tmp_263_fu_9464_p3 | icmp_ln785_74_fu_9482_p2);

assign or_ln785_75_fu_9550_p2 = (tmp_265_fu_9526_p3 | icmp_ln785_75_fu_9544_p2);

assign or_ln785_76_fu_9612_p2 = (tmp_267_fu_9588_p3 | icmp_ln785_76_fu_9606_p2);

assign or_ln785_77_fu_9674_p2 = (tmp_269_fu_9650_p3 | icmp_ln785_77_fu_9668_p2);

assign or_ln785_78_fu_9736_p2 = (tmp_271_fu_9712_p3 | icmp_ln785_78_fu_9730_p2);

assign or_ln785_fu_5836_p2 = (tmp_178_fu_5812_p3 | icmp_ln785_fu_5830_p2);

assign tmp_10_fu_6496_p4 = {{DATA_7_V_1_fu_1102[90:84]}};

assign tmp_11_fu_6558_p4 = {{DATA_7_V_fu_1098[106:100]}};

assign tmp_12_fu_6620_p4 = {{DATA_7_V_1_fu_1102[106:100]}};

assign tmp_13_fu_6682_p4 = {{DATA_7_V_fu_1098[122:116]}};

assign tmp_146_fu_5912_p4 = {{DATA_7_V_fu_1098[18:16]}};

assign tmp_147_fu_5974_p4 = {{DATA_7_V_1_fu_1102[18:16]}};

assign tmp_148_fu_6036_p4 = {{DATA_7_V_fu_1098[34:32]}};

assign tmp_149_fu_6098_p4 = {{DATA_7_V_1_fu_1102[34:32]}};

assign tmp_14_fu_6744_p4 = {{DATA_7_V_1_fu_1102[122:116]}};

assign tmp_150_fu_6160_p4 = {{DATA_7_V_fu_1098[50:48]}};

assign tmp_151_fu_6222_p4 = {{DATA_7_V_1_fu_1102[50:48]}};

assign tmp_152_fu_6284_p4 = {{DATA_7_V_fu_1098[66:64]}};

assign tmp_153_fu_6346_p4 = {{DATA_7_V_1_fu_1102[66:64]}};

assign tmp_154_fu_6408_p4 = {{DATA_7_V_fu_1098[82:80]}};

assign tmp_155_fu_6470_p4 = {{DATA_7_V_1_fu_1102[82:80]}};

assign tmp_156_fu_6532_p4 = {{DATA_7_V_fu_1098[98:96]}};

assign tmp_157_fu_6594_p4 = {{DATA_7_V_1_fu_1102[98:96]}};

assign tmp_158_fu_6656_p4 = {{DATA_7_V_fu_1098[114:112]}};

assign tmp_159_fu_6718_p4 = {{DATA_7_V_1_fu_1102[114:112]}};

assign tmp_15_fu_6806_p4 = {{DATA_7_V_fu_1098[138:132]}};

assign tmp_160_fu_6780_p4 = {{DATA_7_V_fu_1098[130:128]}};

assign tmp_161_fu_6842_p4 = {{DATA_7_V_1_fu_1102[130:128]}};

assign tmp_162_fu_6904_p4 = {{DATA_7_V_fu_1098[146:144]}};

assign tmp_163_fu_6966_p4 = {{DATA_7_V_1_fu_1102[146:144]}};

assign tmp_164_fu_7028_p4 = {{DATA_7_V_fu_1098[162:160]}};

assign tmp_165_fu_7090_p4 = {{DATA_7_V_1_fu_1102[162:160]}};

assign tmp_166_fu_7152_p4 = {{DATA_7_V_fu_1098[178:176]}};

assign tmp_167_fu_7214_p4 = {{DATA_7_V_1_fu_1102[178:176]}};

assign tmp_168_fu_7276_p4 = {{DATA_7_V_fu_1098[194:192]}};

assign tmp_169_fu_7338_p4 = {{DATA_7_V_1_fu_1102[194:192]}};

assign tmp_16_fu_6868_p4 = {{DATA_7_V_1_fu_1102[138:132]}};

assign tmp_170_fu_7400_p4 = {{DATA_7_V_fu_1098[210:208]}};

assign tmp_171_fu_7462_p4 = {{DATA_7_V_1_fu_1102[210:208]}};

assign tmp_172_fu_7524_p4 = {{DATA_7_V_fu_1098[226:224]}};

assign tmp_173_fu_7586_p4 = {{DATA_7_V_1_fu_1102[226:224]}};

assign tmp_174_fu_7648_p4 = {{DATA_7_V_fu_1098[242:240]}};

assign tmp_175_fu_7710_p4 = {{DATA_7_V_1_fu_1102[242:240]}};

assign tmp_176_fu_7772_p4 = {{DATA_7_V_fu_1098[258:256]}};

assign tmp_177_fu_7834_p4 = {{DATA_7_V_1_fu_1102[258:256]}};

assign tmp_178_fu_5812_p3 = DATA_7_V_fu_1098[32'd3];

assign tmp_179_fu_5868_p3 = DATA_7_V_1_fu_1102[32'd3];

assign tmp_17_fu_6930_p4 = {{DATA_7_V_fu_1098[154:148]}};

assign tmp_180_fu_5930_p3 = DATA_7_V_fu_1098[32'd19];

assign tmp_181_fu_5992_p3 = DATA_7_V_1_fu_1102[32'd19];

assign tmp_182_fu_6054_p3 = DATA_7_V_fu_1098[32'd35];

assign tmp_183_fu_6116_p3 = DATA_7_V_1_fu_1102[32'd35];

assign tmp_184_fu_6178_p3 = DATA_7_V_fu_1098[32'd51];

assign tmp_185_fu_6240_p3 = DATA_7_V_1_fu_1102[32'd51];

assign tmp_186_fu_6302_p3 = DATA_7_V_fu_1098[32'd67];

assign tmp_187_fu_6364_p3 = DATA_7_V_1_fu_1102[32'd67];

assign tmp_188_fu_6426_p3 = DATA_7_V_fu_1098[32'd83];

assign tmp_189_fu_6488_p3 = DATA_7_V_1_fu_1102[32'd83];

assign tmp_18_fu_6992_p4 = {{DATA_7_V_1_fu_1102[154:148]}};

assign tmp_190_fu_6550_p3 = DATA_7_V_fu_1098[32'd99];

assign tmp_191_fu_6612_p3 = DATA_7_V_1_fu_1102[32'd99];

assign tmp_192_fu_6674_p3 = DATA_7_V_fu_1098[32'd115];

assign tmp_193_fu_6736_p3 = DATA_7_V_1_fu_1102[32'd115];

assign tmp_194_fu_6798_p3 = DATA_7_V_fu_1098[32'd131];

assign tmp_195_fu_6860_p3 = DATA_7_V_1_fu_1102[32'd131];

assign tmp_196_fu_6922_p3 = DATA_7_V_fu_1098[32'd147];

assign tmp_197_fu_6984_p3 = DATA_7_V_1_fu_1102[32'd147];

assign tmp_198_fu_7046_p3 = DATA_7_V_fu_1098[32'd163];

assign tmp_199_fu_7108_p3 = DATA_7_V_1_fu_1102[32'd163];

assign tmp_19_fu_7054_p4 = {{DATA_7_V_fu_1098[170:164]}};

assign tmp_1_fu_5938_p4 = {{DATA_7_V_fu_1098[26:20]}};

assign tmp_200_fu_7170_p3 = DATA_7_V_fu_1098[32'd179];

assign tmp_201_fu_7232_p3 = DATA_7_V_1_fu_1102[32'd179];

assign tmp_202_fu_7294_p3 = DATA_7_V_fu_1098[32'd195];

assign tmp_203_fu_7356_p3 = DATA_7_V_1_fu_1102[32'd195];

assign tmp_204_fu_7418_p3 = DATA_7_V_fu_1098[32'd211];

assign tmp_205_fu_7480_p3 = DATA_7_V_1_fu_1102[32'd211];

assign tmp_206_fu_7542_p3 = DATA_7_V_fu_1098[32'd227];

assign tmp_207_fu_7604_p3 = DATA_7_V_1_fu_1102[32'd227];

assign tmp_208_fu_7666_p3 = DATA_7_V_fu_1098[32'd243];

assign tmp_209_fu_7728_p3 = DATA_7_V_1_fu_1102[32'd243];

assign tmp_20_fu_7116_p4 = {{DATA_7_V_1_fu_1102[170:164]}};

assign tmp_210_fu_7790_p3 = DATA_7_V_fu_1098[32'd259];

assign tmp_211_fu_7852_p3 = DATA_7_V_1_fu_1102[32'd259];

assign tmp_212_fu_7896_p4 = {{DATA_7_V_fu_1098[274:272]}};

assign tmp_213_fu_7914_p3 = DATA_7_V_fu_1098[32'd275];

assign tmp_214_fu_7958_p4 = {{DATA_7_V_1_fu_1102[274:272]}};

assign tmp_215_fu_7976_p3 = DATA_7_V_1_fu_1102[32'd275];

assign tmp_216_fu_8020_p4 = {{DATA_7_V_fu_1098[290:288]}};

assign tmp_217_fu_8038_p3 = DATA_7_V_fu_1098[32'd291];

assign tmp_218_fu_8082_p4 = {{DATA_7_V_1_fu_1102[290:288]}};

assign tmp_219_fu_8100_p3 = DATA_7_V_1_fu_1102[32'd291];

assign tmp_21_fu_7178_p4 = {{DATA_7_V_fu_1098[186:180]}};

assign tmp_220_fu_8144_p4 = {{DATA_7_V_fu_1098[306:304]}};

assign tmp_221_fu_8162_p3 = DATA_7_V_fu_1098[32'd307];

assign tmp_222_fu_8206_p4 = {{DATA_7_V_1_fu_1102[306:304]}};

assign tmp_223_fu_8224_p3 = DATA_7_V_1_fu_1102[32'd307];

assign tmp_224_fu_8268_p4 = {{DATA_7_V_fu_1098[322:320]}};

assign tmp_225_fu_8286_p3 = DATA_7_V_fu_1098[32'd323];

assign tmp_226_fu_8330_p4 = {{DATA_7_V_1_fu_1102[322:320]}};

assign tmp_227_fu_8348_p3 = DATA_7_V_1_fu_1102[32'd323];

assign tmp_228_fu_8392_p4 = {{DATA_7_V_fu_1098[338:336]}};

assign tmp_229_fu_8410_p3 = DATA_7_V_fu_1098[32'd339];

assign tmp_22_fu_7240_p4 = {{DATA_7_V_1_fu_1102[186:180]}};

assign tmp_230_fu_8454_p4 = {{DATA_7_V_1_fu_1102[338:336]}};

assign tmp_231_fu_8472_p3 = DATA_7_V_1_fu_1102[32'd339];

assign tmp_232_fu_8516_p4 = {{DATA_7_V_fu_1098[354:352]}};

assign tmp_233_fu_8534_p3 = DATA_7_V_fu_1098[32'd355];

assign tmp_234_fu_8578_p4 = {{DATA_7_V_1_fu_1102[354:352]}};

assign tmp_235_fu_8596_p3 = DATA_7_V_1_fu_1102[32'd355];

assign tmp_236_fu_8640_p4 = {{DATA_7_V_fu_1098[370:368]}};

assign tmp_237_fu_8658_p3 = DATA_7_V_fu_1098[32'd371];

assign tmp_238_fu_8702_p4 = {{DATA_7_V_1_fu_1102[370:368]}};

assign tmp_239_fu_8720_p3 = DATA_7_V_1_fu_1102[32'd371];

assign tmp_23_fu_7302_p4 = {{DATA_7_V_fu_1098[202:196]}};

assign tmp_240_fu_8764_p4 = {{DATA_7_V_fu_1098[386:384]}};

assign tmp_241_fu_8782_p3 = DATA_7_V_fu_1098[32'd387];

assign tmp_242_fu_8826_p4 = {{DATA_7_V_1_fu_1102[386:384]}};

assign tmp_243_fu_8844_p3 = DATA_7_V_1_fu_1102[32'd387];

assign tmp_244_fu_8888_p4 = {{DATA_7_V_fu_1098[402:400]}};

assign tmp_245_fu_8906_p3 = DATA_7_V_fu_1098[32'd403];

assign tmp_246_fu_8950_p4 = {{DATA_7_V_1_fu_1102[402:400]}};

assign tmp_247_fu_8968_p3 = DATA_7_V_1_fu_1102[32'd403];

assign tmp_248_fu_9012_p4 = {{DATA_7_V_fu_1098[418:416]}};

assign tmp_249_fu_9030_p3 = DATA_7_V_fu_1098[32'd419];

assign tmp_24_fu_7364_p4 = {{DATA_7_V_1_fu_1102[202:196]}};

assign tmp_250_fu_9074_p4 = {{DATA_7_V_1_fu_1102[418:416]}};

assign tmp_251_fu_9092_p3 = DATA_7_V_1_fu_1102[32'd419];

assign tmp_252_fu_9136_p4 = {{DATA_7_V_fu_1098[434:432]}};

assign tmp_253_fu_9154_p3 = DATA_7_V_fu_1098[32'd435];

assign tmp_254_fu_9198_p4 = {{DATA_7_V_1_fu_1102[434:432]}};

assign tmp_255_fu_9216_p3 = DATA_7_V_1_fu_1102[32'd435];

assign tmp_256_fu_9260_p4 = {{DATA_7_V_fu_1098[450:448]}};

assign tmp_257_fu_9278_p3 = DATA_7_V_fu_1098[32'd451];

assign tmp_258_fu_9322_p4 = {{DATA_7_V_1_fu_1102[450:448]}};

assign tmp_259_fu_9340_p3 = DATA_7_V_1_fu_1102[32'd451];

assign tmp_25_fu_7426_p4 = {{DATA_7_V_fu_1098[218:212]}};

assign tmp_260_fu_9384_p4 = {{DATA_7_V_fu_1098[466:464]}};

assign tmp_261_fu_9402_p3 = DATA_7_V_fu_1098[32'd467];

assign tmp_262_fu_9446_p4 = {{DATA_7_V_1_fu_1102[466:464]}};

assign tmp_263_fu_9464_p3 = DATA_7_V_1_fu_1102[32'd467];

assign tmp_264_fu_9508_p4 = {{DATA_7_V_fu_1098[482:480]}};

assign tmp_265_fu_9526_p3 = DATA_7_V_fu_1098[32'd483];

assign tmp_266_fu_9570_p4 = {{DATA_7_V_1_fu_1102[482:480]}};

assign tmp_267_fu_9588_p3 = DATA_7_V_1_fu_1102[32'd483];

assign tmp_268_fu_9632_p4 = {{DATA_7_V_fu_1098[498:496]}};

assign tmp_269_fu_9650_p3 = DATA_7_V_fu_1098[32'd499];

assign tmp_26_fu_7488_p4 = {{DATA_7_V_1_fu_1102[218:212]}};

assign tmp_270_fu_9694_p4 = {{DATA_7_V_1_fu_1102[498:496]}};

assign tmp_271_fu_9712_p3 = DATA_7_V_1_fu_1102[32'd499];

assign tmp_27_fu_7550_p4 = {{DATA_7_V_fu_1098[234:228]}};

assign tmp_28_fu_7612_p4 = {{DATA_7_V_1_fu_1102[234:228]}};

assign tmp_29_fu_7674_p4 = {{DATA_7_V_fu_1098[250:244]}};

assign tmp_2_fu_6000_p4 = {{DATA_7_V_1_fu_1102[26:20]}};

assign tmp_30_fu_7736_p4 = {{DATA_7_V_1_fu_1102[250:244]}};

assign tmp_31_fu_7798_p4 = {{DATA_7_V_fu_1098[266:260]}};

assign tmp_32_fu_7860_p4 = {{DATA_7_V_1_fu_1102[266:260]}};

assign tmp_33_fu_7922_p4 = {{DATA_7_V_fu_1098[282:276]}};

assign tmp_34_fu_7984_p4 = {{DATA_7_V_1_fu_1102[282:276]}};

assign tmp_35_fu_8046_p4 = {{DATA_7_V_fu_1098[298:292]}};

assign tmp_36_fu_8108_p4 = {{DATA_7_V_1_fu_1102[298:292]}};

assign tmp_37_fu_8170_p4 = {{DATA_7_V_fu_1098[314:308]}};

assign tmp_38_fu_8232_p4 = {{DATA_7_V_1_fu_1102[314:308]}};

assign tmp_39_fu_8294_p4 = {{DATA_7_V_fu_1098[330:324]}};

assign tmp_3_fu_6062_p4 = {{DATA_7_V_fu_1098[42:36]}};

assign tmp_40_fu_8356_p4 = {{DATA_7_V_1_fu_1102[330:324]}};

assign tmp_41_fu_8418_p4 = {{DATA_7_V_fu_1098[346:340]}};

assign tmp_42_fu_8480_p4 = {{DATA_7_V_1_fu_1102[346:340]}};

assign tmp_43_fu_8542_p4 = {{DATA_7_V_fu_1098[362:356]}};

assign tmp_44_fu_8604_p4 = {{DATA_7_V_1_fu_1102[362:356]}};

assign tmp_45_fu_8666_p4 = {{DATA_7_V_fu_1098[378:372]}};

assign tmp_46_fu_8728_p4 = {{DATA_7_V_1_fu_1102[378:372]}};

assign tmp_47_fu_8790_p4 = {{DATA_7_V_fu_1098[394:388]}};

assign tmp_48_fu_8852_p4 = {{DATA_7_V_1_fu_1102[394:388]}};

assign tmp_49_fu_8914_p4 = {{DATA_7_V_fu_1098[410:404]}};

assign tmp_4_fu_6124_p4 = {{DATA_7_V_1_fu_1102[42:36]}};

assign tmp_50_fu_8976_p4 = {{DATA_7_V_1_fu_1102[410:404]}};

assign tmp_51_fu_9038_p4 = {{DATA_7_V_fu_1098[426:420]}};

assign tmp_52_fu_9100_p4 = {{DATA_7_V_1_fu_1102[426:420]}};

assign tmp_53_fu_9162_p4 = {{DATA_7_V_fu_1098[442:436]}};

assign tmp_54_fu_9224_p4 = {{DATA_7_V_1_fu_1102[442:436]}};

assign tmp_55_fu_9286_p4 = {{DATA_7_V_fu_1098[458:452]}};

assign tmp_56_fu_9348_p4 = {{DATA_7_V_1_fu_1102[458:452]}};

assign tmp_57_fu_9410_p4 = {{DATA_7_V_fu_1098[474:468]}};

assign tmp_58_fu_9472_p4 = {{DATA_7_V_1_fu_1102[474:468]}};

assign tmp_59_fu_9534_p4 = {{DATA_7_V_fu_1098[490:484]}};

assign tmp_5_fu_6186_p4 = {{DATA_7_V_fu_1098[58:52]}};

assign tmp_60_fu_9596_p4 = {{DATA_7_V_1_fu_1102[490:484]}};

assign tmp_61_fu_9658_p4 = {{DATA_7_V_fu_1098[506:500]}};

assign tmp_62_fu_9720_p4 = {{DATA_7_V_1_fu_1102[506:500]}};

assign tmp_6_fu_6248_p4 = {{DATA_7_V_1_fu_1102[58:52]}};

assign tmp_7_fu_6310_p4 = {{DATA_7_V_fu_1098[74:68]}};

assign tmp_8_fu_6372_p4 = {{DATA_7_V_1_fu_1102[74:68]}};

assign tmp_9_fu_6434_p4 = {{DATA_7_V_fu_1098[90:84]}};

assign tmp_fu_5820_p4 = {{DATA_7_V_fu_1098[10:4]}};

assign tmp_s_fu_5876_p4 = {{DATA_7_V_1_fu_1102[10:4]}};

assign trunc_ln414_fu_5780_p1 = i_0_reg_1130[2:0];

assign trunc_ln746_15_fu_5922_p3 = {{tmp_146_fu_5912_p4}, {7'd0}};

assign trunc_ln746_16_fu_5984_p3 = {{tmp_147_fu_5974_p4}, {7'd0}};

assign trunc_ln746_17_fu_6046_p3 = {{tmp_148_fu_6036_p4}, {7'd0}};

assign trunc_ln746_18_fu_6108_p3 = {{tmp_149_fu_6098_p4}, {7'd0}};

assign trunc_ln746_19_fu_6170_p3 = {{tmp_150_fu_6160_p4}, {7'd0}};

assign trunc_ln746_20_fu_6232_p3 = {{tmp_151_fu_6222_p4}, {7'd0}};

assign trunc_ln746_21_fu_6294_p3 = {{tmp_152_fu_6284_p4}, {7'd0}};

assign trunc_ln746_22_fu_6356_p3 = {{tmp_153_fu_6346_p4}, {7'd0}};

assign trunc_ln746_23_fu_6418_p3 = {{tmp_154_fu_6408_p4}, {7'd0}};

assign trunc_ln746_24_fu_6480_p3 = {{tmp_155_fu_6470_p4}, {7'd0}};

assign trunc_ln746_25_fu_6542_p3 = {{tmp_156_fu_6532_p4}, {7'd0}};

assign trunc_ln746_26_fu_6604_p3 = {{tmp_157_fu_6594_p4}, {7'd0}};

assign trunc_ln746_27_fu_6666_p3 = {{tmp_158_fu_6656_p4}, {7'd0}};

assign trunc_ln746_28_fu_6728_p3 = {{tmp_159_fu_6718_p4}, {7'd0}};

assign trunc_ln746_29_fu_6790_p3 = {{tmp_160_fu_6780_p4}, {7'd0}};

assign trunc_ln746_30_fu_6852_p3 = {{tmp_161_fu_6842_p4}, {7'd0}};

assign trunc_ln746_31_fu_6914_p3 = {{tmp_162_fu_6904_p4}, {7'd0}};

assign trunc_ln746_32_fu_6976_p3 = {{tmp_163_fu_6966_p4}, {7'd0}};

assign trunc_ln746_33_fu_7038_p3 = {{tmp_164_fu_7028_p4}, {7'd0}};

assign trunc_ln746_34_fu_7100_p3 = {{tmp_165_fu_7090_p4}, {7'd0}};

assign trunc_ln746_35_fu_7162_p3 = {{tmp_166_fu_7152_p4}, {7'd0}};

assign trunc_ln746_36_fu_7224_p3 = {{tmp_167_fu_7214_p4}, {7'd0}};

assign trunc_ln746_37_fu_7286_p3 = {{tmp_168_fu_7276_p4}, {7'd0}};

assign trunc_ln746_38_fu_7348_p3 = {{tmp_169_fu_7338_p4}, {7'd0}};

assign trunc_ln746_39_fu_7410_p3 = {{tmp_170_fu_7400_p4}, {7'd0}};

assign trunc_ln746_40_fu_7472_p3 = {{tmp_171_fu_7462_p4}, {7'd0}};

assign trunc_ln746_41_fu_7534_p3 = {{tmp_172_fu_7524_p4}, {7'd0}};

assign trunc_ln746_42_fu_7596_p3 = {{tmp_173_fu_7586_p4}, {7'd0}};

assign trunc_ln746_43_fu_7658_p3 = {{tmp_174_fu_7648_p4}, {7'd0}};

assign trunc_ln746_44_fu_7720_p3 = {{tmp_175_fu_7710_p4}, {7'd0}};

assign trunc_ln746_45_fu_7782_p3 = {{tmp_176_fu_7772_p4}, {7'd0}};

assign trunc_ln746_46_fu_7844_p3 = {{tmp_177_fu_7834_p4}, {7'd0}};

assign trunc_ln746_47_fu_7906_p3 = {{tmp_212_fu_7896_p4}, {7'd0}};

assign trunc_ln746_48_fu_7968_p3 = {{tmp_214_fu_7958_p4}, {7'd0}};

assign trunc_ln746_49_fu_8030_p3 = {{tmp_216_fu_8020_p4}, {7'd0}};

assign trunc_ln746_50_fu_8092_p3 = {{tmp_218_fu_8082_p4}, {7'd0}};

assign trunc_ln746_51_fu_8154_p3 = {{tmp_220_fu_8144_p4}, {7'd0}};

assign trunc_ln746_52_fu_8216_p3 = {{tmp_222_fu_8206_p4}, {7'd0}};

assign trunc_ln746_53_fu_8278_p3 = {{tmp_224_fu_8268_p4}, {7'd0}};

assign trunc_ln746_54_fu_8340_p3 = {{tmp_226_fu_8330_p4}, {7'd0}};

assign trunc_ln746_55_fu_8402_p3 = {{tmp_228_fu_8392_p4}, {7'd0}};

assign trunc_ln746_56_fu_8464_p3 = {{tmp_230_fu_8454_p4}, {7'd0}};

assign trunc_ln746_57_fu_8526_p3 = {{tmp_232_fu_8516_p4}, {7'd0}};

assign trunc_ln746_58_fu_8588_p3 = {{tmp_234_fu_8578_p4}, {7'd0}};

assign trunc_ln746_59_fu_8650_p3 = {{tmp_236_fu_8640_p4}, {7'd0}};

assign trunc_ln746_60_fu_8712_p3 = {{tmp_238_fu_8702_p4}, {7'd0}};

assign trunc_ln746_61_fu_8774_p3 = {{tmp_240_fu_8764_p4}, {7'd0}};

assign trunc_ln746_62_fu_8836_p3 = {{tmp_242_fu_8826_p4}, {7'd0}};

assign trunc_ln746_63_fu_8898_p3 = {{tmp_244_fu_8888_p4}, {7'd0}};

assign trunc_ln746_64_fu_8960_p3 = {{tmp_246_fu_8950_p4}, {7'd0}};

assign trunc_ln746_65_fu_9022_p3 = {{tmp_248_fu_9012_p4}, {7'd0}};

assign trunc_ln746_66_fu_9084_p3 = {{tmp_250_fu_9074_p4}, {7'd0}};

assign trunc_ln746_67_fu_9146_p3 = {{tmp_252_fu_9136_p4}, {7'd0}};

assign trunc_ln746_68_fu_9208_p3 = {{tmp_254_fu_9198_p4}, {7'd0}};

assign trunc_ln746_69_fu_9270_p3 = {{tmp_256_fu_9260_p4}, {7'd0}};

assign trunc_ln746_70_fu_9332_p3 = {{tmp_258_fu_9322_p4}, {7'd0}};

assign trunc_ln746_71_fu_9394_p3 = {{tmp_260_fu_9384_p4}, {7'd0}};

assign trunc_ln746_72_fu_9456_p3 = {{tmp_262_fu_9446_p4}, {7'd0}};

assign trunc_ln746_73_fu_9518_p3 = {{tmp_264_fu_9508_p4}, {7'd0}};

assign trunc_ln746_74_fu_9580_p3 = {{tmp_266_fu_9570_p4}, {7'd0}};

assign trunc_ln746_75_fu_9642_p3 = {{tmp_268_fu_9632_p4}, {7'd0}};

assign trunc_ln746_76_fu_9704_p3 = {{tmp_270_fu_9694_p4}, {7'd0}};

assign trunc_ln746_77_fu_5856_p1 = DATA_7_V_1_fu_1102[2:0];

assign trunc_ln746_fu_5800_p1 = DATA_7_V_fu_1098[2:0];

assign trunc_ln746_s_fu_5860_p3 = {{trunc_ln746_77_fu_5856_p1}, {7'd0}};

assign trunc_ln_fu_5804_p3 = {{trunc_ln746_fu_5800_p1}, {7'd0}};

assign zext_ln647_fu_5757_p1 = weights_all_V_offset;

endmodule //load_weights_3x3_all
