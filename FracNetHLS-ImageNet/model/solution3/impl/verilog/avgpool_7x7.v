// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module avgpool_7x7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buf_V_address0,
        buf_V_ce0,
        buf_V_q0,
        buf_V_address1,
        buf_V_ce1,
        buf_V_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_state13 = 7'd32;
parameter    ap_ST_fsm_state14 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] buf_V_address0;
output   buf_V_ce0;
input  [8:0] buf_V_q0;
output  [6:0] buf_V_address1;
output   buf_V_ce1;
input  [8:0] buf_V_q1;
output  [10:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] buf_V_address0;
reg buf_V_ce0;
reg[6:0] buf_V_address1;
reg buf_V_ce1;
reg[10:0] ap_return;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [13:0] p_Val2_21_reg_139;
reg   [3:0] row_0_reg_151;
wire   [0:0] icmp_ln208_fu_175_p2;
reg   [0:0] icmp_ln208_reg_422;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln208_reg_422_pp0_iter1_reg;
reg   [0:0] icmp_ln208_reg_422_pp0_iter2_reg;
wire   [7:0] add_ln210_fu_197_p2;
reg   [7:0] add_ln210_reg_426;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state12_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg   [8:0] buf_V_load_reg_457;
reg    ap_enable_reg_pp0_iter0;
reg   [8:0] buf_V_load_1_reg_462;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [8:0] buf_V_load_2_reg_477;
reg   [8:0] buf_V_load_3_reg_482;
wire   [3:0] row_fu_263_p2;
reg   [3:0] row_reg_487;
reg   [8:0] buf_V_load_4_reg_497;
reg    ap_enable_reg_pp0_iter1;
reg   [8:0] buf_V_load_5_reg_502;
wire   [13:0] grp_sum_engine_1_fu_163_ap_return;
reg  signed [13:0] p_Val2_22_reg_512;
reg   [0:0] p_Result_s_reg_518;
wire   [13:0] sum_V_fu_300_p2;
reg   [13:0] sum_V_reg_525;
reg   [0:0] p_Result_10_reg_531;
wire   [13:0] select_ln340_526_fu_351_p3;
reg    ap_enable_reg_pp0_iter2;
reg   [9:0] tmp_s_reg_543;
wire    ap_CS_fsm_state13;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage2_subdone;
reg   [3:0] ap_phi_mux_row_0_phi_fu_155_p4;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln210_2_fu_208_p1;
wire  signed [63:0] sext_ln210_fu_218_p1;
wire  signed [63:0] sext_ln210_1_fu_228_p1;
wire    ap_block_pp0_stage2;
wire  signed [63:0] sext_ln210_2_fu_238_p1;
wire  signed [63:0] sext_ln210_3_fu_248_p1;
wire    ap_block_pp0_stage3;
wire  signed [63:0] sext_ln210_4_fu_258_p1;
wire  signed [63:0] sext_ln210_5_fu_274_p1;
wire   [6:0] tmp_491_fu_185_p3;
wire   [7:0] zext_ln210_fu_181_p1;
wire   [7:0] zext_ln210_1_fu_193_p1;
wire   [7:0] add_ln210_1_fu_203_p2;
wire   [7:0] add_ln210_2_fu_213_p2;
wire   [7:0] add_ln210_3_fu_223_p2;
wire   [7:0] add_ln210_4_fu_233_p2;
wire   [7:0] add_ln210_5_fu_243_p2;
wire   [7:0] add_ln210_6_fu_253_p2;
wire   [7:0] add_ln210_7_fu_269_p2;
wire  signed [14:0] lhs_V_fu_279_p1;
wire  signed [14:0] rhs_V_fu_283_p1;
wire   [14:0] ret_V_fu_286_p2;
wire   [0:0] xor_ln786_10_fu_313_p2;
wire   [0:0] xor_ln340_fu_327_p2;
wire   [0:0] xor_ln340_317_fu_323_p2;
wire   [0:0] underflow_fu_318_p2;
wire   [0:0] or_ln340_39_fu_332_p2;
wire   [13:0] select_ln340_fu_337_p3;
wire   [13:0] select_ln388_fu_344_p3;
wire  signed [14:0] sext_ln1148_fu_359_p1;
wire   [14:0] sub_ln1148_fu_363_p2;
wire    ap_CS_fsm_state14;
wire   [10:0] zext_ln1148_1_fu_387_p1;
wire   [8:0] trunc_ln1148_1_fu_396_p4;
wire  signed [9:0] sext_ln1148_1_fu_406_p1;
wire   [0:0] tmp_1357_fu_379_p3;
wire   [10:0] sub_ln1148_1_fu_390_p2;
wire   [10:0] zext_ln1148_fu_410_p1;
wire   [10:0] r_V_fu_414_p3;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

sum_engine_1 grp_sum_engine_1_fu_163(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .t0_V(buf_V_load_reg_457),
    .t1_V(buf_V_load_1_reg_462),
    .t2_V(buf_V_load_2_reg_477),
    .t3_V(buf_V_load_3_reg_482),
    .t4_V(buf_V_load_4_reg_497),
    .t5_V(buf_V_load_5_reg_502),
    .t6_V(buf_V_q0),
    .ap_return(grp_sum_engine_1_fu_163_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln208_reg_422_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_21_reg_139 <= select_ln340_526_fu_351_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_21_reg_139 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln208_reg_422 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        row_0_reg_151 <= row_reg_487;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_0_reg_151 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln208_fu_175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln210_reg_426 <= add_ln210_fu_197_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_return <= r_V_fu_414_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln208_reg_422 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_V_load_1_reg_462 <= buf_V_q1;
        buf_V_load_reg_457 <= buf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_reg_422 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        buf_V_load_2_reg_477 <= buf_V_q1;
        buf_V_load_3_reg_482 <= buf_V_q0;
        row_reg_487 <= row_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln208_reg_422 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        buf_V_load_4_reg_497 <= buf_V_q1;
        buf_V_load_5_reg_502 <= buf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln208_reg_422 <= icmp_ln208_fu_175_p2;
        icmp_ln208_reg_422_pp0_iter1_reg <= icmp_ln208_reg_422;
        icmp_ln208_reg_422_pp0_iter2_reg <= icmp_ln208_reg_422_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln208_reg_422_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Result_10_reg_531 <= sum_V_fu_300_p2[32'd13];
        p_Result_s_reg_518 <= ret_V_fu_286_p2[32'd14];
        sum_V_reg_525 <= sum_V_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_reg_422_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_22_reg_512 <= grp_sum_engine_1_fu_163_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_s_reg_543 <= {{sub_ln1148_fu_363_p2[14:5]}};
    end
end

always @ (*) begin
    if ((icmp_ln208_fu_175_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln208_reg_422 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_row_0_phi_fu_155_p4 = row_reg_487;
    end else begin
        ap_phi_mux_row_0_phi_fu_155_p4 = row_0_reg_151;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        buf_V_address0 = sext_ln210_5_fu_274_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_V_address0 = sext_ln210_4_fu_258_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_V_address0 = sext_ln210_2_fu_238_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_V_address0 = zext_ln210_2_fu_208_p1;
    end else begin
        buf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            buf_V_address1 = sext_ln210_3_fu_248_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            buf_V_address1 = sext_ln210_1_fu_228_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            buf_V_address1 = sext_ln210_fu_218_p1;
        end else begin
            buf_V_address1 = 'bx;
        end
    end else begin
        buf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        buf_V_ce1 = 1'b1;
    end else begin
        buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln208_fu_175_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln208_fu_175_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln210_1_fu_203_p2 = (add_ln210_reg_426 + 8'd1);

assign add_ln210_2_fu_213_p2 = (add_ln210_reg_426 + 8'd2);

assign add_ln210_3_fu_223_p2 = (add_ln210_reg_426 + 8'd3);

assign add_ln210_4_fu_233_p2 = (add_ln210_reg_426 + 8'd4);

assign add_ln210_5_fu_243_p2 = (add_ln210_reg_426 + 8'd5);

assign add_ln210_6_fu_253_p2 = (add_ln210_reg_426 + 8'd6);

assign add_ln210_7_fu_269_p2 = (add_ln210_reg_426 + 8'd7);

assign add_ln210_fu_197_p2 = (zext_ln210_fu_181_p1 + zext_ln210_1_fu_193_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign icmp_ln208_fu_175_p2 = ((ap_phi_mux_row_0_phi_fu_155_p4 == 4'd8) ? 1'b1 : 1'b0);

assign lhs_V_fu_279_p1 = p_Val2_21_reg_139;

assign or_ln340_39_fu_332_p2 = (xor_ln340_fu_327_p2 | p_Result_10_reg_531);

assign r_V_fu_414_p3 = ((tmp_1357_fu_379_p3[0:0] === 1'b1) ? sub_ln1148_1_fu_390_p2 : zext_ln1148_fu_410_p1);

assign ret_V_fu_286_p2 = ($signed(lhs_V_fu_279_p1) + $signed(rhs_V_fu_283_p1));

assign rhs_V_fu_283_p1 = p_Val2_22_reg_512;

assign row_fu_263_p2 = (row_0_reg_151 + 4'd1);

assign select_ln340_526_fu_351_p3 = ((or_ln340_39_fu_332_p2[0:0] === 1'b1) ? select_ln340_fu_337_p3 : select_ln388_fu_344_p3);

assign select_ln340_fu_337_p3 = ((xor_ln340_317_fu_323_p2[0:0] === 1'b1) ? 14'd8191 : sum_V_reg_525);

assign select_ln388_fu_344_p3 = ((underflow_fu_318_p2[0:0] === 1'b1) ? 14'd8192 : sum_V_reg_525);

assign sext_ln1148_1_fu_406_p1 = $signed(trunc_ln1148_1_fu_396_p4);

assign sext_ln1148_fu_359_p1 = p_Val2_21_reg_139;

assign sext_ln210_1_fu_228_p1 = $signed(add_ln210_3_fu_223_p2);

assign sext_ln210_2_fu_238_p1 = $signed(add_ln210_4_fu_233_p2);

assign sext_ln210_3_fu_248_p1 = $signed(add_ln210_5_fu_243_p2);

assign sext_ln210_4_fu_258_p1 = $signed(add_ln210_6_fu_253_p2);

assign sext_ln210_5_fu_274_p1 = $signed(add_ln210_7_fu_269_p2);

assign sext_ln210_fu_218_p1 = $signed(add_ln210_2_fu_213_p2);

assign sub_ln1148_1_fu_390_p2 = (11'd0 - zext_ln1148_1_fu_387_p1);

assign sub_ln1148_fu_363_p2 = ($signed(15'd0) - $signed(sext_ln1148_fu_359_p1));

assign sum_V_fu_300_p2 = ($signed(p_Val2_22_reg_512) + $signed(p_Val2_21_reg_139));

assign tmp_1357_fu_379_p3 = p_Val2_21_reg_139[32'd13];

assign tmp_491_fu_185_p3 = {{ap_phi_mux_row_0_phi_fu_155_p4}, {3'd0}};

assign trunc_ln1148_1_fu_396_p4 = {{p_Val2_21_reg_139[13:5]}};

assign underflow_fu_318_p2 = (xor_ln786_10_fu_313_p2 & p_Result_s_reg_518);

assign xor_ln340_317_fu_323_p2 = (p_Result_s_reg_518 ^ p_Result_10_reg_531);

assign xor_ln340_fu_327_p2 = (p_Result_s_reg_518 ^ 1'd1);

assign xor_ln786_10_fu_313_p2 = (p_Result_10_reg_531 ^ 1'd1);

assign zext_ln1148_1_fu_387_p1 = tmp_s_reg_543;

assign zext_ln1148_fu_410_p1 = $unsigned(sext_ln1148_1_fu_406_p1);

assign zext_ln210_1_fu_193_p1 = tmp_491_fu_185_p3;

assign zext_ln210_2_fu_208_p1 = add_ln210_1_fu_203_p2;

assign zext_ln210_fu_181_p1 = ap_phi_mux_row_0_phi_fu_155_p4;

endmodule //avgpool_7x7
