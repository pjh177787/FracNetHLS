-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity batch_norm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    sum_V : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_V : IN STD_LOGIC_VECTOR (10 downto 0);
    bias_V : IN STD_LOGIC_VECTOR (10 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of batch_norm is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv14_1FFF : STD_LOGIC_VECTOR (13 downto 0) := "01111111111111";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";

    signal bias_V_read_reg_283 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bias_V_read_reg_283_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bias_V_read_reg_283_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bias_V_read_reg_283_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_s_reg_298 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln731_fu_75_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln731_reg_304 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_7_reg_309 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_52_reg_315 : STD_LOGIC_VECTOR (5 downto 0);
    signal sw_V_fu_94_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sw_V_reg_321 : STD_LOGIC_VECTOR (13 downto 0);
    signal overflow_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_reg_326 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_331 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_149_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln340_reg_337 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_8_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_10_fu_213_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_10_reg_349 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_9_reg_355 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_273_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal icmp_ln785_fu_101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln786_fu_127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_35_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln388_fu_167_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_18_fu_173_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_fu_184_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_fu_180_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_fu_191_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_fu_199_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_fu_195_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal xor_ln786_9_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_174_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_316_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_444_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_492_fu_251_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln388_173_fu_258_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_273_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln340_525_fu_265_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_273_ce : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal sum_V_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_V_int_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bias_V_int_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_273_p00 : STD_LOGIC_VECTOR (18 downto 0);

    component FracNet_mul_mul_8fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;



begin
    FracNet_mul_mul_8fYi_U25 : component FracNet_mul_mul_8fYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_273_p0,
        din1 => weight_V_int_reg,
        ce => grp_fu_273_ce,
        dout => grp_fu_273_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= select_ln340_525_fu_265_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                bias_V_int_reg <= bias_V;
                sum_V_int_reg <= sum_V;
                weight_V_int_reg <= weight_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                bias_V_read_reg_283 <= bias_V_int_reg;
                bias_V_read_reg_283_pp0_iter1_reg <= bias_V_read_reg_283;
                bias_V_read_reg_283_pp0_iter2_reg <= bias_V_read_reg_283_pp0_iter1_reg;
                bias_V_read_reg_283_pp0_iter3_reg <= bias_V_read_reg_283_pp0_iter2_reg;
                overflow_reg_326 <= overflow_fu_116_p2;
                p_Result_7_reg_309 <= grp_fu_273_p2(12 downto 12);
                p_Result_8_reg_342 <= ret_V_fu_199_p2(14 downto 14);
                p_Result_9_reg_355 <= ret_V_10_fu_213_p2(13 downto 13);
                p_Result_s_52_reg_315 <= grp_fu_273_p2(18 downto 13);
                p_Result_s_reg_298 <= grp_fu_273_p2(18 downto 18);
                ret_V_10_reg_349 <= ret_V_10_fu_213_p2;
                select_ln340_reg_337 <= select_ln340_fu_149_p3;
                    sw_V_reg_321(13 downto 1) <= sw_V_fu_94_p3(13 downto 1);
                trunc_ln731_reg_304 <= trunc_ln731_fu_75_p1;
                underflow_reg_331 <= underflow_fu_138_p2;
            end if;
        end if;
    end process;
    sw_V_reg_321(0) <= '0';
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(select_ln340_525_fu_265_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= select_ln340_525_fu_265_p3;
        end if; 
    end process;


    grp_fu_273_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_273_ce <= ap_const_logic_1;
        else 
            grp_fu_273_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_273_p0 <= grp_fu_273_p00(8 - 1 downto 0);
    grp_fu_273_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_V_int_reg),19));
    icmp_ln785_fu_101_p2 <= "0" when (p_Result_s_52_reg_315 = ap_const_lv6_0) else "1";
    icmp_ln786_fu_127_p2 <= "0" when (p_Result_s_52_reg_315 = ap_const_lv6_3F) else "1";
        lhs_V_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_18_fu_173_p3),15));

    or_ln340_35_fu_162_p2 <= (xor_ln340_fu_157_p2 or overflow_reg_326);
    or_ln340_444_fu_246_p2 <= (xor_ln340_174_fu_241_p2 or p_Result_9_reg_355);
    or_ln340_fu_143_p2 <= (underflow_fu_138_p2 or overflow_fu_116_p2);
    or_ln785_fu_106_p2 <= (p_Result_7_reg_309 or icmp_ln785_fu_101_p2);
    or_ln786_fu_132_p2 <= (xor_ln786_fu_122_p2 or icmp_ln786_fu_127_p2);
    overflow_fu_116_p2 <= (xor_ln785_fu_111_p2 and or_ln785_fu_106_p2);
    p_Val2_18_fu_173_p3 <= 
        select_ln340_reg_337 when (or_ln340_35_fu_162_p2(0) = '1') else 
        select_ln388_fu_167_p3;
    ret_V_10_fu_213_p2 <= std_logic_vector(signed(p_Val2_18_fu_173_p3) + signed(sext_ln1192_fu_195_p1));
    ret_V_fu_199_p2 <= std_logic_vector(signed(lhs_V_fu_180_p1) + signed(sext_ln728_fu_191_p1));
    rhs_V_fu_184_p3 <= (bias_V_read_reg_283_pp0_iter3_reg & ap_const_lv1_0);
    select_ln340_492_fu_251_p3 <= 
        ap_const_lv14_1FFF when (xor_ln340_316_fu_237_p2(0) = '1') else 
        ret_V_10_reg_349;
    select_ln340_525_fu_265_p3 <= 
        select_ln340_492_fu_251_p3 when (or_ln340_444_fu_246_p2(0) = '1') else 
        select_ln388_173_fu_258_p3;
    select_ln340_fu_149_p3 <= 
        ap_const_lv14_1FFF when (or_ln340_fu_143_p2(0) = '1') else 
        sw_V_fu_94_p3;
    select_ln388_173_fu_258_p3 <= 
        ap_const_lv14_2000 when (underflow_3_fu_232_p2(0) = '1') else 
        ret_V_10_reg_349;
    select_ln388_fu_167_p3 <= 
        ap_const_lv14_2000 when (underflow_reg_331(0) = '1') else 
        sw_V_reg_321;
        sext_ln1192_fu_195_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_184_p3),14));

        sext_ln728_fu_191_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_184_p3),15));

    sw_V_fu_94_p3 <= (trunc_ln731_reg_304 & ap_const_lv1_0);
    trunc_ln731_fu_75_p1 <= grp_fu_273_p2(13 - 1 downto 0);
    underflow_3_fu_232_p2 <= (xor_ln786_9_fu_227_p2 and p_Result_8_reg_342);
    underflow_fu_138_p2 <= (p_Result_s_reg_298 and or_ln786_fu_132_p2);
    xor_ln340_174_fu_241_p2 <= (p_Result_8_reg_342 xor ap_const_lv1_1);
    xor_ln340_316_fu_237_p2 <= (p_Result_9_reg_355 xor p_Result_8_reg_342);
    xor_ln340_fu_157_p2 <= (underflow_reg_331 xor ap_const_lv1_1);
    xor_ln785_fu_111_p2 <= (p_Result_s_reg_298 xor ap_const_lv1_1);
    xor_ln786_9_fu_227_p2 <= (p_Result_9_reg_355 xor ap_const_lv1_1);
    xor_ln786_fu_122_p2 <= (p_Result_7_reg_309 xor ap_const_lv1_1);
end behav;
