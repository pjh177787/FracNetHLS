// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pgconv64_1x1_1bit (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bottom_V_address0,
        bottom_V_ce0,
        bottom_V_q0,
        top_0_V_address0,
        top_0_V_ce0,
        top_0_V_q0,
        top_0_V_address1,
        top_0_V_ce1,
        top_0_V_we1,
        top_0_V_d1,
        top_1_V_address0,
        top_1_V_ce0,
        top_1_V_q0,
        top_1_V_address1,
        top_1_V_ce1,
        top_1_V_we1,
        top_1_V_d1,
        top_2_V_address0,
        top_2_V_ce0,
        top_2_V_q0,
        top_2_V_address1,
        top_2_V_ce1,
        top_2_V_we1,
        top_2_V_d1,
        top_3_V_address0,
        top_3_V_ce0,
        top_3_V_q0,
        top_3_V_address1,
        top_3_V_ce1,
        top_3_V_we1,
        top_3_V_d1,
        top_4_V_address0,
        top_4_V_ce0,
        top_4_V_q0,
        top_4_V_address1,
        top_4_V_ce1,
        top_4_V_we1,
        top_4_V_d1,
        top_5_V_address0,
        top_5_V_ce0,
        top_5_V_q0,
        top_5_V_address1,
        top_5_V_ce1,
        top_5_V_we1,
        top_5_V_d1,
        top_6_V_address0,
        top_6_V_ce0,
        top_6_V_q0,
        top_6_V_address1,
        top_6_V_ce1,
        top_6_V_we1,
        top_6_V_d1,
        top_7_V_address0,
        top_7_V_ce0,
        top_7_V_q0,
        top_7_V_address1,
        top_7_V_ce1,
        top_7_V_we1,
        top_7_V_d1,
        top_8_V_address0,
        top_8_V_ce0,
        top_8_V_q0,
        top_8_V_address1,
        top_8_V_ce1,
        top_8_V_we1,
        top_8_V_d1,
        top_9_V_address0,
        top_9_V_ce0,
        top_9_V_q0,
        top_9_V_address1,
        top_9_V_ce1,
        top_9_V_we1,
        top_9_V_d1,
        top_10_V_address0,
        top_10_V_ce0,
        top_10_V_q0,
        top_10_V_address1,
        top_10_V_ce1,
        top_10_V_we1,
        top_10_V_d1,
        top_11_V_address0,
        top_11_V_ce0,
        top_11_V_q0,
        top_11_V_address1,
        top_11_V_ce1,
        top_11_V_we1,
        top_11_V_d1,
        top_12_V_address0,
        top_12_V_ce0,
        top_12_V_q0,
        top_12_V_address1,
        top_12_V_ce1,
        top_12_V_we1,
        top_12_V_d1,
        top_13_V_address0,
        top_13_V_ce0,
        top_13_V_q0,
        top_13_V_address1,
        top_13_V_ce1,
        top_13_V_we1,
        top_13_V_d1,
        top_14_V_address0,
        top_14_V_ce0,
        top_14_V_q0,
        top_14_V_address1,
        top_14_V_ce1,
        top_14_V_we1,
        top_14_V_d1,
        top_15_V_address0,
        top_15_V_ce0,
        top_15_V_q0,
        top_15_V_address1,
        top_15_V_ce1,
        top_15_V_we1,
        top_15_V_d1,
        top_16_V_address0,
        top_16_V_ce0,
        top_16_V_q0,
        top_16_V_address1,
        top_16_V_ce1,
        top_16_V_we1,
        top_16_V_d1,
        top_17_V_address0,
        top_17_V_ce0,
        top_17_V_q0,
        top_17_V_address1,
        top_17_V_ce1,
        top_17_V_we1,
        top_17_V_d1,
        top_18_V_address0,
        top_18_V_ce0,
        top_18_V_q0,
        top_18_V_address1,
        top_18_V_ce1,
        top_18_V_we1,
        top_18_V_d1,
        top_19_V_address0,
        top_19_V_ce0,
        top_19_V_q0,
        top_19_V_address1,
        top_19_V_ce1,
        top_19_V_we1,
        top_19_V_d1,
        top_20_V_address0,
        top_20_V_ce0,
        top_20_V_q0,
        top_20_V_address1,
        top_20_V_ce1,
        top_20_V_we1,
        top_20_V_d1,
        top_21_V_address0,
        top_21_V_ce0,
        top_21_V_q0,
        top_21_V_address1,
        top_21_V_ce1,
        top_21_V_we1,
        top_21_V_d1,
        top_22_V_address0,
        top_22_V_ce0,
        top_22_V_q0,
        top_22_V_address1,
        top_22_V_ce1,
        top_22_V_we1,
        top_22_V_d1,
        top_23_V_address0,
        top_23_V_ce0,
        top_23_V_q0,
        top_23_V_address1,
        top_23_V_ce1,
        top_23_V_we1,
        top_23_V_d1,
        top_24_V_address0,
        top_24_V_ce0,
        top_24_V_q0,
        top_24_V_address1,
        top_24_V_ce1,
        top_24_V_we1,
        top_24_V_d1,
        top_25_V_address0,
        top_25_V_ce0,
        top_25_V_q0,
        top_25_V_address1,
        top_25_V_ce1,
        top_25_V_we1,
        top_25_V_d1,
        top_26_V_address0,
        top_26_V_ce0,
        top_26_V_q0,
        top_26_V_address1,
        top_26_V_ce1,
        top_26_V_we1,
        top_26_V_d1,
        top_27_V_address0,
        top_27_V_ce0,
        top_27_V_q0,
        top_27_V_address1,
        top_27_V_ce1,
        top_27_V_we1,
        top_27_V_d1,
        top_28_V_address0,
        top_28_V_ce0,
        top_28_V_q0,
        top_28_V_address1,
        top_28_V_ce1,
        top_28_V_we1,
        top_28_V_d1,
        top_29_V_address0,
        top_29_V_ce0,
        top_29_V_q0,
        top_29_V_address1,
        top_29_V_ce1,
        top_29_V_we1,
        top_29_V_d1,
        top_30_V_address0,
        top_30_V_ce0,
        top_30_V_q0,
        top_30_V_address1,
        top_30_V_ce1,
        top_30_V_we1,
        top_30_V_d1,
        top_31_V_address0,
        top_31_V_ce0,
        top_31_V_q0,
        top_31_V_address1,
        top_31_V_ce1,
        top_31_V_we1,
        top_31_V_d1,
        tile_row,
        tile_col,
        ch_col,
        map_dim,
        weight_buf_1x1_V_0_0_address0,
        weight_buf_1x1_V_0_0_ce0,
        weight_buf_1x1_V_0_0_q0,
        weight_buf_1x1_V_0_0_address1,
        weight_buf_1x1_V_0_0_ce1,
        weight_buf_1x1_V_0_0_q1,
        weight_buf_1x1_V_0_1_address0,
        weight_buf_1x1_V_0_1_ce0,
        weight_buf_1x1_V_0_1_q0,
        weight_buf_1x1_V_0_1_address1,
        weight_buf_1x1_V_0_1_ce1,
        weight_buf_1x1_V_0_1_q1,
        weight_buf_1x1_V_0_2_address0,
        weight_buf_1x1_V_0_2_ce0,
        weight_buf_1x1_V_0_2_q0,
        weight_buf_1x1_V_0_2_address1,
        weight_buf_1x1_V_0_2_ce1,
        weight_buf_1x1_V_0_2_q1,
        weight_buf_1x1_V_0_3_address0,
        weight_buf_1x1_V_0_3_ce0,
        weight_buf_1x1_V_0_3_q0,
        weight_buf_1x1_V_0_3_address1,
        weight_buf_1x1_V_0_3_ce1,
        weight_buf_1x1_V_0_3_q1,
        weight_buf_1x1_V_0_4_address0,
        weight_buf_1x1_V_0_4_ce0,
        weight_buf_1x1_V_0_4_q0,
        weight_buf_1x1_V_0_4_address1,
        weight_buf_1x1_V_0_4_ce1,
        weight_buf_1x1_V_0_4_q1,
        weight_buf_1x1_V_0_5_address0,
        weight_buf_1x1_V_0_5_ce0,
        weight_buf_1x1_V_0_5_q0,
        weight_buf_1x1_V_0_5_address1,
        weight_buf_1x1_V_0_5_ce1,
        weight_buf_1x1_V_0_5_q1,
        weight_buf_1x1_V_0_6_address0,
        weight_buf_1x1_V_0_6_ce0,
        weight_buf_1x1_V_0_6_q0,
        weight_buf_1x1_V_0_6_address1,
        weight_buf_1x1_V_0_6_ce1,
        weight_buf_1x1_V_0_6_q1,
        weight_buf_1x1_V_0_7_address0,
        weight_buf_1x1_V_0_7_ce0,
        weight_buf_1x1_V_0_7_q0,
        weight_buf_1x1_V_0_7_address1,
        weight_buf_1x1_V_0_7_ce1,
        weight_buf_1x1_V_0_7_q1
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state11 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] bottom_V_address0;
output   bottom_V_ce0;
input  [63:0] bottom_V_q0;
output  [7:0] top_0_V_address0;
output   top_0_V_ce0;
input  [13:0] top_0_V_q0;
output  [7:0] top_0_V_address1;
output   top_0_V_ce1;
output   top_0_V_we1;
output  [13:0] top_0_V_d1;
output  [7:0] top_1_V_address0;
output   top_1_V_ce0;
input  [13:0] top_1_V_q0;
output  [7:0] top_1_V_address1;
output   top_1_V_ce1;
output   top_1_V_we1;
output  [13:0] top_1_V_d1;
output  [7:0] top_2_V_address0;
output   top_2_V_ce0;
input  [13:0] top_2_V_q0;
output  [7:0] top_2_V_address1;
output   top_2_V_ce1;
output   top_2_V_we1;
output  [13:0] top_2_V_d1;
output  [7:0] top_3_V_address0;
output   top_3_V_ce0;
input  [13:0] top_3_V_q0;
output  [7:0] top_3_V_address1;
output   top_3_V_ce1;
output   top_3_V_we1;
output  [13:0] top_3_V_d1;
output  [7:0] top_4_V_address0;
output   top_4_V_ce0;
input  [13:0] top_4_V_q0;
output  [7:0] top_4_V_address1;
output   top_4_V_ce1;
output   top_4_V_we1;
output  [13:0] top_4_V_d1;
output  [7:0] top_5_V_address0;
output   top_5_V_ce0;
input  [13:0] top_5_V_q0;
output  [7:0] top_5_V_address1;
output   top_5_V_ce1;
output   top_5_V_we1;
output  [13:0] top_5_V_d1;
output  [7:0] top_6_V_address0;
output   top_6_V_ce0;
input  [13:0] top_6_V_q0;
output  [7:0] top_6_V_address1;
output   top_6_V_ce1;
output   top_6_V_we1;
output  [13:0] top_6_V_d1;
output  [7:0] top_7_V_address0;
output   top_7_V_ce0;
input  [13:0] top_7_V_q0;
output  [7:0] top_7_V_address1;
output   top_7_V_ce1;
output   top_7_V_we1;
output  [13:0] top_7_V_d1;
output  [7:0] top_8_V_address0;
output   top_8_V_ce0;
input  [13:0] top_8_V_q0;
output  [7:0] top_8_V_address1;
output   top_8_V_ce1;
output   top_8_V_we1;
output  [13:0] top_8_V_d1;
output  [7:0] top_9_V_address0;
output   top_9_V_ce0;
input  [13:0] top_9_V_q0;
output  [7:0] top_9_V_address1;
output   top_9_V_ce1;
output   top_9_V_we1;
output  [13:0] top_9_V_d1;
output  [7:0] top_10_V_address0;
output   top_10_V_ce0;
input  [13:0] top_10_V_q0;
output  [7:0] top_10_V_address1;
output   top_10_V_ce1;
output   top_10_V_we1;
output  [13:0] top_10_V_d1;
output  [7:0] top_11_V_address0;
output   top_11_V_ce0;
input  [13:0] top_11_V_q0;
output  [7:0] top_11_V_address1;
output   top_11_V_ce1;
output   top_11_V_we1;
output  [13:0] top_11_V_d1;
output  [7:0] top_12_V_address0;
output   top_12_V_ce0;
input  [13:0] top_12_V_q0;
output  [7:0] top_12_V_address1;
output   top_12_V_ce1;
output   top_12_V_we1;
output  [13:0] top_12_V_d1;
output  [7:0] top_13_V_address0;
output   top_13_V_ce0;
input  [13:0] top_13_V_q0;
output  [7:0] top_13_V_address1;
output   top_13_V_ce1;
output   top_13_V_we1;
output  [13:0] top_13_V_d1;
output  [7:0] top_14_V_address0;
output   top_14_V_ce0;
input  [13:0] top_14_V_q0;
output  [7:0] top_14_V_address1;
output   top_14_V_ce1;
output   top_14_V_we1;
output  [13:0] top_14_V_d1;
output  [7:0] top_15_V_address0;
output   top_15_V_ce0;
input  [13:0] top_15_V_q0;
output  [7:0] top_15_V_address1;
output   top_15_V_ce1;
output   top_15_V_we1;
output  [13:0] top_15_V_d1;
output  [7:0] top_16_V_address0;
output   top_16_V_ce0;
input  [13:0] top_16_V_q0;
output  [7:0] top_16_V_address1;
output   top_16_V_ce1;
output   top_16_V_we1;
output  [13:0] top_16_V_d1;
output  [7:0] top_17_V_address0;
output   top_17_V_ce0;
input  [13:0] top_17_V_q0;
output  [7:0] top_17_V_address1;
output   top_17_V_ce1;
output   top_17_V_we1;
output  [13:0] top_17_V_d1;
output  [7:0] top_18_V_address0;
output   top_18_V_ce0;
input  [13:0] top_18_V_q0;
output  [7:0] top_18_V_address1;
output   top_18_V_ce1;
output   top_18_V_we1;
output  [13:0] top_18_V_d1;
output  [7:0] top_19_V_address0;
output   top_19_V_ce0;
input  [13:0] top_19_V_q0;
output  [7:0] top_19_V_address1;
output   top_19_V_ce1;
output   top_19_V_we1;
output  [13:0] top_19_V_d1;
output  [7:0] top_20_V_address0;
output   top_20_V_ce0;
input  [13:0] top_20_V_q0;
output  [7:0] top_20_V_address1;
output   top_20_V_ce1;
output   top_20_V_we1;
output  [13:0] top_20_V_d1;
output  [7:0] top_21_V_address0;
output   top_21_V_ce0;
input  [13:0] top_21_V_q0;
output  [7:0] top_21_V_address1;
output   top_21_V_ce1;
output   top_21_V_we1;
output  [13:0] top_21_V_d1;
output  [7:0] top_22_V_address0;
output   top_22_V_ce0;
input  [13:0] top_22_V_q0;
output  [7:0] top_22_V_address1;
output   top_22_V_ce1;
output   top_22_V_we1;
output  [13:0] top_22_V_d1;
output  [7:0] top_23_V_address0;
output   top_23_V_ce0;
input  [13:0] top_23_V_q0;
output  [7:0] top_23_V_address1;
output   top_23_V_ce1;
output   top_23_V_we1;
output  [13:0] top_23_V_d1;
output  [7:0] top_24_V_address0;
output   top_24_V_ce0;
input  [13:0] top_24_V_q0;
output  [7:0] top_24_V_address1;
output   top_24_V_ce1;
output   top_24_V_we1;
output  [13:0] top_24_V_d1;
output  [7:0] top_25_V_address0;
output   top_25_V_ce0;
input  [13:0] top_25_V_q0;
output  [7:0] top_25_V_address1;
output   top_25_V_ce1;
output   top_25_V_we1;
output  [13:0] top_25_V_d1;
output  [7:0] top_26_V_address0;
output   top_26_V_ce0;
input  [13:0] top_26_V_q0;
output  [7:0] top_26_V_address1;
output   top_26_V_ce1;
output   top_26_V_we1;
output  [13:0] top_26_V_d1;
output  [7:0] top_27_V_address0;
output   top_27_V_ce0;
input  [13:0] top_27_V_q0;
output  [7:0] top_27_V_address1;
output   top_27_V_ce1;
output   top_27_V_we1;
output  [13:0] top_27_V_d1;
output  [7:0] top_28_V_address0;
output   top_28_V_ce0;
input  [13:0] top_28_V_q0;
output  [7:0] top_28_V_address1;
output   top_28_V_ce1;
output   top_28_V_we1;
output  [13:0] top_28_V_d1;
output  [7:0] top_29_V_address0;
output   top_29_V_ce0;
input  [13:0] top_29_V_q0;
output  [7:0] top_29_V_address1;
output   top_29_V_ce1;
output   top_29_V_we1;
output  [13:0] top_29_V_d1;
output  [7:0] top_30_V_address0;
output   top_30_V_ce0;
input  [13:0] top_30_V_q0;
output  [7:0] top_30_V_address1;
output   top_30_V_ce1;
output   top_30_V_we1;
output  [13:0] top_30_V_d1;
output  [7:0] top_31_V_address0;
output   top_31_V_ce0;
input  [13:0] top_31_V_q0;
output  [7:0] top_31_V_address1;
output   top_31_V_ce1;
output   top_31_V_we1;
output  [13:0] top_31_V_d1;
input  [4:0] tile_row;
input  [4:0] tile_col;
input  [4:0] ch_col;
input  [7:0] map_dim;
output  [2:0] weight_buf_1x1_V_0_0_address0;
output   weight_buf_1x1_V_0_0_ce0;
input  [63:0] weight_buf_1x1_V_0_0_q0;
output  [2:0] weight_buf_1x1_V_0_0_address1;
output   weight_buf_1x1_V_0_0_ce1;
input  [63:0] weight_buf_1x1_V_0_0_q1;
output  [2:0] weight_buf_1x1_V_0_1_address0;
output   weight_buf_1x1_V_0_1_ce0;
input  [63:0] weight_buf_1x1_V_0_1_q0;
output  [2:0] weight_buf_1x1_V_0_1_address1;
output   weight_buf_1x1_V_0_1_ce1;
input  [63:0] weight_buf_1x1_V_0_1_q1;
output  [2:0] weight_buf_1x1_V_0_2_address0;
output   weight_buf_1x1_V_0_2_ce0;
input  [63:0] weight_buf_1x1_V_0_2_q0;
output  [2:0] weight_buf_1x1_V_0_2_address1;
output   weight_buf_1x1_V_0_2_ce1;
input  [63:0] weight_buf_1x1_V_0_2_q1;
output  [2:0] weight_buf_1x1_V_0_3_address0;
output   weight_buf_1x1_V_0_3_ce0;
input  [63:0] weight_buf_1x1_V_0_3_q0;
output  [2:0] weight_buf_1x1_V_0_3_address1;
output   weight_buf_1x1_V_0_3_ce1;
input  [63:0] weight_buf_1x1_V_0_3_q1;
output  [2:0] weight_buf_1x1_V_0_4_address0;
output   weight_buf_1x1_V_0_4_ce0;
input  [63:0] weight_buf_1x1_V_0_4_q0;
output  [2:0] weight_buf_1x1_V_0_4_address1;
output   weight_buf_1x1_V_0_4_ce1;
input  [63:0] weight_buf_1x1_V_0_4_q1;
output  [2:0] weight_buf_1x1_V_0_5_address0;
output   weight_buf_1x1_V_0_5_ce0;
input  [63:0] weight_buf_1x1_V_0_5_q0;
output  [2:0] weight_buf_1x1_V_0_5_address1;
output   weight_buf_1x1_V_0_5_ce1;
input  [63:0] weight_buf_1x1_V_0_5_q1;
output  [2:0] weight_buf_1x1_V_0_6_address0;
output   weight_buf_1x1_V_0_6_ce0;
input  [63:0] weight_buf_1x1_V_0_6_q0;
output  [2:0] weight_buf_1x1_V_0_6_address1;
output   weight_buf_1x1_V_0_6_ce1;
input  [63:0] weight_buf_1x1_V_0_6_q1;
output  [2:0] weight_buf_1x1_V_0_7_address0;
output   weight_buf_1x1_V_0_7_ce0;
input  [63:0] weight_buf_1x1_V_0_7_q0;
output  [2:0] weight_buf_1x1_V_0_7_address1;
output   weight_buf_1x1_V_0_7_ce1;
input  [63:0] weight_buf_1x1_V_0_7_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bottom_V_ce0;
reg top_0_V_ce0;
reg top_0_V_ce1;
reg top_0_V_we1;
reg top_1_V_ce0;
reg top_1_V_ce1;
reg top_1_V_we1;
reg top_2_V_ce0;
reg top_2_V_ce1;
reg top_2_V_we1;
reg top_3_V_ce0;
reg top_3_V_ce1;
reg top_3_V_we1;
reg top_4_V_ce0;
reg top_4_V_ce1;
reg top_4_V_we1;
reg top_5_V_ce0;
reg top_5_V_ce1;
reg top_5_V_we1;
reg top_6_V_ce0;
reg top_6_V_ce1;
reg top_6_V_we1;
reg top_7_V_ce0;
reg top_7_V_ce1;
reg top_7_V_we1;
reg top_8_V_ce0;
reg top_8_V_ce1;
reg top_8_V_we1;
reg top_9_V_ce0;
reg top_9_V_ce1;
reg top_9_V_we1;
reg top_10_V_ce0;
reg top_10_V_ce1;
reg top_10_V_we1;
reg top_11_V_ce0;
reg top_11_V_ce1;
reg top_11_V_we1;
reg top_12_V_ce0;
reg top_12_V_ce1;
reg top_12_V_we1;
reg top_13_V_ce0;
reg top_13_V_ce1;
reg top_13_V_we1;
reg top_14_V_ce0;
reg top_14_V_ce1;
reg top_14_V_we1;
reg top_15_V_ce0;
reg top_15_V_ce1;
reg top_15_V_we1;
reg top_16_V_ce0;
reg top_16_V_ce1;
reg top_16_V_we1;
reg top_17_V_ce0;
reg top_17_V_ce1;
reg top_17_V_we1;
reg top_18_V_ce0;
reg top_18_V_ce1;
reg top_18_V_we1;
reg top_19_V_ce0;
reg top_19_V_ce1;
reg top_19_V_we1;
reg top_20_V_ce0;
reg top_20_V_ce1;
reg top_20_V_we1;
reg top_21_V_ce0;
reg top_21_V_ce1;
reg top_21_V_we1;
reg top_22_V_ce0;
reg top_22_V_ce1;
reg top_22_V_we1;
reg top_23_V_ce0;
reg top_23_V_ce1;
reg top_23_V_we1;
reg top_24_V_ce0;
reg top_24_V_ce1;
reg top_24_V_we1;
reg top_25_V_ce0;
reg top_25_V_ce1;
reg top_25_V_we1;
reg top_26_V_ce0;
reg top_26_V_ce1;
reg top_26_V_we1;
reg top_27_V_ce0;
reg top_27_V_ce1;
reg top_27_V_we1;
reg top_28_V_ce0;
reg top_28_V_ce1;
reg top_28_V_we1;
reg top_29_V_ce0;
reg top_29_V_ce1;
reg top_29_V_we1;
reg top_30_V_ce0;
reg top_30_V_ce1;
reg top_30_V_we1;
reg top_31_V_ce0;
reg top_31_V_ce1;
reg top_31_V_we1;
reg weight_buf_1x1_V_0_0_ce0;
reg weight_buf_1x1_V_0_0_ce1;
reg weight_buf_1x1_V_0_1_ce0;
reg weight_buf_1x1_V_0_1_ce1;
reg weight_buf_1x1_V_0_2_ce0;
reg weight_buf_1x1_V_0_2_ce1;
reg weight_buf_1x1_V_0_3_ce0;
reg weight_buf_1x1_V_0_3_ce1;
reg weight_buf_1x1_V_0_4_ce0;
reg weight_buf_1x1_V_0_4_ce1;
reg weight_buf_1x1_V_0_5_ce0;
reg weight_buf_1x1_V_0_5_ce1;
reg weight_buf_1x1_V_0_6_ce0;
reg weight_buf_1x1_V_0_6_ce1;
reg weight_buf_1x1_V_0_7_ce0;
reg weight_buf_1x1_V_0_7_ce1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] indvar_flatten21_reg_881;
reg   [2:0] ch_factor_0_reg_892;
reg   [5:0] indvar_flatten_reg_904;
reg   [3:0] row_0_reg_915;
reg   [3:0] col_0_reg_926;
wire   [8:0] sub_ln211_fu_1049_p2;
reg   [8:0] sub_ln211_reg_3643;
wire  signed [15:0] sext_ln217_1_fu_1093_p1;
reg  signed [15:0] sext_ln217_1_reg_3648;
wire   [0:0] icmp_ln213_fu_1096_p2;
reg   [0:0] icmp_ln213_reg_3653;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln213_reg_3653_pp0_iter1_reg;
reg   [0:0] icmp_ln213_reg_3653_pp0_iter2_reg;
reg   [0:0] icmp_ln213_reg_3653_pp0_iter3_reg;
reg   [0:0] icmp_ln213_reg_3653_pp0_iter4_reg;
reg   [0:0] icmp_ln213_reg_3653_pp0_iter5_reg;
reg   [0:0] icmp_ln213_reg_3653_pp0_iter6_reg;
reg   [0:0] icmp_ln213_reg_3653_pp0_iter7_reg;
wire   [7:0] add_ln213_fu_1102_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln214_fu_1108_p2;
reg   [0:0] icmp_ln214_reg_3662;
wire   [3:0] select_ln214_fu_1152_p3;
reg   [3:0] select_ln214_reg_3667;
reg   [3:0] select_ln214_reg_3667_pp0_iter1_reg;
reg   [3:0] select_ln214_reg_3667_pp0_iter2_reg;
reg   [3:0] select_ln214_reg_3667_pp0_iter3_reg;
reg   [3:0] select_ln214_reg_3667_pp0_iter4_reg;
reg   [3:0] select_ln214_reg_3667_pp0_iter5_reg;
wire   [3:0] select_ln214_1_fu_1160_p3;
reg   [3:0] select_ln214_1_reg_3673;
wire   [3:0] col_fu_1168_p2;
wire   [5:0] select_ln214_2_fu_1180_p3;
wire   [2:0] select_ln213_1_fu_1194_p3;
reg   [2:0] select_ln213_1_reg_3690;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] trunc_ln213_fu_1201_p1;
reg   [0:0] trunc_ln213_reg_3695;
reg   [0:0] trunc_ln213_reg_3695_pp0_iter2_reg;
reg   [0:0] trunc_ln213_reg_3695_pp0_iter3_reg;
reg   [0:0] trunc_ln213_reg_3695_pp0_iter4_reg;
reg   [0:0] trunc_ln213_reg_3695_pp0_iter5_reg;
reg   [0:0] trunc_ln213_reg_3695_pp0_iter6_reg;
reg   [0:0] trunc_ln213_reg_3695_pp0_iter7_reg;
wire   [8:0] add_ln214_1_fu_1224_p2;
reg  signed [8:0] add_ln214_1_reg_3715;
wire   [4:0] add_ln203_fu_1232_p2;
reg   [4:0] add_ln203_reg_3720;
reg   [4:0] add_ln203_reg_3720_pp0_iter2_reg;
reg   [4:0] add_ln203_reg_3720_pp0_iter3_reg;
reg   [4:0] add_ln203_reg_3720_pp0_iter4_reg;
reg   [4:0] add_ln203_reg_3720_pp0_iter5_reg;
wire  signed [14:0] grp_fu_3635_p3;
reg  signed [14:0] add_ln217_2_reg_3726;
reg    ap_enable_reg_pp0_iter2;
reg   [63:0] bot1_WB_V_reg_3736;
reg   [63:0] weight_buf_1x1_V_0_0_1_reg_3756;
reg    ap_enable_reg_pp0_iter4;
reg   [63:0] weight_buf_1x1_V_0_1_1_reg_3761;
reg   [63:0] weight_buf_1x1_V_0_2_1_reg_3766;
reg   [63:0] weight_buf_1x1_V_0_3_1_reg_3771;
reg   [63:0] weight_buf_1x1_V_0_4_1_reg_3776;
reg   [63:0] weight_buf_1x1_V_0_5_1_reg_3781;
reg   [63:0] weight_buf_1x1_V_0_6_1_reg_3786;
reg   [63:0] weight_buf_1x1_V_0_7_1_reg_3791;
reg   [63:0] weight_buf_1x1_V_0_0_2_reg_3796;
reg   [63:0] weight_buf_1x1_V_0_1_2_reg_3801;
reg   [63:0] weight_buf_1x1_V_0_2_2_reg_3806;
reg   [63:0] weight_buf_1x1_V_0_3_2_reg_3811;
reg   [63:0] weight_buf_1x1_V_0_4_2_reg_3816;
reg   [63:0] weight_buf_1x1_V_0_5_2_reg_3821;
reg   [63:0] weight_buf_1x1_V_0_6_2_reg_3826;
reg   [63:0] weight_buf_1x1_V_0_7_2_reg_3831;
reg   [7:0] top_0_V_addr_reg_3836;
reg   [7:0] top_0_V_addr_reg_3836_pp0_iter7_reg;
reg   [7:0] top_1_V_addr_reg_3842;
reg   [7:0] top_1_V_addr_reg_3842_pp0_iter7_reg;
reg   [7:0] top_2_V_addr_reg_3848;
reg   [7:0] top_2_V_addr_reg_3848_pp0_iter7_reg;
reg   [7:0] top_3_V_addr_reg_3854;
reg   [7:0] top_3_V_addr_reg_3854_pp0_iter7_reg;
reg   [7:0] top_4_V_addr_reg_3860;
reg   [7:0] top_4_V_addr_reg_3860_pp0_iter7_reg;
reg   [7:0] top_5_V_addr_reg_3866;
reg   [7:0] top_5_V_addr_reg_3866_pp0_iter7_reg;
reg   [7:0] top_6_V_addr_reg_3872;
reg   [7:0] top_6_V_addr_reg_3872_pp0_iter7_reg;
reg   [7:0] top_7_V_addr_reg_3878;
reg   [7:0] top_7_V_addr_reg_3878_pp0_iter7_reg;
reg   [7:0] top_8_V_addr_reg_3884;
reg   [7:0] top_8_V_addr_reg_3884_pp0_iter7_reg;
reg   [7:0] top_9_V_addr_reg_3890;
reg   [7:0] top_9_V_addr_reg_3890_pp0_iter7_reg;
reg   [7:0] top_10_V_addr_reg_3896;
reg   [7:0] top_10_V_addr_reg_3896_pp0_iter7_reg;
reg   [7:0] top_11_V_addr_reg_3902;
reg   [7:0] top_11_V_addr_reg_3902_pp0_iter7_reg;
reg   [7:0] top_12_V_addr_reg_3908;
reg   [7:0] top_12_V_addr_reg_3908_pp0_iter7_reg;
reg   [7:0] top_13_V_addr_reg_3914;
reg   [7:0] top_13_V_addr_reg_3914_pp0_iter7_reg;
reg   [7:0] top_14_V_addr_reg_3920;
reg   [7:0] top_14_V_addr_reg_3920_pp0_iter7_reg;
reg   [7:0] top_15_V_addr_reg_3926;
reg   [7:0] top_15_V_addr_reg_3926_pp0_iter7_reg;
reg   [7:0] top_16_V_addr_reg_3932;
reg   [7:0] top_16_V_addr_reg_3932_pp0_iter7_reg;
reg   [7:0] top_17_V_addr_reg_3938;
reg   [7:0] top_17_V_addr_reg_3938_pp0_iter7_reg;
reg   [7:0] top_18_V_addr_reg_3944;
reg   [7:0] top_18_V_addr_reg_3944_pp0_iter7_reg;
reg   [7:0] top_19_V_addr_reg_3950;
reg   [7:0] top_19_V_addr_reg_3950_pp0_iter7_reg;
reg   [7:0] top_20_V_addr_reg_3956;
reg   [7:0] top_20_V_addr_reg_3956_pp0_iter7_reg;
reg   [7:0] top_21_V_addr_reg_3962;
reg   [7:0] top_21_V_addr_reg_3962_pp0_iter7_reg;
reg   [7:0] top_22_V_addr_reg_3968;
reg   [7:0] top_22_V_addr_reg_3968_pp0_iter7_reg;
reg   [7:0] top_23_V_addr_reg_3974;
reg   [7:0] top_23_V_addr_reg_3974_pp0_iter7_reg;
reg   [7:0] top_24_V_addr_reg_3980;
reg   [7:0] top_24_V_addr_reg_3980_pp0_iter7_reg;
reg   [7:0] top_25_V_addr_reg_3986;
reg   [7:0] top_25_V_addr_reg_3986_pp0_iter7_reg;
reg   [7:0] top_26_V_addr_reg_3992;
reg   [7:0] top_26_V_addr_reg_3992_pp0_iter7_reg;
reg   [7:0] top_27_V_addr_reg_3998;
reg   [7:0] top_27_V_addr_reg_3998_pp0_iter7_reg;
reg   [7:0] top_28_V_addr_reg_4004;
reg   [7:0] top_28_V_addr_reg_4004_pp0_iter7_reg;
reg   [7:0] top_29_V_addr_reg_4010;
reg   [7:0] top_29_V_addr_reg_4010_pp0_iter7_reg;
reg   [7:0] top_30_V_addr_reg_4016;
reg   [7:0] top_30_V_addr_reg_4016_pp0_iter7_reg;
reg   [7:0] top_31_V_addr_reg_4022;
reg   [7:0] top_31_V_addr_reg_4022_pp0_iter7_reg;
wire   [5:0] grp_compute_engine_64_fu_937_ap_return;
reg   [5:0] op_V_assign_reg_4028;
wire   [5:0] grp_compute_engine_64_fu_943_ap_return;
reg   [5:0] op_V_assign_0_1_reg_4033;
wire   [5:0] grp_compute_engine_64_fu_949_ap_return;
reg   [5:0] op_V_assign_0_2_reg_4038;
wire   [5:0] grp_compute_engine_64_fu_955_ap_return;
reg   [5:0] op_V_assign_0_3_reg_4043;
wire   [5:0] grp_compute_engine_64_fu_961_ap_return;
reg   [5:0] op_V_assign_0_4_reg_4048;
wire   [5:0] grp_compute_engine_64_fu_967_ap_return;
reg   [5:0] op_V_assign_0_5_reg_4053;
wire   [5:0] grp_compute_engine_64_fu_973_ap_return;
reg   [5:0] op_V_assign_0_6_reg_4058;
wire   [5:0] grp_compute_engine_64_fu_979_ap_return;
reg   [5:0] op_V_assign_0_7_reg_4063;
wire   [5:0] grp_compute_engine_64_fu_985_ap_return;
reg   [5:0] op_V_assign_0_8_reg_4068;
wire   [5:0] grp_compute_engine_64_fu_991_ap_return;
reg   [5:0] op_V_assign_0_9_reg_4073;
wire   [5:0] grp_compute_engine_64_fu_997_ap_return;
reg   [5:0] op_V_assign_0_s_reg_4078;
wire   [5:0] grp_compute_engine_64_fu_1003_ap_return;
reg   [5:0] op_V_assign_0_10_reg_4083;
wire   [5:0] grp_compute_engine_64_fu_1009_ap_return;
reg   [5:0] op_V_assign_0_11_reg_4088;
wire   [5:0] grp_compute_engine_64_fu_1015_ap_return;
reg   [5:0] op_V_assign_0_12_reg_4093;
wire   [5:0] grp_compute_engine_64_fu_1021_ap_return;
reg   [5:0] op_V_assign_0_13_reg_4098;
wire   [5:0] grp_compute_engine_64_fu_1027_ap_return;
reg   [5:0] op_V_assign_0_14_reg_4103;
reg   [0:0] tmp_164_reg_4108;
wire   [13:0] top_buf_0_V_1_fu_1463_p2;
reg   [13:0] top_buf_0_V_1_reg_4114;
reg   [0:0] tmp_165_reg_4120;
reg   [1:0] tmp_4_reg_4126;
reg   [0:0] tmp_166_reg_4132;
wire   [13:0] top_buf_1_V_1_fu_1516_p2;
reg   [13:0] top_buf_1_V_1_reg_4138;
reg   [0:0] tmp_167_reg_4144;
reg   [1:0] tmp_5_reg_4150;
reg   [0:0] tmp_168_reg_4156;
wire   [13:0] top_buf_2_V_1_fu_1569_p2;
reg   [13:0] top_buf_2_V_1_reg_4162;
reg   [0:0] tmp_169_reg_4168;
reg   [1:0] tmp_6_reg_4174;
reg   [0:0] tmp_170_reg_4180;
wire   [13:0] top_buf_3_V_1_fu_1622_p2;
reg   [13:0] top_buf_3_V_1_reg_4186;
reg   [0:0] tmp_171_reg_4192;
reg   [1:0] tmp_7_reg_4198;
reg   [0:0] tmp_172_reg_4204;
wire   [13:0] top_buf_4_V_1_fu_1675_p2;
reg   [13:0] top_buf_4_V_1_reg_4210;
reg   [0:0] tmp_173_reg_4216;
reg   [1:0] tmp_8_reg_4222;
reg   [0:0] tmp_174_reg_4228;
wire   [13:0] top_buf_5_V_1_fu_1728_p2;
reg   [13:0] top_buf_5_V_1_reg_4234;
reg   [0:0] tmp_175_reg_4240;
reg   [1:0] tmp_9_reg_4246;
reg   [0:0] tmp_176_reg_4252;
wire   [13:0] top_buf_6_V_1_fu_1781_p2;
reg   [13:0] top_buf_6_V_1_reg_4258;
reg   [0:0] tmp_177_reg_4264;
reg   [1:0] tmp_s_reg_4270;
reg   [0:0] tmp_178_reg_4276;
wire   [13:0] top_buf_7_V_1_fu_1834_p2;
reg   [13:0] top_buf_7_V_1_reg_4282;
reg   [0:0] tmp_179_reg_4288;
reg   [1:0] tmp_1_reg_4294;
reg   [0:0] tmp_180_reg_4300;
wire   [13:0] top_buf_8_V_1_fu_1887_p2;
reg   [13:0] top_buf_8_V_1_reg_4306;
reg   [0:0] tmp_181_reg_4312;
reg   [1:0] tmp_2_reg_4318;
reg   [0:0] tmp_182_reg_4324;
wire   [13:0] top_buf_9_V_1_fu_1940_p2;
reg   [13:0] top_buf_9_V_1_reg_4330;
reg   [0:0] tmp_183_reg_4336;
reg   [1:0] tmp_10_reg_4342;
reg   [0:0] tmp_184_reg_4348;
wire   [13:0] top_buf_10_V_1_fu_1993_p2;
reg   [13:0] top_buf_10_V_1_reg_4354;
reg   [0:0] tmp_185_reg_4360;
reg   [1:0] tmp_11_reg_4366;
reg   [0:0] tmp_186_reg_4372;
wire   [13:0] top_buf_11_V_1_fu_2046_p2;
reg   [13:0] top_buf_11_V_1_reg_4378;
reg   [0:0] tmp_187_reg_4384;
reg   [1:0] tmp_12_reg_4390;
reg   [0:0] tmp_188_reg_4396;
wire   [13:0] top_buf_12_V_1_fu_2099_p2;
reg   [13:0] top_buf_12_V_1_reg_4402;
reg   [0:0] tmp_189_reg_4408;
reg   [1:0] tmp_13_reg_4414;
reg   [0:0] tmp_190_reg_4420;
wire   [13:0] top_buf_13_V_1_fu_2152_p2;
reg   [13:0] top_buf_13_V_1_reg_4426;
reg   [0:0] tmp_191_reg_4432;
reg   [1:0] tmp_14_reg_4438;
reg   [0:0] tmp_192_reg_4444;
wire   [13:0] top_buf_14_V_1_fu_2205_p2;
reg   [13:0] top_buf_14_V_1_reg_4450;
reg   [0:0] tmp_193_reg_4456;
reg   [1:0] tmp_15_reg_4462;
reg   [0:0] tmp_194_reg_4468;
wire   [13:0] top_buf_15_V_1_fu_2258_p2;
reg   [13:0] top_buf_15_V_1_reg_4474;
reg   [0:0] tmp_195_reg_4480;
reg   [1:0] tmp_16_reg_4486;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg   [2:0] ap_phi_mux_ch_factor_0_phi_fu_896_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_row_0_phi_fu_919_p4;
wire  signed [63:0] sext_ln217_fu_1252_p1;
wire   [63:0] zext_ln203_3_fu_1286_p1;
wire   [13:0] select_ln340_65_fu_2356_p3;
wire   [13:0] select_ln340_66_fu_2440_p3;
wire   [13:0] select_ln340_67_fu_2524_p3;
wire   [13:0] select_ln340_68_fu_2608_p3;
wire   [13:0] select_ln340_69_fu_2692_p3;
wire   [13:0] select_ln340_70_fu_2776_p3;
wire   [13:0] select_ln340_71_fu_2860_p3;
wire   [13:0] select_ln340_72_fu_2944_p3;
wire   [13:0] select_ln340_73_fu_3028_p3;
wire   [13:0] select_ln340_74_fu_3112_p3;
wire   [13:0] select_ln340_75_fu_3196_p3;
wire   [13:0] select_ln340_76_fu_3280_p3;
wire   [13:0] select_ln340_77_fu_3364_p3;
wire   [13:0] select_ln340_78_fu_3448_p3;
wire   [13:0] select_ln340_79_fu_3532_p3;
wire   [13:0] select_ln340_80_fu_3616_p3;
wire   [7:0] shl_ln_fu_1033_p3;
wire   [8:0] zext_ln211_fu_1041_p1;
wire   [8:0] zext_ln211_1_fu_1045_p1;
wire   [3:0] trunc_ln211_fu_1063_p1;
wire   [6:0] shl_ln211_1_fu_1067_p3;
wire   [7:0] zext_ln211_4_fu_1075_p1;
wire   [7:0] zext_ln211_5_fu_1079_p1;
wire  signed [7:0] sub_ln211_1_fu_1083_p2;
wire  signed [11:0] grp_fu_3626_p3;
wire   [0:0] icmp_ln215_fu_1128_p2;
wire   [0:0] xor_ln213_fu_1122_p2;
wire   [3:0] select_ln213_fu_1114_p3;
wire   [0:0] and_ln213_fu_1134_p2;
wire   [0:0] or_ln214_fu_1146_p2;
wire   [3:0] row_fu_1140_p2;
wire   [5:0] add_ln214_2_fu_1174_p2;
wire   [2:0] ch_factor_fu_1188_p2;
wire   [0:0] tmp_fu_1205_p3;
wire   [8:0] zext_ln214_fu_1221_p1;
wire   [4:0] zext_ln214_1_fu_1229_p1;
wire   [4:0] select_ln203_fu_1213_p3;
wire  signed [15:0] sext_ln217_2_fu_1244_p1;
wire   [15:0] add_ln217_1_fu_1247_p2;
wire   [7:0] tmp_163_fu_1260_p3;
wire   [8:0] zext_ln203_1_fu_1267_p1;
wire   [8:0] zext_ln203_fu_1257_p1;
wire   [8:0] zext_ln203_2_fu_1277_p1;
wire   [8:0] add_ln203_1_fu_1271_p2;
wire   [8:0] add_ln203_2_fu_1280_p2;
wire  signed [13:0] top_buf_0_V_fu_1322_p3;
wire   [13:0] shl_ln5_fu_1438_p3;
wire  signed [15:0] sext_ln727_fu_1434_p1;
wire   [15:0] zext_ln728_fu_1445_p1;
wire   [15:0] add_ln1192_fu_1449_p2;
wire  signed [13:0] top_buf_1_V_fu_1329_p3;
wire   [13:0] shl_ln728_s_fu_1491_p3;
wire  signed [15:0] sext_ln727_1_fu_1487_p1;
wire   [15:0] zext_ln728_1_fu_1498_p1;
wire   [15:0] add_ln1192_34_fu_1502_p2;
wire  signed [13:0] top_buf_2_V_fu_1336_p3;
wire   [13:0] shl_ln728_31_fu_1544_p3;
wire  signed [15:0] sext_ln727_2_fu_1540_p1;
wire   [15:0] zext_ln728_2_fu_1551_p1;
wire   [15:0] add_ln1192_35_fu_1555_p2;
wire  signed [13:0] top_buf_3_V_fu_1343_p3;
wire   [13:0] shl_ln728_32_fu_1597_p3;
wire  signed [15:0] sext_ln727_3_fu_1593_p1;
wire   [15:0] zext_ln728_3_fu_1604_p1;
wire   [15:0] add_ln1192_36_fu_1608_p2;
wire  signed [13:0] top_buf_4_V_fu_1350_p3;
wire   [13:0] shl_ln728_33_fu_1650_p3;
wire  signed [15:0] sext_ln727_4_fu_1646_p1;
wire   [15:0] zext_ln728_4_fu_1657_p1;
wire   [15:0] add_ln1192_37_fu_1661_p2;
wire  signed [13:0] top_buf_5_V_fu_1357_p3;
wire   [13:0] shl_ln728_34_fu_1703_p3;
wire  signed [15:0] sext_ln727_5_fu_1699_p1;
wire   [15:0] zext_ln728_5_fu_1710_p1;
wire   [15:0] add_ln1192_38_fu_1714_p2;
wire  signed [13:0] top_buf_6_V_fu_1364_p3;
wire   [13:0] shl_ln728_35_fu_1756_p3;
wire  signed [15:0] sext_ln727_6_fu_1752_p1;
wire   [15:0] zext_ln728_6_fu_1763_p1;
wire   [15:0] add_ln1192_39_fu_1767_p2;
wire  signed [13:0] top_buf_7_V_fu_1371_p3;
wire   [13:0] shl_ln728_36_fu_1809_p3;
wire  signed [15:0] sext_ln727_7_fu_1805_p1;
wire   [15:0] zext_ln728_7_fu_1816_p1;
wire   [15:0] add_ln1192_40_fu_1820_p2;
wire  signed [13:0] top_buf_8_V_fu_1378_p3;
wire   [13:0] shl_ln728_37_fu_1862_p3;
wire  signed [15:0] sext_ln727_8_fu_1858_p1;
wire   [15:0] zext_ln728_8_fu_1869_p1;
wire   [15:0] add_ln1192_41_fu_1873_p2;
wire  signed [13:0] top_buf_9_V_fu_1385_p3;
wire   [13:0] shl_ln728_38_fu_1915_p3;
wire  signed [15:0] sext_ln727_9_fu_1911_p1;
wire   [15:0] zext_ln728_9_fu_1922_p1;
wire   [15:0] add_ln1192_42_fu_1926_p2;
wire  signed [13:0] top_buf_10_V_fu_1392_p3;
wire   [13:0] shl_ln728_39_fu_1968_p3;
wire  signed [15:0] sext_ln727_10_fu_1964_p1;
wire   [15:0] zext_ln728_10_fu_1975_p1;
wire   [15:0] add_ln1192_43_fu_1979_p2;
wire  signed [13:0] top_buf_11_V_fu_1399_p3;
wire   [13:0] shl_ln728_40_fu_2021_p3;
wire  signed [15:0] sext_ln727_11_fu_2017_p1;
wire   [15:0] zext_ln728_11_fu_2028_p1;
wire   [15:0] add_ln1192_44_fu_2032_p2;
wire  signed [13:0] top_buf_12_V_fu_1406_p3;
wire   [13:0] shl_ln728_41_fu_2074_p3;
wire  signed [15:0] sext_ln727_12_fu_2070_p1;
wire   [15:0] zext_ln728_12_fu_2081_p1;
wire   [15:0] add_ln1192_45_fu_2085_p2;
wire  signed [13:0] top_buf_13_V_fu_1413_p3;
wire   [13:0] shl_ln728_42_fu_2127_p3;
wire  signed [15:0] sext_ln727_13_fu_2123_p1;
wire   [15:0] zext_ln728_13_fu_2134_p1;
wire   [15:0] add_ln1192_46_fu_2138_p2;
wire  signed [13:0] top_buf_14_V_fu_1420_p3;
wire   [13:0] shl_ln728_43_fu_2180_p3;
wire  signed [15:0] sext_ln727_14_fu_2176_p1;
wire   [15:0] zext_ln728_14_fu_2187_p1;
wire   [15:0] add_ln1192_47_fu_2191_p2;
wire  signed [13:0] top_buf_15_V_fu_1427_p3;
wire   [13:0] shl_ln728_44_fu_2233_p3;
wire  signed [15:0] sext_ln727_15_fu_2229_p1;
wire   [15:0] zext_ln728_15_fu_2240_p1;
wire   [15:0] add_ln1192_48_fu_2244_p2;
wire   [0:0] icmp_ln785_fu_2282_p2;
wire   [0:0] or_ln785_fu_2287_p2;
wire   [0:0] xor_ln785_fu_2292_p2;
wire   [0:0] icmp_ln786_fu_2308_p2;
wire   [0:0] xor_ln786_fu_2303_p2;
wire   [0:0] or_ln786_fu_2313_p2;
wire   [0:0] and_ln786_fu_2319_p2;
wire   [0:0] and_ln785_fu_2297_p2;
wire   [0:0] xor_ln340_fu_2330_p2;
wire   [0:0] or_ln340_fu_2324_p2;
wire   [0:0] or_ln340_32_fu_2336_p2;
wire   [13:0] select_ln340_fu_2342_p3;
wire   [13:0] top_buf_0_V_2_fu_2349_p3;
wire   [0:0] icmp_ln785_1_fu_2366_p2;
wire   [0:0] or_ln785_1_fu_2371_p2;
wire   [0:0] xor_ln785_1_fu_2376_p2;
wire   [0:0] icmp_ln786_1_fu_2392_p2;
wire   [0:0] xor_ln786_1_fu_2387_p2;
wire   [0:0] or_ln786_1_fu_2397_p2;
wire   [0:0] and_ln786_33_fu_2403_p2;
wire   [0:0] and_ln785_1_fu_2381_p2;
wire   [0:0] xor_ln340_32_fu_2414_p2;
wire   [0:0] or_ln340_1_fu_2408_p2;
wire   [0:0] or_ln340_33_fu_2420_p2;
wire   [13:0] select_ln340_32_fu_2426_p3;
wire   [13:0] top_buf_1_V_2_fu_2433_p3;
wire   [0:0] icmp_ln785_2_fu_2450_p2;
wire   [0:0] or_ln785_2_fu_2455_p2;
wire   [0:0] xor_ln785_2_fu_2460_p2;
wire   [0:0] icmp_ln786_2_fu_2476_p2;
wire   [0:0] xor_ln786_2_fu_2471_p2;
wire   [0:0] or_ln786_2_fu_2481_p2;
wire   [0:0] and_ln786_34_fu_2487_p2;
wire   [0:0] and_ln785_2_fu_2465_p2;
wire   [0:0] xor_ln340_33_fu_2498_p2;
wire   [0:0] or_ln340_2_fu_2492_p2;
wire   [0:0] or_ln340_34_fu_2504_p2;
wire   [13:0] select_ln340_33_fu_2510_p3;
wire   [13:0] top_buf_2_V_2_fu_2517_p3;
wire   [0:0] icmp_ln785_3_fu_2534_p2;
wire   [0:0] or_ln785_3_fu_2539_p2;
wire   [0:0] xor_ln785_3_fu_2544_p2;
wire   [0:0] icmp_ln786_3_fu_2560_p2;
wire   [0:0] xor_ln786_3_fu_2555_p2;
wire   [0:0] or_ln786_3_fu_2565_p2;
wire   [0:0] and_ln786_35_fu_2571_p2;
wire   [0:0] and_ln785_3_fu_2549_p2;
wire   [0:0] xor_ln340_34_fu_2582_p2;
wire   [0:0] or_ln340_3_fu_2576_p2;
wire   [0:0] or_ln340_35_fu_2588_p2;
wire   [13:0] select_ln340_34_fu_2594_p3;
wire   [13:0] top_buf_3_V_2_fu_2601_p3;
wire   [0:0] icmp_ln785_4_fu_2618_p2;
wire   [0:0] or_ln785_4_fu_2623_p2;
wire   [0:0] xor_ln785_4_fu_2628_p2;
wire   [0:0] icmp_ln786_4_fu_2644_p2;
wire   [0:0] xor_ln786_4_fu_2639_p2;
wire   [0:0] or_ln786_4_fu_2649_p2;
wire   [0:0] and_ln786_36_fu_2655_p2;
wire   [0:0] and_ln785_4_fu_2633_p2;
wire   [0:0] xor_ln340_35_fu_2666_p2;
wire   [0:0] or_ln340_4_fu_2660_p2;
wire   [0:0] or_ln340_36_fu_2672_p2;
wire   [13:0] select_ln340_35_fu_2678_p3;
wire   [13:0] top_buf_4_V_2_fu_2685_p3;
wire   [0:0] icmp_ln785_5_fu_2702_p2;
wire   [0:0] or_ln785_5_fu_2707_p2;
wire   [0:0] xor_ln785_5_fu_2712_p2;
wire   [0:0] icmp_ln786_5_fu_2728_p2;
wire   [0:0] xor_ln786_5_fu_2723_p2;
wire   [0:0] or_ln786_5_fu_2733_p2;
wire   [0:0] and_ln786_37_fu_2739_p2;
wire   [0:0] and_ln785_5_fu_2717_p2;
wire   [0:0] xor_ln340_36_fu_2750_p2;
wire   [0:0] or_ln340_5_fu_2744_p2;
wire   [0:0] or_ln340_37_fu_2756_p2;
wire   [13:0] select_ln340_36_fu_2762_p3;
wire   [13:0] top_buf_5_V_2_fu_2769_p3;
wire   [0:0] icmp_ln785_6_fu_2786_p2;
wire   [0:0] or_ln785_6_fu_2791_p2;
wire   [0:0] xor_ln785_6_fu_2796_p2;
wire   [0:0] icmp_ln786_6_fu_2812_p2;
wire   [0:0] xor_ln786_6_fu_2807_p2;
wire   [0:0] or_ln786_6_fu_2817_p2;
wire   [0:0] and_ln786_38_fu_2823_p2;
wire   [0:0] and_ln785_6_fu_2801_p2;
wire   [0:0] xor_ln340_37_fu_2834_p2;
wire   [0:0] or_ln340_6_fu_2828_p2;
wire   [0:0] or_ln340_38_fu_2840_p2;
wire   [13:0] select_ln340_37_fu_2846_p3;
wire   [13:0] top_buf_6_V_2_fu_2853_p3;
wire   [0:0] icmp_ln785_7_fu_2870_p2;
wire   [0:0] or_ln785_7_fu_2875_p2;
wire   [0:0] xor_ln785_7_fu_2880_p2;
wire   [0:0] icmp_ln786_7_fu_2896_p2;
wire   [0:0] xor_ln786_7_fu_2891_p2;
wire   [0:0] or_ln786_7_fu_2901_p2;
wire   [0:0] and_ln786_39_fu_2907_p2;
wire   [0:0] and_ln785_7_fu_2885_p2;
wire   [0:0] xor_ln340_38_fu_2918_p2;
wire   [0:0] or_ln340_7_fu_2912_p2;
wire   [0:0] or_ln340_39_fu_2924_p2;
wire   [13:0] select_ln340_38_fu_2930_p3;
wire   [13:0] top_buf_7_V_2_fu_2937_p3;
wire   [0:0] icmp_ln785_8_fu_2954_p2;
wire   [0:0] or_ln785_8_fu_2959_p2;
wire   [0:0] xor_ln785_8_fu_2964_p2;
wire   [0:0] icmp_ln786_8_fu_2980_p2;
wire   [0:0] xor_ln786_8_fu_2975_p2;
wire   [0:0] or_ln786_8_fu_2985_p2;
wire   [0:0] and_ln786_40_fu_2991_p2;
wire   [0:0] and_ln785_8_fu_2969_p2;
wire   [0:0] xor_ln340_39_fu_3002_p2;
wire   [0:0] or_ln340_8_fu_2996_p2;
wire   [0:0] or_ln340_40_fu_3008_p2;
wire   [13:0] select_ln340_39_fu_3014_p3;
wire   [13:0] top_buf_8_V_2_fu_3021_p3;
wire   [0:0] icmp_ln785_9_fu_3038_p2;
wire   [0:0] or_ln785_9_fu_3043_p2;
wire   [0:0] xor_ln785_9_fu_3048_p2;
wire   [0:0] icmp_ln786_9_fu_3064_p2;
wire   [0:0] xor_ln786_9_fu_3059_p2;
wire   [0:0] or_ln786_9_fu_3069_p2;
wire   [0:0] and_ln786_41_fu_3075_p2;
wire   [0:0] and_ln785_9_fu_3053_p2;
wire   [0:0] xor_ln340_40_fu_3086_p2;
wire   [0:0] or_ln340_9_fu_3080_p2;
wire   [0:0] or_ln340_41_fu_3092_p2;
wire   [13:0] select_ln340_40_fu_3098_p3;
wire   [13:0] top_buf_9_V_2_fu_3105_p3;
wire   [0:0] icmp_ln785_10_fu_3122_p2;
wire   [0:0] or_ln785_10_fu_3127_p2;
wire   [0:0] xor_ln785_10_fu_3132_p2;
wire   [0:0] icmp_ln786_10_fu_3148_p2;
wire   [0:0] xor_ln786_10_fu_3143_p2;
wire   [0:0] or_ln786_10_fu_3153_p2;
wire   [0:0] and_ln786_42_fu_3159_p2;
wire   [0:0] and_ln785_10_fu_3137_p2;
wire   [0:0] xor_ln340_41_fu_3170_p2;
wire   [0:0] or_ln340_10_fu_3164_p2;
wire   [0:0] or_ln340_42_fu_3176_p2;
wire   [13:0] select_ln340_41_fu_3182_p3;
wire   [13:0] top_buf_10_V_2_fu_3189_p3;
wire   [0:0] icmp_ln785_11_fu_3206_p2;
wire   [0:0] or_ln785_11_fu_3211_p2;
wire   [0:0] xor_ln785_11_fu_3216_p2;
wire   [0:0] icmp_ln786_11_fu_3232_p2;
wire   [0:0] xor_ln786_11_fu_3227_p2;
wire   [0:0] or_ln786_11_fu_3237_p2;
wire   [0:0] and_ln786_43_fu_3243_p2;
wire   [0:0] and_ln785_11_fu_3221_p2;
wire   [0:0] xor_ln340_42_fu_3254_p2;
wire   [0:0] or_ln340_11_fu_3248_p2;
wire   [0:0] or_ln340_43_fu_3260_p2;
wire   [13:0] select_ln340_42_fu_3266_p3;
wire   [13:0] top_buf_11_V_2_fu_3273_p3;
wire   [0:0] icmp_ln785_12_fu_3290_p2;
wire   [0:0] or_ln785_12_fu_3295_p2;
wire   [0:0] xor_ln785_12_fu_3300_p2;
wire   [0:0] icmp_ln786_12_fu_3316_p2;
wire   [0:0] xor_ln786_12_fu_3311_p2;
wire   [0:0] or_ln786_12_fu_3321_p2;
wire   [0:0] and_ln786_44_fu_3327_p2;
wire   [0:0] and_ln785_12_fu_3305_p2;
wire   [0:0] xor_ln340_43_fu_3338_p2;
wire   [0:0] or_ln340_12_fu_3332_p2;
wire   [0:0] or_ln340_44_fu_3344_p2;
wire   [13:0] select_ln340_43_fu_3350_p3;
wire   [13:0] top_buf_12_V_2_fu_3357_p3;
wire   [0:0] icmp_ln785_13_fu_3374_p2;
wire   [0:0] or_ln785_13_fu_3379_p2;
wire   [0:0] xor_ln785_13_fu_3384_p2;
wire   [0:0] icmp_ln786_13_fu_3400_p2;
wire   [0:0] xor_ln786_13_fu_3395_p2;
wire   [0:0] or_ln786_13_fu_3405_p2;
wire   [0:0] and_ln786_45_fu_3411_p2;
wire   [0:0] and_ln785_13_fu_3389_p2;
wire   [0:0] xor_ln340_44_fu_3422_p2;
wire   [0:0] or_ln340_13_fu_3416_p2;
wire   [0:0] or_ln340_45_fu_3428_p2;
wire   [13:0] select_ln340_44_fu_3434_p3;
wire   [13:0] top_buf_13_V_2_fu_3441_p3;
wire   [0:0] icmp_ln785_14_fu_3458_p2;
wire   [0:0] or_ln785_14_fu_3463_p2;
wire   [0:0] xor_ln785_14_fu_3468_p2;
wire   [0:0] icmp_ln786_14_fu_3484_p2;
wire   [0:0] xor_ln786_14_fu_3479_p2;
wire   [0:0] or_ln786_14_fu_3489_p2;
wire   [0:0] and_ln786_46_fu_3495_p2;
wire   [0:0] and_ln785_14_fu_3473_p2;
wire   [0:0] xor_ln340_45_fu_3506_p2;
wire   [0:0] or_ln340_14_fu_3500_p2;
wire   [0:0] or_ln340_46_fu_3512_p2;
wire   [13:0] select_ln340_45_fu_3518_p3;
wire   [13:0] top_buf_14_V_2_fu_3525_p3;
wire   [0:0] icmp_ln785_15_fu_3542_p2;
wire   [0:0] or_ln785_15_fu_3547_p2;
wire   [0:0] xor_ln785_15_fu_3552_p2;
wire   [0:0] icmp_ln786_15_fu_3568_p2;
wire   [0:0] xor_ln786_15_fu_3563_p2;
wire   [0:0] or_ln786_15_fu_3573_p2;
wire   [0:0] and_ln786_47_fu_3579_p2;
wire   [0:0] and_ln785_15_fu_3557_p2;
wire   [0:0] xor_ln340_46_fu_3590_p2;
wire   [0:0] or_ln340_15_fu_3584_p2;
wire   [0:0] or_ln340_47_fu_3596_p2;
wire   [13:0] select_ln340_46_fu_3602_p3;
wire   [13:0] top_buf_15_V_2_fu_3609_p3;
wire   [7:0] grp_fu_3626_p0;
wire   [4:0] grp_fu_3626_p1;
wire   [7:0] grp_fu_3635_p0;
wire   [3:0] grp_fu_3635_p2;
wire    ap_CS_fsm_state11;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] grp_fu_3626_p00;
wire   [11:0] grp_fu_3626_p10;
wire   [14:0] grp_fu_3635_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
end

compute_engine_64 grp_compute_engine_64_fu_937(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_0_1_reg_3756),
    .ap_return(grp_compute_engine_64_fu_937_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_943(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_1_1_reg_3761),
    .ap_return(grp_compute_engine_64_fu_943_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_949(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_2_1_reg_3766),
    .ap_return(grp_compute_engine_64_fu_949_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_955(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_3_1_reg_3771),
    .ap_return(grp_compute_engine_64_fu_955_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_961(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_4_1_reg_3776),
    .ap_return(grp_compute_engine_64_fu_961_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_967(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_5_1_reg_3781),
    .ap_return(grp_compute_engine_64_fu_967_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_973(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_6_1_reg_3786),
    .ap_return(grp_compute_engine_64_fu_973_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_979(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_7_1_reg_3791),
    .ap_return(grp_compute_engine_64_fu_979_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_985(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_0_2_reg_3796),
    .ap_return(grp_compute_engine_64_fu_985_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_991(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_1_2_reg_3801),
    .ap_return(grp_compute_engine_64_fu_991_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_997(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_2_2_reg_3806),
    .ap_return(grp_compute_engine_64_fu_997_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_1003(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_3_2_reg_3811),
    .ap_return(grp_compute_engine_64_fu_1003_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_1009(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_4_2_reg_3816),
    .ap_return(grp_compute_engine_64_fu_1009_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_1015(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_5_2_reg_3821),
    .ap_return(grp_compute_engine_64_fu_1015_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_1021(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_6_2_reg_3826),
    .ap_return(grp_compute_engine_64_fu_1021_ap_return)
);

compute_engine_64 grp_compute_engine_64_fu_1027(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .b_V(bot1_WB_V_reg_3736),
    .w_V(weight_buf_1x1_V_0_7_2_reg_3831),
    .ap_return(grp_compute_engine_64_fu_1027_ap_return)
);

FracNet_mac_muladpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
FracNet_mac_muladpcA_U733(
    .din0(grp_fu_3626_p0),
    .din1(grp_fu_3626_p1),
    .din2(sub_ln211_1_fu_1083_p2),
    .dout(grp_fu_3626_p3)
);

FracNet_mac_muladqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 15 ))
FracNet_mac_muladqcK_U734(
    .din0(grp_fu_3635_p0),
    .din1(add_ln214_1_reg_3715),
    .din2(grp_fu_3635_p2),
    .dout(grp_fu_3635_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln213_reg_3653_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ch_factor_0_reg_892 <= select_ln213_1_reg_3690;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_factor_0_reg_892 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln213_fu_1096_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_0_reg_926 <= col_fu_1168_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_0_reg_926 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln213_fu_1096_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten21_reg_881 <= add_ln213_fu_1102_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten21_reg_881 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln213_fu_1096_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_904 <= select_ln214_2_fu_1180_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_904 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln213_reg_3653 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_0_reg_915 <= select_ln214_1_reg_3673;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_0_reg_915 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln213_reg_3653 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln203_reg_3720 <= add_ln203_fu_1232_p2;
        add_ln214_1_reg_3715 <= add_ln214_1_fu_1224_p2;
        trunc_ln213_reg_3695 <= trunc_ln213_fu_1201_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln203_reg_3720_pp0_iter2_reg <= add_ln203_reg_3720;
        add_ln203_reg_3720_pp0_iter3_reg <= add_ln203_reg_3720_pp0_iter2_reg;
        add_ln203_reg_3720_pp0_iter4_reg <= add_ln203_reg_3720_pp0_iter3_reg;
        add_ln203_reg_3720_pp0_iter5_reg <= add_ln203_reg_3720_pp0_iter4_reg;
        icmp_ln213_reg_3653_pp0_iter2_reg <= icmp_ln213_reg_3653_pp0_iter1_reg;
        icmp_ln213_reg_3653_pp0_iter3_reg <= icmp_ln213_reg_3653_pp0_iter2_reg;
        icmp_ln213_reg_3653_pp0_iter4_reg <= icmp_ln213_reg_3653_pp0_iter3_reg;
        icmp_ln213_reg_3653_pp0_iter5_reg <= icmp_ln213_reg_3653_pp0_iter4_reg;
        icmp_ln213_reg_3653_pp0_iter6_reg <= icmp_ln213_reg_3653_pp0_iter5_reg;
        icmp_ln213_reg_3653_pp0_iter7_reg <= icmp_ln213_reg_3653_pp0_iter6_reg;
        select_ln214_reg_3667_pp0_iter2_reg <= select_ln214_reg_3667_pp0_iter1_reg;
        select_ln214_reg_3667_pp0_iter3_reg <= select_ln214_reg_3667_pp0_iter2_reg;
        select_ln214_reg_3667_pp0_iter4_reg <= select_ln214_reg_3667_pp0_iter3_reg;
        select_ln214_reg_3667_pp0_iter5_reg <= select_ln214_reg_3667_pp0_iter4_reg;
        top_0_V_addr_reg_3836_pp0_iter7_reg <= top_0_V_addr_reg_3836;
        top_10_V_addr_reg_3896_pp0_iter7_reg <= top_10_V_addr_reg_3896;
        top_11_V_addr_reg_3902_pp0_iter7_reg <= top_11_V_addr_reg_3902;
        top_12_V_addr_reg_3908_pp0_iter7_reg <= top_12_V_addr_reg_3908;
        top_13_V_addr_reg_3914_pp0_iter7_reg <= top_13_V_addr_reg_3914;
        top_14_V_addr_reg_3920_pp0_iter7_reg <= top_14_V_addr_reg_3920;
        top_15_V_addr_reg_3926_pp0_iter7_reg <= top_15_V_addr_reg_3926;
        top_16_V_addr_reg_3932_pp0_iter7_reg <= top_16_V_addr_reg_3932;
        top_17_V_addr_reg_3938_pp0_iter7_reg <= top_17_V_addr_reg_3938;
        top_18_V_addr_reg_3944_pp0_iter7_reg <= top_18_V_addr_reg_3944;
        top_19_V_addr_reg_3950_pp0_iter7_reg <= top_19_V_addr_reg_3950;
        top_1_V_addr_reg_3842_pp0_iter7_reg <= top_1_V_addr_reg_3842;
        top_20_V_addr_reg_3956_pp0_iter7_reg <= top_20_V_addr_reg_3956;
        top_21_V_addr_reg_3962_pp0_iter7_reg <= top_21_V_addr_reg_3962;
        top_22_V_addr_reg_3968_pp0_iter7_reg <= top_22_V_addr_reg_3968;
        top_23_V_addr_reg_3974_pp0_iter7_reg <= top_23_V_addr_reg_3974;
        top_24_V_addr_reg_3980_pp0_iter7_reg <= top_24_V_addr_reg_3980;
        top_25_V_addr_reg_3986_pp0_iter7_reg <= top_25_V_addr_reg_3986;
        top_26_V_addr_reg_3992_pp0_iter7_reg <= top_26_V_addr_reg_3992;
        top_27_V_addr_reg_3998_pp0_iter7_reg <= top_27_V_addr_reg_3998;
        top_28_V_addr_reg_4004_pp0_iter7_reg <= top_28_V_addr_reg_4004;
        top_29_V_addr_reg_4010_pp0_iter7_reg <= top_29_V_addr_reg_4010;
        top_2_V_addr_reg_3848_pp0_iter7_reg <= top_2_V_addr_reg_3848;
        top_30_V_addr_reg_4016_pp0_iter7_reg <= top_30_V_addr_reg_4016;
        top_31_V_addr_reg_4022_pp0_iter7_reg <= top_31_V_addr_reg_4022;
        top_3_V_addr_reg_3854_pp0_iter7_reg <= top_3_V_addr_reg_3854;
        top_4_V_addr_reg_3860_pp0_iter7_reg <= top_4_V_addr_reg_3860;
        top_5_V_addr_reg_3866_pp0_iter7_reg <= top_5_V_addr_reg_3866;
        top_6_V_addr_reg_3872_pp0_iter7_reg <= top_6_V_addr_reg_3872;
        top_7_V_addr_reg_3878_pp0_iter7_reg <= top_7_V_addr_reg_3878;
        top_8_V_addr_reg_3884_pp0_iter7_reg <= top_8_V_addr_reg_3884;
        top_9_V_addr_reg_3890_pp0_iter7_reg <= top_9_V_addr_reg_3890;
        trunc_ln213_reg_3695_pp0_iter2_reg <= trunc_ln213_reg_3695;
        trunc_ln213_reg_3695_pp0_iter3_reg <= trunc_ln213_reg_3695_pp0_iter2_reg;
        trunc_ln213_reg_3695_pp0_iter4_reg <= trunc_ln213_reg_3695_pp0_iter3_reg;
        trunc_ln213_reg_3695_pp0_iter5_reg <= trunc_ln213_reg_3695_pp0_iter4_reg;
        trunc_ln213_reg_3695_pp0_iter6_reg <= trunc_ln213_reg_3695_pp0_iter5_reg;
        trunc_ln213_reg_3695_pp0_iter7_reg <= trunc_ln213_reg_3695_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln213_reg_3653_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        add_ln217_2_reg_3726 <= grp_fu_3635_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln213_reg_3653_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bot1_WB_V_reg_3736 <= bottom_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln213_reg_3653 <= icmp_ln213_fu_1096_p2;
        icmp_ln213_reg_3653_pp0_iter1_reg <= icmp_ln213_reg_3653;
        select_ln214_reg_3667_pp0_iter1_reg <= select_ln214_reg_3667;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln213_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln214_reg_3662 <= icmp_ln214_fu_1108_p2;
        select_ln214_reg_3667 <= select_ln214_fu_1152_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln213_reg_3653_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        op_V_assign_0_10_reg_4083 <= grp_compute_engine_64_fu_1003_ap_return;
        op_V_assign_0_11_reg_4088 <= grp_compute_engine_64_fu_1009_ap_return;
        op_V_assign_0_12_reg_4093 <= grp_compute_engine_64_fu_1015_ap_return;
        op_V_assign_0_13_reg_4098 <= grp_compute_engine_64_fu_1021_ap_return;
        op_V_assign_0_14_reg_4103 <= grp_compute_engine_64_fu_1027_ap_return;
        op_V_assign_0_1_reg_4033 <= grp_compute_engine_64_fu_943_ap_return;
        op_V_assign_0_2_reg_4038 <= grp_compute_engine_64_fu_949_ap_return;
        op_V_assign_0_3_reg_4043 <= grp_compute_engine_64_fu_955_ap_return;
        op_V_assign_0_4_reg_4048 <= grp_compute_engine_64_fu_961_ap_return;
        op_V_assign_0_5_reg_4053 <= grp_compute_engine_64_fu_967_ap_return;
        op_V_assign_0_6_reg_4058 <= grp_compute_engine_64_fu_973_ap_return;
        op_V_assign_0_7_reg_4063 <= grp_compute_engine_64_fu_979_ap_return;
        op_V_assign_0_8_reg_4068 <= grp_compute_engine_64_fu_985_ap_return;
        op_V_assign_0_9_reg_4073 <= grp_compute_engine_64_fu_991_ap_return;
        op_V_assign_0_s_reg_4078 <= grp_compute_engine_64_fu_997_ap_return;
        op_V_assign_reg_4028 <= grp_compute_engine_64_fu_937_ap_return;
        top_0_V_addr_reg_3836 <= zext_ln203_3_fu_1286_p1;
        top_10_V_addr_reg_3896 <= zext_ln203_3_fu_1286_p1;
        top_11_V_addr_reg_3902 <= zext_ln203_3_fu_1286_p1;
        top_12_V_addr_reg_3908 <= zext_ln203_3_fu_1286_p1;
        top_13_V_addr_reg_3914 <= zext_ln203_3_fu_1286_p1;
        top_14_V_addr_reg_3920 <= zext_ln203_3_fu_1286_p1;
        top_15_V_addr_reg_3926 <= zext_ln203_3_fu_1286_p1;
        top_16_V_addr_reg_3932 <= zext_ln203_3_fu_1286_p1;
        top_17_V_addr_reg_3938 <= zext_ln203_3_fu_1286_p1;
        top_18_V_addr_reg_3944 <= zext_ln203_3_fu_1286_p1;
        top_19_V_addr_reg_3950 <= zext_ln203_3_fu_1286_p1;
        top_1_V_addr_reg_3842 <= zext_ln203_3_fu_1286_p1;
        top_20_V_addr_reg_3956 <= zext_ln203_3_fu_1286_p1;
        top_21_V_addr_reg_3962 <= zext_ln203_3_fu_1286_p1;
        top_22_V_addr_reg_3968 <= zext_ln203_3_fu_1286_p1;
        top_23_V_addr_reg_3974 <= zext_ln203_3_fu_1286_p1;
        top_24_V_addr_reg_3980 <= zext_ln203_3_fu_1286_p1;
        top_25_V_addr_reg_3986 <= zext_ln203_3_fu_1286_p1;
        top_26_V_addr_reg_3992 <= zext_ln203_3_fu_1286_p1;
        top_27_V_addr_reg_3998 <= zext_ln203_3_fu_1286_p1;
        top_28_V_addr_reg_4004 <= zext_ln203_3_fu_1286_p1;
        top_29_V_addr_reg_4010 <= zext_ln203_3_fu_1286_p1;
        top_2_V_addr_reg_3848 <= zext_ln203_3_fu_1286_p1;
        top_30_V_addr_reg_4016 <= zext_ln203_3_fu_1286_p1;
        top_31_V_addr_reg_4022 <= zext_ln203_3_fu_1286_p1;
        top_3_V_addr_reg_3854 <= zext_ln203_3_fu_1286_p1;
        top_4_V_addr_reg_3860 <= zext_ln203_3_fu_1286_p1;
        top_5_V_addr_reg_3866 <= zext_ln203_3_fu_1286_p1;
        top_6_V_addr_reg_3872 <= zext_ln203_3_fu_1286_p1;
        top_7_V_addr_reg_3878 <= zext_ln203_3_fu_1286_p1;
        top_8_V_addr_reg_3884 <= zext_ln203_3_fu_1286_p1;
        top_9_V_addr_reg_3890 <= zext_ln203_3_fu_1286_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln213_reg_3653 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln213_1_reg_3690 <= select_ln213_1_fu_1194_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln213_fu_1096_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln214_1_reg_3673 <= select_ln214_1_fu_1160_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sext_ln217_1_reg_3648 <= sext_ln217_1_fu_1093_p1;
        sub_ln211_reg_3643 <= sub_ln211_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln213_reg_3653_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_10_reg_4342 <= {{add_ln1192_42_fu_1926_p2[15:14]}};
        tmp_11_reg_4366 <= {{add_ln1192_43_fu_1979_p2[15:14]}};
        tmp_12_reg_4390 <= {{add_ln1192_44_fu_2032_p2[15:14]}};
        tmp_13_reg_4414 <= {{add_ln1192_45_fu_2085_p2[15:14]}};
        tmp_14_reg_4438 <= {{add_ln1192_46_fu_2138_p2[15:14]}};
        tmp_15_reg_4462 <= {{add_ln1192_47_fu_2191_p2[15:14]}};
        tmp_164_reg_4108 <= add_ln1192_fu_1449_p2[32'd15];
        tmp_165_reg_4120 <= top_buf_0_V_1_fu_1463_p2[32'd13];
        tmp_166_reg_4132 <= add_ln1192_34_fu_1502_p2[32'd15];
        tmp_167_reg_4144 <= top_buf_1_V_1_fu_1516_p2[32'd13];
        tmp_168_reg_4156 <= add_ln1192_35_fu_1555_p2[32'd15];
        tmp_169_reg_4168 <= top_buf_2_V_1_fu_1569_p2[32'd13];
        tmp_16_reg_4486 <= {{add_ln1192_48_fu_2244_p2[15:14]}};
        tmp_170_reg_4180 <= add_ln1192_36_fu_1608_p2[32'd15];
        tmp_171_reg_4192 <= top_buf_3_V_1_fu_1622_p2[32'd13];
        tmp_172_reg_4204 <= add_ln1192_37_fu_1661_p2[32'd15];
        tmp_173_reg_4216 <= top_buf_4_V_1_fu_1675_p2[32'd13];
        tmp_174_reg_4228 <= add_ln1192_38_fu_1714_p2[32'd15];
        tmp_175_reg_4240 <= top_buf_5_V_1_fu_1728_p2[32'd13];
        tmp_176_reg_4252 <= add_ln1192_39_fu_1767_p2[32'd15];
        tmp_177_reg_4264 <= top_buf_6_V_1_fu_1781_p2[32'd13];
        tmp_178_reg_4276 <= add_ln1192_40_fu_1820_p2[32'd15];
        tmp_179_reg_4288 <= top_buf_7_V_1_fu_1834_p2[32'd13];
        tmp_180_reg_4300 <= add_ln1192_41_fu_1873_p2[32'd15];
        tmp_181_reg_4312 <= top_buf_8_V_1_fu_1887_p2[32'd13];
        tmp_182_reg_4324 <= add_ln1192_42_fu_1926_p2[32'd15];
        tmp_183_reg_4336 <= top_buf_9_V_1_fu_1940_p2[32'd13];
        tmp_184_reg_4348 <= add_ln1192_43_fu_1979_p2[32'd15];
        tmp_185_reg_4360 <= top_buf_10_V_1_fu_1993_p2[32'd13];
        tmp_186_reg_4372 <= add_ln1192_44_fu_2032_p2[32'd15];
        tmp_187_reg_4384 <= top_buf_11_V_1_fu_2046_p2[32'd13];
        tmp_188_reg_4396 <= add_ln1192_45_fu_2085_p2[32'd15];
        tmp_189_reg_4408 <= top_buf_12_V_1_fu_2099_p2[32'd13];
        tmp_190_reg_4420 <= add_ln1192_46_fu_2138_p2[32'd15];
        tmp_191_reg_4432 <= top_buf_13_V_1_fu_2152_p2[32'd13];
        tmp_192_reg_4444 <= add_ln1192_47_fu_2191_p2[32'd15];
        tmp_193_reg_4456 <= top_buf_14_V_1_fu_2205_p2[32'd13];
        tmp_194_reg_4468 <= add_ln1192_48_fu_2244_p2[32'd15];
        tmp_195_reg_4480 <= top_buf_15_V_1_fu_2258_p2[32'd13];
        tmp_1_reg_4294 <= {{add_ln1192_40_fu_1820_p2[15:14]}};
        tmp_2_reg_4318 <= {{add_ln1192_41_fu_1873_p2[15:14]}};
        tmp_4_reg_4126 <= {{add_ln1192_fu_1449_p2[15:14]}};
        tmp_5_reg_4150 <= {{add_ln1192_34_fu_1502_p2[15:14]}};
        tmp_6_reg_4174 <= {{add_ln1192_35_fu_1555_p2[15:14]}};
        tmp_7_reg_4198 <= {{add_ln1192_36_fu_1608_p2[15:14]}};
        tmp_8_reg_4222 <= {{add_ln1192_37_fu_1661_p2[15:14]}};
        tmp_9_reg_4246 <= {{add_ln1192_38_fu_1714_p2[15:14]}};
        tmp_s_reg_4270 <= {{add_ln1192_39_fu_1767_p2[15:14]}};
        top_buf_0_V_1_reg_4114 <= top_buf_0_V_1_fu_1463_p2;
        top_buf_10_V_1_reg_4354 <= top_buf_10_V_1_fu_1993_p2;
        top_buf_11_V_1_reg_4378 <= top_buf_11_V_1_fu_2046_p2;
        top_buf_12_V_1_reg_4402 <= top_buf_12_V_1_fu_2099_p2;
        top_buf_13_V_1_reg_4426 <= top_buf_13_V_1_fu_2152_p2;
        top_buf_14_V_1_reg_4450 <= top_buf_14_V_1_fu_2205_p2;
        top_buf_15_V_1_reg_4474 <= top_buf_15_V_1_fu_2258_p2;
        top_buf_1_V_1_reg_4138 <= top_buf_1_V_1_fu_1516_p2;
        top_buf_2_V_1_reg_4162 <= top_buf_2_V_1_fu_1569_p2;
        top_buf_3_V_1_reg_4186 <= top_buf_3_V_1_fu_1622_p2;
        top_buf_4_V_1_reg_4210 <= top_buf_4_V_1_fu_1675_p2;
        top_buf_5_V_1_reg_4234 <= top_buf_5_V_1_fu_1728_p2;
        top_buf_6_V_1_reg_4258 <= top_buf_6_V_1_fu_1781_p2;
        top_buf_7_V_1_reg_4282 <= top_buf_7_V_1_fu_1834_p2;
        top_buf_8_V_1_reg_4306 <= top_buf_8_V_1_fu_1887_p2;
        top_buf_9_V_1_reg_4330 <= top_buf_9_V_1_fu_1940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln213_reg_3653_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weight_buf_1x1_V_0_0_1_reg_3756 <= weight_buf_1x1_V_0_0_q0;
        weight_buf_1x1_V_0_0_2_reg_3796 <= weight_buf_1x1_V_0_0_q1;
        weight_buf_1x1_V_0_1_1_reg_3761 <= weight_buf_1x1_V_0_1_q0;
        weight_buf_1x1_V_0_1_2_reg_3801 <= weight_buf_1x1_V_0_1_q1;
        weight_buf_1x1_V_0_2_1_reg_3766 <= weight_buf_1x1_V_0_2_q0;
        weight_buf_1x1_V_0_2_2_reg_3806 <= weight_buf_1x1_V_0_2_q1;
        weight_buf_1x1_V_0_3_1_reg_3771 <= weight_buf_1x1_V_0_3_q0;
        weight_buf_1x1_V_0_3_2_reg_3811 <= weight_buf_1x1_V_0_3_q1;
        weight_buf_1x1_V_0_4_1_reg_3776 <= weight_buf_1x1_V_0_4_q0;
        weight_buf_1x1_V_0_4_2_reg_3816 <= weight_buf_1x1_V_0_4_q1;
        weight_buf_1x1_V_0_5_1_reg_3781 <= weight_buf_1x1_V_0_5_q0;
        weight_buf_1x1_V_0_5_2_reg_3821 <= weight_buf_1x1_V_0_5_q1;
        weight_buf_1x1_V_0_6_1_reg_3786 <= weight_buf_1x1_V_0_6_q0;
        weight_buf_1x1_V_0_6_2_reg_3826 <= weight_buf_1x1_V_0_6_q1;
        weight_buf_1x1_V_0_7_1_reg_3791 <= weight_buf_1x1_V_0_7_q0;
        weight_buf_1x1_V_0_7_2_reg_3831 <= weight_buf_1x1_V_0_7_q1;
    end
end

always @ (*) begin
    if ((icmp_ln213_fu_1096_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln213_reg_3653_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_ch_factor_0_phi_fu_896_p4 = select_ln213_1_reg_3690;
    end else begin
        ap_phi_mux_ch_factor_0_phi_fu_896_p4 = ch_factor_0_reg_892;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln213_reg_3653 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_row_0_phi_fu_919_p4 = select_ln214_1_reg_3673;
    end else begin
        ap_phi_mux_row_0_phi_fu_919_p4 = row_0_reg_915;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bottom_V_ce0 = 1'b1;
    end else begin
        bottom_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_0_V_ce0 = 1'b1;
    end else begin
        top_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_0_V_ce1 = 1'b1;
    end else begin
        top_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_0_V_we1 = 1'b1;
    end else begin
        top_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_10_V_ce0 = 1'b1;
    end else begin
        top_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_10_V_ce1 = 1'b1;
    end else begin
        top_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_10_V_we1 = 1'b1;
    end else begin
        top_10_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_11_V_ce0 = 1'b1;
    end else begin
        top_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_11_V_ce1 = 1'b1;
    end else begin
        top_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_11_V_we1 = 1'b1;
    end else begin
        top_11_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_12_V_ce0 = 1'b1;
    end else begin
        top_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_12_V_ce1 = 1'b1;
    end else begin
        top_12_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_12_V_we1 = 1'b1;
    end else begin
        top_12_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_13_V_ce0 = 1'b1;
    end else begin
        top_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_13_V_ce1 = 1'b1;
    end else begin
        top_13_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_13_V_we1 = 1'b1;
    end else begin
        top_13_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_14_V_ce0 = 1'b1;
    end else begin
        top_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_14_V_ce1 = 1'b1;
    end else begin
        top_14_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_14_V_we1 = 1'b1;
    end else begin
        top_14_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_15_V_ce0 = 1'b1;
    end else begin
        top_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_15_V_ce1 = 1'b1;
    end else begin
        top_15_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_15_V_we1 = 1'b1;
    end else begin
        top_15_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_16_V_ce0 = 1'b1;
    end else begin
        top_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_16_V_ce1 = 1'b1;
    end else begin
        top_16_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_16_V_we1 = 1'b1;
    end else begin
        top_16_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_17_V_ce0 = 1'b1;
    end else begin
        top_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_17_V_ce1 = 1'b1;
    end else begin
        top_17_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_17_V_we1 = 1'b1;
    end else begin
        top_17_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_18_V_ce0 = 1'b1;
    end else begin
        top_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_18_V_ce1 = 1'b1;
    end else begin
        top_18_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_18_V_we1 = 1'b1;
    end else begin
        top_18_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_19_V_ce0 = 1'b1;
    end else begin
        top_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_19_V_ce1 = 1'b1;
    end else begin
        top_19_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_19_V_we1 = 1'b1;
    end else begin
        top_19_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_1_V_ce0 = 1'b1;
    end else begin
        top_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_1_V_ce1 = 1'b1;
    end else begin
        top_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_1_V_we1 = 1'b1;
    end else begin
        top_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_20_V_ce0 = 1'b1;
    end else begin
        top_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_20_V_ce1 = 1'b1;
    end else begin
        top_20_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_20_V_we1 = 1'b1;
    end else begin
        top_20_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_21_V_ce0 = 1'b1;
    end else begin
        top_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_21_V_ce1 = 1'b1;
    end else begin
        top_21_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_21_V_we1 = 1'b1;
    end else begin
        top_21_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_22_V_ce0 = 1'b1;
    end else begin
        top_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_22_V_ce1 = 1'b1;
    end else begin
        top_22_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_22_V_we1 = 1'b1;
    end else begin
        top_22_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_23_V_ce0 = 1'b1;
    end else begin
        top_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_23_V_ce1 = 1'b1;
    end else begin
        top_23_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_23_V_we1 = 1'b1;
    end else begin
        top_23_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_24_V_ce0 = 1'b1;
    end else begin
        top_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_24_V_ce1 = 1'b1;
    end else begin
        top_24_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_24_V_we1 = 1'b1;
    end else begin
        top_24_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_25_V_ce0 = 1'b1;
    end else begin
        top_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_25_V_ce1 = 1'b1;
    end else begin
        top_25_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_25_V_we1 = 1'b1;
    end else begin
        top_25_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_26_V_ce0 = 1'b1;
    end else begin
        top_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_26_V_ce1 = 1'b1;
    end else begin
        top_26_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_26_V_we1 = 1'b1;
    end else begin
        top_26_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_27_V_ce0 = 1'b1;
    end else begin
        top_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_27_V_ce1 = 1'b1;
    end else begin
        top_27_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_27_V_we1 = 1'b1;
    end else begin
        top_27_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_28_V_ce0 = 1'b1;
    end else begin
        top_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_28_V_ce1 = 1'b1;
    end else begin
        top_28_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_28_V_we1 = 1'b1;
    end else begin
        top_28_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_29_V_ce0 = 1'b1;
    end else begin
        top_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_29_V_ce1 = 1'b1;
    end else begin
        top_29_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_29_V_we1 = 1'b1;
    end else begin
        top_29_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_2_V_ce0 = 1'b1;
    end else begin
        top_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_2_V_ce1 = 1'b1;
    end else begin
        top_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_2_V_we1 = 1'b1;
    end else begin
        top_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_30_V_ce0 = 1'b1;
    end else begin
        top_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_30_V_ce1 = 1'b1;
    end else begin
        top_30_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_30_V_we1 = 1'b1;
    end else begin
        top_30_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_31_V_ce0 = 1'b1;
    end else begin
        top_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_31_V_ce1 = 1'b1;
    end else begin
        top_31_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_31_V_we1 = 1'b1;
    end else begin
        top_31_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_3_V_ce0 = 1'b1;
    end else begin
        top_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_3_V_ce1 = 1'b1;
    end else begin
        top_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_3_V_we1 = 1'b1;
    end else begin
        top_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_4_V_ce0 = 1'b1;
    end else begin
        top_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_4_V_ce1 = 1'b1;
    end else begin
        top_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_4_V_we1 = 1'b1;
    end else begin
        top_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_5_V_ce0 = 1'b1;
    end else begin
        top_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_5_V_ce1 = 1'b1;
    end else begin
        top_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_5_V_we1 = 1'b1;
    end else begin
        top_5_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_6_V_ce0 = 1'b1;
    end else begin
        top_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_6_V_ce1 = 1'b1;
    end else begin
        top_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_6_V_we1 = 1'b1;
    end else begin
        top_6_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_7_V_ce0 = 1'b1;
    end else begin
        top_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_7_V_ce1 = 1'b1;
    end else begin
        top_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_7_V_we1 = 1'b1;
    end else begin
        top_7_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_8_V_ce0 = 1'b1;
    end else begin
        top_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_8_V_ce1 = 1'b1;
    end else begin
        top_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_8_V_we1 = 1'b1;
    end else begin
        top_8_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        top_9_V_ce0 = 1'b1;
    end else begin
        top_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_9_V_ce1 = 1'b1;
    end else begin
        top_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln213_reg_3695_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        top_9_V_we1 = 1'b1;
    end else begin
        top_9_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_0_ce0 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_0_ce1 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_1_ce0 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_1_ce1 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_2_ce0 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_2_ce1 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_3_ce0 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_3_ce1 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_4_ce0 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_4_ce1 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_5_ce0 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_5_ce1 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_6_ce0 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_6_ce1 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_7_ce0 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        weight_buf_1x1_V_0_7_ce1 = 1'b1;
    end else begin
        weight_buf_1x1_V_0_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln213_fu_1096_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln213_fu_1096_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_34_fu_1502_p2 = ($signed(sext_ln727_1_fu_1487_p1) + $signed(zext_ln728_1_fu_1498_p1));

assign add_ln1192_35_fu_1555_p2 = ($signed(sext_ln727_2_fu_1540_p1) + $signed(zext_ln728_2_fu_1551_p1));

assign add_ln1192_36_fu_1608_p2 = ($signed(sext_ln727_3_fu_1593_p1) + $signed(zext_ln728_3_fu_1604_p1));

assign add_ln1192_37_fu_1661_p2 = ($signed(sext_ln727_4_fu_1646_p1) + $signed(zext_ln728_4_fu_1657_p1));

assign add_ln1192_38_fu_1714_p2 = ($signed(sext_ln727_5_fu_1699_p1) + $signed(zext_ln728_5_fu_1710_p1));

assign add_ln1192_39_fu_1767_p2 = ($signed(sext_ln727_6_fu_1752_p1) + $signed(zext_ln728_6_fu_1763_p1));

assign add_ln1192_40_fu_1820_p2 = ($signed(sext_ln727_7_fu_1805_p1) + $signed(zext_ln728_7_fu_1816_p1));

assign add_ln1192_41_fu_1873_p2 = ($signed(sext_ln727_8_fu_1858_p1) + $signed(zext_ln728_8_fu_1869_p1));

assign add_ln1192_42_fu_1926_p2 = ($signed(sext_ln727_9_fu_1911_p1) + $signed(zext_ln728_9_fu_1922_p1));

assign add_ln1192_43_fu_1979_p2 = ($signed(sext_ln727_10_fu_1964_p1) + $signed(zext_ln728_10_fu_1975_p1));

assign add_ln1192_44_fu_2032_p2 = ($signed(sext_ln727_11_fu_2017_p1) + $signed(zext_ln728_11_fu_2028_p1));

assign add_ln1192_45_fu_2085_p2 = ($signed(sext_ln727_12_fu_2070_p1) + $signed(zext_ln728_12_fu_2081_p1));

assign add_ln1192_46_fu_2138_p2 = ($signed(sext_ln727_13_fu_2123_p1) + $signed(zext_ln728_13_fu_2134_p1));

assign add_ln1192_47_fu_2191_p2 = ($signed(sext_ln727_14_fu_2176_p1) + $signed(zext_ln728_14_fu_2187_p1));

assign add_ln1192_48_fu_2244_p2 = ($signed(sext_ln727_15_fu_2229_p1) + $signed(zext_ln728_15_fu_2240_p1));

assign add_ln1192_fu_1449_p2 = ($signed(sext_ln727_fu_1434_p1) + $signed(zext_ln728_fu_1445_p1));

assign add_ln203_1_fu_1271_p2 = (zext_ln203_1_fu_1267_p1 + zext_ln203_fu_1257_p1);

assign add_ln203_2_fu_1280_p2 = (zext_ln203_2_fu_1277_p1 + add_ln203_1_fu_1271_p2);

assign add_ln203_fu_1232_p2 = (zext_ln214_1_fu_1229_p1 + select_ln203_fu_1213_p3);

assign add_ln213_fu_1102_p2 = (indvar_flatten21_reg_881 + 8'd1);

assign add_ln214_1_fu_1224_p2 = (zext_ln214_fu_1221_p1 + sub_ln211_reg_3643);

assign add_ln214_2_fu_1174_p2 = (indvar_flatten_reg_904 + 6'd1);

assign add_ln217_1_fu_1247_p2 = ($signed(sext_ln217_1_reg_3648) + $signed(sext_ln217_2_fu_1244_p1));

assign and_ln213_fu_1134_p2 = (xor_ln213_fu_1122_p2 & icmp_ln215_fu_1128_p2);

assign and_ln785_10_fu_3137_p2 = (xor_ln785_10_fu_3132_p2 & or_ln785_10_fu_3127_p2);

assign and_ln785_11_fu_3221_p2 = (xor_ln785_11_fu_3216_p2 & or_ln785_11_fu_3211_p2);

assign and_ln785_12_fu_3305_p2 = (xor_ln785_12_fu_3300_p2 & or_ln785_12_fu_3295_p2);

assign and_ln785_13_fu_3389_p2 = (xor_ln785_13_fu_3384_p2 & or_ln785_13_fu_3379_p2);

assign and_ln785_14_fu_3473_p2 = (xor_ln785_14_fu_3468_p2 & or_ln785_14_fu_3463_p2);

assign and_ln785_15_fu_3557_p2 = (xor_ln785_15_fu_3552_p2 & or_ln785_15_fu_3547_p2);

assign and_ln785_1_fu_2381_p2 = (xor_ln785_1_fu_2376_p2 & or_ln785_1_fu_2371_p2);

assign and_ln785_2_fu_2465_p2 = (xor_ln785_2_fu_2460_p2 & or_ln785_2_fu_2455_p2);

assign and_ln785_3_fu_2549_p2 = (xor_ln785_3_fu_2544_p2 & or_ln785_3_fu_2539_p2);

assign and_ln785_4_fu_2633_p2 = (xor_ln785_4_fu_2628_p2 & or_ln785_4_fu_2623_p2);

assign and_ln785_5_fu_2717_p2 = (xor_ln785_5_fu_2712_p2 & or_ln785_5_fu_2707_p2);

assign and_ln785_6_fu_2801_p2 = (xor_ln785_6_fu_2796_p2 & or_ln785_6_fu_2791_p2);

assign and_ln785_7_fu_2885_p2 = (xor_ln785_7_fu_2880_p2 & or_ln785_7_fu_2875_p2);

assign and_ln785_8_fu_2969_p2 = (xor_ln785_8_fu_2964_p2 & or_ln785_8_fu_2959_p2);

assign and_ln785_9_fu_3053_p2 = (xor_ln785_9_fu_3048_p2 & or_ln785_9_fu_3043_p2);

assign and_ln785_fu_2297_p2 = (xor_ln785_fu_2292_p2 & or_ln785_fu_2287_p2);

assign and_ln786_33_fu_2403_p2 = (tmp_166_reg_4132 & or_ln786_1_fu_2397_p2);

assign and_ln786_34_fu_2487_p2 = (tmp_168_reg_4156 & or_ln786_2_fu_2481_p2);

assign and_ln786_35_fu_2571_p2 = (tmp_170_reg_4180 & or_ln786_3_fu_2565_p2);

assign and_ln786_36_fu_2655_p2 = (tmp_172_reg_4204 & or_ln786_4_fu_2649_p2);

assign and_ln786_37_fu_2739_p2 = (tmp_174_reg_4228 & or_ln786_5_fu_2733_p2);

assign and_ln786_38_fu_2823_p2 = (tmp_176_reg_4252 & or_ln786_6_fu_2817_p2);

assign and_ln786_39_fu_2907_p2 = (tmp_178_reg_4276 & or_ln786_7_fu_2901_p2);

assign and_ln786_40_fu_2991_p2 = (tmp_180_reg_4300 & or_ln786_8_fu_2985_p2);

assign and_ln786_41_fu_3075_p2 = (tmp_182_reg_4324 & or_ln786_9_fu_3069_p2);

assign and_ln786_42_fu_3159_p2 = (tmp_184_reg_4348 & or_ln786_10_fu_3153_p2);

assign and_ln786_43_fu_3243_p2 = (tmp_186_reg_4372 & or_ln786_11_fu_3237_p2);

assign and_ln786_44_fu_3327_p2 = (tmp_188_reg_4396 & or_ln786_12_fu_3321_p2);

assign and_ln786_45_fu_3411_p2 = (tmp_190_reg_4420 & or_ln786_13_fu_3405_p2);

assign and_ln786_46_fu_3495_p2 = (tmp_192_reg_4444 & or_ln786_14_fu_3489_p2);

assign and_ln786_47_fu_3579_p2 = (tmp_194_reg_4468 & or_ln786_15_fu_3573_p2);

assign and_ln786_fu_2319_p2 = (tmp_164_reg_4108 & or_ln786_fu_2313_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bottom_V_address0 = sext_ln217_fu_1252_p1;

assign ch_factor_fu_1188_p2 = (3'd1 + ap_phi_mux_ch_factor_0_phi_fu_896_p4);

assign col_fu_1168_p2 = (select_ln214_fu_1152_p3 + 4'd1);

assign grp_fu_3626_p0 = grp_fu_3626_p00;

assign grp_fu_3626_p00 = map_dim;

assign grp_fu_3626_p1 = grp_fu_3626_p10;

assign grp_fu_3626_p10 = ch_col;

assign grp_fu_3635_p0 = 15'd114;

assign grp_fu_3635_p2 = grp_fu_3635_p20;

assign grp_fu_3635_p20 = select_ln214_reg_3667_pp0_iter1_reg;

assign icmp_ln213_fu_1096_p2 = ((indvar_flatten21_reg_881 == 8'd196) ? 1'b1 : 1'b0);

assign icmp_ln214_fu_1108_p2 = ((indvar_flatten_reg_904 == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_1128_p2 = ((col_0_reg_926 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln785_10_fu_3122_p2 = ((tmp_11_reg_4366 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_11_fu_3206_p2 = ((tmp_12_reg_4390 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_12_fu_3290_p2 = ((tmp_13_reg_4414 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_13_fu_3374_p2 = ((tmp_14_reg_4438 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_14_fu_3458_p2 = ((tmp_15_reg_4462 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_15_fu_3542_p2 = ((tmp_16_reg_4486 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_1_fu_2366_p2 = ((tmp_5_reg_4150 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_2_fu_2450_p2 = ((tmp_6_reg_4174 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_3_fu_2534_p2 = ((tmp_7_reg_4198 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_4_fu_2618_p2 = ((tmp_8_reg_4222 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_5_fu_2702_p2 = ((tmp_9_reg_4246 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_6_fu_2786_p2 = ((tmp_s_reg_4270 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_7_fu_2870_p2 = ((tmp_1_reg_4294 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_8_fu_2954_p2 = ((tmp_2_reg_4318 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_9_fu_3038_p2 = ((tmp_10_reg_4342 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_2282_p2 = ((tmp_4_reg_4126 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln786_10_fu_3148_p2 = ((tmp_11_reg_4366 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_11_fu_3232_p2 = ((tmp_12_reg_4390 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_12_fu_3316_p2 = ((tmp_13_reg_4414 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_13_fu_3400_p2 = ((tmp_14_reg_4438 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_14_fu_3484_p2 = ((tmp_15_reg_4462 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_15_fu_3568_p2 = ((tmp_16_reg_4486 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_1_fu_2392_p2 = ((tmp_5_reg_4150 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_2_fu_2476_p2 = ((tmp_6_reg_4174 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_3_fu_2560_p2 = ((tmp_7_reg_4198 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_4_fu_2644_p2 = ((tmp_8_reg_4222 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_5_fu_2728_p2 = ((tmp_9_reg_4246 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_6_fu_2812_p2 = ((tmp_s_reg_4270 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_7_fu_2896_p2 = ((tmp_1_reg_4294 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_8_fu_2980_p2 = ((tmp_2_reg_4318 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_9_fu_3064_p2 = ((tmp_10_reg_4342 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_fu_2308_p2 = ((tmp_4_reg_4126 != 2'd3) ? 1'b1 : 1'b0);

assign or_ln214_fu_1146_p2 = (icmp_ln214_fu_1108_p2 | and_ln213_fu_1134_p2);

assign or_ln340_10_fu_3164_p2 = (and_ln786_42_fu_3159_p2 | and_ln785_10_fu_3137_p2);

assign or_ln340_11_fu_3248_p2 = (and_ln786_43_fu_3243_p2 | and_ln785_11_fu_3221_p2);

assign or_ln340_12_fu_3332_p2 = (and_ln786_44_fu_3327_p2 | and_ln785_12_fu_3305_p2);

assign or_ln340_13_fu_3416_p2 = (and_ln786_45_fu_3411_p2 | and_ln785_13_fu_3389_p2);

assign or_ln340_14_fu_3500_p2 = (and_ln786_46_fu_3495_p2 | and_ln785_14_fu_3473_p2);

assign or_ln340_15_fu_3584_p2 = (and_ln786_47_fu_3579_p2 | and_ln785_15_fu_3557_p2);

assign or_ln340_1_fu_2408_p2 = (and_ln786_33_fu_2403_p2 | and_ln785_1_fu_2381_p2);

assign or_ln340_2_fu_2492_p2 = (and_ln786_34_fu_2487_p2 | and_ln785_2_fu_2465_p2);

assign or_ln340_32_fu_2336_p2 = (xor_ln340_fu_2330_p2 | and_ln785_fu_2297_p2);

assign or_ln340_33_fu_2420_p2 = (xor_ln340_32_fu_2414_p2 | and_ln785_1_fu_2381_p2);

assign or_ln340_34_fu_2504_p2 = (xor_ln340_33_fu_2498_p2 | and_ln785_2_fu_2465_p2);

assign or_ln340_35_fu_2588_p2 = (xor_ln340_34_fu_2582_p2 | and_ln785_3_fu_2549_p2);

assign or_ln340_36_fu_2672_p2 = (xor_ln340_35_fu_2666_p2 | and_ln785_4_fu_2633_p2);

assign or_ln340_37_fu_2756_p2 = (xor_ln340_36_fu_2750_p2 | and_ln785_5_fu_2717_p2);

assign or_ln340_38_fu_2840_p2 = (xor_ln340_37_fu_2834_p2 | and_ln785_6_fu_2801_p2);

assign or_ln340_39_fu_2924_p2 = (xor_ln340_38_fu_2918_p2 | and_ln785_7_fu_2885_p2);

assign or_ln340_3_fu_2576_p2 = (and_ln786_35_fu_2571_p2 | and_ln785_3_fu_2549_p2);

assign or_ln340_40_fu_3008_p2 = (xor_ln340_39_fu_3002_p2 | and_ln785_8_fu_2969_p2);

assign or_ln340_41_fu_3092_p2 = (xor_ln340_40_fu_3086_p2 | and_ln785_9_fu_3053_p2);

assign or_ln340_42_fu_3176_p2 = (xor_ln340_41_fu_3170_p2 | and_ln785_10_fu_3137_p2);

assign or_ln340_43_fu_3260_p2 = (xor_ln340_42_fu_3254_p2 | and_ln785_11_fu_3221_p2);

assign or_ln340_44_fu_3344_p2 = (xor_ln340_43_fu_3338_p2 | and_ln785_12_fu_3305_p2);

assign or_ln340_45_fu_3428_p2 = (xor_ln340_44_fu_3422_p2 | and_ln785_13_fu_3389_p2);

assign or_ln340_46_fu_3512_p2 = (xor_ln340_45_fu_3506_p2 | and_ln785_14_fu_3473_p2);

assign or_ln340_47_fu_3596_p2 = (xor_ln340_46_fu_3590_p2 | and_ln785_15_fu_3557_p2);

assign or_ln340_4_fu_2660_p2 = (and_ln786_36_fu_2655_p2 | and_ln785_4_fu_2633_p2);

assign or_ln340_5_fu_2744_p2 = (and_ln786_37_fu_2739_p2 | and_ln785_5_fu_2717_p2);

assign or_ln340_6_fu_2828_p2 = (and_ln786_38_fu_2823_p2 | and_ln785_6_fu_2801_p2);

assign or_ln340_7_fu_2912_p2 = (and_ln786_39_fu_2907_p2 | and_ln785_7_fu_2885_p2);

assign or_ln340_8_fu_2996_p2 = (and_ln786_40_fu_2991_p2 | and_ln785_8_fu_2969_p2);

assign or_ln340_9_fu_3080_p2 = (and_ln786_41_fu_3075_p2 | and_ln785_9_fu_3053_p2);

assign or_ln340_fu_2324_p2 = (and_ln786_fu_2319_p2 | and_ln785_fu_2297_p2);

assign or_ln785_10_fu_3127_p2 = (tmp_185_reg_4360 | icmp_ln785_10_fu_3122_p2);

assign or_ln785_11_fu_3211_p2 = (tmp_187_reg_4384 | icmp_ln785_11_fu_3206_p2);

assign or_ln785_12_fu_3295_p2 = (tmp_189_reg_4408 | icmp_ln785_12_fu_3290_p2);

assign or_ln785_13_fu_3379_p2 = (tmp_191_reg_4432 | icmp_ln785_13_fu_3374_p2);

assign or_ln785_14_fu_3463_p2 = (tmp_193_reg_4456 | icmp_ln785_14_fu_3458_p2);

assign or_ln785_15_fu_3547_p2 = (tmp_195_reg_4480 | icmp_ln785_15_fu_3542_p2);

assign or_ln785_1_fu_2371_p2 = (tmp_167_reg_4144 | icmp_ln785_1_fu_2366_p2);

assign or_ln785_2_fu_2455_p2 = (tmp_169_reg_4168 | icmp_ln785_2_fu_2450_p2);

assign or_ln785_3_fu_2539_p2 = (tmp_171_reg_4192 | icmp_ln785_3_fu_2534_p2);

assign or_ln785_4_fu_2623_p2 = (tmp_173_reg_4216 | icmp_ln785_4_fu_2618_p2);

assign or_ln785_5_fu_2707_p2 = (tmp_175_reg_4240 | icmp_ln785_5_fu_2702_p2);

assign or_ln785_6_fu_2791_p2 = (tmp_177_reg_4264 | icmp_ln785_6_fu_2786_p2);

assign or_ln785_7_fu_2875_p2 = (tmp_179_reg_4288 | icmp_ln785_7_fu_2870_p2);

assign or_ln785_8_fu_2959_p2 = (tmp_181_reg_4312 | icmp_ln785_8_fu_2954_p2);

assign or_ln785_9_fu_3043_p2 = (tmp_183_reg_4336 | icmp_ln785_9_fu_3038_p2);

assign or_ln785_fu_2287_p2 = (tmp_165_reg_4120 | icmp_ln785_fu_2282_p2);

assign or_ln786_10_fu_3153_p2 = (xor_ln786_10_fu_3143_p2 | icmp_ln786_10_fu_3148_p2);

assign or_ln786_11_fu_3237_p2 = (xor_ln786_11_fu_3227_p2 | icmp_ln786_11_fu_3232_p2);

assign or_ln786_12_fu_3321_p2 = (xor_ln786_12_fu_3311_p2 | icmp_ln786_12_fu_3316_p2);

assign or_ln786_13_fu_3405_p2 = (xor_ln786_13_fu_3395_p2 | icmp_ln786_13_fu_3400_p2);

assign or_ln786_14_fu_3489_p2 = (xor_ln786_14_fu_3479_p2 | icmp_ln786_14_fu_3484_p2);

assign or_ln786_15_fu_3573_p2 = (xor_ln786_15_fu_3563_p2 | icmp_ln786_15_fu_3568_p2);

assign or_ln786_1_fu_2397_p2 = (xor_ln786_1_fu_2387_p2 | icmp_ln786_1_fu_2392_p2);

assign or_ln786_2_fu_2481_p2 = (xor_ln786_2_fu_2471_p2 | icmp_ln786_2_fu_2476_p2);

assign or_ln786_3_fu_2565_p2 = (xor_ln786_3_fu_2555_p2 | icmp_ln786_3_fu_2560_p2);

assign or_ln786_4_fu_2649_p2 = (xor_ln786_4_fu_2639_p2 | icmp_ln786_4_fu_2644_p2);

assign or_ln786_5_fu_2733_p2 = (xor_ln786_5_fu_2723_p2 | icmp_ln786_5_fu_2728_p2);

assign or_ln786_6_fu_2817_p2 = (xor_ln786_6_fu_2807_p2 | icmp_ln786_6_fu_2812_p2);

assign or_ln786_7_fu_2901_p2 = (xor_ln786_7_fu_2891_p2 | icmp_ln786_7_fu_2896_p2);

assign or_ln786_8_fu_2985_p2 = (xor_ln786_8_fu_2975_p2 | icmp_ln786_8_fu_2980_p2);

assign or_ln786_9_fu_3069_p2 = (xor_ln786_9_fu_3059_p2 | icmp_ln786_9_fu_3064_p2);

assign or_ln786_fu_2313_p2 = (xor_ln786_fu_2303_p2 | icmp_ln786_fu_2308_p2);

assign row_fu_1140_p2 = (4'd1 + select_ln213_fu_1114_p3);

assign select_ln203_fu_1213_p3 = ((tmp_fu_1205_p3[0:0] === 1'b1) ? 5'd9 : 5'd0);

assign select_ln213_1_fu_1194_p3 = ((icmp_ln214_reg_3662[0:0] === 1'b1) ? ch_factor_fu_1188_p2 : ap_phi_mux_ch_factor_0_phi_fu_896_p4);

assign select_ln213_fu_1114_p3 = ((icmp_ln214_fu_1108_p2[0:0] === 1'b1) ? 4'd1 : ap_phi_mux_row_0_phi_fu_919_p4);

assign select_ln214_1_fu_1160_p3 = ((and_ln213_fu_1134_p2[0:0] === 1'b1) ? row_fu_1140_p2 : select_ln213_fu_1114_p3);

assign select_ln214_2_fu_1180_p3 = ((icmp_ln214_fu_1108_p2[0:0] === 1'b1) ? 6'd1 : add_ln214_2_fu_1174_p2);

assign select_ln214_fu_1152_p3 = ((or_ln214_fu_1146_p2[0:0] === 1'b1) ? 4'd1 : col_0_reg_926);

assign select_ln340_32_fu_2426_p3 = ((or_ln340_1_fu_2408_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_1_V_1_reg_4138);

assign select_ln340_33_fu_2510_p3 = ((or_ln340_2_fu_2492_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_2_V_1_reg_4162);

assign select_ln340_34_fu_2594_p3 = ((or_ln340_3_fu_2576_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_3_V_1_reg_4186);

assign select_ln340_35_fu_2678_p3 = ((or_ln340_4_fu_2660_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_4_V_1_reg_4210);

assign select_ln340_36_fu_2762_p3 = ((or_ln340_5_fu_2744_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_5_V_1_reg_4234);

assign select_ln340_37_fu_2846_p3 = ((or_ln340_6_fu_2828_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_6_V_1_reg_4258);

assign select_ln340_38_fu_2930_p3 = ((or_ln340_7_fu_2912_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_7_V_1_reg_4282);

assign select_ln340_39_fu_3014_p3 = ((or_ln340_8_fu_2996_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_8_V_1_reg_4306);

assign select_ln340_40_fu_3098_p3 = ((or_ln340_9_fu_3080_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_9_V_1_reg_4330);

assign select_ln340_41_fu_3182_p3 = ((or_ln340_10_fu_3164_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_10_V_1_reg_4354);

assign select_ln340_42_fu_3266_p3 = ((or_ln340_11_fu_3248_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_11_V_1_reg_4378);

assign select_ln340_43_fu_3350_p3 = ((or_ln340_12_fu_3332_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_12_V_1_reg_4402);

assign select_ln340_44_fu_3434_p3 = ((or_ln340_13_fu_3416_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_13_V_1_reg_4426);

assign select_ln340_45_fu_3518_p3 = ((or_ln340_14_fu_3500_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_14_V_1_reg_4450);

assign select_ln340_46_fu_3602_p3 = ((or_ln340_15_fu_3584_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_15_V_1_reg_4474);

assign select_ln340_65_fu_2356_p3 = ((or_ln340_32_fu_2336_p2[0:0] === 1'b1) ? select_ln340_fu_2342_p3 : top_buf_0_V_2_fu_2349_p3);

assign select_ln340_66_fu_2440_p3 = ((or_ln340_33_fu_2420_p2[0:0] === 1'b1) ? select_ln340_32_fu_2426_p3 : top_buf_1_V_2_fu_2433_p3);

assign select_ln340_67_fu_2524_p3 = ((or_ln340_34_fu_2504_p2[0:0] === 1'b1) ? select_ln340_33_fu_2510_p3 : top_buf_2_V_2_fu_2517_p3);

assign select_ln340_68_fu_2608_p3 = ((or_ln340_35_fu_2588_p2[0:0] === 1'b1) ? select_ln340_34_fu_2594_p3 : top_buf_3_V_2_fu_2601_p3);

assign select_ln340_69_fu_2692_p3 = ((or_ln340_36_fu_2672_p2[0:0] === 1'b1) ? select_ln340_35_fu_2678_p3 : top_buf_4_V_2_fu_2685_p3);

assign select_ln340_70_fu_2776_p3 = ((or_ln340_37_fu_2756_p2[0:0] === 1'b1) ? select_ln340_36_fu_2762_p3 : top_buf_5_V_2_fu_2769_p3);

assign select_ln340_71_fu_2860_p3 = ((or_ln340_38_fu_2840_p2[0:0] === 1'b1) ? select_ln340_37_fu_2846_p3 : top_buf_6_V_2_fu_2853_p3);

assign select_ln340_72_fu_2944_p3 = ((or_ln340_39_fu_2924_p2[0:0] === 1'b1) ? select_ln340_38_fu_2930_p3 : top_buf_7_V_2_fu_2937_p3);

assign select_ln340_73_fu_3028_p3 = ((or_ln340_40_fu_3008_p2[0:0] === 1'b1) ? select_ln340_39_fu_3014_p3 : top_buf_8_V_2_fu_3021_p3);

assign select_ln340_74_fu_3112_p3 = ((or_ln340_41_fu_3092_p2[0:0] === 1'b1) ? select_ln340_40_fu_3098_p3 : top_buf_9_V_2_fu_3105_p3);

assign select_ln340_75_fu_3196_p3 = ((or_ln340_42_fu_3176_p2[0:0] === 1'b1) ? select_ln340_41_fu_3182_p3 : top_buf_10_V_2_fu_3189_p3);

assign select_ln340_76_fu_3280_p3 = ((or_ln340_43_fu_3260_p2[0:0] === 1'b1) ? select_ln340_42_fu_3266_p3 : top_buf_11_V_2_fu_3273_p3);

assign select_ln340_77_fu_3364_p3 = ((or_ln340_44_fu_3344_p2[0:0] === 1'b1) ? select_ln340_43_fu_3350_p3 : top_buf_12_V_2_fu_3357_p3);

assign select_ln340_78_fu_3448_p3 = ((or_ln340_45_fu_3428_p2[0:0] === 1'b1) ? select_ln340_44_fu_3434_p3 : top_buf_13_V_2_fu_3441_p3);

assign select_ln340_79_fu_3532_p3 = ((or_ln340_46_fu_3512_p2[0:0] === 1'b1) ? select_ln340_45_fu_3518_p3 : top_buf_14_V_2_fu_3525_p3);

assign select_ln340_80_fu_3616_p3 = ((or_ln340_47_fu_3596_p2[0:0] === 1'b1) ? select_ln340_46_fu_3602_p3 : top_buf_15_V_2_fu_3609_p3);

assign select_ln340_fu_2342_p3 = ((or_ln340_fu_2324_p2[0:0] === 1'b1) ? 14'd8191 : top_buf_0_V_1_reg_4114);

assign sext_ln217_1_fu_1093_p1 = grp_fu_3626_p3;

assign sext_ln217_2_fu_1244_p1 = add_ln217_2_reg_3726;

assign sext_ln217_fu_1252_p1 = $signed(add_ln217_1_fu_1247_p2);

assign sext_ln727_10_fu_1964_p1 = top_buf_10_V_fu_1392_p3;

assign sext_ln727_11_fu_2017_p1 = top_buf_11_V_fu_1399_p3;

assign sext_ln727_12_fu_2070_p1 = top_buf_12_V_fu_1406_p3;

assign sext_ln727_13_fu_2123_p1 = top_buf_13_V_fu_1413_p3;

assign sext_ln727_14_fu_2176_p1 = top_buf_14_V_fu_1420_p3;

assign sext_ln727_15_fu_2229_p1 = top_buf_15_V_fu_1427_p3;

assign sext_ln727_1_fu_1487_p1 = top_buf_1_V_fu_1329_p3;

assign sext_ln727_2_fu_1540_p1 = top_buf_2_V_fu_1336_p3;

assign sext_ln727_3_fu_1593_p1 = top_buf_3_V_fu_1343_p3;

assign sext_ln727_4_fu_1646_p1 = top_buf_4_V_fu_1350_p3;

assign sext_ln727_5_fu_1699_p1 = top_buf_5_V_fu_1357_p3;

assign sext_ln727_6_fu_1752_p1 = top_buf_6_V_fu_1364_p3;

assign sext_ln727_7_fu_1805_p1 = top_buf_7_V_fu_1371_p3;

assign sext_ln727_8_fu_1858_p1 = top_buf_8_V_fu_1378_p3;

assign sext_ln727_9_fu_1911_p1 = top_buf_9_V_fu_1385_p3;

assign sext_ln727_fu_1434_p1 = top_buf_0_V_fu_1322_p3;

assign shl_ln211_1_fu_1067_p3 = {{trunc_ln211_fu_1063_p1}, {3'd0}};

assign shl_ln5_fu_1438_p3 = {{op_V_assign_reg_4028}, {8'd0}};

assign shl_ln728_31_fu_1544_p3 = {{op_V_assign_0_2_reg_4038}, {8'd0}};

assign shl_ln728_32_fu_1597_p3 = {{op_V_assign_0_3_reg_4043}, {8'd0}};

assign shl_ln728_33_fu_1650_p3 = {{op_V_assign_0_4_reg_4048}, {8'd0}};

assign shl_ln728_34_fu_1703_p3 = {{op_V_assign_0_5_reg_4053}, {8'd0}};

assign shl_ln728_35_fu_1756_p3 = {{op_V_assign_0_6_reg_4058}, {8'd0}};

assign shl_ln728_36_fu_1809_p3 = {{op_V_assign_0_7_reg_4063}, {8'd0}};

assign shl_ln728_37_fu_1862_p3 = {{op_V_assign_0_8_reg_4068}, {8'd0}};

assign shl_ln728_38_fu_1915_p3 = {{op_V_assign_0_9_reg_4073}, {8'd0}};

assign shl_ln728_39_fu_1968_p3 = {{op_V_assign_0_s_reg_4078}, {8'd0}};

assign shl_ln728_40_fu_2021_p3 = {{op_V_assign_0_10_reg_4083}, {8'd0}};

assign shl_ln728_41_fu_2074_p3 = {{op_V_assign_0_11_reg_4088}, {8'd0}};

assign shl_ln728_42_fu_2127_p3 = {{op_V_assign_0_12_reg_4093}, {8'd0}};

assign shl_ln728_43_fu_2180_p3 = {{op_V_assign_0_13_reg_4098}, {8'd0}};

assign shl_ln728_44_fu_2233_p3 = {{op_V_assign_0_14_reg_4103}, {8'd0}};

assign shl_ln728_s_fu_1491_p3 = {{op_V_assign_0_1_reg_4033}, {8'd0}};

assign shl_ln_fu_1033_p3 = {{tile_row}, {3'd0}};

assign sub_ln211_1_fu_1083_p2 = (zext_ln211_4_fu_1075_p1 - zext_ln211_5_fu_1079_p1);

assign sub_ln211_fu_1049_p2 = (zext_ln211_fu_1041_p1 - zext_ln211_1_fu_1045_p1);

assign tmp_163_fu_1260_p3 = {{add_ln203_reg_3720_pp0_iter5_reg}, {3'd0}};

assign tmp_fu_1205_p3 = select_ln213_1_fu_1194_p3[32'd1];

assign top_0_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_0_V_address1 = top_0_V_addr_reg_3836_pp0_iter7_reg;

assign top_0_V_d1 = select_ln340_65_fu_2356_p3;

assign top_10_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_10_V_address1 = top_10_V_addr_reg_3896_pp0_iter7_reg;

assign top_10_V_d1 = select_ln340_75_fu_3196_p3;

assign top_11_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_11_V_address1 = top_11_V_addr_reg_3902_pp0_iter7_reg;

assign top_11_V_d1 = select_ln340_76_fu_3280_p3;

assign top_12_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_12_V_address1 = top_12_V_addr_reg_3908_pp0_iter7_reg;

assign top_12_V_d1 = select_ln340_77_fu_3364_p3;

assign top_13_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_13_V_address1 = top_13_V_addr_reg_3914_pp0_iter7_reg;

assign top_13_V_d1 = select_ln340_78_fu_3448_p3;

assign top_14_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_14_V_address1 = top_14_V_addr_reg_3920_pp0_iter7_reg;

assign top_14_V_d1 = select_ln340_79_fu_3532_p3;

assign top_15_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_15_V_address1 = top_15_V_addr_reg_3926_pp0_iter7_reg;

assign top_15_V_d1 = select_ln340_80_fu_3616_p3;

assign top_16_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_16_V_address1 = top_16_V_addr_reg_3932_pp0_iter7_reg;

assign top_16_V_d1 = select_ln340_65_fu_2356_p3;

assign top_17_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_17_V_address1 = top_17_V_addr_reg_3938_pp0_iter7_reg;

assign top_17_V_d1 = select_ln340_66_fu_2440_p3;

assign top_18_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_18_V_address1 = top_18_V_addr_reg_3944_pp0_iter7_reg;

assign top_18_V_d1 = select_ln340_67_fu_2524_p3;

assign top_19_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_19_V_address1 = top_19_V_addr_reg_3950_pp0_iter7_reg;

assign top_19_V_d1 = select_ln340_68_fu_2608_p3;

assign top_1_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_1_V_address1 = top_1_V_addr_reg_3842_pp0_iter7_reg;

assign top_1_V_d1 = select_ln340_66_fu_2440_p3;

assign top_20_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_20_V_address1 = top_20_V_addr_reg_3956_pp0_iter7_reg;

assign top_20_V_d1 = select_ln340_69_fu_2692_p3;

assign top_21_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_21_V_address1 = top_21_V_addr_reg_3962_pp0_iter7_reg;

assign top_21_V_d1 = select_ln340_70_fu_2776_p3;

assign top_22_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_22_V_address1 = top_22_V_addr_reg_3968_pp0_iter7_reg;

assign top_22_V_d1 = select_ln340_71_fu_2860_p3;

assign top_23_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_23_V_address1 = top_23_V_addr_reg_3974_pp0_iter7_reg;

assign top_23_V_d1 = select_ln340_72_fu_2944_p3;

assign top_24_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_24_V_address1 = top_24_V_addr_reg_3980_pp0_iter7_reg;

assign top_24_V_d1 = select_ln340_73_fu_3028_p3;

assign top_25_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_25_V_address1 = top_25_V_addr_reg_3986_pp0_iter7_reg;

assign top_25_V_d1 = select_ln340_74_fu_3112_p3;

assign top_26_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_26_V_address1 = top_26_V_addr_reg_3992_pp0_iter7_reg;

assign top_26_V_d1 = select_ln340_75_fu_3196_p3;

assign top_27_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_27_V_address1 = top_27_V_addr_reg_3998_pp0_iter7_reg;

assign top_27_V_d1 = select_ln340_76_fu_3280_p3;

assign top_28_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_28_V_address1 = top_28_V_addr_reg_4004_pp0_iter7_reg;

assign top_28_V_d1 = select_ln340_77_fu_3364_p3;

assign top_29_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_29_V_address1 = top_29_V_addr_reg_4010_pp0_iter7_reg;

assign top_29_V_d1 = select_ln340_78_fu_3448_p3;

assign top_2_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_2_V_address1 = top_2_V_addr_reg_3848_pp0_iter7_reg;

assign top_2_V_d1 = select_ln340_67_fu_2524_p3;

assign top_30_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_30_V_address1 = top_30_V_addr_reg_4016_pp0_iter7_reg;

assign top_30_V_d1 = select_ln340_79_fu_3532_p3;

assign top_31_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_31_V_address1 = top_31_V_addr_reg_4022_pp0_iter7_reg;

assign top_31_V_d1 = select_ln340_80_fu_3616_p3;

assign top_3_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_3_V_address1 = top_3_V_addr_reg_3854_pp0_iter7_reg;

assign top_3_V_d1 = select_ln340_68_fu_2608_p3;

assign top_4_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_4_V_address1 = top_4_V_addr_reg_3860_pp0_iter7_reg;

assign top_4_V_d1 = select_ln340_69_fu_2692_p3;

assign top_5_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_5_V_address1 = top_5_V_addr_reg_3866_pp0_iter7_reg;

assign top_5_V_d1 = select_ln340_70_fu_2776_p3;

assign top_6_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_6_V_address1 = top_6_V_addr_reg_3872_pp0_iter7_reg;

assign top_6_V_d1 = select_ln340_71_fu_2860_p3;

assign top_7_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_7_V_address1 = top_7_V_addr_reg_3878_pp0_iter7_reg;

assign top_7_V_d1 = select_ln340_72_fu_2944_p3;

assign top_8_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_8_V_address1 = top_8_V_addr_reg_3884_pp0_iter7_reg;

assign top_8_V_d1 = select_ln340_73_fu_3028_p3;

assign top_9_V_address0 = zext_ln203_3_fu_1286_p1;

assign top_9_V_address1 = top_9_V_addr_reg_3890_pp0_iter7_reg;

assign top_9_V_d1 = select_ln340_74_fu_3112_p3;

assign top_buf_0_V_1_fu_1463_p2 = ($signed(top_buf_0_V_fu_1322_p3) + $signed(shl_ln5_fu_1438_p3));

assign top_buf_0_V_2_fu_2349_p3 = ((and_ln786_fu_2319_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_0_V_1_reg_4114);

assign top_buf_0_V_fu_1322_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_16_V_q0 : top_0_V_q0);

assign top_buf_10_V_1_fu_1993_p2 = ($signed(top_buf_10_V_fu_1392_p3) + $signed(shl_ln728_39_fu_1968_p3));

assign top_buf_10_V_2_fu_3189_p3 = ((and_ln786_42_fu_3159_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_10_V_1_reg_4354);

assign top_buf_10_V_fu_1392_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_26_V_q0 : top_10_V_q0);

assign top_buf_11_V_1_fu_2046_p2 = ($signed(top_buf_11_V_fu_1399_p3) + $signed(shl_ln728_40_fu_2021_p3));

assign top_buf_11_V_2_fu_3273_p3 = ((and_ln786_43_fu_3243_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_11_V_1_reg_4378);

assign top_buf_11_V_fu_1399_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_27_V_q0 : top_11_V_q0);

assign top_buf_12_V_1_fu_2099_p2 = ($signed(top_buf_12_V_fu_1406_p3) + $signed(shl_ln728_41_fu_2074_p3));

assign top_buf_12_V_2_fu_3357_p3 = ((and_ln786_44_fu_3327_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_12_V_1_reg_4402);

assign top_buf_12_V_fu_1406_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_28_V_q0 : top_12_V_q0);

assign top_buf_13_V_1_fu_2152_p2 = ($signed(top_buf_13_V_fu_1413_p3) + $signed(shl_ln728_42_fu_2127_p3));

assign top_buf_13_V_2_fu_3441_p3 = ((and_ln786_45_fu_3411_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_13_V_1_reg_4426);

assign top_buf_13_V_fu_1413_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_29_V_q0 : top_13_V_q0);

assign top_buf_14_V_1_fu_2205_p2 = ($signed(top_buf_14_V_fu_1420_p3) + $signed(shl_ln728_43_fu_2180_p3));

assign top_buf_14_V_2_fu_3525_p3 = ((and_ln786_46_fu_3495_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_14_V_1_reg_4450);

assign top_buf_14_V_fu_1420_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_30_V_q0 : top_14_V_q0);

assign top_buf_15_V_1_fu_2258_p2 = ($signed(top_buf_15_V_fu_1427_p3) + $signed(shl_ln728_44_fu_2233_p3));

assign top_buf_15_V_2_fu_3609_p3 = ((and_ln786_47_fu_3579_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_15_V_1_reg_4474);

assign top_buf_15_V_fu_1427_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_31_V_q0 : top_15_V_q0);

assign top_buf_1_V_1_fu_1516_p2 = ($signed(top_buf_1_V_fu_1329_p3) + $signed(shl_ln728_s_fu_1491_p3));

assign top_buf_1_V_2_fu_2433_p3 = ((and_ln786_33_fu_2403_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_1_V_1_reg_4138);

assign top_buf_1_V_fu_1329_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_17_V_q0 : top_1_V_q0);

assign top_buf_2_V_1_fu_1569_p2 = ($signed(top_buf_2_V_fu_1336_p3) + $signed(shl_ln728_31_fu_1544_p3));

assign top_buf_2_V_2_fu_2517_p3 = ((and_ln786_34_fu_2487_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_2_V_1_reg_4162);

assign top_buf_2_V_fu_1336_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_18_V_q0 : top_2_V_q0);

assign top_buf_3_V_1_fu_1622_p2 = ($signed(top_buf_3_V_fu_1343_p3) + $signed(shl_ln728_32_fu_1597_p3));

assign top_buf_3_V_2_fu_2601_p3 = ((and_ln786_35_fu_2571_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_3_V_1_reg_4186);

assign top_buf_3_V_fu_1343_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_19_V_q0 : top_3_V_q0);

assign top_buf_4_V_1_fu_1675_p2 = ($signed(top_buf_4_V_fu_1350_p3) + $signed(shl_ln728_33_fu_1650_p3));

assign top_buf_4_V_2_fu_2685_p3 = ((and_ln786_36_fu_2655_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_4_V_1_reg_4210);

assign top_buf_4_V_fu_1350_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_20_V_q0 : top_4_V_q0);

assign top_buf_5_V_1_fu_1728_p2 = ($signed(top_buf_5_V_fu_1357_p3) + $signed(shl_ln728_34_fu_1703_p3));

assign top_buf_5_V_2_fu_2769_p3 = ((and_ln786_37_fu_2739_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_5_V_1_reg_4234);

assign top_buf_5_V_fu_1357_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_21_V_q0 : top_5_V_q0);

assign top_buf_6_V_1_fu_1781_p2 = ($signed(top_buf_6_V_fu_1364_p3) + $signed(shl_ln728_35_fu_1756_p3));

assign top_buf_6_V_2_fu_2853_p3 = ((and_ln786_38_fu_2823_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_6_V_1_reg_4258);

assign top_buf_6_V_fu_1364_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_22_V_q0 : top_6_V_q0);

assign top_buf_7_V_1_fu_1834_p2 = ($signed(top_buf_7_V_fu_1371_p3) + $signed(shl_ln728_36_fu_1809_p3));

assign top_buf_7_V_2_fu_2937_p3 = ((and_ln786_39_fu_2907_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_7_V_1_reg_4282);

assign top_buf_7_V_fu_1371_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_23_V_q0 : top_7_V_q0);

assign top_buf_8_V_1_fu_1887_p2 = ($signed(top_buf_8_V_fu_1378_p3) + $signed(shl_ln728_37_fu_1862_p3));

assign top_buf_8_V_2_fu_3021_p3 = ((and_ln786_40_fu_2991_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_8_V_1_reg_4306);

assign top_buf_8_V_fu_1378_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_24_V_q0 : top_8_V_q0);

assign top_buf_9_V_1_fu_1940_p2 = ($signed(top_buf_9_V_fu_1385_p3) + $signed(shl_ln728_38_fu_1915_p3));

assign top_buf_9_V_2_fu_3105_p3 = ((and_ln786_41_fu_3075_p2[0:0] === 1'b1) ? 14'd8192 : top_buf_9_V_1_reg_4330);

assign top_buf_9_V_fu_1385_p3 = ((trunc_ln213_reg_3695_pp0_iter6_reg[0:0] === 1'b1) ? top_25_V_q0 : top_9_V_q0);

assign trunc_ln211_fu_1063_p1 = tile_col[3:0];

assign trunc_ln213_fu_1201_p1 = select_ln213_1_fu_1194_p3[0:0];

assign weight_buf_1x1_V_0_0_address0 = 3'd0;

assign weight_buf_1x1_V_0_0_address1 = 3'd1;

assign weight_buf_1x1_V_0_1_address0 = 3'd0;

assign weight_buf_1x1_V_0_1_address1 = 3'd1;

assign weight_buf_1x1_V_0_2_address0 = 3'd0;

assign weight_buf_1x1_V_0_2_address1 = 3'd1;

assign weight_buf_1x1_V_0_3_address0 = 3'd0;

assign weight_buf_1x1_V_0_3_address1 = 3'd1;

assign weight_buf_1x1_V_0_4_address0 = 3'd0;

assign weight_buf_1x1_V_0_4_address1 = 3'd1;

assign weight_buf_1x1_V_0_5_address0 = 3'd0;

assign weight_buf_1x1_V_0_5_address1 = 3'd1;

assign weight_buf_1x1_V_0_6_address0 = 3'd0;

assign weight_buf_1x1_V_0_6_address1 = 3'd1;

assign weight_buf_1x1_V_0_7_address0 = 3'd0;

assign weight_buf_1x1_V_0_7_address1 = 3'd1;

assign xor_ln213_fu_1122_p2 = (icmp_ln214_fu_1108_p2 ^ 1'd1);

assign xor_ln340_32_fu_2414_p2 = (1'd1 ^ and_ln786_33_fu_2403_p2);

assign xor_ln340_33_fu_2498_p2 = (1'd1 ^ and_ln786_34_fu_2487_p2);

assign xor_ln340_34_fu_2582_p2 = (1'd1 ^ and_ln786_35_fu_2571_p2);

assign xor_ln340_35_fu_2666_p2 = (1'd1 ^ and_ln786_36_fu_2655_p2);

assign xor_ln340_36_fu_2750_p2 = (1'd1 ^ and_ln786_37_fu_2739_p2);

assign xor_ln340_37_fu_2834_p2 = (1'd1 ^ and_ln786_38_fu_2823_p2);

assign xor_ln340_38_fu_2918_p2 = (1'd1 ^ and_ln786_39_fu_2907_p2);

assign xor_ln340_39_fu_3002_p2 = (1'd1 ^ and_ln786_40_fu_2991_p2);

assign xor_ln340_40_fu_3086_p2 = (1'd1 ^ and_ln786_41_fu_3075_p2);

assign xor_ln340_41_fu_3170_p2 = (1'd1 ^ and_ln786_42_fu_3159_p2);

assign xor_ln340_42_fu_3254_p2 = (1'd1 ^ and_ln786_43_fu_3243_p2);

assign xor_ln340_43_fu_3338_p2 = (1'd1 ^ and_ln786_44_fu_3327_p2);

assign xor_ln340_44_fu_3422_p2 = (1'd1 ^ and_ln786_45_fu_3411_p2);

assign xor_ln340_45_fu_3506_p2 = (1'd1 ^ and_ln786_46_fu_3495_p2);

assign xor_ln340_46_fu_3590_p2 = (1'd1 ^ and_ln786_47_fu_3579_p2);

assign xor_ln340_fu_2330_p2 = (1'd1 ^ and_ln786_fu_2319_p2);

assign xor_ln785_10_fu_3132_p2 = (tmp_184_reg_4348 ^ 1'd1);

assign xor_ln785_11_fu_3216_p2 = (tmp_186_reg_4372 ^ 1'd1);

assign xor_ln785_12_fu_3300_p2 = (tmp_188_reg_4396 ^ 1'd1);

assign xor_ln785_13_fu_3384_p2 = (tmp_190_reg_4420 ^ 1'd1);

assign xor_ln785_14_fu_3468_p2 = (tmp_192_reg_4444 ^ 1'd1);

assign xor_ln785_15_fu_3552_p2 = (tmp_194_reg_4468 ^ 1'd1);

assign xor_ln785_1_fu_2376_p2 = (tmp_166_reg_4132 ^ 1'd1);

assign xor_ln785_2_fu_2460_p2 = (tmp_168_reg_4156 ^ 1'd1);

assign xor_ln785_3_fu_2544_p2 = (tmp_170_reg_4180 ^ 1'd1);

assign xor_ln785_4_fu_2628_p2 = (tmp_172_reg_4204 ^ 1'd1);

assign xor_ln785_5_fu_2712_p2 = (tmp_174_reg_4228 ^ 1'd1);

assign xor_ln785_6_fu_2796_p2 = (tmp_176_reg_4252 ^ 1'd1);

assign xor_ln785_7_fu_2880_p2 = (tmp_178_reg_4276 ^ 1'd1);

assign xor_ln785_8_fu_2964_p2 = (tmp_180_reg_4300 ^ 1'd1);

assign xor_ln785_9_fu_3048_p2 = (tmp_182_reg_4324 ^ 1'd1);

assign xor_ln785_fu_2292_p2 = (tmp_164_reg_4108 ^ 1'd1);

assign xor_ln786_10_fu_3143_p2 = (tmp_185_reg_4360 ^ 1'd1);

assign xor_ln786_11_fu_3227_p2 = (tmp_187_reg_4384 ^ 1'd1);

assign xor_ln786_12_fu_3311_p2 = (tmp_189_reg_4408 ^ 1'd1);

assign xor_ln786_13_fu_3395_p2 = (tmp_191_reg_4432 ^ 1'd1);

assign xor_ln786_14_fu_3479_p2 = (tmp_193_reg_4456 ^ 1'd1);

assign xor_ln786_15_fu_3563_p2 = (tmp_195_reg_4480 ^ 1'd1);

assign xor_ln786_1_fu_2387_p2 = (tmp_167_reg_4144 ^ 1'd1);

assign xor_ln786_2_fu_2471_p2 = (tmp_169_reg_4168 ^ 1'd1);

assign xor_ln786_3_fu_2555_p2 = (tmp_171_reg_4192 ^ 1'd1);

assign xor_ln786_4_fu_2639_p2 = (tmp_173_reg_4216 ^ 1'd1);

assign xor_ln786_5_fu_2723_p2 = (tmp_175_reg_4240 ^ 1'd1);

assign xor_ln786_6_fu_2807_p2 = (tmp_177_reg_4264 ^ 1'd1);

assign xor_ln786_7_fu_2891_p2 = (tmp_179_reg_4288 ^ 1'd1);

assign xor_ln786_8_fu_2975_p2 = (tmp_181_reg_4312 ^ 1'd1);

assign xor_ln786_9_fu_3059_p2 = (tmp_183_reg_4336 ^ 1'd1);

assign xor_ln786_fu_2303_p2 = (tmp_165_reg_4120 ^ 1'd1);

assign zext_ln203_1_fu_1267_p1 = tmp_163_fu_1260_p3;

assign zext_ln203_2_fu_1277_p1 = select_ln214_reg_3667_pp0_iter5_reg;

assign zext_ln203_3_fu_1286_p1 = add_ln203_2_fu_1280_p2;

assign zext_ln203_fu_1257_p1 = add_ln203_reg_3720_pp0_iter5_reg;

assign zext_ln211_1_fu_1045_p1 = tile_row;

assign zext_ln211_4_fu_1075_p1 = shl_ln211_1_fu_1067_p3;

assign zext_ln211_5_fu_1079_p1 = tile_col;

assign zext_ln211_fu_1041_p1 = shl_ln_fu_1033_p3;

assign zext_ln214_1_fu_1229_p1 = select_ln214_1_reg_3673;

assign zext_ln214_fu_1221_p1 = select_ln214_1_reg_3673;

assign zext_ln728_10_fu_1975_p1 = shl_ln728_39_fu_1968_p3;

assign zext_ln728_11_fu_2028_p1 = shl_ln728_40_fu_2021_p3;

assign zext_ln728_12_fu_2081_p1 = shl_ln728_41_fu_2074_p3;

assign zext_ln728_13_fu_2134_p1 = shl_ln728_42_fu_2127_p3;

assign zext_ln728_14_fu_2187_p1 = shl_ln728_43_fu_2180_p3;

assign zext_ln728_15_fu_2240_p1 = shl_ln728_44_fu_2233_p3;

assign zext_ln728_1_fu_1498_p1 = shl_ln728_s_fu_1491_p3;

assign zext_ln728_2_fu_1551_p1 = shl_ln728_31_fu_1544_p3;

assign zext_ln728_3_fu_1604_p1 = shl_ln728_32_fu_1597_p3;

assign zext_ln728_4_fu_1657_p1 = shl_ln728_33_fu_1650_p3;

assign zext_ln728_5_fu_1710_p1 = shl_ln728_34_fu_1703_p3;

assign zext_ln728_6_fu_1763_p1 = shl_ln728_35_fu_1756_p3;

assign zext_ln728_7_fu_1816_p1 = shl_ln728_36_fu_1809_p3;

assign zext_ln728_8_fu_1869_p1 = shl_ln728_37_fu_1862_p3;

assign zext_ln728_9_fu_1922_p1 = shl_ln728_38_fu_1915_p3;

assign zext_ln728_fu_1445_p1 = shl_ln5_fu_1438_p3;

endmodule //pgconv64_1x1_1bit
