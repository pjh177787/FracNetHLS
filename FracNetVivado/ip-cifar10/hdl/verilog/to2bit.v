// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module to2bit (
        ap_clk,
        ap_rst,
        x_V,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [23:0] x_V;
output  [1:0] ap_return;

reg   [0:0] p_Result_s_reg_254;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] temp_V_1_fu_130_p2;
reg   [1:0] temp_V_1_reg_261;
wire   [0:0] carry_1_fu_150_p2;
reg   [0:0] carry_1_reg_267;
wire   [0:0] Range1_all_ones_fu_166_p2;
reg   [0:0] Range1_all_ones_reg_273;
wire   [0:0] Range1_all_zeros_fu_172_p2;
reg   [0:0] Range1_all_zeros_reg_279;
wire    ap_block_pp0_stage0;
wire  signed [24:0] sext_ln703_fu_52_p1;
wire   [24:0] ret_V_fu_56_p2;
wire   [45:0] tmp_1_fu_62_p3;
wire   [43:0] tmp_2_fu_74_p3;
wire  signed [46:0] sext_ln1118_fu_70_p1;
wire  signed [46:0] sext_ln1118_1_fu_82_p1;
wire   [46:0] r_V_fu_86_p2;
wire   [0:0] tmp_5_fu_118_p3;
wire   [1:0] zext_ln415_fu_126_p1;
wire   [1:0] temp_V_fu_100_p4;
wire   [0:0] tmp_6_fu_136_p3;
wire   [0:0] p_Result_1_fu_110_p3;
wire   [0:0] xor_ln416_fu_144_p2;
wire   [8:0] tmp_fu_156_p4;
wire   [0:0] and_ln781_fu_183_p2;
wire   [0:0] xor_ln781_fu_187_p2;
wire   [0:0] deleted_zeros_fu_178_p3;
wire   [0:0] or_ln785_fu_198_p2;
wire   [0:0] xor_ln340_fu_209_p2;
wire   [0:0] or_ln340_1_fu_214_p2;
wire   [0:0] overflow_fu_203_p2;
wire   [0:0] and_ln340_fu_220_p2;
wire   [0:0] neg_src_fu_193_p2;
wire   [0:0] or_ln340_fu_226_p2;
wire   [1:0] select_ln340_fu_232_p3;
wire   [1:0] select_ln396_fu_239_p3;

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Range1_all_ones_reg_273 <= Range1_all_ones_fu_166_p2;
        Range1_all_zeros_reg_279 <= Range1_all_zeros_fu_172_p2;
        carry_1_reg_267 <= carry_1_fu_150_p2;
        p_Result_s_reg_254 <= r_V_fu_86_p2[32'd44];
        temp_V_1_reg_261 <= temp_V_1_fu_130_p2;
    end
end

assign Range1_all_ones_fu_166_p2 = ((tmp_fu_156_p4 == 9'd511) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_172_p2 = ((tmp_fu_156_p4 == 9'd0) ? 1'b1 : 1'b0);

assign and_ln340_fu_220_p2 = (or_ln785_fu_198_p2 & or_ln340_1_fu_214_p2);

assign and_ln781_fu_183_p2 = (carry_1_reg_267 & Range1_all_ones_reg_273);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_return = ((or_ln340_fu_226_p2[0:0] === 1'b1) ? select_ln340_fu_232_p3 : select_ln396_fu_239_p3);

assign carry_1_fu_150_p2 = (xor_ln416_fu_144_p2 & p_Result_1_fu_110_p3);

assign deleted_zeros_fu_178_p3 = ((carry_1_reg_267[0:0] === 1'b1) ? Range1_all_ones_reg_273 : Range1_all_zeros_reg_279);

assign neg_src_fu_193_p2 = (xor_ln781_fu_187_p2 & p_Result_s_reg_254);

assign or_ln340_1_fu_214_p2 = (xor_ln340_fu_209_p2 | and_ln781_fu_183_p2);

assign or_ln340_fu_226_p2 = (overflow_fu_203_p2 | or_ln340_1_fu_214_p2);

assign or_ln785_fu_198_p2 = (p_Result_s_reg_254 | deleted_zeros_fu_178_p3);

assign overflow_fu_203_p2 = (or_ln785_fu_198_p2 ^ 1'd1);

assign p_Result_1_fu_110_p3 = r_V_fu_86_p2[32'd37];

assign r_V_fu_86_p2 = ($signed(sext_ln1118_fu_70_p1) - $signed(sext_ln1118_1_fu_82_p1));

assign ret_V_fu_56_p2 = ($signed(25'd65536) + $signed(sext_ln703_fu_52_p1));

assign select_ln340_fu_232_p3 = ((and_ln340_fu_220_p2[0:0] === 1'b1) ? temp_V_1_reg_261 : 2'd3);

assign select_ln396_fu_239_p3 = ((neg_src_fu_193_p2[0:0] === 1'b1) ? 2'd0 : temp_V_1_reg_261);

assign sext_ln1118_1_fu_82_p1 = $signed(tmp_2_fu_74_p3);

assign sext_ln1118_fu_70_p1 = $signed(tmp_1_fu_62_p3);

assign sext_ln703_fu_52_p1 = $signed(x_V);

assign temp_V_1_fu_130_p2 = (zext_ln415_fu_126_p1 + temp_V_fu_100_p4);

assign temp_V_fu_100_p4 = {{r_V_fu_86_p2[37:36]}};

assign tmp_1_fu_62_p3 = {{ret_V_fu_56_p2}, {21'd0}};

assign tmp_2_fu_74_p3 = {{ret_V_fu_56_p2}, {19'd0}};

assign tmp_5_fu_118_p3 = r_V_fu_86_p2[32'd35];

assign tmp_6_fu_136_p3 = temp_V_1_fu_130_p2[32'd1];

assign tmp_fu_156_p4 = {{r_V_fu_86_p2[46:38]}};

assign xor_ln340_fu_209_p2 = (p_Result_s_reg_254 ^ 1'd1);

assign xor_ln416_fu_144_p2 = (tmp_6_fu_136_p3 ^ 1'd1);

assign xor_ln781_fu_187_p2 = (1'd1 ^ and_ln781_fu_183_p2);

assign zext_ln415_fu_126_p1 = tmp_5_fu_118_p3;

endmodule //to2bit
