// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module quant_and_pack (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        prior_outputs_0_V_address0,
        prior_outputs_0_V_ce0,
        prior_outputs_0_V_q0,
        prior_outputs_1_V_address0,
        prior_outputs_1_V_ce0,
        prior_outputs_1_V_q0,
        prior_outputs_2_V_address0,
        prior_outputs_2_V_ce0,
        prior_outputs_2_V_q0,
        prior_outputs_3_V_address0,
        prior_outputs_3_V_ce0,
        prior_outputs_3_V_q0,
        prior_outputs_4_V_address0,
        prior_outputs_4_V_ce0,
        prior_outputs_4_V_q0,
        prior_outputs_5_V_address0,
        prior_outputs_5_V_ce0,
        prior_outputs_5_V_q0,
        prior_outputs_6_V_address0,
        prior_outputs_6_V_ce0,
        prior_outputs_6_V_q0,
        prior_outputs_7_V_address0,
        prior_outputs_7_V_ce0,
        prior_outputs_7_V_q0,
        msb_buffer_0_V_address0,
        msb_buffer_0_V_ce0,
        msb_buffer_0_V_q0,
        msb_buffer_0_V_address1,
        msb_buffer_0_V_ce1,
        msb_buffer_0_V_we1,
        msb_buffer_0_V_d1,
        lsb_buffer_V_address0,
        lsb_buffer_V_ce0,
        lsb_buffer_V_q0,
        lsb_buffer_V_address1,
        lsb_buffer_V_ce1,
        lsb_buffer_V_we1,
        lsb_buffer_V_d1,
        H_fmap,
        in_channels
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] prior_outputs_0_V_address0;
output   prior_outputs_0_V_ce0;
input  [23:0] prior_outputs_0_V_q0;
output  [13:0] prior_outputs_1_V_address0;
output   prior_outputs_1_V_ce0;
input  [23:0] prior_outputs_1_V_q0;
output  [13:0] prior_outputs_2_V_address0;
output   prior_outputs_2_V_ce0;
input  [23:0] prior_outputs_2_V_q0;
output  [13:0] prior_outputs_3_V_address0;
output   prior_outputs_3_V_ce0;
input  [23:0] prior_outputs_3_V_q0;
output  [13:0] prior_outputs_4_V_address0;
output   prior_outputs_4_V_ce0;
input  [23:0] prior_outputs_4_V_q0;
output  [13:0] prior_outputs_5_V_address0;
output   prior_outputs_5_V_ce0;
input  [23:0] prior_outputs_5_V_q0;
output  [13:0] prior_outputs_6_V_address0;
output   prior_outputs_6_V_ce0;
input  [23:0] prior_outputs_6_V_q0;
output  [13:0] prior_outputs_7_V_address0;
output   prior_outputs_7_V_ce0;
input  [23:0] prior_outputs_7_V_q0;
output  [10:0] msb_buffer_0_V_address0;
output   msb_buffer_0_V_ce0;
input  [63:0] msb_buffer_0_V_q0;
output  [10:0] msb_buffer_0_V_address1;
output   msb_buffer_0_V_ce1;
output   msb_buffer_0_V_we1;
output  [63:0] msb_buffer_0_V_d1;
output  [10:0] lsb_buffer_V_address0;
output   lsb_buffer_V_ce0;
input  [63:0] lsb_buffer_V_q0;
output  [10:0] lsb_buffer_V_address1;
output   lsb_buffer_V_ce1;
output   lsb_buffer_V_we1;
output  [63:0] lsb_buffer_V_d1;
input  [6:0] H_fmap;
input  [7:0] in_channels;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg prior_outputs_0_V_ce0;
reg prior_outputs_1_V_ce0;
reg prior_outputs_2_V_ce0;
reg prior_outputs_3_V_ce0;
reg prior_outputs_4_V_ce0;
reg prior_outputs_5_V_ce0;
reg prior_outputs_6_V_ce0;
reg prior_outputs_7_V_ce0;
reg msb_buffer_0_V_ce0;
reg msb_buffer_0_V_ce1;
reg msb_buffer_0_V_we1;
reg[63:0] msb_buffer_0_V_d1;
reg lsb_buffer_V_ce0;
reg lsb_buffer_V_ce1;
reg lsb_buffer_V_we1;
reg[63:0] lsb_buffer_V_d1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] indvar_flatten16_reg_272;
reg   [3:0] ch_t_0_reg_283;
reg   [11:0] indvar_flatten_reg_294;
reg   [5:0] row_0_reg_305;
reg   [5:0] col_0_reg_316;
wire   [5:0] empty_fu_463_p1;
reg   [5:0] empty_reg_1434;
wire   [11:0] mul_ln25_fu_475_p2;
reg   [11:0] mul_ln25_reg_1439;
wire   [14:0] tmp_4_fu_481_p3;
reg   [14:0] tmp_4_reg_1444;
wire   [0:0] icmp_ln36_fu_489_p2;
reg   [0:0] icmp_ln36_reg_1449;
wire   [0:0] icmp_ln34_fu_621_p2;
reg   [0:0] icmp_ln34_reg_1454;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln34_reg_1454_pp0_iter1_reg;
reg   [0:0] icmp_ln34_reg_1454_pp0_iter2_reg;
reg   [0:0] icmp_ln34_reg_1454_pp0_iter3_reg;
wire   [14:0] add_ln34_fu_626_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] select_ln34_1_fu_667_p3;
reg   [3:0] select_ln34_1_reg_1463;
wire   [0:0] select_ln34_2_fu_680_p3;
reg   [0:0] select_ln34_2_reg_1470;
reg   [0:0] select_ln34_2_reg_1470_pp0_iter1_reg;
reg   [0:0] select_ln34_2_reg_1470_pp0_iter2_reg;
reg   [0:0] select_ln34_2_reg_1470_pp0_iter3_reg;
wire   [5:0] select_ln34_3_fu_688_p3;
reg   [5:0] select_ln34_3_reg_1474;
reg   [5:0] select_ln34_3_reg_1474_pp0_iter1_reg;
reg   [5:0] select_ln34_3_reg_1474_pp0_iter2_reg;
reg   [5:0] select_ln34_3_reg_1474_pp0_iter3_reg;
wire   [0:0] select_ln34_4_fu_711_p3;
reg   [0:0] select_ln34_4_reg_1486;
reg   [0:0] select_ln34_4_reg_1486_pp0_iter1_reg;
reg   [0:0] select_ln34_4_reg_1486_pp0_iter2_reg;
reg   [0:0] select_ln34_4_reg_1486_pp0_iter3_reg;
wire   [0:0] select_ln34_5_fu_734_p3;
reg   [0:0] select_ln34_5_reg_1490;
reg   [0:0] select_ln34_5_reg_1490_pp0_iter1_reg;
reg   [0:0] select_ln34_5_reg_1490_pp0_iter2_reg;
reg   [0:0] select_ln34_5_reg_1490_pp0_iter3_reg;
wire   [0:0] select_ln34_6_fu_757_p3;
reg   [0:0] select_ln34_6_reg_1494;
reg   [0:0] select_ln34_6_reg_1494_pp0_iter1_reg;
reg   [0:0] select_ln34_6_reg_1494_pp0_iter2_reg;
reg   [0:0] select_ln34_6_reg_1494_pp0_iter3_reg;
wire   [0:0] select_ln34_7_fu_780_p3;
reg   [0:0] select_ln34_7_reg_1498;
reg   [0:0] select_ln34_7_reg_1498_pp0_iter1_reg;
reg   [0:0] select_ln34_7_reg_1498_pp0_iter2_reg;
reg   [0:0] select_ln34_7_reg_1498_pp0_iter3_reg;
wire   [0:0] select_ln34_8_fu_803_p3;
reg   [0:0] select_ln34_8_reg_1502;
reg   [0:0] select_ln34_8_reg_1502_pp0_iter1_reg;
reg   [0:0] select_ln34_8_reg_1502_pp0_iter2_reg;
reg   [0:0] select_ln34_8_reg_1502_pp0_iter3_reg;
wire   [0:0] select_ln34_9_fu_826_p3;
reg   [0:0] select_ln34_9_reg_1506;
reg   [0:0] select_ln34_9_reg_1506_pp0_iter1_reg;
reg   [0:0] select_ln34_9_reg_1506_pp0_iter2_reg;
reg   [0:0] select_ln34_9_reg_1506_pp0_iter3_reg;
wire   [0:0] select_ln34_10_fu_849_p3;
reg   [0:0] select_ln34_10_reg_1510;
reg   [0:0] select_ln34_10_reg_1510_pp0_iter1_reg;
reg   [0:0] select_ln34_10_reg_1510_pp0_iter2_reg;
reg   [0:0] select_ln34_10_reg_1510_pp0_iter3_reg;
wire   [5:0] select_ln35_fu_881_p3;
reg   [5:0] select_ln35_reg_1514;
reg   [5:0] select_ln35_reg_1514_pp0_iter1_reg;
reg   [5:0] select_ln35_reg_1514_pp0_iter2_reg;
wire   [5:0] select_ln35_1_fu_889_p3;
reg   [5:0] select_ln35_1_reg_1520;
reg   [5:0] select_ln35_1_reg_1520_pp0_iter1_reg;
reg   [5:0] select_ln35_1_reg_1520_pp0_iter2_reg;
wire   [5:0] col_fu_897_p2;
wire   [11:0] select_ln35_2_fu_909_p3;
reg   [23:0] prior_outputs_0_V_l_reg_1578;
reg   [23:0] prior_outputs_1_V_l_reg_1583;
reg   [23:0] prior_outputs_2_V_l_reg_1588;
reg   [23:0] prior_outputs_3_V_l_reg_1593;
reg   [23:0] prior_outputs_4_V_l_reg_1598;
reg   [23:0] prior_outputs_5_V_l_reg_1603;
reg   [23:0] prior_outputs_6_V_l_reg_1608;
reg   [23:0] prior_outputs_7_V_l_reg_1613;
reg   [10:0] msb_buffer_0_V_addr_reg_1618;
reg   [10:0] lsb_buffer_V_addr_reg_1624;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire   [1:0] grp_to2bit_fu_415_ap_return;
wire   [1:0] grp_to2bit_fu_421_ap_return;
wire   [1:0] grp_to2bit_fu_427_ap_return;
wire   [1:0] grp_to2bit_fu_433_ap_return;
wire   [1:0] grp_to2bit_fu_439_ap_return;
wire   [1:0] grp_to2bit_fu_445_ap_return;
wire   [1:0] grp_to2bit_fu_451_ap_return;
wire   [1:0] grp_to2bit_fu_457_ap_return;
reg   [3:0] ap_phi_mux_ch_t_0_phi_fu_287_p4;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_row_0_phi_fu_309_p4;
reg   [1:0] ap_phi_mux_p_Val2_0_phi_fu_331_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_0_reg_327;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_0_reg_327;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_0_reg_327;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_0_reg_327;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_0_reg_327;
reg   [1:0] ap_phi_mux_p_Val2_1_phi_fu_342_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_1_reg_338;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_1_reg_338;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_1_reg_338;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_1_reg_338;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_1_reg_338;
reg   [1:0] ap_phi_mux_p_Val2_2_phi_fu_353_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_2_reg_349;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_2_reg_349;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_2_reg_349;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_2_reg_349;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_2_reg_349;
reg   [1:0] ap_phi_mux_p_Val2_3_phi_fu_364_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_3_reg_360;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_3_reg_360;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_3_reg_360;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_3_reg_360;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_3_reg_360;
reg   [1:0] ap_phi_mux_p_Val2_4_phi_fu_375_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_4_reg_371;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_4_reg_371;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_4_reg_371;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_4_reg_371;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_4_reg_371;
reg   [1:0] ap_phi_mux_p_Val2_59_phi_fu_386_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_59_reg_382;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_59_reg_382;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_59_reg_382;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_59_reg_382;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_59_reg_382;
reg   [1:0] ap_phi_mux_p_Val2_610_phi_fu_397_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_610_reg_393;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_610_reg_393;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_610_reg_393;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_610_reg_393;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_610_reg_393;
reg   [1:0] ap_phi_mux_p_Val2_7_phi_fu_408_p4;
reg   [1:0] ap_phi_reg_pp0_iter4_p_Val2_7_reg_404;
wire   [1:0] ap_phi_reg_pp0_iter0_p_Val2_7_reg_404;
reg   [1:0] ap_phi_reg_pp0_iter1_p_Val2_7_reg_404;
reg   [1:0] ap_phi_reg_pp0_iter2_p_Val2_7_reg_404;
reg   [1:0] ap_phi_reg_pp0_iter3_p_Val2_7_reg_404;
wire   [63:0] zext_ln40_5_fu_973_p1;
wire   [63:0] zext_ln821_17_fu_1014_p1;
wire   [6:0] mul_ln25_fu_475_p0;
wire   [5:0] mul_ln25_fu_475_p1;
wire   [2:0] trunc_ln38_fu_495_p1;
wire   [5:0] channel_start_fu_499_p3;
wire   [7:0] zext_ln38_fu_507_p1;
wire   [5:0] or_ln41_fu_516_p2;
wire   [7:0] zext_ln41_fu_522_p1;
wire   [5:0] or_ln41_1_fu_531_p2;
wire   [7:0] zext_ln41_1_fu_537_p1;
wire   [5:0] or_ln41_2_fu_546_p2;
wire   [7:0] zext_ln41_2_fu_552_p1;
wire   [5:0] or_ln41_3_fu_561_p2;
wire   [7:0] zext_ln41_3_fu_567_p1;
wire   [5:0] or_ln41_4_fu_576_p2;
wire   [7:0] zext_ln41_4_fu_582_p1;
wire   [5:0] or_ln41_5_fu_591_p2;
wire   [7:0] zext_ln41_5_fu_597_p1;
wire   [5:0] or_ln41_6_fu_606_p2;
wire   [7:0] zext_ln41_6_fu_612_p1;
wire   [0:0] icmp_ln35_fu_638_p2;
wire   [3:0] ch_t_fu_632_p2;
wire   [2:0] trunc_ln38_1_fu_651_p1;
wire   [5:0] channel_start_mid1_fu_655_p3;
wire   [7:0] zext_ln38_1_fu_663_p1;
wire   [0:0] icmp_ln42_8_fu_675_p2;
wire   [0:0] icmp_ln42_fu_511_p2;
wire   [5:0] or_ln41_7_fu_696_p2;
wire   [7:0] zext_ln41_7_fu_702_p1;
wire   [0:0] icmp_ln42_9_fu_706_p2;
wire   [0:0] icmp_ln42_1_fu_526_p2;
wire   [5:0] or_ln41_8_fu_719_p2;
wire   [7:0] zext_ln41_8_fu_725_p1;
wire   [0:0] icmp_ln42_10_fu_729_p2;
wire   [0:0] icmp_ln42_2_fu_541_p2;
wire   [5:0] or_ln41_9_fu_742_p2;
wire   [7:0] zext_ln41_9_fu_748_p1;
wire   [0:0] icmp_ln42_11_fu_752_p2;
wire   [0:0] icmp_ln42_3_fu_556_p2;
wire   [5:0] or_ln41_10_fu_765_p2;
wire   [7:0] zext_ln41_10_fu_771_p1;
wire   [0:0] icmp_ln42_12_fu_775_p2;
wire   [0:0] icmp_ln42_4_fu_571_p2;
wire   [5:0] or_ln41_11_fu_788_p2;
wire   [7:0] zext_ln41_11_fu_794_p1;
wire   [0:0] icmp_ln42_13_fu_798_p2;
wire   [0:0] icmp_ln42_5_fu_586_p2;
wire   [5:0] or_ln41_12_fu_811_p2;
wire   [7:0] zext_ln41_12_fu_817_p1;
wire   [0:0] icmp_ln42_14_fu_821_p2;
wire   [0:0] icmp_ln42_6_fu_601_p2;
wire   [5:0] or_ln41_13_fu_834_p2;
wire   [7:0] zext_ln41_13_fu_840_p1;
wire   [0:0] icmp_ln42_15_fu_844_p2;
wire   [0:0] icmp_ln42_7_fu_616_p2;
wire   [0:0] icmp_ln36_1_fu_857_p2;
wire   [5:0] select_ln34_fu_643_p3;
wire   [0:0] select_ln34_11_fu_862_p3;
wire   [0:0] or_ln35_fu_875_p2;
wire   [5:0] row_fu_869_p2;
wire   [11:0] add_ln35_1_fu_903_p2;
wire   [8:0] tmp_7_fu_920_p3;
wire   [9:0] zext_ln40_fu_917_p1;
wire   [9:0] zext_ln40_1_fu_927_p1;
wire   [9:0] add_ln40_fu_931_p2;
wire   [9:0] zext_ln35_1_fu_937_p1;
wire   [9:0] add_ln40_1_fu_940_p2;
wire   [14:0] zext_ln40_2_fu_946_p1;
wire   [14:0] p_shl1_cast_fu_950_p3;
wire   [14:0] add_ln40_2_fu_958_p2;
wire   [14:0] zext_ln40_4_fu_964_p1;
wire   [14:0] add_ln40_3_fu_967_p2;
wire   [10:0] tmp_8_fu_988_p3;
wire   [11:0] zext_ln35_fu_985_p1;
wire   [11:0] zext_ln821_16_fu_995_p1;
wire   [11:0] add_ln821_fu_999_p2;
wire   [11:0] zext_ln40_3_fu_1005_p1;
wire   [11:0] add_ln821_1_fu_1008_p2;
wire   [5:0] xor_ln34_fu_1020_p2;
wire   [5:0] xor_ln34_1_fu_1029_p2;
wire   [5:0] xor_ln34_2_fu_1038_p2;
wire   [5:0] xor_ln34_3_fu_1047_p2;
wire   [5:0] xor_ln34_4_fu_1056_p2;
wire   [5:0] xor_ln34_5_fu_1065_p2;
wire   [5:0] xor_ln34_6_fu_1074_p2;
wire   [5:0] xor_ln34_7_fu_1083_p2;
wire   [0:0] tmp_9_fu_1096_p3;
wire   [31:0] zext_ln34_fu_1025_p1;
wire   [63:0] zext_ln821_fu_1104_p1;
wire   [0:0] trunc_ln821_fu_1092_p1;
wire   [63:0] zext_ln821_1_fu_1118_p1;
wire   [0:0] tmp_12_fu_1136_p3;
reg   [63:0] tmp_10_fu_1108_p4;
wire   [31:0] zext_ln34_1_fu_1034_p1;
wire   [63:0] zext_ln821_2_fu_1144_p1;
wire   [0:0] trunc_ln821_1_fu_1132_p1;
reg   [63:0] tmp_11_fu_1122_p4;
wire   [63:0] zext_ln821_3_fu_1158_p1;
wire   [0:0] tmp_15_fu_1176_p3;
reg   [63:0] tmp_13_fu_1148_p4;
wire   [31:0] zext_ln34_2_fu_1043_p1;
wire   [63:0] zext_ln821_4_fu_1184_p1;
wire   [0:0] trunc_ln821_2_fu_1172_p1;
reg   [63:0] tmp_14_fu_1162_p4;
wire   [63:0] zext_ln821_5_fu_1198_p1;
wire   [0:0] tmp_18_fu_1216_p3;
reg   [63:0] tmp_16_fu_1188_p4;
wire   [31:0] zext_ln34_3_fu_1052_p1;
wire   [63:0] zext_ln821_6_fu_1224_p1;
wire   [0:0] trunc_ln821_3_fu_1212_p1;
reg   [63:0] tmp_17_fu_1202_p4;
wire   [63:0] zext_ln821_7_fu_1238_p1;
wire   [0:0] tmp_21_fu_1256_p3;
reg   [63:0] tmp_19_fu_1228_p4;
wire   [31:0] zext_ln34_4_fu_1061_p1;
wire   [63:0] zext_ln821_8_fu_1264_p1;
wire   [0:0] trunc_ln821_4_fu_1252_p1;
reg   [63:0] tmp_20_fu_1242_p4;
wire   [63:0] zext_ln821_9_fu_1278_p1;
wire   [0:0] tmp_24_fu_1296_p3;
reg   [63:0] tmp_22_fu_1268_p4;
wire   [31:0] zext_ln34_5_fu_1070_p1;
wire   [63:0] zext_ln821_10_fu_1304_p1;
wire   [0:0] trunc_ln821_5_fu_1292_p1;
reg   [63:0] tmp_23_fu_1282_p4;
wire   [63:0] zext_ln821_11_fu_1318_p1;
wire   [0:0] tmp_27_fu_1336_p3;
reg   [63:0] tmp_25_fu_1308_p4;
wire   [31:0] zext_ln34_6_fu_1079_p1;
wire   [63:0] zext_ln821_12_fu_1344_p1;
wire   [0:0] trunc_ln821_6_fu_1332_p1;
reg   [63:0] tmp_26_fu_1322_p4;
wire   [63:0] zext_ln821_13_fu_1358_p1;
wire   [0:0] tmp_30_fu_1376_p3;
reg   [63:0] tmp_28_fu_1348_p4;
wire   [31:0] zext_ln34_7_fu_1088_p1;
wire   [63:0] zext_ln821_14_fu_1384_p1;
wire   [0:0] trunc_ln821_7_fu_1372_p1;
reg   [63:0] tmp_29_fu_1362_p4;
wire   [63:0] zext_ln821_15_fu_1399_p1;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] mul_ln25_fu_475_p00;
wire   [11:0] mul_ln25_fu_475_p10;
reg    ap_condition_157;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

to2bit grp_to2bit_fu_415(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(prior_outputs_0_V_l_reg_1578),
    .ap_return(grp_to2bit_fu_415_ap_return)
);

to2bit grp_to2bit_fu_421(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(prior_outputs_1_V_l_reg_1583),
    .ap_return(grp_to2bit_fu_421_ap_return)
);

to2bit grp_to2bit_fu_427(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(prior_outputs_2_V_l_reg_1588),
    .ap_return(grp_to2bit_fu_427_ap_return)
);

to2bit grp_to2bit_fu_433(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(prior_outputs_3_V_l_reg_1593),
    .ap_return(grp_to2bit_fu_433_ap_return)
);

to2bit grp_to2bit_fu_439(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(prior_outputs_4_V_l_reg_1598),
    .ap_return(grp_to2bit_fu_439_ap_return)
);

to2bit grp_to2bit_fu_445(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(prior_outputs_5_V_l_reg_1603),
    .ap_return(grp_to2bit_fu_445_ap_return)
);

to2bit grp_to2bit_fu_451(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(prior_outputs_6_V_l_reg_1608),
    .ap_return(grp_to2bit_fu_451_ap_return)
);

to2bit grp_to2bit_fu_457(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(prior_outputs_7_V_l_reg_1613),
    .ap_return(grp_to2bit_fu_457_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_157)) begin
        if (((select_ln34_2_fu_680_p3 == 1'd0) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_0_reg_327 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_0_reg_327 <= ap_phi_reg_pp0_iter0_p_Val2_0_reg_327;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_157)) begin
        if (((select_ln34_4_fu_711_p3 == 1'd0) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_1_reg_338 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_1_reg_338 <= ap_phi_reg_pp0_iter0_p_Val2_1_reg_338;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_157)) begin
        if (((select_ln34_5_fu_734_p3 == 1'd0) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_2_reg_349 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_2_reg_349 <= ap_phi_reg_pp0_iter0_p_Val2_2_reg_349;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_157)) begin
        if (((select_ln34_6_fu_757_p3 == 1'd0) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_3_reg_360 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_3_reg_360 <= ap_phi_reg_pp0_iter0_p_Val2_3_reg_360;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_157)) begin
        if (((select_ln34_7_fu_780_p3 == 1'd0) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_4_reg_371 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_4_reg_371 <= ap_phi_reg_pp0_iter0_p_Val2_4_reg_371;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_157)) begin
        if (((select_ln34_8_fu_803_p3 == 1'd0) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_59_reg_382 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_59_reg_382 <= ap_phi_reg_pp0_iter0_p_Val2_59_reg_382;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_157)) begin
        if (((select_ln34_9_fu_826_p3 == 1'd0) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_610_reg_393 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_610_reg_393 <= ap_phi_reg_pp0_iter0_p_Val2_610_reg_393;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_157)) begin
        if (((select_ln34_10_fu_849_p3 == 1'd0) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_Val2_7_reg_404 <= 2'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_Val2_7_reg_404 <= ap_phi_reg_pp0_iter0_p_Val2_7_reg_404;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_reg_1454 == 1'd0))) begin
        ch_t_0_reg_283 <= select_ln34_1_reg_1463;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_t_0_reg_283 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
        col_0_reg_316 <= col_fu_897_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_0_reg_316 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
        indvar_flatten16_reg_272 <= add_ln34_fu_626_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten16_reg_272 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
        indvar_flatten_reg_294 <= select_ln35_2_fu_909_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_294 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_reg_1454 == 1'd0))) begin
        row_0_reg_305 <= select_ln35_1_reg_1520;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_0_reg_305 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_p_Val2_0_reg_327 <= ap_phi_reg_pp0_iter1_p_Val2_0_reg_327;
        ap_phi_reg_pp0_iter2_p_Val2_1_reg_338 <= ap_phi_reg_pp0_iter1_p_Val2_1_reg_338;
        ap_phi_reg_pp0_iter2_p_Val2_2_reg_349 <= ap_phi_reg_pp0_iter1_p_Val2_2_reg_349;
        ap_phi_reg_pp0_iter2_p_Val2_3_reg_360 <= ap_phi_reg_pp0_iter1_p_Val2_3_reg_360;
        ap_phi_reg_pp0_iter2_p_Val2_4_reg_371 <= ap_phi_reg_pp0_iter1_p_Val2_4_reg_371;
        ap_phi_reg_pp0_iter2_p_Val2_59_reg_382 <= ap_phi_reg_pp0_iter1_p_Val2_59_reg_382;
        ap_phi_reg_pp0_iter2_p_Val2_610_reg_393 <= ap_phi_reg_pp0_iter1_p_Val2_610_reg_393;
        ap_phi_reg_pp0_iter2_p_Val2_7_reg_404 <= ap_phi_reg_pp0_iter1_p_Val2_7_reg_404;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_p_Val2_0_reg_327 <= ap_phi_reg_pp0_iter2_p_Val2_0_reg_327;
        ap_phi_reg_pp0_iter3_p_Val2_1_reg_338 <= ap_phi_reg_pp0_iter2_p_Val2_1_reg_338;
        ap_phi_reg_pp0_iter3_p_Val2_2_reg_349 <= ap_phi_reg_pp0_iter2_p_Val2_2_reg_349;
        ap_phi_reg_pp0_iter3_p_Val2_3_reg_360 <= ap_phi_reg_pp0_iter2_p_Val2_3_reg_360;
        ap_phi_reg_pp0_iter3_p_Val2_4_reg_371 <= ap_phi_reg_pp0_iter2_p_Val2_4_reg_371;
        ap_phi_reg_pp0_iter3_p_Val2_59_reg_382 <= ap_phi_reg_pp0_iter2_p_Val2_59_reg_382;
        ap_phi_reg_pp0_iter3_p_Val2_610_reg_393 <= ap_phi_reg_pp0_iter2_p_Val2_610_reg_393;
        ap_phi_reg_pp0_iter3_p_Val2_7_reg_404 <= ap_phi_reg_pp0_iter2_p_Val2_7_reg_404;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_p_Val2_0_reg_327 <= ap_phi_reg_pp0_iter3_p_Val2_0_reg_327;
        ap_phi_reg_pp0_iter4_p_Val2_1_reg_338 <= ap_phi_reg_pp0_iter3_p_Val2_1_reg_338;
        ap_phi_reg_pp0_iter4_p_Val2_2_reg_349 <= ap_phi_reg_pp0_iter3_p_Val2_2_reg_349;
        ap_phi_reg_pp0_iter4_p_Val2_3_reg_360 <= ap_phi_reg_pp0_iter3_p_Val2_3_reg_360;
        ap_phi_reg_pp0_iter4_p_Val2_4_reg_371 <= ap_phi_reg_pp0_iter3_p_Val2_4_reg_371;
        ap_phi_reg_pp0_iter4_p_Val2_59_reg_382 <= ap_phi_reg_pp0_iter3_p_Val2_59_reg_382;
        ap_phi_reg_pp0_iter4_p_Val2_610_reg_393 <= ap_phi_reg_pp0_iter3_p_Val2_610_reg_393;
        ap_phi_reg_pp0_iter4_p_Val2_7_reg_404 <= ap_phi_reg_pp0_iter3_p_Val2_7_reg_404;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_1434 <= empty_fu_463_p1;
        icmp_ln36_reg_1449 <= icmp_ln36_fu_489_p2;
        mul_ln25_reg_1439 <= mul_ln25_fu_475_p2;
        tmp_4_reg_1444[14 : 3] <= tmp_4_fu_481_p3[14 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln34_reg_1454 <= icmp_ln34_fu_621_p2;
        icmp_ln34_reg_1454_pp0_iter1_reg <= icmp_ln34_reg_1454;
        select_ln34_10_reg_1510_pp0_iter1_reg <= select_ln34_10_reg_1510;
        select_ln34_2_reg_1470_pp0_iter1_reg <= select_ln34_2_reg_1470;
        select_ln34_3_reg_1474_pp0_iter1_reg[5 : 3] <= select_ln34_3_reg_1474[5 : 3];
        select_ln34_4_reg_1486_pp0_iter1_reg <= select_ln34_4_reg_1486;
        select_ln34_5_reg_1490_pp0_iter1_reg <= select_ln34_5_reg_1490;
        select_ln34_6_reg_1494_pp0_iter1_reg <= select_ln34_6_reg_1494;
        select_ln34_7_reg_1498_pp0_iter1_reg <= select_ln34_7_reg_1498;
        select_ln34_8_reg_1502_pp0_iter1_reg <= select_ln34_8_reg_1502;
        select_ln34_9_reg_1506_pp0_iter1_reg <= select_ln34_9_reg_1506;
        select_ln35_1_reg_1520_pp0_iter1_reg <= select_ln35_1_reg_1520;
        select_ln35_reg_1514_pp0_iter1_reg <= select_ln35_reg_1514;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln34_reg_1454_pp0_iter2_reg <= icmp_ln34_reg_1454_pp0_iter1_reg;
        icmp_ln34_reg_1454_pp0_iter3_reg <= icmp_ln34_reg_1454_pp0_iter2_reg;
        select_ln34_10_reg_1510_pp0_iter2_reg <= select_ln34_10_reg_1510_pp0_iter1_reg;
        select_ln34_10_reg_1510_pp0_iter3_reg <= select_ln34_10_reg_1510_pp0_iter2_reg;
        select_ln34_2_reg_1470_pp0_iter2_reg <= select_ln34_2_reg_1470_pp0_iter1_reg;
        select_ln34_2_reg_1470_pp0_iter3_reg <= select_ln34_2_reg_1470_pp0_iter2_reg;
        select_ln34_3_reg_1474_pp0_iter2_reg[5 : 3] <= select_ln34_3_reg_1474_pp0_iter1_reg[5 : 3];
        select_ln34_3_reg_1474_pp0_iter3_reg[5 : 3] <= select_ln34_3_reg_1474_pp0_iter2_reg[5 : 3];
        select_ln34_4_reg_1486_pp0_iter2_reg <= select_ln34_4_reg_1486_pp0_iter1_reg;
        select_ln34_4_reg_1486_pp0_iter3_reg <= select_ln34_4_reg_1486_pp0_iter2_reg;
        select_ln34_5_reg_1490_pp0_iter2_reg <= select_ln34_5_reg_1490_pp0_iter1_reg;
        select_ln34_5_reg_1490_pp0_iter3_reg <= select_ln34_5_reg_1490_pp0_iter2_reg;
        select_ln34_6_reg_1494_pp0_iter2_reg <= select_ln34_6_reg_1494_pp0_iter1_reg;
        select_ln34_6_reg_1494_pp0_iter3_reg <= select_ln34_6_reg_1494_pp0_iter2_reg;
        select_ln34_7_reg_1498_pp0_iter2_reg <= select_ln34_7_reg_1498_pp0_iter1_reg;
        select_ln34_7_reg_1498_pp0_iter3_reg <= select_ln34_7_reg_1498_pp0_iter2_reg;
        select_ln34_8_reg_1502_pp0_iter2_reg <= select_ln34_8_reg_1502_pp0_iter1_reg;
        select_ln34_8_reg_1502_pp0_iter3_reg <= select_ln34_8_reg_1502_pp0_iter2_reg;
        select_ln34_9_reg_1506_pp0_iter2_reg <= select_ln34_9_reg_1506_pp0_iter1_reg;
        select_ln34_9_reg_1506_pp0_iter3_reg <= select_ln34_9_reg_1506_pp0_iter2_reg;
        select_ln35_1_reg_1520_pp0_iter2_reg <= select_ln35_1_reg_1520_pp0_iter1_reg;
        select_ln35_reg_1514_pp0_iter2_reg <= select_ln35_reg_1514_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1454_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lsb_buffer_V_addr_reg_1624 <= zext_ln821_17_fu_1014_p1;
        msb_buffer_0_V_addr_reg_1618 <= zext_ln821_17_fu_1014_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1454_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prior_outputs_0_V_l_reg_1578 <= prior_outputs_0_V_q0;
        prior_outputs_1_V_l_reg_1583 <= prior_outputs_1_V_q0;
        prior_outputs_2_V_l_reg_1588 <= prior_outputs_2_V_q0;
        prior_outputs_3_V_l_reg_1593 <= prior_outputs_3_V_q0;
        prior_outputs_4_V_l_reg_1598 <= prior_outputs_4_V_q0;
        prior_outputs_5_V_l_reg_1603 <= prior_outputs_5_V_q0;
        prior_outputs_6_V_l_reg_1608 <= prior_outputs_6_V_q0;
        prior_outputs_7_V_l_reg_1613 <= prior_outputs_7_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
        select_ln34_10_reg_1510 <= select_ln34_10_fu_849_p3;
        select_ln34_2_reg_1470 <= select_ln34_2_fu_680_p3;
        select_ln34_3_reg_1474[5 : 3] <= select_ln34_3_fu_688_p3[5 : 3];
        select_ln34_4_reg_1486 <= select_ln34_4_fu_711_p3;
        select_ln34_5_reg_1490 <= select_ln34_5_fu_734_p3;
        select_ln34_6_reg_1494 <= select_ln34_6_fu_757_p3;
        select_ln34_7_reg_1498 <= select_ln34_7_fu_780_p3;
        select_ln34_8_reg_1502 <= select_ln34_8_fu_803_p3;
        select_ln34_9_reg_1506 <= select_ln34_9_fu_826_p3;
        select_ln35_reg_1514 <= select_ln35_fu_881_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_fu_621_p2 == 1'd0))) begin
        select_ln34_1_reg_1463 <= select_ln34_1_fu_667_p3;
        select_ln35_1_reg_1520 <= select_ln35_1_fu_889_p3;
    end
end

always @ (*) begin
    if ((icmp_ln34_fu_621_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln34_reg_1454 == 1'd0))) begin
        ap_phi_mux_ch_t_0_phi_fu_287_p4 = select_ln34_1_reg_1463;
    end else begin
        ap_phi_mux_ch_t_0_phi_fu_287_p4 = ch_t_0_reg_283;
    end
end

always @ (*) begin
    if (((select_ln34_2_reg_1470_pp0_iter3_reg == 1'd1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_0_phi_fu_331_p4 = grp_to2bit_fu_415_ap_return;
    end else begin
        ap_phi_mux_p_Val2_0_phi_fu_331_p4 = ap_phi_reg_pp0_iter4_p_Val2_0_reg_327;
    end
end

always @ (*) begin
    if (((select_ln34_4_reg_1486_pp0_iter3_reg == 1'd1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_1_phi_fu_342_p4 = grp_to2bit_fu_421_ap_return;
    end else begin
        ap_phi_mux_p_Val2_1_phi_fu_342_p4 = ap_phi_reg_pp0_iter4_p_Val2_1_reg_338;
    end
end

always @ (*) begin
    if (((select_ln34_5_reg_1490_pp0_iter3_reg == 1'd1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_2_phi_fu_353_p4 = grp_to2bit_fu_427_ap_return;
    end else begin
        ap_phi_mux_p_Val2_2_phi_fu_353_p4 = ap_phi_reg_pp0_iter4_p_Val2_2_reg_349;
    end
end

always @ (*) begin
    if (((select_ln34_6_reg_1494_pp0_iter3_reg == 1'd1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_3_phi_fu_364_p4 = grp_to2bit_fu_433_ap_return;
    end else begin
        ap_phi_mux_p_Val2_3_phi_fu_364_p4 = ap_phi_reg_pp0_iter4_p_Val2_3_reg_360;
    end
end

always @ (*) begin
    if (((select_ln34_7_reg_1498_pp0_iter3_reg == 1'd1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_4_phi_fu_375_p4 = grp_to2bit_fu_439_ap_return;
    end else begin
        ap_phi_mux_p_Val2_4_phi_fu_375_p4 = ap_phi_reg_pp0_iter4_p_Val2_4_reg_371;
    end
end

always @ (*) begin
    if (((select_ln34_8_reg_1502_pp0_iter3_reg == 1'd1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_59_phi_fu_386_p4 = grp_to2bit_fu_445_ap_return;
    end else begin
        ap_phi_mux_p_Val2_59_phi_fu_386_p4 = ap_phi_reg_pp0_iter4_p_Val2_59_reg_382;
    end
end

always @ (*) begin
    if (((select_ln34_9_reg_1506_pp0_iter3_reg == 1'd1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_610_phi_fu_397_p4 = grp_to2bit_fu_451_ap_return;
    end else begin
        ap_phi_mux_p_Val2_610_phi_fu_397_p4 = ap_phi_reg_pp0_iter4_p_Val2_610_reg_393;
    end
end

always @ (*) begin
    if (((select_ln34_10_reg_1510_pp0_iter3_reg == 1'd1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_7_phi_fu_408_p4 = grp_to2bit_fu_457_ap_return;
    end else begin
        ap_phi_mux_p_Val2_7_phi_fu_408_p4 = ap_phi_reg_pp0_iter4_p_Val2_7_reg_404;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln34_reg_1454 == 1'd0))) begin
        ap_phi_mux_row_0_phi_fu_309_p4 = select_ln35_1_reg_1520;
    end else begin
        ap_phi_mux_row_0_phi_fu_309_p4 = row_0_reg_305;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lsb_buffer_V_ce0 = 1'b1;
    end else begin
        lsb_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lsb_buffer_V_ce1 = 1'b1;
    end else begin
        lsb_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lsb_buffer_V_we1 = 1'b1;
    end else begin
        lsb_buffer_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        msb_buffer_0_V_ce0 = 1'b1;
    end else begin
        msb_buffer_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        msb_buffer_0_V_ce1 = 1'b1;
    end else begin
        msb_buffer_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln34_reg_1454_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        msb_buffer_0_V_we1 = 1'b1;
    end else begin
        msb_buffer_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prior_outputs_0_V_ce0 = 1'b1;
    end else begin
        prior_outputs_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prior_outputs_1_V_ce0 = 1'b1;
    end else begin
        prior_outputs_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prior_outputs_2_V_ce0 = 1'b1;
    end else begin
        prior_outputs_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prior_outputs_3_V_ce0 = 1'b1;
    end else begin
        prior_outputs_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prior_outputs_4_V_ce0 = 1'b1;
    end else begin
        prior_outputs_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prior_outputs_5_V_ce0 = 1'b1;
    end else begin
        prior_outputs_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prior_outputs_6_V_ce0 = 1'b1;
    end else begin
        prior_outputs_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prior_outputs_7_V_ce0 = 1'b1;
    end else begin
        prior_outputs_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln34_fu_621_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln34_fu_621_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln34_fu_626_p2 = (15'd1 + indvar_flatten16_reg_272);

assign add_ln35_1_fu_903_p2 = (12'd1 + indvar_flatten_reg_294);

assign add_ln40_1_fu_940_p2 = (add_ln40_fu_931_p2 + zext_ln35_1_fu_937_p1);

assign add_ln40_2_fu_958_p2 = (zext_ln40_2_fu_946_p1 + p_shl1_cast_fu_950_p3);

assign add_ln40_3_fu_967_p2 = (add_ln40_2_fu_958_p2 + zext_ln40_4_fu_964_p1);

assign add_ln40_fu_931_p2 = (zext_ln40_fu_917_p1 + zext_ln40_1_fu_927_p1);

assign add_ln821_1_fu_1008_p2 = (add_ln821_fu_999_p2 + zext_ln40_3_fu_1005_p1);

assign add_ln821_fu_999_p2 = (zext_ln35_fu_985_p1 + zext_ln821_16_fu_995_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_157 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_Val2_0_reg_327 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_1_reg_338 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_2_reg_349 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_3_reg_360 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_4_reg_371 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_59_reg_382 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_610_reg_393 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_7_reg_404 = 'bx;

assign ch_t_fu_632_p2 = (4'd1 + ap_phi_mux_ch_t_0_phi_fu_287_p4);

assign channel_start_fu_499_p3 = {{trunc_ln38_fu_495_p1}, {3'd0}};

assign channel_start_mid1_fu_655_p3 = {{trunc_ln38_1_fu_651_p1}, {3'd0}};

assign col_fu_897_p2 = (6'd1 + select_ln35_fu_881_p3);

assign empty_fu_463_p1 = H_fmap[5:0];

assign icmp_ln34_fu_621_p2 = ((indvar_flatten16_reg_272 == tmp_4_reg_1444) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_638_p2 = ((indvar_flatten_reg_294 == mul_ln25_reg_1439) ? 1'b1 : 1'b0);

assign icmp_ln36_1_fu_857_p2 = ((col_0_reg_316 == empty_reg_1434) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_489_p2 = ((empty_fu_463_p1 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_10_fu_729_p2 = (($signed(zext_ln41_8_fu_725_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_11_fu_752_p2 = (($signed(zext_ln41_9_fu_748_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_12_fu_775_p2 = (($signed(zext_ln41_10_fu_771_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_13_fu_798_p2 = (($signed(zext_ln41_11_fu_794_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_14_fu_821_p2 = (($signed(zext_ln41_12_fu_817_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_15_fu_844_p2 = (($signed(zext_ln41_13_fu_840_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_1_fu_526_p2 = (($signed(zext_ln41_fu_522_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_2_fu_541_p2 = (($signed(zext_ln41_1_fu_537_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_3_fu_556_p2 = (($signed(zext_ln41_2_fu_552_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_4_fu_571_p2 = (($signed(zext_ln41_3_fu_567_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_5_fu_586_p2 = (($signed(zext_ln41_4_fu_582_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_6_fu_601_p2 = (($signed(zext_ln41_5_fu_597_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_7_fu_616_p2 = (($signed(zext_ln41_6_fu_612_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_8_fu_675_p2 = (($signed(zext_ln38_1_fu_663_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_9_fu_706_p2 = (($signed(zext_ln41_7_fu_702_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_511_p2 = (($signed(zext_ln38_fu_507_p1) < $signed(in_channels)) ? 1'b1 : 1'b0);

assign lsb_buffer_V_address0 = zext_ln821_17_fu_1014_p1;

assign lsb_buffer_V_address1 = lsb_buffer_V_addr_reg_1624;

always @ (*) begin
    lsb_buffer_V_d1 = tmp_29_fu_1362_p4;
    lsb_buffer_V_d1[zext_ln34_7_fu_1088_p1] = |(zext_ln821_15_fu_1399_p1);
end

assign msb_buffer_0_V_address0 = zext_ln821_17_fu_1014_p1;

assign msb_buffer_0_V_address1 = msb_buffer_0_V_addr_reg_1618;

always @ (*) begin
    msb_buffer_0_V_d1 = tmp_28_fu_1348_p4;
    msb_buffer_0_V_d1[zext_ln34_7_fu_1088_p1] = |(zext_ln821_14_fu_1384_p1);
end

assign mul_ln25_fu_475_p0 = mul_ln25_fu_475_p00;

assign mul_ln25_fu_475_p00 = H_fmap;

assign mul_ln25_fu_475_p1 = mul_ln25_fu_475_p10;

assign mul_ln25_fu_475_p10 = empty_fu_463_p1;

assign mul_ln25_fu_475_p2 = (mul_ln25_fu_475_p0 * mul_ln25_fu_475_p1);

assign or_ln35_fu_875_p2 = (select_ln34_11_fu_862_p3 | icmp_ln35_fu_638_p2);

assign or_ln41_10_fu_765_p2 = (channel_start_mid1_fu_655_p3 | 6'd4);

assign or_ln41_11_fu_788_p2 = (channel_start_mid1_fu_655_p3 | 6'd5);

assign or_ln41_12_fu_811_p2 = (channel_start_mid1_fu_655_p3 | 6'd6);

assign or_ln41_13_fu_834_p2 = (channel_start_mid1_fu_655_p3 | 6'd7);

assign or_ln41_1_fu_531_p2 = (channel_start_fu_499_p3 | 6'd2);

assign or_ln41_2_fu_546_p2 = (channel_start_fu_499_p3 | 6'd3);

assign or_ln41_3_fu_561_p2 = (channel_start_fu_499_p3 | 6'd4);

assign or_ln41_4_fu_576_p2 = (channel_start_fu_499_p3 | 6'd5);

assign or_ln41_5_fu_591_p2 = (channel_start_fu_499_p3 | 6'd6);

assign or_ln41_6_fu_606_p2 = (channel_start_fu_499_p3 | 6'd7);

assign or_ln41_7_fu_696_p2 = (channel_start_mid1_fu_655_p3 | 6'd1);

assign or_ln41_8_fu_719_p2 = (channel_start_mid1_fu_655_p3 | 6'd2);

assign or_ln41_9_fu_742_p2 = (channel_start_mid1_fu_655_p3 | 6'd3);

assign or_ln41_fu_516_p2 = (channel_start_fu_499_p3 | 6'd1);

assign p_shl1_cast_fu_950_p3 = {{add_ln40_1_fu_940_p2}, {5'd0}};

assign prior_outputs_0_V_address0 = zext_ln40_5_fu_973_p1;

assign prior_outputs_1_V_address0 = zext_ln40_5_fu_973_p1;

assign prior_outputs_2_V_address0 = zext_ln40_5_fu_973_p1;

assign prior_outputs_3_V_address0 = zext_ln40_5_fu_973_p1;

assign prior_outputs_4_V_address0 = zext_ln40_5_fu_973_p1;

assign prior_outputs_5_V_address0 = zext_ln40_5_fu_973_p1;

assign prior_outputs_6_V_address0 = zext_ln40_5_fu_973_p1;

assign prior_outputs_7_V_address0 = zext_ln40_5_fu_973_p1;

assign row_fu_869_p2 = (6'd1 + select_ln34_fu_643_p3);

assign select_ln34_10_fu_849_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? icmp_ln42_15_fu_844_p2 : icmp_ln42_7_fu_616_p2);

assign select_ln34_11_fu_862_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? icmp_ln36_reg_1449 : icmp_ln36_1_fu_857_p2);

assign select_ln34_1_fu_667_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? ch_t_fu_632_p2 : ap_phi_mux_ch_t_0_phi_fu_287_p4);

assign select_ln34_2_fu_680_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? icmp_ln42_8_fu_675_p2 : icmp_ln42_fu_511_p2);

assign select_ln34_3_fu_688_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? channel_start_mid1_fu_655_p3 : channel_start_fu_499_p3);

assign select_ln34_4_fu_711_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? icmp_ln42_9_fu_706_p2 : icmp_ln42_1_fu_526_p2);

assign select_ln34_5_fu_734_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? icmp_ln42_10_fu_729_p2 : icmp_ln42_2_fu_541_p2);

assign select_ln34_6_fu_757_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? icmp_ln42_11_fu_752_p2 : icmp_ln42_3_fu_556_p2);

assign select_ln34_7_fu_780_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? icmp_ln42_12_fu_775_p2 : icmp_ln42_4_fu_571_p2);

assign select_ln34_8_fu_803_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? icmp_ln42_13_fu_798_p2 : icmp_ln42_5_fu_586_p2);

assign select_ln34_9_fu_826_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? icmp_ln42_14_fu_821_p2 : icmp_ln42_6_fu_601_p2);

assign select_ln34_fu_643_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_row_0_phi_fu_309_p4);

assign select_ln35_1_fu_889_p3 = ((select_ln34_11_fu_862_p3[0:0] === 1'b1) ? row_fu_869_p2 : select_ln34_fu_643_p3);

assign select_ln35_2_fu_909_p3 = ((icmp_ln35_fu_638_p2[0:0] === 1'b1) ? 12'd1 : add_ln35_1_fu_903_p2);

assign select_ln35_fu_881_p3 = ((or_ln35_fu_875_p2[0:0] === 1'b1) ? 6'd0 : col_0_reg_316);

always @ (*) begin
    tmp_10_fu_1108_p4 = msb_buffer_0_V_q0;
    tmp_10_fu_1108_p4[zext_ln34_fu_1025_p1] = |(zext_ln821_fu_1104_p1);
end

always @ (*) begin
    tmp_11_fu_1122_p4 = lsb_buffer_V_q0;
    tmp_11_fu_1122_p4[zext_ln34_fu_1025_p1] = |(zext_ln821_1_fu_1118_p1);
end

assign tmp_12_fu_1136_p3 = ap_phi_mux_p_Val2_1_phi_fu_342_p4[32'd1];

always @ (*) begin
    tmp_13_fu_1148_p4 = tmp_10_fu_1108_p4;
    tmp_13_fu_1148_p4[zext_ln34_1_fu_1034_p1] = |(zext_ln821_2_fu_1144_p1);
end

always @ (*) begin
    tmp_14_fu_1162_p4 = tmp_11_fu_1122_p4;
    tmp_14_fu_1162_p4[zext_ln34_1_fu_1034_p1] = |(zext_ln821_3_fu_1158_p1);
end

assign tmp_15_fu_1176_p3 = ap_phi_mux_p_Val2_2_phi_fu_353_p4[32'd1];

always @ (*) begin
    tmp_16_fu_1188_p4 = tmp_13_fu_1148_p4;
    tmp_16_fu_1188_p4[zext_ln34_2_fu_1043_p1] = |(zext_ln821_4_fu_1184_p1);
end

always @ (*) begin
    tmp_17_fu_1202_p4 = tmp_14_fu_1162_p4;
    tmp_17_fu_1202_p4[zext_ln34_2_fu_1043_p1] = |(zext_ln821_5_fu_1198_p1);
end

assign tmp_18_fu_1216_p3 = ap_phi_mux_p_Val2_3_phi_fu_364_p4[32'd1];

always @ (*) begin
    tmp_19_fu_1228_p4 = tmp_16_fu_1188_p4;
    tmp_19_fu_1228_p4[zext_ln34_3_fu_1052_p1] = |(zext_ln821_6_fu_1224_p1);
end

always @ (*) begin
    tmp_20_fu_1242_p4 = tmp_17_fu_1202_p4;
    tmp_20_fu_1242_p4[zext_ln34_3_fu_1052_p1] = |(zext_ln821_7_fu_1238_p1);
end

assign tmp_21_fu_1256_p3 = ap_phi_mux_p_Val2_4_phi_fu_375_p4[32'd1];

always @ (*) begin
    tmp_22_fu_1268_p4 = tmp_19_fu_1228_p4;
    tmp_22_fu_1268_p4[zext_ln34_4_fu_1061_p1] = |(zext_ln821_8_fu_1264_p1);
end

always @ (*) begin
    tmp_23_fu_1282_p4 = tmp_20_fu_1242_p4;
    tmp_23_fu_1282_p4[zext_ln34_4_fu_1061_p1] = |(zext_ln821_9_fu_1278_p1);
end

assign tmp_24_fu_1296_p3 = ap_phi_mux_p_Val2_59_phi_fu_386_p4[32'd1];

always @ (*) begin
    tmp_25_fu_1308_p4 = tmp_22_fu_1268_p4;
    tmp_25_fu_1308_p4[zext_ln34_5_fu_1070_p1] = |(zext_ln821_10_fu_1304_p1);
end

always @ (*) begin
    tmp_26_fu_1322_p4 = tmp_23_fu_1282_p4;
    tmp_26_fu_1322_p4[zext_ln34_5_fu_1070_p1] = |(zext_ln821_11_fu_1318_p1);
end

assign tmp_27_fu_1336_p3 = ap_phi_mux_p_Val2_610_phi_fu_397_p4[32'd1];

always @ (*) begin
    tmp_28_fu_1348_p4 = tmp_25_fu_1308_p4;
    tmp_28_fu_1348_p4[zext_ln34_6_fu_1079_p1] = |(zext_ln821_12_fu_1344_p1);
end

always @ (*) begin
    tmp_29_fu_1362_p4 = tmp_26_fu_1322_p4;
    tmp_29_fu_1362_p4[zext_ln34_6_fu_1079_p1] = |(zext_ln821_13_fu_1358_p1);
end

assign tmp_30_fu_1376_p3 = ap_phi_mux_p_Val2_7_phi_fu_408_p4[32'd1];

assign tmp_4_fu_481_p3 = {{mul_ln25_fu_475_p2}, {3'd0}};

assign tmp_7_fu_920_p3 = {{select_ln34_1_reg_1463}, {5'd0}};

assign tmp_8_fu_988_p3 = {{select_ln35_1_reg_1520_pp0_iter2_reg}, {5'd0}};

assign tmp_9_fu_1096_p3 = ap_phi_mux_p_Val2_0_phi_fu_331_p4[32'd1];

assign trunc_ln38_1_fu_651_p1 = ch_t_fu_632_p2[2:0];

assign trunc_ln38_fu_495_p1 = ap_phi_mux_ch_t_0_phi_fu_287_p4[2:0];

assign trunc_ln821_1_fu_1132_p1 = ap_phi_mux_p_Val2_1_phi_fu_342_p4[0:0];

assign trunc_ln821_2_fu_1172_p1 = ap_phi_mux_p_Val2_2_phi_fu_353_p4[0:0];

assign trunc_ln821_3_fu_1212_p1 = ap_phi_mux_p_Val2_3_phi_fu_364_p4[0:0];

assign trunc_ln821_4_fu_1252_p1 = ap_phi_mux_p_Val2_4_phi_fu_375_p4[0:0];

assign trunc_ln821_5_fu_1292_p1 = ap_phi_mux_p_Val2_59_phi_fu_386_p4[0:0];

assign trunc_ln821_6_fu_1332_p1 = ap_phi_mux_p_Val2_610_phi_fu_397_p4[0:0];

assign trunc_ln821_7_fu_1372_p1 = ap_phi_mux_p_Val2_7_phi_fu_408_p4[0:0];

assign trunc_ln821_fu_1092_p1 = ap_phi_mux_p_Val2_0_phi_fu_331_p4[0:0];

assign xor_ln34_1_fu_1029_p2 = (select_ln34_3_reg_1474_pp0_iter3_reg ^ 6'd62);

assign xor_ln34_2_fu_1038_p2 = (select_ln34_3_reg_1474_pp0_iter3_reg ^ 6'd61);

assign xor_ln34_3_fu_1047_p2 = (select_ln34_3_reg_1474_pp0_iter3_reg ^ 6'd60);

assign xor_ln34_4_fu_1056_p2 = (select_ln34_3_reg_1474_pp0_iter3_reg ^ 6'd59);

assign xor_ln34_5_fu_1065_p2 = (select_ln34_3_reg_1474_pp0_iter3_reg ^ 6'd58);

assign xor_ln34_6_fu_1074_p2 = (select_ln34_3_reg_1474_pp0_iter3_reg ^ 6'd57);

assign xor_ln34_7_fu_1083_p2 = (select_ln34_3_reg_1474_pp0_iter3_reg ^ 6'd56);

assign xor_ln34_fu_1020_p2 = (select_ln34_3_reg_1474_pp0_iter3_reg ^ 6'd63);

assign zext_ln34_1_fu_1034_p1 = xor_ln34_1_fu_1029_p2;

assign zext_ln34_2_fu_1043_p1 = xor_ln34_2_fu_1038_p2;

assign zext_ln34_3_fu_1052_p1 = xor_ln34_3_fu_1047_p2;

assign zext_ln34_4_fu_1061_p1 = xor_ln34_4_fu_1056_p2;

assign zext_ln34_5_fu_1070_p1 = xor_ln34_5_fu_1065_p2;

assign zext_ln34_6_fu_1079_p1 = xor_ln34_6_fu_1074_p2;

assign zext_ln34_7_fu_1088_p1 = xor_ln34_7_fu_1083_p2;

assign zext_ln34_fu_1025_p1 = xor_ln34_fu_1020_p2;

assign zext_ln35_1_fu_937_p1 = select_ln35_1_reg_1520;

assign zext_ln35_fu_985_p1 = select_ln35_1_reg_1520_pp0_iter2_reg;

assign zext_ln38_1_fu_663_p1 = channel_start_mid1_fu_655_p3;

assign zext_ln38_fu_507_p1 = channel_start_fu_499_p3;

assign zext_ln40_1_fu_927_p1 = tmp_7_fu_920_p3;

assign zext_ln40_2_fu_946_p1 = add_ln40_1_fu_940_p2;

assign zext_ln40_3_fu_1005_p1 = select_ln35_reg_1514_pp0_iter2_reg;

assign zext_ln40_4_fu_964_p1 = select_ln35_reg_1514;

assign zext_ln40_5_fu_973_p1 = add_ln40_3_fu_967_p2;

assign zext_ln40_fu_917_p1 = select_ln34_1_reg_1463;

assign zext_ln41_10_fu_771_p1 = or_ln41_10_fu_765_p2;

assign zext_ln41_11_fu_794_p1 = or_ln41_11_fu_788_p2;

assign zext_ln41_12_fu_817_p1 = or_ln41_12_fu_811_p2;

assign zext_ln41_13_fu_840_p1 = or_ln41_13_fu_834_p2;

assign zext_ln41_1_fu_537_p1 = or_ln41_1_fu_531_p2;

assign zext_ln41_2_fu_552_p1 = or_ln41_2_fu_546_p2;

assign zext_ln41_3_fu_567_p1 = or_ln41_3_fu_561_p2;

assign zext_ln41_4_fu_582_p1 = or_ln41_4_fu_576_p2;

assign zext_ln41_5_fu_597_p1 = or_ln41_5_fu_591_p2;

assign zext_ln41_6_fu_612_p1 = or_ln41_6_fu_606_p2;

assign zext_ln41_7_fu_702_p1 = or_ln41_7_fu_696_p2;

assign zext_ln41_8_fu_725_p1 = or_ln41_8_fu_719_p2;

assign zext_ln41_9_fu_748_p1 = or_ln41_9_fu_742_p2;

assign zext_ln41_fu_522_p1 = or_ln41_fu_516_p2;

assign zext_ln821_10_fu_1304_p1 = tmp_24_fu_1296_p3;

assign zext_ln821_11_fu_1318_p1 = trunc_ln821_5_fu_1292_p1;

assign zext_ln821_12_fu_1344_p1 = tmp_27_fu_1336_p3;

assign zext_ln821_13_fu_1358_p1 = trunc_ln821_6_fu_1332_p1;

assign zext_ln821_14_fu_1384_p1 = tmp_30_fu_1376_p3;

assign zext_ln821_15_fu_1399_p1 = trunc_ln821_7_fu_1372_p1;

assign zext_ln821_16_fu_995_p1 = tmp_8_fu_988_p3;

assign zext_ln821_17_fu_1014_p1 = add_ln821_1_fu_1008_p2;

assign zext_ln821_1_fu_1118_p1 = trunc_ln821_fu_1092_p1;

assign zext_ln821_2_fu_1144_p1 = tmp_12_fu_1136_p3;

assign zext_ln821_3_fu_1158_p1 = trunc_ln821_1_fu_1132_p1;

assign zext_ln821_4_fu_1184_p1 = tmp_15_fu_1176_p3;

assign zext_ln821_5_fu_1198_p1 = trunc_ln821_2_fu_1172_p1;

assign zext_ln821_6_fu_1224_p1 = tmp_18_fu_1216_p3;

assign zext_ln821_7_fu_1238_p1 = trunc_ln821_3_fu_1212_p1;

assign zext_ln821_8_fu_1264_p1 = tmp_21_fu_1256_p3;

assign zext_ln821_9_fu_1278_p1 = trunc_ln821_4_fu_1252_p1;

assign zext_ln821_fu_1104_p1 = tmp_9_fu_1096_p3;

always @ (posedge ap_clk) begin
    tmp_4_reg_1444[2:0] <= 3'b000;
    select_ln34_3_reg_1474[2:0] <= 3'b000;
    select_ln34_3_reg_1474_pp0_iter1_reg[2:0] <= 3'b000;
    select_ln34_3_reg_1474_pp0_iter2_reg[2:0] <= 3'b000;
    select_ln34_3_reg_1474_pp0_iter3_reg[2:0] <= 3'b000;
end

endmodule //quant_and_pack
