// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module matmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputs_V_address0,
        inputs_V_ce0,
        inputs_V_q0,
        outputs_V_address0,
        outputs_V_ce0,
        outputs_V_we0,
        outputs_V_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_pp1_stage0 = 7'd8;
parameter    ap_ST_fsm_state9 = 7'd16;
parameter    ap_ST_fsm_state10 = 7'd32;
parameter    ap_ST_fsm_state11 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] inputs_V_address0;
output   inputs_V_ce0;
input  [23:0] inputs_V_q0;
output  [3:0] outputs_V_address0;
output   outputs_V_ce0;
output   outputs_V_we0;
output  [23:0] outputs_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg inputs_V_ce0;
reg outputs_V_ce0;
reg outputs_V_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] linear_weight_fix_V_s_address0;
reg    linear_weight_fix_V_s_ce0;
wire   [21:0] linear_weight_fix_V_s_q0;
wire   [5:0] linear_weight_fix_V_1_address0;
reg    linear_weight_fix_V_1_ce0;
wire   [21:0] linear_weight_fix_V_1_q0;
wire   [5:0] linear_weight_fix_V_2_address0;
reg    linear_weight_fix_V_2_ce0;
wire   [21:0] linear_weight_fix_V_2_q0;
wire   [5:0] linear_weight_fix_V_3_address0;
reg    linear_weight_fix_V_3_ce0;
wire   [20:0] linear_weight_fix_V_3_q0;
wire   [5:0] linear_weight_fix_V_4_address0;
reg    linear_weight_fix_V_4_ce0;
wire   [21:0] linear_weight_fix_V_4_q0;
wire   [5:0] linear_weight_fix_V_5_address0;
reg    linear_weight_fix_V_5_ce0;
wire   [21:0] linear_weight_fix_V_5_q0;
wire   [5:0] linear_weight_fix_V_6_address0;
reg    linear_weight_fix_V_6_ce0;
wire   [21:0] linear_weight_fix_V_6_q0;
wire   [5:0] linear_weight_fix_V_7_address0;
reg    linear_weight_fix_V_7_ce0;
wire   [21:0] linear_weight_fix_V_7_q0;
wire   [5:0] linear_weight_fix_V_8_address0;
reg    linear_weight_fix_V_8_ce0;
wire   [21:0] linear_weight_fix_V_8_q0;
wire   [5:0] linear_weight_fix_V_9_address0;
reg    linear_weight_fix_V_9_ce0;
wire   [21:0] linear_weight_fix_V_9_q0;
reg   [23:0] buf_9_V_210_reg_367;
reg   [23:0] buf_8_V_29_reg_377;
reg   [23:0] buf_7_V_28_reg_387;
reg   [23:0] buf_6_V_27_reg_397;
reg   [23:0] buf_5_V_26_reg_407;
reg   [23:0] buf_4_V_25_reg_417;
reg   [23:0] buf_3_V_24_reg_427;
reg   [23:0] buf_2_V_23_reg_437;
reg   [23:0] buf_1_V_22_reg_447;
reg   [23:0] buf_0_V_21_reg_457;
reg   [6:0] cii_0_reg_467;
reg   [23:0] buf_0_V_0_load_reg_3674;
wire    ap_CS_fsm_state2;
reg   [23:0] buf_1_V_0_load_reg_3679;
reg   [23:0] buf_2_V_0_load_reg_3684;
reg   [23:0] buf_3_V_0_load_reg_3689;
reg   [23:0] buf_4_V_0_load_reg_3694;
reg   [23:0] buf_5_V_0_load_reg_3699;
reg   [23:0] buf_6_V_0_load_reg_3704;
reg   [23:0] buf_7_V_0_load_reg_3709;
reg   [23:0] buf_8_V_0_load_reg_3714;
reg   [23:0] buf_9_V_0_load_reg_3719;
wire   [3:0] coo_fu_525_p2;
wire   [0:0] icmp_ln356_fu_643_p2;
reg   [0:0] icmp_ln356_reg_3732;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state4_pp1_stage0_iter0;
wire    ap_block_state5_pp1_stage0_iter1;
wire    ap_block_state6_pp1_stage0_iter2;
wire    ap_block_state7_pp1_stage0_iter3;
wire    ap_block_state8_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln356_reg_3732_pp1_iter1_reg;
reg   [0:0] icmp_ln356_reg_3732_pp1_iter2_reg;
reg   [0:0] icmp_ln356_reg_3732_pp1_iter3_reg;
wire   [6:0] cii_fu_649_p2;
reg    ap_enable_reg_pp1_iter0;
reg  signed [23:0] tmp_in_V_reg_3796;
wire   [18:0] add_ln415_fu_696_p2;
reg  signed [18:0] add_ln415_reg_3802;
wire   [18:0] add_ln415_1_fu_728_p2;
reg  signed [18:0] add_ln415_1_reg_3807;
wire   [18:0] add_ln415_2_fu_760_p2;
reg  signed [18:0] add_ln415_2_reg_3812;
wire   [17:0] add_ln415_3_fu_792_p2;
reg  signed [17:0] add_ln415_3_reg_3817;
wire   [18:0] add_ln415_4_fu_824_p2;
reg  signed [18:0] add_ln415_4_reg_3822;
wire   [18:0] add_ln415_5_fu_856_p2;
reg  signed [18:0] add_ln415_5_reg_3827;
wire   [18:0] add_ln415_6_fu_888_p2;
reg  signed [18:0] add_ln415_6_reg_3832;
wire   [18:0] add_ln415_7_fu_920_p2;
reg  signed [18:0] add_ln415_7_reg_3837;
wire   [18:0] add_ln415_8_fu_952_p2;
reg  signed [18:0] add_ln415_8_reg_3842;
wire   [18:0] add_ln415_9_fu_984_p2;
reg  signed [18:0] add_ln415_9_reg_3847;
wire  signed [43:0] mul_ln1118_fu_3534_p2;
reg  signed [43:0] mul_ln1118_reg_3852;
wire   [40:0] trunc_ln1192_fu_999_p1;
reg   [40:0] trunc_ln1192_reg_3857;
reg   [0:0] tmp_183_reg_3862;
wire  signed [43:0] mul_ln1118_1_fu_3542_p2;
reg  signed [43:0] mul_ln1118_1_reg_3867;
wire   [40:0] trunc_ln1192_1_fu_1012_p1;
reg   [40:0] trunc_ln1192_1_reg_3872;
reg   [0:0] tmp_189_reg_3877;
wire  signed [43:0] mul_ln1118_2_fu_3550_p2;
reg  signed [43:0] mul_ln1118_2_reg_3882;
wire   [40:0] trunc_ln1192_2_fu_1025_p1;
reg   [40:0] trunc_ln1192_2_reg_3887;
reg   [0:0] tmp_195_reg_3892;
wire  signed [42:0] mul_ln1118_3_fu_3558_p2;
reg  signed [42:0] mul_ln1118_3_reg_3897;
wire   [40:0] trunc_ln1192_3_fu_1038_p1;
reg   [40:0] trunc_ln1192_3_reg_3902;
reg   [0:0] tmp_201_reg_3907;
wire  signed [43:0] mul_ln1118_4_fu_3566_p2;
reg  signed [43:0] mul_ln1118_4_reg_3912;
wire   [40:0] trunc_ln1192_4_fu_1051_p1;
reg   [40:0] trunc_ln1192_4_reg_3917;
reg   [0:0] tmp_207_reg_3922;
wire  signed [43:0] mul_ln1118_5_fu_3574_p2;
reg  signed [43:0] mul_ln1118_5_reg_3927;
wire   [40:0] trunc_ln1192_5_fu_1064_p1;
reg   [40:0] trunc_ln1192_5_reg_3932;
reg   [0:0] tmp_213_reg_3937;
wire  signed [43:0] mul_ln1118_6_fu_3582_p2;
reg  signed [43:0] mul_ln1118_6_reg_3942;
wire   [40:0] trunc_ln1192_6_fu_1077_p1;
reg   [40:0] trunc_ln1192_6_reg_3947;
reg   [0:0] tmp_219_reg_3952;
wire  signed [43:0] mul_ln1118_7_fu_3590_p2;
reg  signed [43:0] mul_ln1118_7_reg_3957;
wire   [40:0] trunc_ln1192_7_fu_1090_p1;
reg   [40:0] trunc_ln1192_7_reg_3962;
reg   [0:0] tmp_225_reg_3967;
wire  signed [43:0] mul_ln1118_8_fu_3598_p2;
reg  signed [43:0] mul_ln1118_8_reg_3972;
wire   [40:0] trunc_ln1192_8_fu_1103_p1;
reg   [40:0] trunc_ln1192_8_reg_3977;
reg   [0:0] tmp_231_reg_3982;
wire  signed [43:0] mul_ln1118_9_fu_3606_p2;
reg  signed [43:0] mul_ln1118_9_reg_3987;
wire   [40:0] trunc_ln1192_9_fu_1116_p1;
reg   [40:0] trunc_ln1192_9_reg_3992;
reg   [0:0] tmp_237_reg_3997;
wire   [23:0] buf_0_V_fu_1181_p2;
reg   [23:0] buf_0_V_reg_4002;
wire   [0:0] and_ln785_fu_1313_p2;
reg   [0:0] and_ln785_reg_4007;
wire   [0:0] or_ln785_10_fu_1343_p2;
reg   [0:0] or_ln785_10_reg_4012;
wire   [23:0] buf_1_V_fu_1404_p2;
reg   [23:0] buf_1_V_reg_4017;
wire   [0:0] and_ln785_1_fu_1536_p2;
reg   [0:0] and_ln785_1_reg_4022;
wire   [0:0] or_ln785_11_fu_1566_p2;
reg   [0:0] or_ln785_11_reg_4027;
wire   [23:0] buf_2_V_fu_1627_p2;
reg   [23:0] buf_2_V_reg_4032;
wire   [0:0] and_ln785_2_fu_1759_p2;
reg   [0:0] and_ln785_2_reg_4037;
wire   [0:0] or_ln785_12_fu_1789_p2;
reg   [0:0] or_ln785_12_reg_4042;
wire   [23:0] buf_3_V_fu_1854_p2;
reg   [23:0] buf_3_V_reg_4047;
wire   [0:0] and_ln785_3_fu_1986_p2;
reg   [0:0] and_ln785_3_reg_4052;
wire   [0:0] or_ln785_13_fu_2016_p2;
reg   [0:0] or_ln785_13_reg_4057;
wire   [23:0] buf_4_V_fu_2077_p2;
reg   [23:0] buf_4_V_reg_4062;
wire   [0:0] and_ln785_4_fu_2209_p2;
reg   [0:0] and_ln785_4_reg_4067;
wire   [0:0] or_ln785_14_fu_2239_p2;
reg   [0:0] or_ln785_14_reg_4072;
wire   [23:0] buf_5_V_fu_2300_p2;
reg   [23:0] buf_5_V_reg_4077;
wire   [0:0] and_ln785_5_fu_2432_p2;
reg   [0:0] and_ln785_5_reg_4082;
wire   [0:0] or_ln785_15_fu_2462_p2;
reg   [0:0] or_ln785_15_reg_4087;
wire   [23:0] buf_6_V_fu_2523_p2;
reg   [23:0] buf_6_V_reg_4092;
wire   [0:0] and_ln785_6_fu_2655_p2;
reg   [0:0] and_ln785_6_reg_4097;
wire   [0:0] or_ln785_16_fu_2685_p2;
reg   [0:0] or_ln785_16_reg_4102;
wire   [23:0] buf_7_V_fu_2746_p2;
reg   [23:0] buf_7_V_reg_4107;
wire   [0:0] and_ln785_7_fu_2878_p2;
reg   [0:0] and_ln785_7_reg_4112;
wire   [0:0] or_ln785_17_fu_2908_p2;
reg   [0:0] or_ln785_17_reg_4117;
wire   [23:0] buf_8_V_1_fu_2969_p2;
reg   [23:0] buf_8_V_1_reg_4122;
wire   [0:0] and_ln785_8_fu_3101_p2;
reg   [0:0] and_ln785_8_reg_4127;
wire   [0:0] or_ln785_18_fu_3131_p2;
reg   [0:0] or_ln785_18_reg_4132;
wire   [23:0] buf_9_V_fu_3192_p2;
reg   [23:0] buf_9_V_reg_4137;
wire   [0:0] and_ln785_9_fu_3324_p2;
reg   [0:0] and_ln785_9_reg_4142;
wire   [0:0] or_ln785_19_fu_3354_p2;
reg   [0:0] or_ln785_19_reg_4147;
wire   [23:0] select_ln785_1_fu_3367_p3;
reg    ap_enable_reg_pp1_iter4;
wire   [23:0] select_ln785_3_fu_3380_p3;
wire   [23:0] select_ln785_5_fu_3393_p3;
wire   [23:0] select_ln785_7_fu_3406_p3;
wire   [23:0] select_ln785_9_fu_3419_p3;
wire   [23:0] select_ln785_11_fu_3432_p3;
wire   [23:0] select_ln785_13_fu_3445_p3;
wire   [23:0] select_ln785_15_fu_3458_p3;
wire   [23:0] select_ln785_17_fu_3471_p3;
wire   [23:0] select_ln785_19_fu_3484_p3;
wire   [3:0] coo_1_fu_3496_p2;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire   [3:0] ap_phi_mux_coo_0_phi_fu_360_p4;
reg   [3:0] coo_0_reg_356;
wire   [0:0] icmp_ln351_fu_519_p2;
reg   [23:0] ap_phi_mux_buf_9_V_210_phi_fu_370_p4;
wire    ap_block_pp1_stage0;
reg   [23:0] ap_phi_mux_buf_8_V_29_phi_fu_380_p4;
reg   [23:0] ap_phi_mux_buf_7_V_28_phi_fu_390_p4;
reg   [23:0] ap_phi_mux_buf_6_V_27_phi_fu_400_p4;
reg   [23:0] ap_phi_mux_buf_5_V_26_phi_fu_410_p4;
reg   [23:0] ap_phi_mux_buf_4_V_25_phi_fu_420_p4;
reg   [23:0] ap_phi_mux_buf_3_V_24_phi_fu_430_p4;
reg   [23:0] ap_phi_mux_buf_2_V_23_phi_fu_440_p4;
reg   [23:0] ap_phi_mux_buf_1_V_22_phi_fu_450_p4;
reg   [23:0] ap_phi_mux_buf_0_V_21_phi_fu_460_p4;
reg   [3:0] coo4_0_reg_478;
wire   [0:0] icmp_ln369_fu_3490_p2;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln358_fu_655_p1;
wire   [63:0] zext_ln371_fu_3502_p1;
reg   [23:0] buf_0_V_0_fu_160;
wire  signed [23:0] sext_ln415_fu_589_p1;
reg   [23:0] buf_1_V_0_fu_164;
reg   [23:0] buf_2_V_0_fu_168;
reg   [23:0] buf_3_V_0_fu_172;
reg   [23:0] buf_4_V_0_fu_176;
reg   [23:0] buf_5_V_0_fu_180;
reg   [23:0] buf_6_V_0_fu_184;
reg   [23:0] buf_7_V_0_fu_188;
reg   [23:0] buf_8_V_0_fu_192;
reg   [23:0] buf_9_V_0_fu_196;
wire   [23:0] tmp_22_fu_3507_p12;
wire   [23:0] p_Val2_s_fu_531_p12;
wire   [19:0] trunc_ln_fu_557_p4;
wire   [0:0] tmp_160_fu_571_p3;
wire  signed [20:0] sext_ln713_fu_567_p1;
wire   [20:0] zext_ln415_fu_579_p1;
wire   [20:0] buf_0_V_2_fu_583_p2;
wire   [17:0] tmp_161_fu_670_p4;
wire   [0:0] tmp_162_fu_684_p3;
wire  signed [18:0] sext_ln415_1_fu_680_p1;
wire   [18:0] zext_ln415_1_fu_692_p1;
wire   [17:0] tmp_163_fu_702_p4;
wire   [0:0] tmp_164_fu_716_p3;
wire  signed [18:0] sext_ln415_2_fu_712_p1;
wire   [18:0] zext_ln415_2_fu_724_p1;
wire   [17:0] tmp_165_fu_734_p4;
wire   [0:0] tmp_166_fu_748_p3;
wire  signed [18:0] sext_ln415_3_fu_744_p1;
wire   [18:0] zext_ln415_3_fu_756_p1;
wire   [16:0] tmp_167_fu_766_p4;
wire   [0:0] tmp_168_fu_780_p3;
wire  signed [17:0] sext_ln415_4_fu_776_p1;
wire   [17:0] zext_ln415_4_fu_788_p1;
wire   [17:0] tmp_169_fu_798_p4;
wire   [0:0] tmp_170_fu_812_p3;
wire  signed [18:0] sext_ln415_5_fu_808_p1;
wire   [18:0] zext_ln415_5_fu_820_p1;
wire   [17:0] tmp_171_fu_830_p4;
wire   [0:0] tmp_172_fu_844_p3;
wire  signed [18:0] sext_ln415_6_fu_840_p1;
wire   [18:0] zext_ln415_6_fu_852_p1;
wire   [17:0] tmp_173_fu_862_p4;
wire   [0:0] tmp_174_fu_876_p3;
wire  signed [18:0] sext_ln415_7_fu_872_p1;
wire   [18:0] zext_ln415_7_fu_884_p1;
wire   [17:0] tmp_175_fu_894_p4;
wire   [0:0] tmp_176_fu_908_p3;
wire  signed [18:0] sext_ln415_8_fu_904_p1;
wire   [18:0] zext_ln415_8_fu_916_p1;
wire   [17:0] tmp_177_fu_926_p4;
wire   [0:0] tmp_178_fu_940_p3;
wire  signed [18:0] sext_ln415_9_fu_936_p1;
wire   [18:0] zext_ln415_9_fu_948_p1;
wire   [17:0] tmp_179_fu_958_p4;
wire   [0:0] tmp_180_fu_972_p3;
wire  signed [18:0] sext_ln415_10_fu_968_p1;
wire   [18:0] zext_ln415_10_fu_980_p1;
wire  signed [39:0] shl_ln_fu_1126_p3;
wire  signed [43:0] sext_ln728_fu_1134_p1;
wire  signed [40:0] sext_ln1192_fu_1138_p1;
(* use_dsp48 = "no" *) wire   [43:0] add_ln1192_fu_1142_p2;
wire   [23:0] zext_ln415_11_fu_1178_p1;
wire   [23:0] trunc_ln708_s_fu_1160_p4;
wire   [0:0] tmp_184_fu_1187_p3;
wire   [0:0] tmp_182_fu_1170_p3;
wire   [0:0] xor_ln416_fu_1195_p2;
wire   [2:0] tmp_4_fu_1215_p4;
wire   [3:0] tmp_5_fu_1231_p4;
wire   [0:0] and_ln416_fu_1201_p2;
wire   [0:0] icmp_ln879_1_fu_1241_p2;
wire   [0:0] icmp_ln768_fu_1247_p2;
wire   [40:0] add_ln1192_10_fu_1147_p2;
wire   [0:0] tmp_186_fu_1261_p3;
wire   [0:0] icmp_ln879_fu_1225_p2;
wire   [0:0] xor_ln779_fu_1269_p2;
wire   [0:0] and_ln779_fu_1275_p2;
wire   [0:0] select_ln777_fu_1253_p3;
wire   [0:0] tmp_185_fu_1207_p3;
wire   [0:0] xor_ln785_fu_1295_p2;
wire   [0:0] tmp_181_fu_1152_p3;
wire   [0:0] or_ln785_fu_1301_p2;
wire   [0:0] xor_ln785_1_fu_1307_p2;
wire   [0:0] select_ln416_fu_1281_p3;
wire   [0:0] and_ln781_fu_1289_p2;
wire   [0:0] and_ln786_fu_1319_p2;
wire   [0:0] or_ln786_fu_1325_p2;
wire   [0:0] xor_ln786_fu_1331_p2;
wire   [0:0] and_ln786_10_fu_1337_p2;
wire  signed [39:0] shl_ln728_1_fu_1349_p3;
wire  signed [43:0] sext_ln728_1_fu_1357_p1;
wire  signed [40:0] sext_ln1192_1_fu_1361_p1;
(* use_dsp48 = "no" *) wire   [43:0] add_ln1192_1_fu_1365_p2;
wire   [23:0] zext_ln415_12_fu_1401_p1;
wire   [23:0] trunc_ln708_1_fu_1383_p4;
wire   [0:0] tmp_190_fu_1410_p3;
wire   [0:0] tmp_188_fu_1393_p3;
wire   [0:0] xor_ln416_1_fu_1418_p2;
wire   [2:0] tmp_6_fu_1438_p4;
wire   [3:0] tmp_7_fu_1454_p4;
wire   [0:0] and_ln416_1_fu_1424_p2;
wire   [0:0] icmp_ln879_3_fu_1464_p2;
wire   [0:0] icmp_ln768_1_fu_1470_p2;
wire   [40:0] add_ln1192_11_fu_1370_p2;
wire   [0:0] tmp_192_fu_1484_p3;
wire   [0:0] icmp_ln879_2_fu_1448_p2;
wire   [0:0] xor_ln779_1_fu_1492_p2;
wire   [0:0] and_ln779_1_fu_1498_p2;
wire   [0:0] select_ln777_1_fu_1476_p3;
wire   [0:0] tmp_191_fu_1430_p3;
wire   [0:0] xor_ln785_10_fu_1518_p2;
wire   [0:0] tmp_187_fu_1375_p3;
wire   [0:0] or_ln785_1_fu_1524_p2;
wire   [0:0] xor_ln785_11_fu_1530_p2;
wire   [0:0] select_ln416_1_fu_1504_p3;
wire   [0:0] and_ln781_1_fu_1512_p2;
wire   [0:0] and_ln786_1_fu_1542_p2;
wire   [0:0] or_ln786_1_fu_1548_p2;
wire   [0:0] xor_ln786_1_fu_1554_p2;
wire   [0:0] and_ln786_11_fu_1560_p2;
wire  signed [39:0] shl_ln728_2_fu_1572_p3;
wire  signed [43:0] sext_ln728_2_fu_1580_p1;
wire  signed [40:0] sext_ln1192_2_fu_1584_p1;
(* use_dsp48 = "no" *) wire   [43:0] add_ln1192_2_fu_1588_p2;
wire   [23:0] zext_ln415_13_fu_1624_p1;
wire   [23:0] trunc_ln708_2_fu_1606_p4;
wire   [0:0] tmp_196_fu_1633_p3;
wire   [0:0] tmp_194_fu_1616_p3;
wire   [0:0] xor_ln416_2_fu_1641_p2;
wire   [2:0] tmp_8_fu_1661_p4;
wire   [3:0] tmp_9_fu_1677_p4;
wire   [0:0] and_ln416_2_fu_1647_p2;
wire   [0:0] icmp_ln879_5_fu_1687_p2;
wire   [0:0] icmp_ln768_2_fu_1693_p2;
wire   [40:0] add_ln1192_12_fu_1593_p2;
wire   [0:0] tmp_198_fu_1707_p3;
wire   [0:0] icmp_ln879_4_fu_1671_p2;
wire   [0:0] xor_ln779_2_fu_1715_p2;
wire   [0:0] and_ln779_2_fu_1721_p2;
wire   [0:0] select_ln777_2_fu_1699_p3;
wire   [0:0] tmp_197_fu_1653_p3;
wire   [0:0] xor_ln785_2_fu_1741_p2;
wire   [0:0] tmp_193_fu_1598_p3;
wire   [0:0] or_ln785_2_fu_1747_p2;
wire   [0:0] xor_ln785_12_fu_1753_p2;
wire   [0:0] select_ln416_2_fu_1727_p3;
wire   [0:0] and_ln781_2_fu_1735_p2;
wire   [0:0] and_ln786_2_fu_1765_p2;
wire   [0:0] or_ln786_2_fu_1771_p2;
wire   [0:0] xor_ln786_2_fu_1777_p2;
wire   [0:0] and_ln786_12_fu_1783_p2;
wire  signed [39:0] shl_ln728_3_fu_1795_p3;
wire  signed [43:0] sext_ln1192_10_fu_1807_p1;
wire  signed [43:0] sext_ln728_3_fu_1803_p1;
wire  signed [40:0] sext_ln1192_3_fu_1810_p1;
wire   [43:0] add_ln1192_3_fu_1814_p2;
wire   [23:0] zext_ln415_14_fu_1851_p1;
wire   [23:0] trunc_ln708_3_fu_1833_p4;
wire   [0:0] tmp_202_fu_1860_p3;
wire   [0:0] tmp_200_fu_1843_p3;
wire   [0:0] xor_ln416_3_fu_1868_p2;
wire   [2:0] tmp_2_fu_1888_p4;
wire   [3:0] tmp_3_fu_1904_p4;
wire   [0:0] and_ln416_3_fu_1874_p2;
wire   [0:0] icmp_ln879_7_fu_1914_p2;
wire   [0:0] icmp_ln768_3_fu_1920_p2;
wire   [40:0] add_ln1192_13_fu_1820_p2;
wire   [0:0] tmp_204_fu_1934_p3;
wire   [0:0] icmp_ln879_6_fu_1898_p2;
wire   [0:0] xor_ln779_3_fu_1942_p2;
wire   [0:0] and_ln779_3_fu_1948_p2;
wire   [0:0] select_ln777_3_fu_1926_p3;
wire   [0:0] tmp_203_fu_1880_p3;
wire   [0:0] xor_ln785_3_fu_1968_p2;
wire   [0:0] tmp_199_fu_1825_p3;
wire   [0:0] or_ln785_3_fu_1974_p2;
wire   [0:0] xor_ln785_13_fu_1980_p2;
wire   [0:0] select_ln416_3_fu_1954_p3;
wire   [0:0] and_ln781_3_fu_1962_p2;
wire   [0:0] and_ln786_3_fu_1992_p2;
wire   [0:0] or_ln786_3_fu_1998_p2;
wire   [0:0] xor_ln786_3_fu_2004_p2;
wire   [0:0] and_ln786_13_fu_2010_p2;
wire  signed [39:0] shl_ln728_4_fu_2022_p3;
wire  signed [43:0] sext_ln728_4_fu_2030_p1;
wire  signed [40:0] sext_ln1192_4_fu_2034_p1;
(* use_dsp48 = "no" *) wire   [43:0] add_ln1192_4_fu_2038_p2;
wire   [23:0] zext_ln415_15_fu_2074_p1;
wire   [23:0] trunc_ln708_4_fu_2056_p4;
wire   [0:0] tmp_208_fu_2083_p3;
wire   [0:0] tmp_206_fu_2066_p3;
wire   [0:0] xor_ln416_4_fu_2091_p2;
wire   [2:0] tmp_10_fu_2111_p4;
wire   [3:0] tmp_11_fu_2127_p4;
wire   [0:0] and_ln416_4_fu_2097_p2;
wire   [0:0] icmp_ln879_9_fu_2137_p2;
wire   [0:0] icmp_ln768_4_fu_2143_p2;
wire   [40:0] add_ln1192_14_fu_2043_p2;
wire   [0:0] tmp_210_fu_2157_p3;
wire   [0:0] icmp_ln879_8_fu_2121_p2;
wire   [0:0] xor_ln779_4_fu_2165_p2;
wire   [0:0] and_ln779_4_fu_2171_p2;
wire   [0:0] select_ln777_4_fu_2149_p3;
wire   [0:0] tmp_209_fu_2103_p3;
wire   [0:0] xor_ln785_4_fu_2191_p2;
wire   [0:0] tmp_205_fu_2048_p3;
wire   [0:0] or_ln785_4_fu_2197_p2;
wire   [0:0] xor_ln785_14_fu_2203_p2;
wire   [0:0] select_ln416_4_fu_2177_p3;
wire   [0:0] and_ln781_4_fu_2185_p2;
wire   [0:0] and_ln786_4_fu_2215_p2;
wire   [0:0] or_ln786_4_fu_2221_p2;
wire   [0:0] xor_ln786_4_fu_2227_p2;
wire   [0:0] and_ln786_14_fu_2233_p2;
wire  signed [39:0] shl_ln728_5_fu_2245_p3;
wire  signed [43:0] sext_ln728_5_fu_2253_p1;
wire  signed [40:0] sext_ln1192_5_fu_2257_p1;
(* use_dsp48 = "no" *) wire   [43:0] add_ln1192_5_fu_2261_p2;
wire   [23:0] zext_ln415_16_fu_2297_p1;
wire   [23:0] trunc_ln708_5_fu_2279_p4;
wire   [0:0] tmp_214_fu_2306_p3;
wire   [0:0] tmp_212_fu_2289_p3;
wire   [0:0] xor_ln416_5_fu_2314_p2;
wire   [2:0] tmp_12_fu_2334_p4;
wire   [3:0] tmp_13_fu_2350_p4;
wire   [0:0] and_ln416_5_fu_2320_p2;
wire   [0:0] icmp_ln879_11_fu_2360_p2;
wire   [0:0] icmp_ln768_5_fu_2366_p2;
wire   [40:0] add_ln1192_15_fu_2266_p2;
wire   [0:0] tmp_216_fu_2380_p3;
wire   [0:0] icmp_ln879_10_fu_2344_p2;
wire   [0:0] xor_ln779_5_fu_2388_p2;
wire   [0:0] and_ln779_5_fu_2394_p2;
wire   [0:0] select_ln777_5_fu_2372_p3;
wire   [0:0] tmp_215_fu_2326_p3;
wire   [0:0] xor_ln785_5_fu_2414_p2;
wire   [0:0] tmp_211_fu_2271_p3;
wire   [0:0] or_ln785_5_fu_2420_p2;
wire   [0:0] xor_ln785_15_fu_2426_p2;
wire   [0:0] select_ln416_5_fu_2400_p3;
wire   [0:0] and_ln781_5_fu_2408_p2;
wire   [0:0] and_ln786_5_fu_2438_p2;
wire   [0:0] or_ln786_5_fu_2444_p2;
wire   [0:0] xor_ln786_5_fu_2450_p2;
wire   [0:0] and_ln786_15_fu_2456_p2;
wire  signed [39:0] shl_ln728_6_fu_2468_p3;
wire  signed [43:0] sext_ln728_6_fu_2476_p1;
wire  signed [40:0] sext_ln1192_6_fu_2480_p1;
(* use_dsp48 = "no" *) wire   [43:0] add_ln1192_6_fu_2484_p2;
wire   [23:0] zext_ln415_17_fu_2520_p1;
wire   [23:0] trunc_ln708_6_fu_2502_p4;
wire   [0:0] tmp_220_fu_2529_p3;
wire   [0:0] tmp_218_fu_2512_p3;
wire   [0:0] xor_ln416_6_fu_2537_p2;
wire   [2:0] tmp_14_fu_2557_p4;
wire   [3:0] tmp_15_fu_2573_p4;
wire   [0:0] and_ln416_6_fu_2543_p2;
wire   [0:0] icmp_ln879_13_fu_2583_p2;
wire   [0:0] icmp_ln768_6_fu_2589_p2;
wire   [40:0] add_ln1192_16_fu_2489_p2;
wire   [0:0] tmp_222_fu_2603_p3;
wire   [0:0] icmp_ln879_12_fu_2567_p2;
wire   [0:0] xor_ln779_6_fu_2611_p2;
wire   [0:0] and_ln779_6_fu_2617_p2;
wire   [0:0] select_ln777_6_fu_2595_p3;
wire   [0:0] tmp_221_fu_2549_p3;
wire   [0:0] xor_ln785_6_fu_2637_p2;
wire   [0:0] tmp_217_fu_2494_p3;
wire   [0:0] or_ln785_6_fu_2643_p2;
wire   [0:0] xor_ln785_16_fu_2649_p2;
wire   [0:0] select_ln416_6_fu_2623_p3;
wire   [0:0] and_ln781_6_fu_2631_p2;
wire   [0:0] and_ln786_6_fu_2661_p2;
wire   [0:0] or_ln786_6_fu_2667_p2;
wire   [0:0] xor_ln786_6_fu_2673_p2;
wire   [0:0] and_ln786_16_fu_2679_p2;
wire  signed [39:0] shl_ln728_7_fu_2691_p3;
wire  signed [43:0] sext_ln728_7_fu_2699_p1;
wire  signed [40:0] sext_ln1192_7_fu_2703_p1;
(* use_dsp48 = "no" *) wire   [43:0] add_ln1192_7_fu_2707_p2;
wire   [23:0] zext_ln415_18_fu_2743_p1;
wire   [23:0] trunc_ln708_7_fu_2725_p4;
wire   [0:0] tmp_226_fu_2752_p3;
wire   [0:0] tmp_224_fu_2735_p3;
wire   [0:0] xor_ln416_7_fu_2760_p2;
wire   [2:0] tmp_16_fu_2780_p4;
wire   [3:0] tmp_17_fu_2796_p4;
wire   [0:0] and_ln416_7_fu_2766_p2;
wire   [0:0] icmp_ln879_15_fu_2806_p2;
wire   [0:0] icmp_ln768_7_fu_2812_p2;
wire   [40:0] add_ln1192_17_fu_2712_p2;
wire   [0:0] tmp_228_fu_2826_p3;
wire   [0:0] icmp_ln879_14_fu_2790_p2;
wire   [0:0] xor_ln779_7_fu_2834_p2;
wire   [0:0] and_ln779_7_fu_2840_p2;
wire   [0:0] select_ln777_7_fu_2818_p3;
wire   [0:0] tmp_227_fu_2772_p3;
wire   [0:0] xor_ln785_7_fu_2860_p2;
wire   [0:0] tmp_223_fu_2717_p3;
wire   [0:0] or_ln785_7_fu_2866_p2;
wire   [0:0] xor_ln785_17_fu_2872_p2;
wire   [0:0] select_ln416_7_fu_2846_p3;
wire   [0:0] and_ln781_7_fu_2854_p2;
wire   [0:0] and_ln786_7_fu_2884_p2;
wire   [0:0] or_ln786_7_fu_2890_p2;
wire   [0:0] xor_ln786_7_fu_2896_p2;
wire   [0:0] and_ln786_17_fu_2902_p2;
wire  signed [39:0] shl_ln728_8_fu_2914_p3;
wire  signed [43:0] sext_ln728_8_fu_2922_p1;
wire  signed [40:0] sext_ln1192_8_fu_2926_p1;
(* use_dsp48 = "no" *) wire   [43:0] add_ln1192_8_fu_2930_p2;
wire   [23:0] zext_ln415_19_fu_2966_p1;
wire   [23:0] trunc_ln708_8_fu_2948_p4;
wire   [0:0] tmp_232_fu_2975_p3;
wire   [0:0] tmp_230_fu_2958_p3;
wire   [0:0] xor_ln416_8_fu_2983_p2;
wire   [2:0] tmp_18_fu_3003_p4;
wire   [3:0] tmp_19_fu_3019_p4;
wire   [0:0] and_ln416_8_fu_2989_p2;
wire   [0:0] icmp_ln879_17_fu_3029_p2;
wire   [0:0] icmp_ln768_8_fu_3035_p2;
wire   [40:0] add_ln1192_18_fu_2935_p2;
wire   [0:0] tmp_234_fu_3049_p3;
wire   [0:0] icmp_ln879_16_fu_3013_p2;
wire   [0:0] xor_ln779_8_fu_3057_p2;
wire   [0:0] and_ln779_8_fu_3063_p2;
wire   [0:0] select_ln777_8_fu_3041_p3;
wire   [0:0] tmp_233_fu_2995_p3;
wire   [0:0] xor_ln785_8_fu_3083_p2;
wire   [0:0] tmp_229_fu_2940_p3;
wire   [0:0] or_ln785_8_fu_3089_p2;
wire   [0:0] xor_ln785_18_fu_3095_p2;
wire   [0:0] select_ln416_8_fu_3069_p3;
wire   [0:0] and_ln781_8_fu_3077_p2;
wire   [0:0] and_ln786_8_fu_3107_p2;
wire   [0:0] or_ln786_8_fu_3113_p2;
wire   [0:0] xor_ln786_8_fu_3119_p2;
wire   [0:0] and_ln786_18_fu_3125_p2;
wire  signed [39:0] shl_ln728_9_fu_3137_p3;
wire  signed [43:0] sext_ln728_9_fu_3145_p1;
wire  signed [40:0] sext_ln1192_9_fu_3149_p1;
(* use_dsp48 = "no" *) wire   [43:0] add_ln1192_9_fu_3153_p2;
wire   [23:0] zext_ln415_20_fu_3189_p1;
wire   [23:0] trunc_ln708_9_fu_3171_p4;
wire   [0:0] tmp_238_fu_3198_p3;
wire   [0:0] tmp_236_fu_3181_p3;
wire   [0:0] xor_ln416_9_fu_3206_p2;
wire   [2:0] tmp_20_fu_3226_p4;
wire   [3:0] tmp_21_fu_3242_p4;
wire   [0:0] and_ln416_9_fu_3212_p2;
wire   [0:0] icmp_ln879_19_fu_3252_p2;
wire   [0:0] icmp_ln768_9_fu_3258_p2;
wire   [40:0] add_ln1192_19_fu_3158_p2;
wire   [0:0] tmp_240_fu_3272_p3;
wire   [0:0] icmp_ln879_18_fu_3236_p2;
wire   [0:0] xor_ln779_9_fu_3280_p2;
wire   [0:0] and_ln779_9_fu_3286_p2;
wire   [0:0] select_ln777_9_fu_3264_p3;
wire   [0:0] tmp_239_fu_3218_p3;
wire   [0:0] xor_ln785_9_fu_3306_p2;
wire   [0:0] tmp_235_fu_3163_p3;
wire   [0:0] or_ln785_9_fu_3312_p2;
wire   [0:0] xor_ln785_19_fu_3318_p2;
wire   [0:0] select_ln416_9_fu_3292_p3;
wire   [0:0] and_ln781_9_fu_3300_p2;
wire   [0:0] and_ln786_9_fu_3330_p2;
wire   [0:0] or_ln786_9_fu_3336_p2;
wire   [0:0] xor_ln786_9_fu_3342_p2;
wire   [0:0] and_ln786_19_fu_3348_p2;
wire   [23:0] select_ln785_fu_3360_p3;
wire   [23:0] select_ln785_2_fu_3373_p3;
wire   [23:0] select_ln785_4_fu_3386_p3;
wire   [23:0] select_ln785_6_fu_3399_p3;
wire   [23:0] select_ln785_8_fu_3412_p3;
wire   [23:0] select_ln785_10_fu_3425_p3;
wire   [23:0] select_ln785_12_fu_3438_p3;
wire   [23:0] select_ln785_14_fu_3451_p3;
wire   [23:0] select_ln785_16_fu_3464_p3;
wire   [23:0] select_ln785_18_fu_3477_p3;
wire  signed [23:0] mul_ln1118_fu_3534_p1;
wire  signed [43:0] sext_ln1118_2_fu_993_p1;
wire  signed [23:0] mul_ln1118_1_fu_3542_p1;
wire  signed [23:0] mul_ln1118_2_fu_3550_p1;
wire  signed [23:0] mul_ln1118_4_fu_3566_p1;
wire  signed [23:0] mul_ln1118_5_fu_3574_p1;
wire  signed [23:0] mul_ln1118_6_fu_3582_p1;
wire  signed [23:0] mul_ln1118_7_fu_3590_p1;
wire  signed [23:0] mul_ln1118_8_fu_3598_p1;
wire  signed [23:0] mul_ln1118_9_fu_3606_p1;
wire    ap_CS_fsm_state11;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

matmul_linear_weibKp #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_s_address0),
    .ce0(linear_weight_fix_V_s_ce0),
    .q0(linear_weight_fix_V_s_q0)
);

matmul_linear_weibLp #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_1_address0),
    .ce0(linear_weight_fix_V_1_ce0),
    .q0(linear_weight_fix_V_1_q0)
);

matmul_linear_weibMq #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_2_address0),
    .ce0(linear_weight_fix_V_2_ce0),
    .q0(linear_weight_fix_V_2_q0)
);

matmul_linear_weibNq #(
    .DataWidth( 21 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_3_address0),
    .ce0(linear_weight_fix_V_3_ce0),
    .q0(linear_weight_fix_V_3_q0)
);

matmul_linear_weibOq #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_4_address0),
    .ce0(linear_weight_fix_V_4_ce0),
    .q0(linear_weight_fix_V_4_q0)
);

matmul_linear_weibPq #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_5_address0),
    .ce0(linear_weight_fix_V_5_ce0),
    .q0(linear_weight_fix_V_5_q0)
);

matmul_linear_weibQq #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_6_address0),
    .ce0(linear_weight_fix_V_6_ce0),
    .q0(linear_weight_fix_V_6_q0)
);

matmul_linear_weibRq #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_7_address0),
    .ce0(linear_weight_fix_V_7_ce0),
    .q0(linear_weight_fix_V_7_q0)
);

matmul_linear_weibSr #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_8_address0),
    .ce0(linear_weight_fix_V_8_ce0),
    .q0(linear_weight_fix_V_8_q0)
);

matmul_linear_weibTr #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
linear_weight_fix_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linear_weight_fix_V_9_address0),
    .ce0(linear_weight_fix_V_9_ce0),
    .q0(linear_weight_fix_V_9_q0)
);

FracNet_T_mux_104bUr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 24 ),
    .din6_WIDTH( 24 ),
    .din7_WIDTH( 24 ),
    .din8_WIDTH( 24 ),
    .din9_WIDTH( 24 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 24 ))
FracNet_T_mux_104bUr_U290(
    .din0(24'd171908),
    .din1(24'd16531560),
    .din2(24'd161972),
    .din3(24'd347237),
    .din4(24'd21553),
    .din5(24'd119618),
    .din6(24'd16600216),
    .din7(24'd16767664),
    .din8(24'd16387411),
    .din9(24'd16048),
    .din10(coo_0_reg_356),
    .dout(p_Val2_s_fu_531_p12)
);

FracNet_T_mux_104bUr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 24 ),
    .din6_WIDTH( 24 ),
    .din7_WIDTH( 24 ),
    .din8_WIDTH( 24 ),
    .din9_WIDTH( 24 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 24 ))
FracNet_T_mux_104bUr_U291(
    .din0(buf_0_V_21_reg_457),
    .din1(buf_1_V_22_reg_447),
    .din2(buf_2_V_23_reg_437),
    .din3(buf_3_V_24_reg_427),
    .din4(buf_4_V_25_reg_417),
    .din5(buf_5_V_26_reg_407),
    .din6(buf_6_V_27_reg_397),
    .din7(buf_7_V_28_reg_387),
    .din8(buf_8_V_29_reg_377),
    .din9(buf_9_V_210_reg_367),
    .din10(coo4_0_reg_478),
    .dout(tmp_22_fu_3507_p12)
);

FracNet_T_mul_mulbVr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 44 ))
FracNet_T_mul_mulbVr_U292(
    .din0(add_ln415_reg_3802),
    .din1(mul_ln1118_fu_3534_p1),
    .dout(mul_ln1118_fu_3534_p2)
);

FracNet_T_mul_mulbVr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 44 ))
FracNet_T_mul_mulbVr_U293(
    .din0(add_ln415_1_reg_3807),
    .din1(mul_ln1118_1_fu_3542_p1),
    .dout(mul_ln1118_1_fu_3542_p2)
);

FracNet_T_mul_mulbVr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 44 ))
FracNet_T_mul_mulbVr_U294(
    .din0(add_ln415_2_reg_3812),
    .din1(mul_ln1118_2_fu_3550_p1),
    .dout(mul_ln1118_2_fu_3550_p2)
);

FracNet_T_mul_mulbWr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 43 ))
FracNet_T_mul_mulbWr_U295(
    .din0(add_ln415_3_reg_3817),
    .din1(tmp_in_V_reg_3796),
    .dout(mul_ln1118_3_fu_3558_p2)
);

FracNet_T_mul_mulbVr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 44 ))
FracNet_T_mul_mulbVr_U296(
    .din0(add_ln415_4_reg_3822),
    .din1(mul_ln1118_4_fu_3566_p1),
    .dout(mul_ln1118_4_fu_3566_p2)
);

FracNet_T_mul_mulbVr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 44 ))
FracNet_T_mul_mulbVr_U297(
    .din0(add_ln415_5_reg_3827),
    .din1(mul_ln1118_5_fu_3574_p1),
    .dout(mul_ln1118_5_fu_3574_p2)
);

FracNet_T_mul_mulbVr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 44 ))
FracNet_T_mul_mulbVr_U298(
    .din0(add_ln415_6_reg_3832),
    .din1(mul_ln1118_6_fu_3582_p1),
    .dout(mul_ln1118_6_fu_3582_p2)
);

FracNet_T_mul_mulbVr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 44 ))
FracNet_T_mul_mulbVr_U299(
    .din0(add_ln415_7_reg_3837),
    .din1(mul_ln1118_7_fu_3590_p1),
    .dout(mul_ln1118_7_fu_3590_p2)
);

FracNet_T_mul_mulbVr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 44 ))
FracNet_T_mul_mulbVr_U300(
    .din0(add_ln415_8_reg_3842),
    .din1(mul_ln1118_8_fu_3598_p1),
    .dout(mul_ln1118_8_fu_3598_p2)
);

FracNet_T_mul_mulbVr #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 44 ))
FracNet_T_mul_mulbVr_U301(
    .din0(add_ln415_9_reg_3847),
    .din1(mul_ln1118_9_fu_3606_p1),
    .dout(mul_ln1118_9_fu_3606_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state4)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_0_V_21_reg_457 <= buf_0_V_0_load_reg_3674;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_0_V_21_reg_457 <= select_ln785_1_fu_3367_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_1_V_22_reg_447 <= buf_1_V_0_load_reg_3679;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_1_V_22_reg_447 <= select_ln785_3_fu_3380_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_2_V_23_reg_437 <= buf_2_V_0_load_reg_3684;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_2_V_23_reg_437 <= select_ln785_5_fu_3393_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_3_V_24_reg_427 <= buf_3_V_0_load_reg_3689;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_3_V_24_reg_427 <= select_ln785_7_fu_3406_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_4_V_25_reg_417 <= buf_4_V_0_load_reg_3694;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_4_V_25_reg_417 <= select_ln785_9_fu_3419_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_5_V_26_reg_407 <= buf_5_V_0_load_reg_3699;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_5_V_26_reg_407 <= select_ln785_11_fu_3432_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_6_V_27_reg_397 <= buf_6_V_0_load_reg_3704;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_6_V_27_reg_397 <= select_ln785_13_fu_3445_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_7_V_28_reg_387 <= buf_7_V_0_load_reg_3709;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_7_V_28_reg_387 <= select_ln785_15_fu_3458_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_8_V_29_reg_377 <= buf_8_V_0_load_reg_3714;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_8_V_29_reg_377 <= select_ln785_17_fu_3471_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf_9_V_210_reg_367 <= buf_9_V_0_load_reg_3719;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_9_V_210_reg_367 <= select_ln785_19_fu_3484_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cii_0_reg_467 <= 7'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln356_fu_643_p2 == 1'd0))) begin
        cii_0_reg_467 <= cii_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        coo4_0_reg_478 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln369_fu_3490_p2 == 1'd0))) begin
        coo4_0_reg_478 <= coo_1_fu_3496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        coo_0_reg_356 <= coo_fu_525_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        coo_0_reg_356 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln356_reg_3732 == 1'd0))) begin
        add_ln415_1_reg_3807 <= add_ln415_1_fu_728_p2;
        add_ln415_2_reg_3812 <= add_ln415_2_fu_760_p2;
        add_ln415_3_reg_3817 <= add_ln415_3_fu_792_p2;
        add_ln415_4_reg_3822 <= add_ln415_4_fu_824_p2;
        add_ln415_5_reg_3827 <= add_ln415_5_fu_856_p2;
        add_ln415_6_reg_3832 <= add_ln415_6_fu_888_p2;
        add_ln415_7_reg_3837 <= add_ln415_7_fu_920_p2;
        add_ln415_8_reg_3842 <= add_ln415_8_fu_952_p2;
        add_ln415_9_reg_3847 <= add_ln415_9_fu_984_p2;
        add_ln415_reg_3802 <= add_ln415_fu_696_p2;
        tmp_in_V_reg_3796 <= inputs_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln356_reg_3732_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln785_1_reg_4022 <= and_ln785_1_fu_1536_p2;
        and_ln785_2_reg_4037 <= and_ln785_2_fu_1759_p2;
        and_ln785_3_reg_4052 <= and_ln785_3_fu_1986_p2;
        and_ln785_4_reg_4067 <= and_ln785_4_fu_2209_p2;
        and_ln785_5_reg_4082 <= and_ln785_5_fu_2432_p2;
        and_ln785_6_reg_4097 <= and_ln785_6_fu_2655_p2;
        and_ln785_7_reg_4112 <= and_ln785_7_fu_2878_p2;
        and_ln785_8_reg_4127 <= and_ln785_8_fu_3101_p2;
        and_ln785_9_reg_4142 <= and_ln785_9_fu_3324_p2;
        and_ln785_reg_4007 <= and_ln785_fu_1313_p2;
        buf_0_V_reg_4002 <= buf_0_V_fu_1181_p2;
        buf_1_V_reg_4017 <= buf_1_V_fu_1404_p2;
        buf_2_V_reg_4032 <= buf_2_V_fu_1627_p2;
        buf_3_V_reg_4047 <= buf_3_V_fu_1854_p2;
        buf_4_V_reg_4062 <= buf_4_V_fu_2077_p2;
        buf_5_V_reg_4077 <= buf_5_V_fu_2300_p2;
        buf_6_V_reg_4092 <= buf_6_V_fu_2523_p2;
        buf_7_V_reg_4107 <= buf_7_V_fu_2746_p2;
        buf_8_V_1_reg_4122 <= buf_8_V_1_fu_2969_p2;
        buf_9_V_reg_4137 <= buf_9_V_fu_3192_p2;
        or_ln785_10_reg_4012 <= or_ln785_10_fu_1343_p2;
        or_ln785_11_reg_4027 <= or_ln785_11_fu_1566_p2;
        or_ln785_12_reg_4042 <= or_ln785_12_fu_1789_p2;
        or_ln785_13_reg_4057 <= or_ln785_13_fu_2016_p2;
        or_ln785_14_reg_4072 <= or_ln785_14_fu_2239_p2;
        or_ln785_15_reg_4087 <= or_ln785_15_fu_2462_p2;
        or_ln785_16_reg_4102 <= or_ln785_16_fu_2685_p2;
        or_ln785_17_reg_4117 <= or_ln785_17_fu_2908_p2;
        or_ln785_18_reg_4132 <= or_ln785_18_fu_3131_p2;
        or_ln785_19_reg_4147 <= or_ln785_19_fu_3354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_0_V_0_fu_160 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_0_V_0_load_reg_3674 <= buf_0_V_0_fu_160;
        buf_1_V_0_load_reg_3679 <= buf_1_V_0_fu_164;
        buf_2_V_0_load_reg_3684 <= buf_2_V_0_fu_168;
        buf_3_V_0_load_reg_3689 <= buf_3_V_0_fu_172;
        buf_4_V_0_load_reg_3694 <= buf_4_V_0_fu_176;
        buf_5_V_0_load_reg_3699 <= buf_5_V_0_fu_180;
        buf_6_V_0_load_reg_3704 <= buf_6_V_0_fu_184;
        buf_7_V_0_load_reg_3709 <= buf_7_V_0_fu_188;
        buf_8_V_0_load_reg_3714 <= buf_8_V_0_fu_192;
        buf_9_V_0_load_reg_3719 <= buf_9_V_0_fu_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_1_V_0_fu_164 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_2_V_0_fu_168 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd3) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_3_V_0_fu_172 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd4) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_4_V_0_fu_176 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd5) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_5_V_0_fu_180 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd6) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_6_V_0_fu_184 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd7) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_7_V_0_fu_188 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd8) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_8_V_0_fu_192 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd8) & ~(ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd7) & ~(ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd6) & ~(ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd5) & ~(ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd4) & ~(ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd3) & ~(ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd2) & ~(ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd1) & ~(ap_phi_mux_coo_0_phi_fu_360_p4 == 4'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
        buf_9_V_0_fu_196 <= sext_ln415_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln356_reg_3732 <= icmp_ln356_fu_643_p2;
        icmp_ln356_reg_3732_pp1_iter1_reg <= icmp_ln356_reg_3732;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln356_reg_3732_pp1_iter2_reg <= icmp_ln356_reg_3732_pp1_iter1_reg;
        icmp_ln356_reg_3732_pp1_iter3_reg <= icmp_ln356_reg_3732_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln356_reg_3732_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_ln1118_1_reg_3867 <= mul_ln1118_1_fu_3542_p2;
        mul_ln1118_2_reg_3882 <= mul_ln1118_2_fu_3550_p2;
        mul_ln1118_3_reg_3897 <= mul_ln1118_3_fu_3558_p2;
        mul_ln1118_4_reg_3912 <= mul_ln1118_4_fu_3566_p2;
        mul_ln1118_5_reg_3927 <= mul_ln1118_5_fu_3574_p2;
        mul_ln1118_6_reg_3942 <= mul_ln1118_6_fu_3582_p2;
        mul_ln1118_7_reg_3957 <= mul_ln1118_7_fu_3590_p2;
        mul_ln1118_8_reg_3972 <= mul_ln1118_8_fu_3598_p2;
        mul_ln1118_9_reg_3987 <= mul_ln1118_9_fu_3606_p2;
        mul_ln1118_reg_3852 <= mul_ln1118_fu_3534_p2;
        tmp_183_reg_3862 <= mul_ln1118_fu_3534_p2[32'd15];
        tmp_189_reg_3877 <= mul_ln1118_1_fu_3542_p2[32'd15];
        tmp_195_reg_3892 <= mul_ln1118_2_fu_3550_p2[32'd15];
        tmp_201_reg_3907 <= mul_ln1118_3_fu_3558_p2[32'd15];
        tmp_207_reg_3922 <= mul_ln1118_4_fu_3566_p2[32'd15];
        tmp_213_reg_3937 <= mul_ln1118_5_fu_3574_p2[32'd15];
        tmp_219_reg_3952 <= mul_ln1118_6_fu_3582_p2[32'd15];
        tmp_225_reg_3967 <= mul_ln1118_7_fu_3590_p2[32'd15];
        tmp_231_reg_3982 <= mul_ln1118_8_fu_3598_p2[32'd15];
        tmp_237_reg_3997 <= mul_ln1118_9_fu_3606_p2[32'd15];
        trunc_ln1192_1_reg_3872 <= trunc_ln1192_1_fu_1012_p1;
        trunc_ln1192_2_reg_3887 <= trunc_ln1192_2_fu_1025_p1;
        trunc_ln1192_3_reg_3902 <= trunc_ln1192_3_fu_1038_p1;
        trunc_ln1192_4_reg_3917 <= trunc_ln1192_4_fu_1051_p1;
        trunc_ln1192_5_reg_3932 <= trunc_ln1192_5_fu_1064_p1;
        trunc_ln1192_6_reg_3947 <= trunc_ln1192_6_fu_1077_p1;
        trunc_ln1192_7_reg_3962 <= trunc_ln1192_7_fu_1090_p1;
        trunc_ln1192_8_reg_3977 <= trunc_ln1192_8_fu_1103_p1;
        trunc_ln1192_9_reg_3992 <= trunc_ln1192_9_fu_1116_p1;
        trunc_ln1192_reg_3857 <= trunc_ln1192_fu_999_p1;
    end
end

always @ (*) begin
    if ((icmp_ln356_fu_643_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_0_V_21_phi_fu_460_p4 = select_ln785_1_fu_3367_p3;
    end else begin
        ap_phi_mux_buf_0_V_21_phi_fu_460_p4 = buf_0_V_21_reg_457;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_1_V_22_phi_fu_450_p4 = select_ln785_3_fu_3380_p3;
    end else begin
        ap_phi_mux_buf_1_V_22_phi_fu_450_p4 = buf_1_V_22_reg_447;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_2_V_23_phi_fu_440_p4 = select_ln785_5_fu_3393_p3;
    end else begin
        ap_phi_mux_buf_2_V_23_phi_fu_440_p4 = buf_2_V_23_reg_437;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_3_V_24_phi_fu_430_p4 = select_ln785_7_fu_3406_p3;
    end else begin
        ap_phi_mux_buf_3_V_24_phi_fu_430_p4 = buf_3_V_24_reg_427;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_4_V_25_phi_fu_420_p4 = select_ln785_9_fu_3419_p3;
    end else begin
        ap_phi_mux_buf_4_V_25_phi_fu_420_p4 = buf_4_V_25_reg_417;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_5_V_26_phi_fu_410_p4 = select_ln785_11_fu_3432_p3;
    end else begin
        ap_phi_mux_buf_5_V_26_phi_fu_410_p4 = buf_5_V_26_reg_407;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_6_V_27_phi_fu_400_p4 = select_ln785_13_fu_3445_p3;
    end else begin
        ap_phi_mux_buf_6_V_27_phi_fu_400_p4 = buf_6_V_27_reg_397;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_7_V_28_phi_fu_390_p4 = select_ln785_15_fu_3458_p3;
    end else begin
        ap_phi_mux_buf_7_V_28_phi_fu_390_p4 = buf_7_V_28_reg_387;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_8_V_29_phi_fu_380_p4 = select_ln785_17_fu_3471_p3;
    end else begin
        ap_phi_mux_buf_8_V_29_phi_fu_380_p4 = buf_8_V_29_reg_377;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln356_reg_3732_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_buf_9_V_210_phi_fu_370_p4 = select_ln785_19_fu_3484_p3;
    end else begin
        ap_phi_mux_buf_9_V_210_phi_fu_370_p4 = buf_9_V_210_reg_367;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        inputs_V_ce0 = 1'b1;
    end else begin
        inputs_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_1_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_2_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_3_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_4_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_5_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_6_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_7_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_8_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_9_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        linear_weight_fix_V_s_ce0 = 1'b1;
    end else begin
        linear_weight_fix_V_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        outputs_V_ce0 = 1'b1;
    end else begin
        outputs_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln369_fu_3490_p2 == 1'd0))) begin
        outputs_V_we0 = 1'b1;
    end else begin
        outputs_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln351_fu_519_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln356_fu_643_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln356_fu_643_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln369_fu_3490_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_10_fu_1147_p2 = ($signed(sext_ln1192_fu_1138_p1) + $signed(trunc_ln1192_reg_3857));

assign add_ln1192_11_fu_1370_p2 = ($signed(sext_ln1192_1_fu_1361_p1) + $signed(trunc_ln1192_1_reg_3872));

assign add_ln1192_12_fu_1593_p2 = ($signed(sext_ln1192_2_fu_1584_p1) + $signed(trunc_ln1192_2_reg_3887));

assign add_ln1192_13_fu_1820_p2 = ($signed(sext_ln1192_3_fu_1810_p1) + $signed(trunc_ln1192_3_reg_3902));

assign add_ln1192_14_fu_2043_p2 = ($signed(sext_ln1192_4_fu_2034_p1) + $signed(trunc_ln1192_4_reg_3917));

assign add_ln1192_15_fu_2266_p2 = ($signed(sext_ln1192_5_fu_2257_p1) + $signed(trunc_ln1192_5_reg_3932));

assign add_ln1192_16_fu_2489_p2 = ($signed(sext_ln1192_6_fu_2480_p1) + $signed(trunc_ln1192_6_reg_3947));

assign add_ln1192_17_fu_2712_p2 = ($signed(sext_ln1192_7_fu_2703_p1) + $signed(trunc_ln1192_7_reg_3962));

assign add_ln1192_18_fu_2935_p2 = ($signed(sext_ln1192_8_fu_2926_p1) + $signed(trunc_ln1192_8_reg_3977));

assign add_ln1192_19_fu_3158_p2 = ($signed(sext_ln1192_9_fu_3149_p1) + $signed(trunc_ln1192_9_reg_3992));

assign add_ln1192_1_fu_1365_p2 = ($signed(mul_ln1118_1_reg_3867) + $signed(sext_ln728_1_fu_1357_p1));

assign add_ln1192_2_fu_1588_p2 = ($signed(mul_ln1118_2_reg_3882) + $signed(sext_ln728_2_fu_1580_p1));

assign add_ln1192_3_fu_1814_p2 = ($signed(sext_ln1192_10_fu_1807_p1) + $signed(sext_ln728_3_fu_1803_p1));

assign add_ln1192_4_fu_2038_p2 = ($signed(mul_ln1118_4_reg_3912) + $signed(sext_ln728_4_fu_2030_p1));

assign add_ln1192_5_fu_2261_p2 = ($signed(mul_ln1118_5_reg_3927) + $signed(sext_ln728_5_fu_2253_p1));

assign add_ln1192_6_fu_2484_p2 = ($signed(mul_ln1118_6_reg_3942) + $signed(sext_ln728_6_fu_2476_p1));

assign add_ln1192_7_fu_2707_p2 = ($signed(mul_ln1118_7_reg_3957) + $signed(sext_ln728_7_fu_2699_p1));

assign add_ln1192_8_fu_2930_p2 = ($signed(mul_ln1118_8_reg_3972) + $signed(sext_ln728_8_fu_2922_p1));

assign add_ln1192_9_fu_3153_p2 = ($signed(mul_ln1118_9_reg_3987) + $signed(sext_ln728_9_fu_3145_p1));

assign add_ln1192_fu_1142_p2 = ($signed(mul_ln1118_reg_3852) + $signed(sext_ln728_fu_1134_p1));

assign add_ln415_1_fu_728_p2 = ($signed(sext_ln415_2_fu_712_p1) + $signed(zext_ln415_2_fu_724_p1));

assign add_ln415_2_fu_760_p2 = ($signed(sext_ln415_3_fu_744_p1) + $signed(zext_ln415_3_fu_756_p1));

assign add_ln415_3_fu_792_p2 = ($signed(sext_ln415_4_fu_776_p1) + $signed(zext_ln415_4_fu_788_p1));

assign add_ln415_4_fu_824_p2 = ($signed(sext_ln415_5_fu_808_p1) + $signed(zext_ln415_5_fu_820_p1));

assign add_ln415_5_fu_856_p2 = ($signed(sext_ln415_6_fu_840_p1) + $signed(zext_ln415_6_fu_852_p1));

assign add_ln415_6_fu_888_p2 = ($signed(sext_ln415_7_fu_872_p1) + $signed(zext_ln415_7_fu_884_p1));

assign add_ln415_7_fu_920_p2 = ($signed(sext_ln415_8_fu_904_p1) + $signed(zext_ln415_8_fu_916_p1));

assign add_ln415_8_fu_952_p2 = ($signed(sext_ln415_9_fu_936_p1) + $signed(zext_ln415_9_fu_948_p1));

assign add_ln415_9_fu_984_p2 = ($signed(sext_ln415_10_fu_968_p1) + $signed(zext_ln415_10_fu_980_p1));

assign add_ln415_fu_696_p2 = ($signed(sext_ln415_1_fu_680_p1) + $signed(zext_ln415_1_fu_692_p1));

assign and_ln416_1_fu_1424_p2 = (xor_ln416_1_fu_1418_p2 & tmp_188_fu_1393_p3);

assign and_ln416_2_fu_1647_p2 = (xor_ln416_2_fu_1641_p2 & tmp_194_fu_1616_p3);

assign and_ln416_3_fu_1874_p2 = (xor_ln416_3_fu_1868_p2 & tmp_200_fu_1843_p3);

assign and_ln416_4_fu_2097_p2 = (xor_ln416_4_fu_2091_p2 & tmp_206_fu_2066_p3);

assign and_ln416_5_fu_2320_p2 = (xor_ln416_5_fu_2314_p2 & tmp_212_fu_2289_p3);

assign and_ln416_6_fu_2543_p2 = (xor_ln416_6_fu_2537_p2 & tmp_218_fu_2512_p3);

assign and_ln416_7_fu_2766_p2 = (xor_ln416_7_fu_2760_p2 & tmp_224_fu_2735_p3);

assign and_ln416_8_fu_2989_p2 = (xor_ln416_8_fu_2983_p2 & tmp_230_fu_2958_p3);

assign and_ln416_9_fu_3212_p2 = (xor_ln416_9_fu_3206_p2 & tmp_236_fu_3181_p3);

assign and_ln416_fu_1201_p2 = (xor_ln416_fu_1195_p2 & tmp_182_fu_1170_p3);

assign and_ln779_1_fu_1498_p2 = (xor_ln779_1_fu_1492_p2 & icmp_ln879_2_fu_1448_p2);

assign and_ln779_2_fu_1721_p2 = (xor_ln779_2_fu_1715_p2 & icmp_ln879_4_fu_1671_p2);

assign and_ln779_3_fu_1948_p2 = (xor_ln779_3_fu_1942_p2 & icmp_ln879_6_fu_1898_p2);

assign and_ln779_4_fu_2171_p2 = (xor_ln779_4_fu_2165_p2 & icmp_ln879_8_fu_2121_p2);

assign and_ln779_5_fu_2394_p2 = (xor_ln779_5_fu_2388_p2 & icmp_ln879_10_fu_2344_p2);

assign and_ln779_6_fu_2617_p2 = (xor_ln779_6_fu_2611_p2 & icmp_ln879_12_fu_2567_p2);

assign and_ln779_7_fu_2840_p2 = (xor_ln779_7_fu_2834_p2 & icmp_ln879_14_fu_2790_p2);

assign and_ln779_8_fu_3063_p2 = (xor_ln779_8_fu_3057_p2 & icmp_ln879_16_fu_3013_p2);

assign and_ln779_9_fu_3286_p2 = (xor_ln779_9_fu_3280_p2 & icmp_ln879_18_fu_3236_p2);

assign and_ln779_fu_1275_p2 = (xor_ln779_fu_1269_p2 & icmp_ln879_fu_1225_p2);

assign and_ln781_1_fu_1512_p2 = (icmp_ln879_3_fu_1464_p2 & and_ln416_1_fu_1424_p2);

assign and_ln781_2_fu_1735_p2 = (icmp_ln879_5_fu_1687_p2 & and_ln416_2_fu_1647_p2);

assign and_ln781_3_fu_1962_p2 = (icmp_ln879_7_fu_1914_p2 & and_ln416_3_fu_1874_p2);

assign and_ln781_4_fu_2185_p2 = (icmp_ln879_9_fu_2137_p2 & and_ln416_4_fu_2097_p2);

assign and_ln781_5_fu_2408_p2 = (icmp_ln879_11_fu_2360_p2 & and_ln416_5_fu_2320_p2);

assign and_ln781_6_fu_2631_p2 = (icmp_ln879_13_fu_2583_p2 & and_ln416_6_fu_2543_p2);

assign and_ln781_7_fu_2854_p2 = (icmp_ln879_15_fu_2806_p2 & and_ln416_7_fu_2766_p2);

assign and_ln781_8_fu_3077_p2 = (icmp_ln879_17_fu_3029_p2 & and_ln416_8_fu_2989_p2);

assign and_ln781_9_fu_3300_p2 = (icmp_ln879_19_fu_3252_p2 & and_ln416_9_fu_3212_p2);

assign and_ln781_fu_1289_p2 = (icmp_ln879_1_fu_1241_p2 & and_ln416_fu_1201_p2);

assign and_ln785_1_fu_1536_p2 = (xor_ln785_11_fu_1530_p2 & or_ln785_1_fu_1524_p2);

assign and_ln785_2_fu_1759_p2 = (xor_ln785_12_fu_1753_p2 & or_ln785_2_fu_1747_p2);

assign and_ln785_3_fu_1986_p2 = (xor_ln785_13_fu_1980_p2 & or_ln785_3_fu_1974_p2);

assign and_ln785_4_fu_2209_p2 = (xor_ln785_14_fu_2203_p2 & or_ln785_4_fu_2197_p2);

assign and_ln785_5_fu_2432_p2 = (xor_ln785_15_fu_2426_p2 & or_ln785_5_fu_2420_p2);

assign and_ln785_6_fu_2655_p2 = (xor_ln785_16_fu_2649_p2 & or_ln785_6_fu_2643_p2);

assign and_ln785_7_fu_2878_p2 = (xor_ln785_17_fu_2872_p2 & or_ln785_7_fu_2866_p2);

assign and_ln785_8_fu_3101_p2 = (xor_ln785_18_fu_3095_p2 & or_ln785_8_fu_3089_p2);

assign and_ln785_9_fu_3324_p2 = (xor_ln785_19_fu_3318_p2 & or_ln785_9_fu_3312_p2);

assign and_ln785_fu_1313_p2 = (xor_ln785_1_fu_1307_p2 & or_ln785_fu_1301_p2);

assign and_ln786_10_fu_1337_p2 = (xor_ln786_fu_1331_p2 & tmp_181_fu_1152_p3);

assign and_ln786_11_fu_1560_p2 = (xor_ln786_1_fu_1554_p2 & tmp_187_fu_1375_p3);

assign and_ln786_12_fu_1783_p2 = (xor_ln786_2_fu_1777_p2 & tmp_193_fu_1598_p3);

assign and_ln786_13_fu_2010_p2 = (xor_ln786_3_fu_2004_p2 & tmp_199_fu_1825_p3);

assign and_ln786_14_fu_2233_p2 = (xor_ln786_4_fu_2227_p2 & tmp_205_fu_2048_p3);

assign and_ln786_15_fu_2456_p2 = (xor_ln786_5_fu_2450_p2 & tmp_211_fu_2271_p3);

assign and_ln786_16_fu_2679_p2 = (xor_ln786_6_fu_2673_p2 & tmp_217_fu_2494_p3);

assign and_ln786_17_fu_2902_p2 = (xor_ln786_7_fu_2896_p2 & tmp_223_fu_2717_p3);

assign and_ln786_18_fu_3125_p2 = (xor_ln786_8_fu_3119_p2 & tmp_229_fu_2940_p3);

assign and_ln786_19_fu_3348_p2 = (xor_ln786_9_fu_3342_p2 & tmp_235_fu_3163_p3);

assign and_ln786_1_fu_1542_p2 = (tmp_191_fu_1430_p3 & select_ln416_1_fu_1504_p3);

assign and_ln786_2_fu_1765_p2 = (tmp_197_fu_1653_p3 & select_ln416_2_fu_1727_p3);

assign and_ln786_3_fu_1992_p2 = (tmp_203_fu_1880_p3 & select_ln416_3_fu_1954_p3);

assign and_ln786_4_fu_2215_p2 = (tmp_209_fu_2103_p3 & select_ln416_4_fu_2177_p3);

assign and_ln786_5_fu_2438_p2 = (tmp_215_fu_2326_p3 & select_ln416_5_fu_2400_p3);

assign and_ln786_6_fu_2661_p2 = (tmp_221_fu_2549_p3 & select_ln416_6_fu_2623_p3);

assign and_ln786_7_fu_2884_p2 = (tmp_227_fu_2772_p3 & select_ln416_7_fu_2846_p3);

assign and_ln786_8_fu_3107_p2 = (tmp_233_fu_2995_p3 & select_ln416_8_fu_3069_p3);

assign and_ln786_9_fu_3330_p2 = (tmp_239_fu_3218_p3 & select_ln416_9_fu_3292_p3);

assign and_ln786_fu_1319_p2 = (tmp_185_fu_1207_p3 & select_ln416_fu_1281_p3);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd4];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_coo_0_phi_fu_360_p4 = coo_0_reg_356;

assign buf_0_V_2_fu_583_p2 = ($signed(sext_ln713_fu_567_p1) + $signed(zext_ln415_fu_579_p1));

assign buf_0_V_fu_1181_p2 = (zext_ln415_11_fu_1178_p1 + trunc_ln708_s_fu_1160_p4);

assign buf_1_V_fu_1404_p2 = (zext_ln415_12_fu_1401_p1 + trunc_ln708_1_fu_1383_p4);

assign buf_2_V_fu_1627_p2 = (zext_ln415_13_fu_1624_p1 + trunc_ln708_2_fu_1606_p4);

assign buf_3_V_fu_1854_p2 = (zext_ln415_14_fu_1851_p1 + trunc_ln708_3_fu_1833_p4);

assign buf_4_V_fu_2077_p2 = (zext_ln415_15_fu_2074_p1 + trunc_ln708_4_fu_2056_p4);

assign buf_5_V_fu_2300_p2 = (zext_ln415_16_fu_2297_p1 + trunc_ln708_5_fu_2279_p4);

assign buf_6_V_fu_2523_p2 = (zext_ln415_17_fu_2520_p1 + trunc_ln708_6_fu_2502_p4);

assign buf_7_V_fu_2746_p2 = (zext_ln415_18_fu_2743_p1 + trunc_ln708_7_fu_2725_p4);

assign buf_8_V_1_fu_2969_p2 = (zext_ln415_19_fu_2966_p1 + trunc_ln708_8_fu_2948_p4);

assign buf_9_V_fu_3192_p2 = (zext_ln415_20_fu_3189_p1 + trunc_ln708_9_fu_3171_p4);

assign cii_fu_649_p2 = (cii_0_reg_467 + 7'd1);

assign coo_1_fu_3496_p2 = (coo4_0_reg_478 + 4'd1);

assign coo_fu_525_p2 = (coo_0_reg_356 + 4'd1);

assign icmp_ln351_fu_519_p2 = ((coo_0_reg_356 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln356_fu_643_p2 = ((cii_0_reg_467 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln369_fu_3490_p2 = ((coo4_0_reg_478 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln768_1_fu_1470_p2 = ((tmp_7_fu_1454_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_2_fu_1693_p2 = ((tmp_9_fu_1677_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_3_fu_1920_p2 = ((tmp_3_fu_1904_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_4_fu_2143_p2 = ((tmp_11_fu_2127_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_5_fu_2366_p2 = ((tmp_13_fu_2350_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_6_fu_2589_p2 = ((tmp_15_fu_2573_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_7_fu_2812_p2 = ((tmp_17_fu_2796_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_8_fu_3035_p2 = ((tmp_19_fu_3019_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_9_fu_3258_p2 = ((tmp_21_fu_3242_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_1247_p2 = ((tmp_5_fu_1231_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_10_fu_2344_p2 = ((tmp_12_fu_2334_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_11_fu_2360_p2 = ((tmp_13_fu_2350_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_12_fu_2567_p2 = ((tmp_14_fu_2557_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_13_fu_2583_p2 = ((tmp_15_fu_2573_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_14_fu_2790_p2 = ((tmp_16_fu_2780_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_15_fu_2806_p2 = ((tmp_17_fu_2796_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_16_fu_3013_p2 = ((tmp_18_fu_3003_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_17_fu_3029_p2 = ((tmp_19_fu_3019_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_18_fu_3236_p2 = ((tmp_20_fu_3226_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_19_fu_3252_p2 = ((tmp_21_fu_3242_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_1241_p2 = ((tmp_5_fu_1231_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_1448_p2 = ((tmp_6_fu_1438_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_1464_p2 = ((tmp_7_fu_1454_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_1671_p2 = ((tmp_8_fu_1661_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_1687_p2 = ((tmp_9_fu_1677_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_6_fu_1898_p2 = ((tmp_2_fu_1888_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_7_fu_1914_p2 = ((tmp_3_fu_1904_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_8_fu_2121_p2 = ((tmp_10_fu_2111_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_9_fu_2137_p2 = ((tmp_11_fu_2127_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_1225_p2 = ((tmp_4_fu_1215_p4 == 3'd7) ? 1'b1 : 1'b0);

assign inputs_V_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_1_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_2_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_3_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_4_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_5_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_6_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_7_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_8_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_9_address0 = zext_ln358_fu_655_p1;

assign linear_weight_fix_V_s_address0 = zext_ln358_fu_655_p1;

assign mul_ln1118_1_fu_3542_p1 = sext_ln1118_2_fu_993_p1;

assign mul_ln1118_2_fu_3550_p1 = sext_ln1118_2_fu_993_p1;

assign mul_ln1118_4_fu_3566_p1 = sext_ln1118_2_fu_993_p1;

assign mul_ln1118_5_fu_3574_p1 = sext_ln1118_2_fu_993_p1;

assign mul_ln1118_6_fu_3582_p1 = sext_ln1118_2_fu_993_p1;

assign mul_ln1118_7_fu_3590_p1 = sext_ln1118_2_fu_993_p1;

assign mul_ln1118_8_fu_3598_p1 = sext_ln1118_2_fu_993_p1;

assign mul_ln1118_9_fu_3606_p1 = sext_ln1118_2_fu_993_p1;

assign mul_ln1118_fu_3534_p1 = sext_ln1118_2_fu_993_p1;

assign or_ln785_10_fu_1343_p2 = (and_ln786_10_fu_1337_p2 | and_ln785_fu_1313_p2);

assign or_ln785_11_fu_1566_p2 = (and_ln786_11_fu_1560_p2 | and_ln785_1_fu_1536_p2);

assign or_ln785_12_fu_1789_p2 = (and_ln786_12_fu_1783_p2 | and_ln785_2_fu_1759_p2);

assign or_ln785_13_fu_2016_p2 = (and_ln786_13_fu_2010_p2 | and_ln785_3_fu_1986_p2);

assign or_ln785_14_fu_2239_p2 = (and_ln786_14_fu_2233_p2 | and_ln785_4_fu_2209_p2);

assign or_ln785_15_fu_2462_p2 = (and_ln786_15_fu_2456_p2 | and_ln785_5_fu_2432_p2);

assign or_ln785_16_fu_2685_p2 = (and_ln786_16_fu_2679_p2 | and_ln785_6_fu_2655_p2);

assign or_ln785_17_fu_2908_p2 = (and_ln786_17_fu_2902_p2 | and_ln785_7_fu_2878_p2);

assign or_ln785_18_fu_3131_p2 = (and_ln786_18_fu_3125_p2 | and_ln785_8_fu_3101_p2);

assign or_ln785_19_fu_3354_p2 = (and_ln786_19_fu_3348_p2 | and_ln785_9_fu_3324_p2);

assign or_ln785_1_fu_1524_p2 = (xor_ln785_10_fu_1518_p2 | tmp_191_fu_1430_p3);

assign or_ln785_2_fu_1747_p2 = (xor_ln785_2_fu_1741_p2 | tmp_197_fu_1653_p3);

assign or_ln785_3_fu_1974_p2 = (xor_ln785_3_fu_1968_p2 | tmp_203_fu_1880_p3);

assign or_ln785_4_fu_2197_p2 = (xor_ln785_4_fu_2191_p2 | tmp_209_fu_2103_p3);

assign or_ln785_5_fu_2420_p2 = (xor_ln785_5_fu_2414_p2 | tmp_215_fu_2326_p3);

assign or_ln785_6_fu_2643_p2 = (xor_ln785_6_fu_2637_p2 | tmp_221_fu_2549_p3);

assign or_ln785_7_fu_2866_p2 = (xor_ln785_7_fu_2860_p2 | tmp_227_fu_2772_p3);

assign or_ln785_8_fu_3089_p2 = (xor_ln785_8_fu_3083_p2 | tmp_233_fu_2995_p3);

assign or_ln785_9_fu_3312_p2 = (xor_ln785_9_fu_3306_p2 | tmp_239_fu_3218_p3);

assign or_ln785_fu_1301_p2 = (xor_ln785_fu_1295_p2 | tmp_185_fu_1207_p3);

assign or_ln786_1_fu_1548_p2 = (and_ln786_1_fu_1542_p2 | and_ln781_1_fu_1512_p2);

assign or_ln786_2_fu_1771_p2 = (and_ln786_2_fu_1765_p2 | and_ln781_2_fu_1735_p2);

assign or_ln786_3_fu_1998_p2 = (and_ln786_3_fu_1992_p2 | and_ln781_3_fu_1962_p2);

assign or_ln786_4_fu_2221_p2 = (and_ln786_4_fu_2215_p2 | and_ln781_4_fu_2185_p2);

assign or_ln786_5_fu_2444_p2 = (and_ln786_5_fu_2438_p2 | and_ln781_5_fu_2408_p2);

assign or_ln786_6_fu_2667_p2 = (and_ln786_6_fu_2661_p2 | and_ln781_6_fu_2631_p2);

assign or_ln786_7_fu_2890_p2 = (and_ln786_7_fu_2884_p2 | and_ln781_7_fu_2854_p2);

assign or_ln786_8_fu_3113_p2 = (and_ln786_8_fu_3107_p2 | and_ln781_8_fu_3077_p2);

assign or_ln786_9_fu_3336_p2 = (and_ln786_9_fu_3330_p2 | and_ln781_9_fu_3300_p2);

assign or_ln786_fu_1325_p2 = (and_ln786_fu_1319_p2 | and_ln781_fu_1289_p2);

assign outputs_V_address0 = zext_ln371_fu_3502_p1;

assign outputs_V_d0 = tmp_22_fu_3507_p12;

assign select_ln416_1_fu_1504_p3 = ((and_ln416_1_fu_1424_p2[0:0] === 1'b1) ? and_ln779_1_fu_1498_p2 : icmp_ln879_3_fu_1464_p2);

assign select_ln416_2_fu_1727_p3 = ((and_ln416_2_fu_1647_p2[0:0] === 1'b1) ? and_ln779_2_fu_1721_p2 : icmp_ln879_5_fu_1687_p2);

assign select_ln416_3_fu_1954_p3 = ((and_ln416_3_fu_1874_p2[0:0] === 1'b1) ? and_ln779_3_fu_1948_p2 : icmp_ln879_7_fu_1914_p2);

assign select_ln416_4_fu_2177_p3 = ((and_ln416_4_fu_2097_p2[0:0] === 1'b1) ? and_ln779_4_fu_2171_p2 : icmp_ln879_9_fu_2137_p2);

assign select_ln416_5_fu_2400_p3 = ((and_ln416_5_fu_2320_p2[0:0] === 1'b1) ? and_ln779_5_fu_2394_p2 : icmp_ln879_11_fu_2360_p2);

assign select_ln416_6_fu_2623_p3 = ((and_ln416_6_fu_2543_p2[0:0] === 1'b1) ? and_ln779_6_fu_2617_p2 : icmp_ln879_13_fu_2583_p2);

assign select_ln416_7_fu_2846_p3 = ((and_ln416_7_fu_2766_p2[0:0] === 1'b1) ? and_ln779_7_fu_2840_p2 : icmp_ln879_15_fu_2806_p2);

assign select_ln416_8_fu_3069_p3 = ((and_ln416_8_fu_2989_p2[0:0] === 1'b1) ? and_ln779_8_fu_3063_p2 : icmp_ln879_17_fu_3029_p2);

assign select_ln416_9_fu_3292_p3 = ((and_ln416_9_fu_3212_p2[0:0] === 1'b1) ? and_ln779_9_fu_3286_p2 : icmp_ln879_19_fu_3252_p2);

assign select_ln416_fu_1281_p3 = ((and_ln416_fu_1201_p2[0:0] === 1'b1) ? and_ln779_fu_1275_p2 : icmp_ln879_1_fu_1241_p2);

assign select_ln777_1_fu_1476_p3 = ((and_ln416_1_fu_1424_p2[0:0] === 1'b1) ? icmp_ln879_3_fu_1464_p2 : icmp_ln768_1_fu_1470_p2);

assign select_ln777_2_fu_1699_p3 = ((and_ln416_2_fu_1647_p2[0:0] === 1'b1) ? icmp_ln879_5_fu_1687_p2 : icmp_ln768_2_fu_1693_p2);

assign select_ln777_3_fu_1926_p3 = ((and_ln416_3_fu_1874_p2[0:0] === 1'b1) ? icmp_ln879_7_fu_1914_p2 : icmp_ln768_3_fu_1920_p2);

assign select_ln777_4_fu_2149_p3 = ((and_ln416_4_fu_2097_p2[0:0] === 1'b1) ? icmp_ln879_9_fu_2137_p2 : icmp_ln768_4_fu_2143_p2);

assign select_ln777_5_fu_2372_p3 = ((and_ln416_5_fu_2320_p2[0:0] === 1'b1) ? icmp_ln879_11_fu_2360_p2 : icmp_ln768_5_fu_2366_p2);

assign select_ln777_6_fu_2595_p3 = ((and_ln416_6_fu_2543_p2[0:0] === 1'b1) ? icmp_ln879_13_fu_2583_p2 : icmp_ln768_6_fu_2589_p2);

assign select_ln777_7_fu_2818_p3 = ((and_ln416_7_fu_2766_p2[0:0] === 1'b1) ? icmp_ln879_15_fu_2806_p2 : icmp_ln768_7_fu_2812_p2);

assign select_ln777_8_fu_3041_p3 = ((and_ln416_8_fu_2989_p2[0:0] === 1'b1) ? icmp_ln879_17_fu_3029_p2 : icmp_ln768_8_fu_3035_p2);

assign select_ln777_9_fu_3264_p3 = ((and_ln416_9_fu_3212_p2[0:0] === 1'b1) ? icmp_ln879_19_fu_3252_p2 : icmp_ln768_9_fu_3258_p2);

assign select_ln777_fu_1253_p3 = ((and_ln416_fu_1201_p2[0:0] === 1'b1) ? icmp_ln879_1_fu_1241_p2 : icmp_ln768_fu_1247_p2);

assign select_ln785_10_fu_3425_p3 = ((and_ln785_5_reg_4082[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign select_ln785_11_fu_3432_p3 = ((or_ln785_15_reg_4087[0:0] === 1'b1) ? select_ln785_10_fu_3425_p3 : buf_5_V_reg_4077);

assign select_ln785_12_fu_3438_p3 = ((and_ln785_6_reg_4097[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign select_ln785_13_fu_3445_p3 = ((or_ln785_16_reg_4102[0:0] === 1'b1) ? select_ln785_12_fu_3438_p3 : buf_6_V_reg_4092);

assign select_ln785_14_fu_3451_p3 = ((and_ln785_7_reg_4112[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign select_ln785_15_fu_3458_p3 = ((or_ln785_17_reg_4117[0:0] === 1'b1) ? select_ln785_14_fu_3451_p3 : buf_7_V_reg_4107);

assign select_ln785_16_fu_3464_p3 = ((and_ln785_8_reg_4127[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign select_ln785_17_fu_3471_p3 = ((or_ln785_18_reg_4132[0:0] === 1'b1) ? select_ln785_16_fu_3464_p3 : buf_8_V_1_reg_4122);

assign select_ln785_18_fu_3477_p3 = ((and_ln785_9_reg_4142[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign select_ln785_19_fu_3484_p3 = ((or_ln785_19_reg_4147[0:0] === 1'b1) ? select_ln785_18_fu_3477_p3 : buf_9_V_reg_4137);

assign select_ln785_1_fu_3367_p3 = ((or_ln785_10_reg_4012[0:0] === 1'b1) ? select_ln785_fu_3360_p3 : buf_0_V_reg_4002);

assign select_ln785_2_fu_3373_p3 = ((and_ln785_1_reg_4022[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign select_ln785_3_fu_3380_p3 = ((or_ln785_11_reg_4027[0:0] === 1'b1) ? select_ln785_2_fu_3373_p3 : buf_1_V_reg_4017);

assign select_ln785_4_fu_3386_p3 = ((and_ln785_2_reg_4037[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign select_ln785_5_fu_3393_p3 = ((or_ln785_12_reg_4042[0:0] === 1'b1) ? select_ln785_4_fu_3386_p3 : buf_2_V_reg_4032);

assign select_ln785_6_fu_3399_p3 = ((and_ln785_3_reg_4052[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign select_ln785_7_fu_3406_p3 = ((or_ln785_13_reg_4057[0:0] === 1'b1) ? select_ln785_6_fu_3399_p3 : buf_3_V_reg_4047);

assign select_ln785_8_fu_3412_p3 = ((and_ln785_4_reg_4067[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign select_ln785_9_fu_3419_p3 = ((or_ln785_14_reg_4072[0:0] === 1'b1) ? select_ln785_8_fu_3412_p3 : buf_4_V_reg_4062);

assign select_ln785_fu_3360_p3 = ((and_ln785_reg_4007[0:0] === 1'b1) ? 24'd8388607 : 24'd8388608);

assign sext_ln1118_2_fu_993_p1 = tmp_in_V_reg_3796;

assign sext_ln1192_10_fu_1807_p1 = mul_ln1118_3_reg_3897;

assign sext_ln1192_1_fu_1361_p1 = shl_ln728_1_fu_1349_p3;

assign sext_ln1192_2_fu_1584_p1 = shl_ln728_2_fu_1572_p3;

assign sext_ln1192_3_fu_1810_p1 = shl_ln728_3_fu_1795_p3;

assign sext_ln1192_4_fu_2034_p1 = shl_ln728_4_fu_2022_p3;

assign sext_ln1192_5_fu_2257_p1 = shl_ln728_5_fu_2245_p3;

assign sext_ln1192_6_fu_2480_p1 = shl_ln728_6_fu_2468_p3;

assign sext_ln1192_7_fu_2703_p1 = shl_ln728_7_fu_2691_p3;

assign sext_ln1192_8_fu_2926_p1 = shl_ln728_8_fu_2914_p3;

assign sext_ln1192_9_fu_3149_p1 = shl_ln728_9_fu_3137_p3;

assign sext_ln1192_fu_1138_p1 = shl_ln_fu_1126_p3;

assign sext_ln415_10_fu_968_p1 = $signed(tmp_179_fu_958_p4);

assign sext_ln415_1_fu_680_p1 = $signed(tmp_161_fu_670_p4);

assign sext_ln415_2_fu_712_p1 = $signed(tmp_163_fu_702_p4);

assign sext_ln415_3_fu_744_p1 = $signed(tmp_165_fu_734_p4);

assign sext_ln415_4_fu_776_p1 = $signed(tmp_167_fu_766_p4);

assign sext_ln415_5_fu_808_p1 = $signed(tmp_169_fu_798_p4);

assign sext_ln415_6_fu_840_p1 = $signed(tmp_171_fu_830_p4);

assign sext_ln415_7_fu_872_p1 = $signed(tmp_173_fu_862_p4);

assign sext_ln415_8_fu_904_p1 = $signed(tmp_175_fu_894_p4);

assign sext_ln415_9_fu_936_p1 = $signed(tmp_177_fu_926_p4);

assign sext_ln415_fu_589_p1 = $signed(buf_0_V_2_fu_583_p2);

assign sext_ln713_fu_567_p1 = $signed(trunc_ln_fu_557_p4);

assign sext_ln728_1_fu_1357_p1 = shl_ln728_1_fu_1349_p3;

assign sext_ln728_2_fu_1580_p1 = shl_ln728_2_fu_1572_p3;

assign sext_ln728_3_fu_1803_p1 = shl_ln728_3_fu_1795_p3;

assign sext_ln728_4_fu_2030_p1 = shl_ln728_4_fu_2022_p3;

assign sext_ln728_5_fu_2253_p1 = shl_ln728_5_fu_2245_p3;

assign sext_ln728_6_fu_2476_p1 = shl_ln728_6_fu_2468_p3;

assign sext_ln728_7_fu_2699_p1 = shl_ln728_7_fu_2691_p3;

assign sext_ln728_8_fu_2922_p1 = shl_ln728_8_fu_2914_p3;

assign sext_ln728_9_fu_3145_p1 = shl_ln728_9_fu_3137_p3;

assign sext_ln728_fu_1134_p1 = shl_ln_fu_1126_p3;

assign shl_ln728_1_fu_1349_p3 = {{ap_phi_mux_buf_1_V_22_phi_fu_450_p4}, {16'd0}};

assign shl_ln728_2_fu_1572_p3 = {{ap_phi_mux_buf_2_V_23_phi_fu_440_p4}, {16'd0}};

assign shl_ln728_3_fu_1795_p3 = {{ap_phi_mux_buf_3_V_24_phi_fu_430_p4}, {16'd0}};

assign shl_ln728_4_fu_2022_p3 = {{ap_phi_mux_buf_4_V_25_phi_fu_420_p4}, {16'd0}};

assign shl_ln728_5_fu_2245_p3 = {{ap_phi_mux_buf_5_V_26_phi_fu_410_p4}, {16'd0}};

assign shl_ln728_6_fu_2468_p3 = {{ap_phi_mux_buf_6_V_27_phi_fu_400_p4}, {16'd0}};

assign shl_ln728_7_fu_2691_p3 = {{ap_phi_mux_buf_7_V_28_phi_fu_390_p4}, {16'd0}};

assign shl_ln728_8_fu_2914_p3 = {{ap_phi_mux_buf_8_V_29_phi_fu_380_p4}, {16'd0}};

assign shl_ln728_9_fu_3137_p3 = {{ap_phi_mux_buf_9_V_210_phi_fu_370_p4}, {16'd0}};

assign shl_ln_fu_1126_p3 = {{ap_phi_mux_buf_0_V_21_phi_fu_460_p4}, {16'd0}};

assign tmp_10_fu_2111_p4 = {{add_ln1192_4_fu_2038_p2[43:41]}};

assign tmp_11_fu_2127_p4 = {{add_ln1192_4_fu_2038_p2[43:40]}};

assign tmp_12_fu_2334_p4 = {{add_ln1192_5_fu_2261_p2[43:41]}};

assign tmp_13_fu_2350_p4 = {{add_ln1192_5_fu_2261_p2[43:40]}};

assign tmp_14_fu_2557_p4 = {{add_ln1192_6_fu_2484_p2[43:41]}};

assign tmp_15_fu_2573_p4 = {{add_ln1192_6_fu_2484_p2[43:40]}};

assign tmp_160_fu_571_p3 = p_Val2_s_fu_531_p12[32'd3];

assign tmp_161_fu_670_p4 = {{linear_weight_fix_V_s_q0[21:4]}};

assign tmp_162_fu_684_p3 = linear_weight_fix_V_s_q0[32'd3];

assign tmp_163_fu_702_p4 = {{linear_weight_fix_V_1_q0[21:4]}};

assign tmp_164_fu_716_p3 = linear_weight_fix_V_1_q0[32'd3];

assign tmp_165_fu_734_p4 = {{linear_weight_fix_V_2_q0[21:4]}};

assign tmp_166_fu_748_p3 = linear_weight_fix_V_2_q0[32'd3];

assign tmp_167_fu_766_p4 = {{linear_weight_fix_V_3_q0[20:4]}};

assign tmp_168_fu_780_p3 = linear_weight_fix_V_3_q0[32'd3];

assign tmp_169_fu_798_p4 = {{linear_weight_fix_V_4_q0[21:4]}};

assign tmp_16_fu_2780_p4 = {{add_ln1192_7_fu_2707_p2[43:41]}};

assign tmp_170_fu_812_p3 = linear_weight_fix_V_4_q0[32'd3];

assign tmp_171_fu_830_p4 = {{linear_weight_fix_V_5_q0[21:4]}};

assign tmp_172_fu_844_p3 = linear_weight_fix_V_5_q0[32'd3];

assign tmp_173_fu_862_p4 = {{linear_weight_fix_V_6_q0[21:4]}};

assign tmp_174_fu_876_p3 = linear_weight_fix_V_6_q0[32'd3];

assign tmp_175_fu_894_p4 = {{linear_weight_fix_V_7_q0[21:4]}};

assign tmp_176_fu_908_p3 = linear_weight_fix_V_7_q0[32'd3];

assign tmp_177_fu_926_p4 = {{linear_weight_fix_V_8_q0[21:4]}};

assign tmp_178_fu_940_p3 = linear_weight_fix_V_8_q0[32'd3];

assign tmp_179_fu_958_p4 = {{linear_weight_fix_V_9_q0[21:4]}};

assign tmp_17_fu_2796_p4 = {{add_ln1192_7_fu_2707_p2[43:40]}};

assign tmp_180_fu_972_p3 = linear_weight_fix_V_9_q0[32'd3];

assign tmp_181_fu_1152_p3 = add_ln1192_fu_1142_p2[32'd43];

assign tmp_182_fu_1170_p3 = add_ln1192_fu_1142_p2[32'd39];

assign tmp_184_fu_1187_p3 = buf_0_V_fu_1181_p2[32'd23];

assign tmp_185_fu_1207_p3 = buf_0_V_fu_1181_p2[32'd23];

assign tmp_186_fu_1261_p3 = add_ln1192_10_fu_1147_p2[32'd40];

assign tmp_187_fu_1375_p3 = add_ln1192_1_fu_1365_p2[32'd43];

assign tmp_188_fu_1393_p3 = add_ln1192_1_fu_1365_p2[32'd39];

assign tmp_18_fu_3003_p4 = {{add_ln1192_8_fu_2930_p2[43:41]}};

assign tmp_190_fu_1410_p3 = buf_1_V_fu_1404_p2[32'd23];

assign tmp_191_fu_1430_p3 = buf_1_V_fu_1404_p2[32'd23];

assign tmp_192_fu_1484_p3 = add_ln1192_11_fu_1370_p2[32'd40];

assign tmp_193_fu_1598_p3 = add_ln1192_2_fu_1588_p2[32'd43];

assign tmp_194_fu_1616_p3 = add_ln1192_2_fu_1588_p2[32'd39];

assign tmp_196_fu_1633_p3 = buf_2_V_fu_1627_p2[32'd23];

assign tmp_197_fu_1653_p3 = buf_2_V_fu_1627_p2[32'd23];

assign tmp_198_fu_1707_p3 = add_ln1192_12_fu_1593_p2[32'd40];

assign tmp_199_fu_1825_p3 = add_ln1192_3_fu_1814_p2[32'd43];

assign tmp_19_fu_3019_p4 = {{add_ln1192_8_fu_2930_p2[43:40]}};

assign tmp_200_fu_1843_p3 = add_ln1192_3_fu_1814_p2[32'd39];

assign tmp_202_fu_1860_p3 = buf_3_V_fu_1854_p2[32'd23];

assign tmp_203_fu_1880_p3 = buf_3_V_fu_1854_p2[32'd23];

assign tmp_204_fu_1934_p3 = add_ln1192_13_fu_1820_p2[32'd40];

assign tmp_205_fu_2048_p3 = add_ln1192_4_fu_2038_p2[32'd43];

assign tmp_206_fu_2066_p3 = add_ln1192_4_fu_2038_p2[32'd39];

assign tmp_208_fu_2083_p3 = buf_4_V_fu_2077_p2[32'd23];

assign tmp_209_fu_2103_p3 = buf_4_V_fu_2077_p2[32'd23];

assign tmp_20_fu_3226_p4 = {{add_ln1192_9_fu_3153_p2[43:41]}};

assign tmp_210_fu_2157_p3 = add_ln1192_14_fu_2043_p2[32'd40];

assign tmp_211_fu_2271_p3 = add_ln1192_5_fu_2261_p2[32'd43];

assign tmp_212_fu_2289_p3 = add_ln1192_5_fu_2261_p2[32'd39];

assign tmp_214_fu_2306_p3 = buf_5_V_fu_2300_p2[32'd23];

assign tmp_215_fu_2326_p3 = buf_5_V_fu_2300_p2[32'd23];

assign tmp_216_fu_2380_p3 = add_ln1192_15_fu_2266_p2[32'd40];

assign tmp_217_fu_2494_p3 = add_ln1192_6_fu_2484_p2[32'd43];

assign tmp_218_fu_2512_p3 = add_ln1192_6_fu_2484_p2[32'd39];

assign tmp_21_fu_3242_p4 = {{add_ln1192_9_fu_3153_p2[43:40]}};

assign tmp_220_fu_2529_p3 = buf_6_V_fu_2523_p2[32'd23];

assign tmp_221_fu_2549_p3 = buf_6_V_fu_2523_p2[32'd23];

assign tmp_222_fu_2603_p3 = add_ln1192_16_fu_2489_p2[32'd40];

assign tmp_223_fu_2717_p3 = add_ln1192_7_fu_2707_p2[32'd43];

assign tmp_224_fu_2735_p3 = add_ln1192_7_fu_2707_p2[32'd39];

assign tmp_226_fu_2752_p3 = buf_7_V_fu_2746_p2[32'd23];

assign tmp_227_fu_2772_p3 = buf_7_V_fu_2746_p2[32'd23];

assign tmp_228_fu_2826_p3 = add_ln1192_17_fu_2712_p2[32'd40];

assign tmp_229_fu_2940_p3 = add_ln1192_8_fu_2930_p2[32'd43];

assign tmp_230_fu_2958_p3 = add_ln1192_8_fu_2930_p2[32'd39];

assign tmp_232_fu_2975_p3 = buf_8_V_1_fu_2969_p2[32'd23];

assign tmp_233_fu_2995_p3 = buf_8_V_1_fu_2969_p2[32'd23];

assign tmp_234_fu_3049_p3 = add_ln1192_18_fu_2935_p2[32'd40];

assign tmp_235_fu_3163_p3 = add_ln1192_9_fu_3153_p2[32'd43];

assign tmp_236_fu_3181_p3 = add_ln1192_9_fu_3153_p2[32'd39];

assign tmp_238_fu_3198_p3 = buf_9_V_fu_3192_p2[32'd23];

assign tmp_239_fu_3218_p3 = buf_9_V_fu_3192_p2[32'd23];

assign tmp_240_fu_3272_p3 = add_ln1192_19_fu_3158_p2[32'd40];

assign tmp_2_fu_1888_p4 = {{add_ln1192_3_fu_1814_p2[43:41]}};

assign tmp_3_fu_1904_p4 = {{add_ln1192_3_fu_1814_p2[43:40]}};

assign tmp_4_fu_1215_p4 = {{add_ln1192_fu_1142_p2[43:41]}};

assign tmp_5_fu_1231_p4 = {{add_ln1192_fu_1142_p2[43:40]}};

assign tmp_6_fu_1438_p4 = {{add_ln1192_1_fu_1365_p2[43:41]}};

assign tmp_7_fu_1454_p4 = {{add_ln1192_1_fu_1365_p2[43:40]}};

assign tmp_8_fu_1661_p4 = {{add_ln1192_2_fu_1588_p2[43:41]}};

assign tmp_9_fu_1677_p4 = {{add_ln1192_2_fu_1588_p2[43:40]}};

assign trunc_ln1192_1_fu_1012_p1 = mul_ln1118_1_fu_3542_p2[40:0];

assign trunc_ln1192_2_fu_1025_p1 = mul_ln1118_2_fu_3550_p2[40:0];

assign trunc_ln1192_3_fu_1038_p1 = mul_ln1118_3_fu_3558_p2[40:0];

assign trunc_ln1192_4_fu_1051_p1 = mul_ln1118_4_fu_3566_p2[40:0];

assign trunc_ln1192_5_fu_1064_p1 = mul_ln1118_5_fu_3574_p2[40:0];

assign trunc_ln1192_6_fu_1077_p1 = mul_ln1118_6_fu_3582_p2[40:0];

assign trunc_ln1192_7_fu_1090_p1 = mul_ln1118_7_fu_3590_p2[40:0];

assign trunc_ln1192_8_fu_1103_p1 = mul_ln1118_8_fu_3598_p2[40:0];

assign trunc_ln1192_9_fu_1116_p1 = mul_ln1118_9_fu_3606_p2[40:0];

assign trunc_ln1192_fu_999_p1 = mul_ln1118_fu_3534_p2[40:0];

assign trunc_ln708_1_fu_1383_p4 = {{add_ln1192_1_fu_1365_p2[39:16]}};

assign trunc_ln708_2_fu_1606_p4 = {{add_ln1192_2_fu_1588_p2[39:16]}};

assign trunc_ln708_3_fu_1833_p4 = {{add_ln1192_3_fu_1814_p2[39:16]}};

assign trunc_ln708_4_fu_2056_p4 = {{add_ln1192_4_fu_2038_p2[39:16]}};

assign trunc_ln708_5_fu_2279_p4 = {{add_ln1192_5_fu_2261_p2[39:16]}};

assign trunc_ln708_6_fu_2502_p4 = {{add_ln1192_6_fu_2484_p2[39:16]}};

assign trunc_ln708_7_fu_2725_p4 = {{add_ln1192_7_fu_2707_p2[39:16]}};

assign trunc_ln708_8_fu_2948_p4 = {{add_ln1192_8_fu_2930_p2[39:16]}};

assign trunc_ln708_9_fu_3171_p4 = {{add_ln1192_9_fu_3153_p2[39:16]}};

assign trunc_ln708_s_fu_1160_p4 = {{add_ln1192_fu_1142_p2[39:16]}};

assign trunc_ln_fu_557_p4 = {{p_Val2_s_fu_531_p12[23:4]}};

assign xor_ln416_1_fu_1418_p2 = (tmp_190_fu_1410_p3 ^ 1'd1);

assign xor_ln416_2_fu_1641_p2 = (tmp_196_fu_1633_p3 ^ 1'd1);

assign xor_ln416_3_fu_1868_p2 = (tmp_202_fu_1860_p3 ^ 1'd1);

assign xor_ln416_4_fu_2091_p2 = (tmp_208_fu_2083_p3 ^ 1'd1);

assign xor_ln416_5_fu_2314_p2 = (tmp_214_fu_2306_p3 ^ 1'd1);

assign xor_ln416_6_fu_2537_p2 = (tmp_220_fu_2529_p3 ^ 1'd1);

assign xor_ln416_7_fu_2760_p2 = (tmp_226_fu_2752_p3 ^ 1'd1);

assign xor_ln416_8_fu_2983_p2 = (tmp_232_fu_2975_p3 ^ 1'd1);

assign xor_ln416_9_fu_3206_p2 = (tmp_238_fu_3198_p3 ^ 1'd1);

assign xor_ln416_fu_1195_p2 = (tmp_184_fu_1187_p3 ^ 1'd1);

assign xor_ln779_1_fu_1492_p2 = (tmp_192_fu_1484_p3 ^ 1'd1);

assign xor_ln779_2_fu_1715_p2 = (tmp_198_fu_1707_p3 ^ 1'd1);

assign xor_ln779_3_fu_1942_p2 = (tmp_204_fu_1934_p3 ^ 1'd1);

assign xor_ln779_4_fu_2165_p2 = (tmp_210_fu_2157_p3 ^ 1'd1);

assign xor_ln779_5_fu_2388_p2 = (tmp_216_fu_2380_p3 ^ 1'd1);

assign xor_ln779_6_fu_2611_p2 = (tmp_222_fu_2603_p3 ^ 1'd1);

assign xor_ln779_7_fu_2834_p2 = (tmp_228_fu_2826_p3 ^ 1'd1);

assign xor_ln779_8_fu_3057_p2 = (tmp_234_fu_3049_p3 ^ 1'd1);

assign xor_ln779_9_fu_3280_p2 = (tmp_240_fu_3272_p3 ^ 1'd1);

assign xor_ln779_fu_1269_p2 = (tmp_186_fu_1261_p3 ^ 1'd1);

assign xor_ln785_10_fu_1518_p2 = (select_ln777_1_fu_1476_p3 ^ 1'd1);

assign xor_ln785_11_fu_1530_p2 = (tmp_187_fu_1375_p3 ^ 1'd1);

assign xor_ln785_12_fu_1753_p2 = (tmp_193_fu_1598_p3 ^ 1'd1);

assign xor_ln785_13_fu_1980_p2 = (tmp_199_fu_1825_p3 ^ 1'd1);

assign xor_ln785_14_fu_2203_p2 = (tmp_205_fu_2048_p3 ^ 1'd1);

assign xor_ln785_15_fu_2426_p2 = (tmp_211_fu_2271_p3 ^ 1'd1);

assign xor_ln785_16_fu_2649_p2 = (tmp_217_fu_2494_p3 ^ 1'd1);

assign xor_ln785_17_fu_2872_p2 = (tmp_223_fu_2717_p3 ^ 1'd1);

assign xor_ln785_18_fu_3095_p2 = (tmp_229_fu_2940_p3 ^ 1'd1);

assign xor_ln785_19_fu_3318_p2 = (tmp_235_fu_3163_p3 ^ 1'd1);

assign xor_ln785_1_fu_1307_p2 = (tmp_181_fu_1152_p3 ^ 1'd1);

assign xor_ln785_2_fu_1741_p2 = (select_ln777_2_fu_1699_p3 ^ 1'd1);

assign xor_ln785_3_fu_1968_p2 = (select_ln777_3_fu_1926_p3 ^ 1'd1);

assign xor_ln785_4_fu_2191_p2 = (select_ln777_4_fu_2149_p3 ^ 1'd1);

assign xor_ln785_5_fu_2414_p2 = (select_ln777_5_fu_2372_p3 ^ 1'd1);

assign xor_ln785_6_fu_2637_p2 = (select_ln777_6_fu_2595_p3 ^ 1'd1);

assign xor_ln785_7_fu_2860_p2 = (select_ln777_7_fu_2818_p3 ^ 1'd1);

assign xor_ln785_8_fu_3083_p2 = (select_ln777_8_fu_3041_p3 ^ 1'd1);

assign xor_ln785_9_fu_3306_p2 = (select_ln777_9_fu_3264_p3 ^ 1'd1);

assign xor_ln785_fu_1295_p2 = (select_ln777_fu_1253_p3 ^ 1'd1);

assign xor_ln786_1_fu_1554_p2 = (or_ln786_1_fu_1548_p2 ^ 1'd1);

assign xor_ln786_2_fu_1777_p2 = (or_ln786_2_fu_1771_p2 ^ 1'd1);

assign xor_ln786_3_fu_2004_p2 = (or_ln786_3_fu_1998_p2 ^ 1'd1);

assign xor_ln786_4_fu_2227_p2 = (or_ln786_4_fu_2221_p2 ^ 1'd1);

assign xor_ln786_5_fu_2450_p2 = (or_ln786_5_fu_2444_p2 ^ 1'd1);

assign xor_ln786_6_fu_2673_p2 = (or_ln786_6_fu_2667_p2 ^ 1'd1);

assign xor_ln786_7_fu_2896_p2 = (or_ln786_7_fu_2890_p2 ^ 1'd1);

assign xor_ln786_8_fu_3119_p2 = (or_ln786_8_fu_3113_p2 ^ 1'd1);

assign xor_ln786_9_fu_3342_p2 = (or_ln786_9_fu_3336_p2 ^ 1'd1);

assign xor_ln786_fu_1331_p2 = (or_ln786_fu_1325_p2 ^ 1'd1);

assign zext_ln358_fu_655_p1 = cii_0_reg_467;

assign zext_ln371_fu_3502_p1 = coo4_0_reg_478;

assign zext_ln415_10_fu_980_p1 = tmp_180_fu_972_p3;

assign zext_ln415_11_fu_1178_p1 = tmp_183_reg_3862;

assign zext_ln415_12_fu_1401_p1 = tmp_189_reg_3877;

assign zext_ln415_13_fu_1624_p1 = tmp_195_reg_3892;

assign zext_ln415_14_fu_1851_p1 = tmp_201_reg_3907;

assign zext_ln415_15_fu_2074_p1 = tmp_207_reg_3922;

assign zext_ln415_16_fu_2297_p1 = tmp_213_reg_3937;

assign zext_ln415_17_fu_2520_p1 = tmp_219_reg_3952;

assign zext_ln415_18_fu_2743_p1 = tmp_225_reg_3967;

assign zext_ln415_19_fu_2966_p1 = tmp_231_reg_3982;

assign zext_ln415_1_fu_692_p1 = tmp_162_fu_684_p3;

assign zext_ln415_20_fu_3189_p1 = tmp_237_reg_3997;

assign zext_ln415_2_fu_724_p1 = tmp_164_fu_716_p3;

assign zext_ln415_3_fu_756_p1 = tmp_166_fu_748_p3;

assign zext_ln415_4_fu_788_p1 = tmp_168_fu_780_p3;

assign zext_ln415_5_fu_820_p1 = tmp_170_fu_812_p3;

assign zext_ln415_6_fu_852_p1 = tmp_172_fu_844_p3;

assign zext_ln415_7_fu_884_p1 = tmp_174_fu_876_p3;

assign zext_ln415_8_fu_916_p1 = tmp_176_fu_908_p3;

assign zext_ln415_9_fu_948_p1 = tmp_178_fu_940_p3;

assign zext_ln415_fu_579_p1 = tmp_160_fu_571_p3;

endmodule //matmul
