// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module avgpool_concat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outputs_0_V_address0,
        outputs_0_V_ce0,
        outputs_0_V_we0,
        outputs_0_V_d0,
        outputs_0_V_q0,
        outputs_1_V_address0,
        outputs_1_V_ce0,
        outputs_1_V_we0,
        outputs_1_V_d0,
        outputs_1_V_q0,
        outputs_2_V_address0,
        outputs_2_V_ce0,
        outputs_2_V_we0,
        outputs_2_V_d0,
        outputs_2_V_q0,
        outputs_3_V_address0,
        outputs_3_V_ce0,
        outputs_3_V_we0,
        outputs_3_V_d0,
        outputs_3_V_q0,
        outputs_4_V_address0,
        outputs_4_V_ce0,
        outputs_4_V_we0,
        outputs_4_V_d0,
        outputs_4_V_q0,
        outputs_5_V_address0,
        outputs_5_V_ce0,
        outputs_5_V_we0,
        outputs_5_V_d0,
        outputs_5_V_q0,
        outputs_6_V_address0,
        outputs_6_V_ce0,
        outputs_6_V_we0,
        outputs_6_V_d0,
        outputs_6_V_q0,
        outputs_7_V_address0,
        outputs_7_V_ce0,
        outputs_7_V_we0,
        outputs_7_V_d0,
        outputs_7_V_q0,
        H_fmap,
        in_channels
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_state36 = 37'd34359738368;
parameter    ap_ST_fsm_state37 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] outputs_0_V_address0;
output   outputs_0_V_ce0;
output   outputs_0_V_we0;
output  [23:0] outputs_0_V_d0;
input  [23:0] outputs_0_V_q0;
output  [13:0] outputs_1_V_address0;
output   outputs_1_V_ce0;
output   outputs_1_V_we0;
output  [23:0] outputs_1_V_d0;
input  [23:0] outputs_1_V_q0;
output  [13:0] outputs_2_V_address0;
output   outputs_2_V_ce0;
output   outputs_2_V_we0;
output  [23:0] outputs_2_V_d0;
input  [23:0] outputs_2_V_q0;
output  [13:0] outputs_3_V_address0;
output   outputs_3_V_ce0;
output   outputs_3_V_we0;
output  [23:0] outputs_3_V_d0;
input  [23:0] outputs_3_V_q0;
output  [13:0] outputs_4_V_address0;
output   outputs_4_V_ce0;
output   outputs_4_V_we0;
output  [23:0] outputs_4_V_d0;
input  [23:0] outputs_4_V_q0;
output  [13:0] outputs_5_V_address0;
output   outputs_5_V_ce0;
output   outputs_5_V_we0;
output  [23:0] outputs_5_V_d0;
input  [23:0] outputs_5_V_q0;
output  [13:0] outputs_6_V_address0;
output   outputs_6_V_ce0;
output   outputs_6_V_we0;
output  [23:0] outputs_6_V_d0;
input  [23:0] outputs_6_V_q0;
output  [13:0] outputs_7_V_address0;
output   outputs_7_V_ce0;
output   outputs_7_V_we0;
output  [23:0] outputs_7_V_d0;
input  [23:0] outputs_7_V_q0;
input  [5:0] H_fmap;
input  [6:0] in_channels;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] outputs_0_V_address0;
reg outputs_0_V_ce0;
reg outputs_0_V_we0;
reg[13:0] outputs_1_V_address0;
reg outputs_1_V_ce0;
reg outputs_1_V_we0;
reg[13:0] outputs_2_V_address0;
reg outputs_2_V_ce0;
reg outputs_2_V_we0;
reg[13:0] outputs_3_V_address0;
reg outputs_3_V_ce0;
reg outputs_3_V_we0;
reg[13:0] outputs_4_V_address0;
reg outputs_4_V_ce0;
reg outputs_4_V_we0;
reg[13:0] outputs_5_V_address0;
reg outputs_5_V_ce0;
reg outputs_5_V_we0;
reg[13:0] outputs_6_V_address0;
reg outputs_6_V_ce0;
reg outputs_6_V_we0;
reg[13:0] outputs_7_V_address0;
reg outputs_7_V_ce0;
reg outputs_7_V_we0;
reg[23:0] outputs_7_V_d0;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] in_channel_blocks_reg_3655;
wire   [4:0] empty_fu_766_p1;
reg   [4:0] empty_reg_3661;
wire   [2:0] tile_fu_775_p2;
reg   [2:0] tile_reg_3669;
wire    ap_CS_fsm_state2;
wire   [8:0] add_ln1265_fu_797_p2;
reg   [8:0] add_ln1265_reg_3674;
wire   [0:0] icmp_ln276_fu_770_p2;
wire   [8:0] add_ln203_fu_824_p2;
reg   [8:0] add_ln203_reg_3687;
wire   [4:0] i_fu_839_p2;
reg   [4:0] i_reg_3695;
wire    ap_CS_fsm_state3;
wire   [4:0] shl_ln287_fu_845_p2;
reg   [4:0] shl_ln287_reg_3700;
wire   [0:0] icmp_ln278_fu_834_p2;
wire   [14:0] add_ln203_8_fu_876_p2;
reg   [14:0] add_ln203_8_reg_3712;
wire   [14:0] add_ln203_10_fu_903_p2;
reg   [14:0] add_ln203_10_reg_3717;
wire   [4:0] j_fu_914_p2;
reg   [4:0] j_reg_3725;
wire    ap_CS_fsm_state4;
wire   [4:0] shl_ln287_1_fu_920_p2;
reg   [4:0] shl_ln287_1_reg_3730;
wire   [0:0] icmp_ln279_fu_909_p2;
wire   [1:0] add_ln285_fu_936_p2;
reg   [1:0] add_ln285_reg_3745;
wire    ap_CS_fsm_state5;
wire   [14:0] add_ln1265_2_fu_972_p2;
reg   [14:0] add_ln1265_2_reg_3750;
wire   [0:0] icmp_ln285_fu_930_p2;
reg   [21:0] tmp_186_reg_3755;
wire   [0:0] icmp_ln700_fu_1002_p2;
reg   [0:0] icmp_ln700_reg_3760;
wire   [1:0] add_ln286_fu_1018_p2;
reg   [1:0] add_ln286_reg_3769;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln286_fu_1012_p2;
wire   [23:0] select_ln340_170_fu_1125_p3;
wire    ap_CS_fsm_state7;
wire   [23:0] select_ln340_168_fu_1254_p3;
reg   [23:0] select_ln340_168_reg_3784;
wire    ap_CS_fsm_state8;
wire   [1:0] add_ln285_1_fu_1272_p2;
reg   [1:0] add_ln285_1_reg_3792;
wire    ap_CS_fsm_state9;
wire   [14:0] add_ln1265_4_fu_1308_p2;
reg   [14:0] add_ln1265_4_reg_3797;
wire   [0:0] icmp_ln285_1_fu_1266_p2;
reg   [21:0] tmp_188_reg_3802;
wire   [0:0] icmp_ln700_1_fu_1338_p2;
reg   [0:0] icmp_ln700_1_reg_3807;
wire   [1:0] add_ln286_1_fu_1354_p2;
reg   [1:0] add_ln286_1_reg_3816;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln286_1_fu_1348_p2;
wire   [23:0] select_ln340_172_fu_1461_p3;
wire    ap_CS_fsm_state11;
wire   [23:0] select_ln340_169_fu_1590_p3;
reg   [23:0] select_ln340_169_reg_3831;
wire    ap_CS_fsm_state12;
wire   [1:0] add_ln285_2_fu_1608_p2;
reg   [1:0] add_ln285_2_reg_3839;
wire    ap_CS_fsm_state13;
wire   [14:0] add_ln1265_7_fu_1644_p2;
reg   [14:0] add_ln1265_7_reg_3844;
wire   [0:0] icmp_ln285_2_fu_1602_p2;
reg   [21:0] tmp_190_reg_3849;
wire   [0:0] icmp_ln700_2_fu_1674_p2;
reg   [0:0] icmp_ln700_2_reg_3854;
wire   [1:0] add_ln286_2_fu_1690_p2;
reg   [1:0] add_ln286_2_reg_3863;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln286_2_fu_1684_p2;
wire   [23:0] select_ln340_174_fu_1797_p3;
wire    ap_CS_fsm_state15;
wire   [23:0] select_ln340_171_fu_1926_p3;
reg   [23:0] select_ln340_171_reg_3878;
wire    ap_CS_fsm_state16;
wire   [1:0] add_ln285_3_fu_1944_p2;
reg   [1:0] add_ln285_3_reg_3886;
wire    ap_CS_fsm_state17;
wire   [14:0] add_ln1265_10_fu_1980_p2;
reg   [14:0] add_ln1265_10_reg_3891;
wire   [0:0] icmp_ln285_3_fu_1938_p2;
reg   [21:0] tmp_192_reg_3896;
wire   [0:0] icmp_ln700_3_fu_2010_p2;
reg   [0:0] icmp_ln700_3_reg_3901;
wire   [1:0] add_ln286_3_fu_2026_p2;
reg   [1:0] add_ln286_3_reg_3910;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln286_3_fu_2020_p2;
wire   [23:0] select_ln340_176_fu_2133_p3;
wire    ap_CS_fsm_state19;
wire   [23:0] select_ln340_173_fu_2262_p3;
reg   [23:0] select_ln340_173_reg_3925;
wire    ap_CS_fsm_state20;
wire   [1:0] add_ln285_4_fu_2280_p2;
reg   [1:0] add_ln285_4_reg_3933;
wire    ap_CS_fsm_state21;
wire   [14:0] add_ln1265_13_fu_2316_p2;
reg   [14:0] add_ln1265_13_reg_3938;
wire   [0:0] icmp_ln285_4_fu_2274_p2;
reg   [21:0] tmp_194_reg_3943;
wire   [0:0] icmp_ln700_4_fu_2346_p2;
reg   [0:0] icmp_ln700_4_reg_3948;
wire   [1:0] add_ln286_4_fu_2362_p2;
reg   [1:0] add_ln286_4_reg_3957;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln286_4_fu_2356_p2;
wire   [23:0] select_ln340_178_fu_2469_p3;
wire    ap_CS_fsm_state23;
wire   [23:0] select_ln340_175_fu_2598_p3;
reg   [23:0] select_ln340_175_reg_3972;
wire    ap_CS_fsm_state24;
wire   [1:0] add_ln285_5_fu_2616_p2;
reg   [1:0] add_ln285_5_reg_3980;
wire    ap_CS_fsm_state25;
wire   [14:0] add_ln1265_16_fu_2652_p2;
reg   [14:0] add_ln1265_16_reg_3985;
wire   [0:0] icmp_ln285_5_fu_2610_p2;
reg   [21:0] tmp_196_reg_3990;
wire   [0:0] icmp_ln700_5_fu_2682_p2;
reg   [0:0] icmp_ln700_5_reg_3995;
wire   [1:0] add_ln286_5_fu_2698_p2;
reg   [1:0] add_ln286_5_reg_4004;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln286_5_fu_2692_p2;
wire   [23:0] select_ln340_180_fu_2805_p3;
wire    ap_CS_fsm_state27;
wire   [23:0] select_ln340_177_fu_2934_p3;
reg   [23:0] select_ln340_177_reg_4019;
wire    ap_CS_fsm_state28;
wire   [1:0] add_ln285_6_fu_2952_p2;
reg   [1:0] add_ln285_6_reg_4027;
wire    ap_CS_fsm_state29;
wire   [14:0] add_ln1265_19_fu_2988_p2;
reg   [14:0] add_ln1265_19_reg_4032;
wire   [0:0] icmp_ln285_6_fu_2946_p2;
reg   [21:0] tmp_198_reg_4037;
wire   [0:0] icmp_ln700_6_fu_3018_p2;
reg   [0:0] icmp_ln700_6_reg_4042;
wire   [1:0] add_ln286_6_fu_3034_p2;
reg   [1:0] add_ln286_6_reg_4051;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln286_6_fu_3028_p2;
wire   [23:0] select_ln340_182_fu_3141_p3;
wire    ap_CS_fsm_state31;
wire   [23:0] select_ln340_179_fu_3270_p3;
reg   [23:0] select_ln340_179_reg_4066;
wire    ap_CS_fsm_state32;
wire   [1:0] add_ln285_7_fu_3288_p2;
reg   [1:0] add_ln285_7_reg_4074;
wire    ap_CS_fsm_state33;
wire   [14:0] add_ln1265_22_fu_3324_p2;
reg   [14:0] add_ln1265_22_reg_4079;
wire   [0:0] icmp_ln285_7_fu_3282_p2;
wire   [22:0] sub_ln1148_15_fu_3358_p2;
reg   [22:0] sub_ln1148_15_reg_4084;
wire   [0:0] icmp_ln700_7_fu_3364_p2;
reg   [0:0] icmp_ln700_7_reg_4089;
wire   [63:0] zext_ln203_18_fu_3379_p1;
reg   [63:0] zext_ln203_18_reg_4095;
wire   [14:0] add_ln203_12_fu_3390_p2;
reg   [14:0] add_ln203_12_reg_4100;
wire   [1:0] add_ln286_7_fu_3405_p2;
reg   [1:0] add_ln286_7_reg_4108;
wire    ap_CS_fsm_state34;
wire   [0:0] icmp_ln286_7_fu_3399_p2;
wire   [23:0] select_ln340_183_fu_3512_p3;
wire    ap_CS_fsm_state35;
wire   [23:0] select_ln340_181_fu_3631_p3;
reg   [23:0] select_ln340_181_reg_4123;
wire    ap_CS_fsm_state36;
wire   [63:0] zext_ln203_19_fu_3640_p1;
reg   [63:0] zext_ln203_19_reg_4128;
reg   [2:0] tile_0_reg_354;
reg   [4:0] i_0_reg_365;
reg   [4:0] j_0_reg_376;
wire    ap_CS_fsm_state37;
reg   [23:0] p_Val2_0_reg_388;
reg   [1:0] ii_0_0_reg_400;
reg  signed [23:0] p_Val2_62_0_reg_411;
reg   [1:0] jj_0_0_reg_423;
reg   [23:0] p_Val2_1_reg_434;
reg   [1:0] ii_0_1_reg_446;
reg  signed [23:0] p_Val2_62_1_reg_457;
reg   [1:0] jj_0_1_reg_469;
reg   [23:0] p_Val2_2_reg_480;
reg   [1:0] ii_0_2_reg_492;
reg  signed [23:0] p_Val2_62_2_reg_503;
reg   [1:0] jj_0_2_reg_515;
reg   [23:0] p_Val2_3_reg_526;
reg   [1:0] ii_0_3_reg_538;
reg  signed [23:0] p_Val2_62_3_reg_549;
reg   [1:0] jj_0_3_reg_561;
reg   [23:0] p_Val2_4_reg_572;
reg   [1:0] ii_0_4_reg_584;
reg  signed [23:0] p_Val2_62_4_reg_595;
reg   [1:0] jj_0_4_reg_607;
reg   [23:0] p_Val2_5_reg_618;
reg   [1:0] ii_0_5_reg_630;
reg  signed [23:0] p_Val2_62_5_reg_641;
reg   [1:0] jj_0_5_reg_653;
reg   [23:0] p_Val2_6_reg_664;
reg   [1:0] ii_0_6_reg_676;
reg  signed [23:0] p_Val2_62_6_reg_687;
reg   [1:0] jj_0_6_reg_699;
reg   [23:0] p_Val2_7_reg_710;
reg   [1:0] ii_0_7_reg_722;
reg  signed [23:0] p_Val2_62_7_reg_733;
reg   [1:0] jj_0_7_reg_745;
wire   [63:0] zext_ln1265_16_fu_1038_p1;
wire   [63:0] zext_ln1265_21_fu_1374_p1;
wire   [63:0] zext_ln1265_26_fu_1710_p1;
wire   [63:0] zext_ln1265_31_fu_2046_p1;
wire   [63:0] zext_ln1265_36_fu_2382_p1;
wire   [63:0] zext_ln1265_41_fu_2718_p1;
wire   [63:0] zext_ln1265_46_fu_3054_p1;
wire   [63:0] zext_ln1265_48_fu_3425_p1;
wire   [7:0] tmp_184_fu_785_p3;
wire   [8:0] zext_ln1265_fu_781_p1;
wire   [8:0] zext_ln1265_8_fu_793_p1;
wire   [2:0] add_ln293_fu_803_p2;
wire   [7:0] tmp_185_fu_812_p3;
wire   [8:0] zext_ln203_fu_808_p1;
wire   [8:0] zext_ln203_11_fu_820_p1;
wire   [5:0] zext_ln278_fu_830_p1;
wire   [8:0] zext_ln203_12_fu_851_p1;
wire   [8:0] add_ln203_7_fu_855_p2;
wire   [13:0] tmp_714_fu_864_p3;
wire   [14:0] zext_ln203_13_fu_860_p1;
wire   [14:0] zext_ln203_14_fu_872_p1;
wire   [8:0] add_ln203_9_fu_882_p2;
wire   [13:0] tmp_715_fu_891_p3;
wire   [14:0] zext_ln203_15_fu_887_p1;
wire   [14:0] zext_ln203_16_fu_899_p1;
wire   [4:0] zext_ln285_fu_926_p1;
wire   [4:0] add_ln287_fu_942_p2;
wire   [8:0] zext_ln1265_9_fu_947_p1;
wire   [8:0] add_ln1265_1_fu_951_p2;
wire   [13:0] tmp_719_fu_960_p3;
wire   [14:0] zext_ln1265_11_fu_968_p1;
wire   [14:0] zext_ln1265_10_fu_956_p1;
wire   [39:0] shl_ln1_fu_978_p3;
wire   [39:0] sub_ln1148_fu_986_p2;
wire   [4:0] zext_ln286_fu_1008_p1;
wire   [4:0] add_ln287_1_fu_1024_p2;
wire   [14:0] zext_ln1265_15_fu_1029_p1;
wire   [14:0] add_ln1265_5_fu_1033_p2;
wire  signed [23:0] sext_ln703_34_fu_1047_p0;
wire  signed [24:0] sext_ln703_34_fu_1047_p1;
wire  signed [24:0] sext_ln703_fu_1043_p1;
wire   [24:0] add_ln1192_fu_1051_p2;
wire  signed [23:0] add_ln703_fu_1065_p1;
wire   [23:0] add_ln703_fu_1065_p2;
wire   [0:0] tmp_725_fu_1071_p3;
wire   [0:0] tmp_724_fu_1057_p3;
wire   [0:0] xor_ln786_89_fu_1079_p2;
wire   [0:0] xor_ln340_32_fu_1097_p2;
wire   [0:0] xor_ln340_fu_1091_p2;
wire   [0:0] and_ln786_158_fu_1085_p2;
wire   [0:0] or_ln340_204_fu_1103_p2;
wire   [23:0] select_ln340_80_fu_1109_p3;
wire   [23:0] select_ln388_80_fu_1117_p3;
wire   [22:0] zext_ln1148_fu_1141_p1;
wire   [21:0] tmp_187_fu_1150_p4;
wire   [0:0] tmp_716_fu_1133_p3;
wire   [22:0] sub_ln1148_1_fu_1144_p2;
wire   [22:0] zext_ln1148_1_fu_1160_p1;
wire  signed [22:0] select_ln1148_fu_1164_p3;
wire   [0:0] tmp_717_fu_1176_p3;
wire   [0:0] tmp_718_fu_1184_p3;
wire   [0:0] or_ln785_fu_1192_p2;
wire   [0:0] xor_ln785_fu_1198_p2;
wire   [0:0] and_ln786_173_fu_1209_p2;
wire   [0:0] xor_ln786_fu_1215_p2;
wire   [0:0] and_ln786_fu_1221_p2;
wire   [0:0] and_ln785_fu_1203_p2;
wire   [0:0] or_ln340_fu_1226_p2;
wire  signed [23:0] sext_ln703_32_fu_1172_p1;
wire   [0:0] or_ln340_217_fu_1232_p2;
wire   [23:0] select_ln340_fu_1238_p3;
wire   [23:0] select_ln388_fu_1246_p3;
wire   [4:0] zext_ln285_1_fu_1262_p1;
wire   [4:0] add_ln287_8_fu_1278_p2;
wire   [8:0] zext_ln1265_12_fu_1283_p1;
wire   [8:0] add_ln1265_3_fu_1287_p2;
wire   [13:0] tmp_723_fu_1296_p3;
wire   [14:0] zext_ln1265_14_fu_1304_p1;
wire   [14:0] zext_ln1265_13_fu_1292_p1;
wire   [39:0] shl_ln728_s_fu_1314_p3;
wire   [39:0] sub_ln1148_2_fu_1322_p2;
wire   [4:0] zext_ln286_1_fu_1344_p1;
wire   [4:0] add_ln287_9_fu_1360_p2;
wire   [14:0] zext_ln1265_20_fu_1365_p1;
wire   [14:0] add_ln1265_8_fu_1369_p2;
wire  signed [23:0] sext_ln703_37_fu_1383_p0;
wire  signed [24:0] sext_ln703_37_fu_1383_p1;
wire  signed [24:0] sext_ln703_36_fu_1379_p1;
wire   [24:0] add_ln1192_64_fu_1387_p2;
wire  signed [23:0] add_ln703_1_fu_1401_p1;
wire   [23:0] add_ln703_1_fu_1401_p2;
wire   [0:0] tmp_731_fu_1407_p3;
wire   [0:0] tmp_730_fu_1393_p3;
wire   [0:0] xor_ln786_90_fu_1415_p2;
wire   [0:0] xor_ln340_34_fu_1433_p2;
wire   [0:0] xor_ln340_33_fu_1427_p2;
wire   [0:0] and_ln786_160_fu_1421_p2;
wire   [0:0] or_ln340_208_fu_1439_p2;
wire   [23:0] select_ln340_81_fu_1445_p3;
wire   [23:0] select_ln388_81_fu_1453_p3;
wire   [22:0] zext_ln1148_2_fu_1477_p1;
wire   [21:0] tmp_189_fu_1486_p4;
wire   [0:0] tmp_720_fu_1469_p3;
wire   [22:0] sub_ln1148_3_fu_1480_p2;
wire   [22:0] zext_ln1148_3_fu_1496_p1;
wire  signed [22:0] select_ln1148_1_fu_1500_p3;
wire   [0:0] tmp_721_fu_1512_p3;
wire   [0:0] tmp_722_fu_1520_p3;
wire   [0:0] or_ln785_1_fu_1528_p2;
wire   [0:0] xor_ln785_1_fu_1534_p2;
wire   [0:0] and_ln786_174_fu_1545_p2;
wire   [0:0] xor_ln786_97_fu_1551_p2;
wire   [0:0] and_ln786_159_fu_1557_p2;
wire   [0:0] and_ln785_81_fu_1539_p2;
wire   [0:0] or_ln340_1_fu_1562_p2;
wire  signed [23:0] sext_ln703_33_fu_1508_p1;
wire   [0:0] or_ln340_218_fu_1568_p2;
wire   [23:0] select_ln340_1_fu_1574_p3;
wire   [23:0] select_ln388_1_fu_1582_p3;
wire   [4:0] zext_ln285_2_fu_1598_p1;
wire   [4:0] add_ln287_2_fu_1614_p2;
wire   [8:0] zext_ln1265_17_fu_1619_p1;
wire   [8:0] add_ln1265_6_fu_1623_p2;
wire   [13:0] tmp_729_fu_1632_p3;
wire   [14:0] zext_ln1265_19_fu_1640_p1;
wire   [14:0] zext_ln1265_18_fu_1628_p1;
wire   [39:0] shl_ln728_63_fu_1650_p3;
wire   [39:0] sub_ln1148_4_fu_1658_p2;
wire   [4:0] zext_ln286_2_fu_1680_p1;
wire   [4:0] add_ln287_10_fu_1696_p2;
wire   [14:0] zext_ln1265_25_fu_1701_p1;
wire   [14:0] add_ln1265_11_fu_1705_p2;
wire  signed [23:0] sext_ln703_40_fu_1719_p0;
wire  signed [24:0] sext_ln703_40_fu_1719_p1;
wire  signed [24:0] sext_ln703_39_fu_1715_p1;
wire   [24:0] add_ln1192_65_fu_1723_p2;
wire  signed [23:0] add_ln703_2_fu_1737_p1;
wire   [23:0] add_ln703_2_fu_1737_p2;
wire   [0:0] tmp_737_fu_1743_p3;
wire   [0:0] tmp_736_fu_1729_p3;
wire   [0:0] xor_ln786_91_fu_1751_p2;
wire   [0:0] xor_ln340_36_fu_1769_p2;
wire   [0:0] xor_ln340_35_fu_1763_p2;
wire   [0:0] and_ln786_162_fu_1757_p2;
wire   [0:0] or_ln340_212_fu_1775_p2;
wire   [23:0] select_ln340_82_fu_1781_p3;
wire   [23:0] select_ln388_82_fu_1789_p3;
wire   [22:0] zext_ln1148_4_fu_1813_p1;
wire   [21:0] tmp_191_fu_1822_p4;
wire   [0:0] tmp_726_fu_1805_p3;
wire   [22:0] sub_ln1148_5_fu_1816_p2;
wire   [22:0] zext_ln1148_5_fu_1832_p1;
wire  signed [22:0] select_ln1148_2_fu_1836_p3;
wire   [0:0] tmp_727_fu_1848_p3;
wire   [0:0] tmp_728_fu_1856_p3;
wire   [0:0] or_ln785_2_fu_1864_p2;
wire   [0:0] xor_ln785_2_fu_1870_p2;
wire   [0:0] and_ln786_175_fu_1881_p2;
wire   [0:0] xor_ln786_98_fu_1887_p2;
wire   [0:0] and_ln786_161_fu_1893_p2;
wire   [0:0] and_ln785_82_fu_1875_p2;
wire   [0:0] or_ln340_2_fu_1898_p2;
wire  signed [23:0] sext_ln703_35_fu_1844_p1;
wire   [0:0] or_ln340_219_fu_1904_p2;
wire   [23:0] select_ln340_2_fu_1910_p3;
wire   [23:0] select_ln388_2_fu_1918_p3;
wire   [4:0] zext_ln285_3_fu_1934_p1;
wire   [4:0] add_ln287_3_fu_1950_p2;
wire   [8:0] zext_ln1265_22_fu_1955_p1;
wire   [8:0] add_ln1265_9_fu_1959_p2;
wire   [13:0] tmp_735_fu_1968_p3;
wire   [14:0] zext_ln1265_24_fu_1976_p1;
wire   [14:0] zext_ln1265_23_fu_1964_p1;
wire   [39:0] shl_ln728_64_fu_1986_p3;
wire   [39:0] sub_ln1148_6_fu_1994_p2;
wire   [4:0] zext_ln286_3_fu_2016_p1;
wire   [4:0] add_ln287_11_fu_2032_p2;
wire   [14:0] zext_ln1265_30_fu_2037_p1;
wire   [14:0] add_ln1265_14_fu_2041_p2;
wire  signed [23:0] sext_ln703_43_fu_2055_p0;
wire  signed [24:0] sext_ln703_43_fu_2055_p1;
wire  signed [24:0] sext_ln703_42_fu_2051_p1;
wire   [24:0] add_ln1192_66_fu_2059_p2;
wire  signed [23:0] add_ln703_3_fu_2073_p1;
wire   [23:0] add_ln703_3_fu_2073_p2;
wire   [0:0] tmp_743_fu_2079_p3;
wire   [0:0] tmp_742_fu_2065_p3;
wire   [0:0] xor_ln786_92_fu_2087_p2;
wire   [0:0] xor_ln340_38_fu_2105_p2;
wire   [0:0] xor_ln340_37_fu_2099_p2;
wire   [0:0] and_ln786_164_fu_2093_p2;
wire   [0:0] or_ln340_216_fu_2111_p2;
wire   [23:0] select_ln340_83_fu_2117_p3;
wire   [23:0] select_ln388_83_fu_2125_p3;
wire   [22:0] zext_ln1148_6_fu_2149_p1;
wire   [21:0] tmp_193_fu_2158_p4;
wire   [0:0] tmp_732_fu_2141_p3;
wire   [22:0] sub_ln1148_7_fu_2152_p2;
wire   [22:0] zext_ln1148_7_fu_2168_p1;
wire  signed [22:0] select_ln1148_3_fu_2172_p3;
wire   [0:0] tmp_733_fu_2184_p3;
wire   [0:0] tmp_734_fu_2192_p3;
wire   [0:0] or_ln785_3_fu_2200_p2;
wire   [0:0] xor_ln785_3_fu_2206_p2;
wire   [0:0] and_ln786_176_fu_2217_p2;
wire   [0:0] xor_ln786_99_fu_2223_p2;
wire   [0:0] and_ln786_163_fu_2229_p2;
wire   [0:0] and_ln785_83_fu_2211_p2;
wire   [0:0] or_ln340_3_fu_2234_p2;
wire  signed [23:0] sext_ln703_38_fu_2180_p1;
wire   [0:0] or_ln340_221_fu_2240_p2;
wire   [23:0] select_ln340_3_fu_2246_p3;
wire   [23:0] select_ln388_3_fu_2254_p3;
wire   [4:0] zext_ln285_4_fu_2270_p1;
wire   [4:0] add_ln287_4_fu_2286_p2;
wire   [8:0] zext_ln1265_27_fu_2291_p1;
wire   [8:0] add_ln1265_12_fu_2295_p2;
wire   [13:0] tmp_741_fu_2304_p3;
wire   [14:0] zext_ln1265_29_fu_2312_p1;
wire   [14:0] zext_ln1265_28_fu_2300_p1;
wire   [39:0] shl_ln728_65_fu_2322_p3;
wire   [39:0] sub_ln1148_8_fu_2330_p2;
wire   [4:0] zext_ln286_4_fu_2352_p1;
wire   [4:0] add_ln287_12_fu_2368_p2;
wire   [14:0] zext_ln1265_35_fu_2373_p1;
wire   [14:0] add_ln1265_17_fu_2377_p2;
wire  signed [23:0] sext_ln703_46_fu_2391_p0;
wire  signed [24:0] sext_ln703_46_fu_2391_p1;
wire  signed [24:0] sext_ln703_45_fu_2387_p1;
wire   [24:0] add_ln1192_67_fu_2395_p2;
wire  signed [23:0] add_ln703_4_fu_2409_p1;
wire   [23:0] add_ln703_4_fu_2409_p2;
wire   [0:0] tmp_749_fu_2415_p3;
wire   [0:0] tmp_748_fu_2401_p3;
wire   [0:0] xor_ln786_93_fu_2423_p2;
wire   [0:0] xor_ln340_40_fu_2441_p2;
wire   [0:0] xor_ln340_39_fu_2435_p2;
wire   [0:0] and_ln786_166_fu_2429_p2;
wire   [0:0] or_ln340_220_fu_2447_p2;
wire   [23:0] select_ln340_85_fu_2453_p3;
wire   [23:0] select_ln388_85_fu_2461_p3;
wire   [22:0] zext_ln1148_8_fu_2485_p1;
wire   [21:0] tmp_195_fu_2494_p4;
wire   [0:0] tmp_738_fu_2477_p3;
wire   [22:0] sub_ln1148_9_fu_2488_p2;
wire   [22:0] zext_ln1148_9_fu_2504_p1;
wire  signed [22:0] select_ln1148_4_fu_2508_p3;
wire   [0:0] tmp_739_fu_2520_p3;
wire   [0:0] tmp_740_fu_2528_p3;
wire   [0:0] or_ln785_4_fu_2536_p2;
wire   [0:0] xor_ln785_4_fu_2542_p2;
wire   [0:0] and_ln786_177_fu_2553_p2;
wire   [0:0] xor_ln786_100_fu_2559_p2;
wire   [0:0] and_ln786_165_fu_2565_p2;
wire   [0:0] and_ln785_84_fu_2547_p2;
wire   [0:0] or_ln340_4_fu_2570_p2;
wire  signed [23:0] sext_ln703_41_fu_2516_p1;
wire   [0:0] or_ln340_222_fu_2576_p2;
wire   [23:0] select_ln340_84_fu_2582_p3;
wire   [23:0] select_ln388_84_fu_2590_p3;
wire   [4:0] zext_ln285_5_fu_2606_p1;
wire   [4:0] add_ln287_5_fu_2622_p2;
wire   [8:0] zext_ln1265_32_fu_2627_p1;
wire   [8:0] add_ln1265_15_fu_2631_p2;
wire   [13:0] tmp_747_fu_2640_p3;
wire   [14:0] zext_ln1265_34_fu_2648_p1;
wire   [14:0] zext_ln1265_33_fu_2636_p1;
wire   [39:0] shl_ln728_66_fu_2658_p3;
wire   [39:0] sub_ln1148_10_fu_2666_p2;
wire   [4:0] zext_ln286_5_fu_2688_p1;
wire   [4:0] add_ln287_13_fu_2704_p2;
wire   [14:0] zext_ln1265_40_fu_2709_p1;
wire   [14:0] add_ln1265_20_fu_2713_p2;
wire  signed [23:0] sext_ln703_49_fu_2727_p0;
wire  signed [24:0] sext_ln703_49_fu_2727_p1;
wire  signed [24:0] sext_ln703_48_fu_2723_p1;
wire   [24:0] add_ln1192_68_fu_2731_p2;
wire  signed [23:0] add_ln703_5_fu_2745_p1;
wire   [23:0] add_ln703_5_fu_2745_p2;
wire   [0:0] tmp_755_fu_2751_p3;
wire   [0:0] tmp_754_fu_2737_p3;
wire   [0:0] xor_ln786_94_fu_2759_p2;
wire   [0:0] xor_ln340_42_fu_2777_p2;
wire   [0:0] xor_ln340_41_fu_2771_p2;
wire   [0:0] and_ln786_168_fu_2765_p2;
wire   [0:0] or_ln340_224_fu_2783_p2;
wire   [23:0] select_ln340_86_fu_2789_p3;
wire   [23:0] select_ln388_86_fu_2797_p3;
wire   [22:0] zext_ln1148_10_fu_2821_p1;
wire   [21:0] tmp_197_fu_2830_p4;
wire   [0:0] tmp_744_fu_2813_p3;
wire   [22:0] sub_ln1148_11_fu_2824_p2;
wire   [22:0] zext_ln1148_11_fu_2840_p1;
wire  signed [22:0] select_ln1148_5_fu_2844_p3;
wire   [0:0] tmp_745_fu_2856_p3;
wire   [0:0] tmp_746_fu_2864_p3;
wire   [0:0] or_ln785_5_fu_2872_p2;
wire   [0:0] xor_ln785_5_fu_2878_p2;
wire   [0:0] and_ln786_178_fu_2889_p2;
wire   [0:0] xor_ln786_101_fu_2895_p2;
wire   [0:0] and_ln786_167_fu_2901_p2;
wire   [0:0] and_ln785_85_fu_2883_p2;
wire   [0:0] or_ln340_5_fu_2906_p2;
wire  signed [23:0] sext_ln703_44_fu_2852_p1;
wire   [0:0] or_ln340_223_fu_2912_p2;
wire   [23:0] select_ln340_5_fu_2918_p3;
wire   [23:0] select_ln388_5_fu_2926_p3;
wire   [4:0] zext_ln285_6_fu_2942_p1;
wire   [4:0] add_ln287_6_fu_2958_p2;
wire   [8:0] zext_ln1265_37_fu_2963_p1;
wire   [8:0] add_ln1265_18_fu_2967_p2;
wire   [13:0] tmp_753_fu_2976_p3;
wire   [14:0] zext_ln1265_39_fu_2984_p1;
wire   [14:0] zext_ln1265_38_fu_2972_p1;
wire   [39:0] shl_ln728_67_fu_2994_p3;
wire   [39:0] sub_ln1148_12_fu_3002_p2;
wire   [4:0] zext_ln286_6_fu_3024_p1;
wire   [4:0] add_ln287_14_fu_3040_p2;
wire   [14:0] zext_ln1265_45_fu_3045_p1;
wire   [14:0] add_ln1265_23_fu_3049_p2;
wire  signed [23:0] sext_ln703_52_fu_3063_p0;
wire  signed [24:0] sext_ln703_52_fu_3063_p1;
wire  signed [24:0] sext_ln703_51_fu_3059_p1;
wire   [24:0] add_ln1192_69_fu_3067_p2;
wire  signed [23:0] add_ln703_6_fu_3081_p1;
wire   [23:0] add_ln703_6_fu_3081_p2;
wire   [0:0] tmp_761_fu_3087_p3;
wire   [0:0] tmp_760_fu_3073_p3;
wire   [0:0] xor_ln786_95_fu_3095_p2;
wire   [0:0] xor_ln340_44_fu_3113_p2;
wire   [0:0] xor_ln340_43_fu_3107_p2;
wire   [0:0] and_ln786_170_fu_3101_p2;
wire   [0:0] or_ln340_227_fu_3119_p2;
wire   [23:0] select_ln340_87_fu_3125_p3;
wire   [23:0] select_ln388_87_fu_3133_p3;
wire   [22:0] zext_ln1148_12_fu_3157_p1;
wire   [21:0] tmp_199_fu_3166_p4;
wire   [0:0] tmp_750_fu_3149_p3;
wire   [22:0] sub_ln1148_13_fu_3160_p2;
wire   [22:0] zext_ln1148_13_fu_3176_p1;
wire  signed [22:0] select_ln1148_6_fu_3180_p3;
wire   [0:0] tmp_751_fu_3192_p3;
wire   [0:0] tmp_752_fu_3200_p3;
wire   [0:0] or_ln785_6_fu_3208_p2;
wire   [0:0] xor_ln785_6_fu_3214_p2;
wire   [0:0] and_ln786_179_fu_3225_p2;
wire   [0:0] xor_ln786_102_fu_3231_p2;
wire   [0:0] and_ln786_169_fu_3237_p2;
wire   [0:0] and_ln785_86_fu_3219_p2;
wire   [0:0] or_ln340_6_fu_3242_p2;
wire  signed [23:0] sext_ln703_47_fu_3188_p1;
wire   [0:0] or_ln340_225_fu_3248_p2;
wire   [23:0] select_ln340_6_fu_3254_p3;
wire   [23:0] select_ln388_6_fu_3262_p3;
wire   [4:0] zext_ln285_7_fu_3278_p1;
wire   [4:0] add_ln287_7_fu_3294_p2;
wire   [8:0] zext_ln1265_42_fu_3299_p1;
wire   [8:0] add_ln1265_21_fu_3303_p2;
wire   [13:0] tmp_759_fu_3312_p3;
wire   [14:0] zext_ln1265_44_fu_3320_p1;
wire   [14:0] zext_ln1265_43_fu_3308_p1;
wire   [39:0] shl_ln728_68_fu_3330_p3;
wire   [39:0] sub_ln1148_14_fu_3338_p2;
wire   [21:0] tmp_200_fu_3344_p4;
wire   [22:0] zext_ln1148_14_fu_3354_p1;
wire   [14:0] zext_ln203_17_fu_3370_p1;
wire   [14:0] add_ln203_11_fu_3374_p2;
wire   [4:0] zext_ln286_7_fu_3395_p1;
wire   [4:0] add_ln287_15_fu_3411_p2;
wire   [14:0] zext_ln1265_47_fu_3416_p1;
wire   [14:0] add_ln1265_24_fu_3420_p2;
wire  signed [23:0] sext_ln703_54_fu_3434_p0;
wire  signed [24:0] sext_ln703_54_fu_3434_p1;
wire  signed [24:0] sext_ln703_53_fu_3430_p1;
wire   [24:0] add_ln1192_70_fu_3438_p2;
wire  signed [23:0] add_ln703_7_fu_3452_p1;
wire   [23:0] add_ln703_7_fu_3452_p2;
wire   [0:0] tmp_763_fu_3458_p3;
wire   [0:0] tmp_762_fu_3444_p3;
wire   [0:0] xor_ln786_96_fu_3466_p2;
wire   [0:0] xor_ln340_46_fu_3484_p2;
wire   [0:0] xor_ln340_45_fu_3478_p2;
wire   [0:0] and_ln786_172_fu_3472_p2;
wire   [0:0] or_ln340_228_fu_3490_p2;
wire   [23:0] select_ln340_88_fu_3496_p3;
wire   [23:0] select_ln388_88_fu_3504_p3;
wire   [21:0] tmp_201_fu_3528_p4;
wire   [0:0] tmp_756_fu_3520_p3;
wire   [22:0] zext_ln1148_15_fu_3538_p1;
wire  signed [22:0] select_ln1148_7_fu_3542_p3;
wire   [0:0] tmp_757_fu_3553_p3;
wire   [0:0] tmp_758_fu_3561_p3;
wire   [0:0] or_ln785_7_fu_3569_p2;
wire   [0:0] xor_ln785_7_fu_3575_p2;
wire   [0:0] and_ln786_180_fu_3586_p2;
wire   [0:0] xor_ln786_103_fu_3592_p2;
wire   [0:0] and_ln786_171_fu_3598_p2;
wire   [0:0] and_ln785_87_fu_3580_p2;
wire   [0:0] or_ln340_7_fu_3603_p2;
wire  signed [23:0] sext_ln703_50_fu_3549_p1;
wire   [0:0] or_ln340_226_fu_3609_p2;
wire   [23:0] select_ln340_7_fu_3615_p3;
wire   [23:0] select_ln388_7_fu_3623_p3;
reg   [36:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln279_fu_909_p2 == 1'd1))) begin
        i_0_reg_365 <= i_reg_3695;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln276_fu_770_p2 == 1'd0))) begin
        i_0_reg_365 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln286_fu_1012_p2 == 1'd1))) begin
        ii_0_0_reg_400 <= add_ln285_reg_3745;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln279_fu_909_p2 == 1'd0))) begin
        ii_0_0_reg_400 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln286_1_fu_1348_p2 == 1'd1))) begin
        ii_0_1_reg_446 <= add_ln285_1_reg_3792;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        ii_0_1_reg_446 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln286_2_fu_1684_p2 == 1'd1))) begin
        ii_0_2_reg_492 <= add_ln285_2_reg_3839;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ii_0_2_reg_492 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln286_3_fu_2020_p2 == 1'd1))) begin
        ii_0_3_reg_538 <= add_ln285_3_reg_3886;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        ii_0_3_reg_538 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln286_4_fu_2356_p2 == 1'd1))) begin
        ii_0_4_reg_584 <= add_ln285_4_reg_3933;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ii_0_4_reg_584 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln286_5_fu_2692_p2 == 1'd1))) begin
        ii_0_5_reg_630 <= add_ln285_5_reg_3980;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ii_0_5_reg_630 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln286_6_fu_3028_p2 == 1'd1))) begin
        ii_0_6_reg_676 <= add_ln285_6_reg_4027;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        ii_0_6_reg_676 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln286_7_fu_3399_p2 == 1'd1))) begin
        ii_0_7_reg_722 <= add_ln285_7_reg_4074;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        ii_0_7_reg_722 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln278_fu_834_p2 == 1'd1))) begin
        j_0_reg_376 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        j_0_reg_376 <= j_reg_3725;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln285_fu_930_p2 == 1'd0))) begin
        jj_0_0_reg_423 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        jj_0_0_reg_423 <= add_ln286_reg_3769;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln285_1_fu_1266_p2 == 1'd0))) begin
        jj_0_1_reg_469 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        jj_0_1_reg_469 <= add_ln286_1_reg_3816;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln285_2_fu_1602_p2 == 1'd0))) begin
        jj_0_2_reg_515 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        jj_0_2_reg_515 <= add_ln286_2_reg_3863;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln285_3_fu_1938_p2 == 1'd0))) begin
        jj_0_3_reg_561 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        jj_0_3_reg_561 <= add_ln286_3_reg_3910;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln285_4_fu_2274_p2 == 1'd0))) begin
        jj_0_4_reg_607 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        jj_0_4_reg_607 <= add_ln286_4_reg_3957;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln285_5_fu_2610_p2 == 1'd0))) begin
        jj_0_5_reg_653 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        jj_0_5_reg_653 <= add_ln286_5_reg_4004;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln285_6_fu_2946_p2 == 1'd0))) begin
        jj_0_6_reg_699 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        jj_0_6_reg_699 <= add_ln286_6_reg_4051;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd0))) begin
        jj_0_7_reg_745 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        jj_0_7_reg_745 <= add_ln286_7_reg_4108;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln286_fu_1012_p2 == 1'd1))) begin
        p_Val2_0_reg_388 <= p_Val2_62_0_reg_411;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln279_fu_909_p2 == 1'd0))) begin
        p_Val2_0_reg_388 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln286_1_fu_1348_p2 == 1'd1))) begin
        p_Val2_1_reg_434 <= p_Val2_62_1_reg_457;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_Val2_1_reg_434 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln286_2_fu_1684_p2 == 1'd1))) begin
        p_Val2_2_reg_480 <= p_Val2_62_2_reg_503;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p_Val2_2_reg_480 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln286_3_fu_2020_p2 == 1'd1))) begin
        p_Val2_3_reg_526 <= p_Val2_62_3_reg_549;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        p_Val2_3_reg_526 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln286_4_fu_2356_p2 == 1'd1))) begin
        p_Val2_4_reg_572 <= p_Val2_62_4_reg_595;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        p_Val2_4_reg_572 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln286_5_fu_2692_p2 == 1'd1))) begin
        p_Val2_5_reg_618 <= p_Val2_62_5_reg_641;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        p_Val2_5_reg_618 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln285_fu_930_p2 == 1'd0))) begin
        p_Val2_62_0_reg_411 <= p_Val2_0_reg_388;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_62_0_reg_411 <= select_ln340_170_fu_1125_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln285_1_fu_1266_p2 == 1'd0))) begin
        p_Val2_62_1_reg_457 <= p_Val2_1_reg_434;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        p_Val2_62_1_reg_457 <= select_ln340_172_fu_1461_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln285_2_fu_1602_p2 == 1'd0))) begin
        p_Val2_62_2_reg_503 <= p_Val2_2_reg_480;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        p_Val2_62_2_reg_503 <= select_ln340_174_fu_1797_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln285_3_fu_1938_p2 == 1'd0))) begin
        p_Val2_62_3_reg_549 <= p_Val2_3_reg_526;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_Val2_62_3_reg_549 <= select_ln340_176_fu_2133_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln285_4_fu_2274_p2 == 1'd0))) begin
        p_Val2_62_4_reg_595 <= p_Val2_4_reg_572;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        p_Val2_62_4_reg_595 <= select_ln340_178_fu_2469_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln285_5_fu_2610_p2 == 1'd0))) begin
        p_Val2_62_5_reg_641 <= p_Val2_5_reg_618;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        p_Val2_62_5_reg_641 <= select_ln340_180_fu_2805_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln285_6_fu_2946_p2 == 1'd0))) begin
        p_Val2_62_6_reg_687 <= p_Val2_6_reg_664;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        p_Val2_62_6_reg_687 <= select_ln340_182_fu_3141_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd0))) begin
        p_Val2_62_7_reg_733 <= p_Val2_7_reg_710;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        p_Val2_62_7_reg_733 <= select_ln340_183_fu_3512_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln286_6_fu_3028_p2 == 1'd1))) begin
        p_Val2_6_reg_664 <= p_Val2_62_6_reg_687;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        p_Val2_6_reg_664 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln286_7_fu_3399_p2 == 1'd1))) begin
        p_Val2_7_reg_710 <= p_Val2_62_7_reg_733;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        p_Val2_7_reg_710 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln278_fu_834_p2 == 1'd0))) begin
        tile_0_reg_354 <= tile_reg_3669;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tile_0_reg_354 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln285_3_fu_1938_p2 == 1'd0))) begin
        add_ln1265_10_reg_3891 <= add_ln1265_10_fu_1980_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln285_4_fu_2274_p2 == 1'd0))) begin
        add_ln1265_13_reg_3938 <= add_ln1265_13_fu_2316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln285_5_fu_2610_p2 == 1'd0))) begin
        add_ln1265_16_reg_3985 <= add_ln1265_16_fu_2652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln285_6_fu_2946_p2 == 1'd0))) begin
        add_ln1265_19_reg_4032 <= add_ln1265_19_fu_2988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd0))) begin
        add_ln1265_22_reg_4079 <= add_ln1265_22_fu_3324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln285_fu_930_p2 == 1'd0))) begin
        add_ln1265_2_reg_3750 <= add_ln1265_2_fu_972_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln285_1_fu_1266_p2 == 1'd0))) begin
        add_ln1265_4_reg_3797 <= add_ln1265_4_fu_1308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln285_2_fu_1602_p2 == 1'd0))) begin
        add_ln1265_7_reg_3844 <= add_ln1265_7_fu_1644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln276_fu_770_p2 == 1'd0))) begin
        add_ln1265_reg_3674 <= add_ln1265_fu_797_p2;
        add_ln203_reg_3687 <= add_ln203_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln278_fu_834_p2 == 1'd1))) begin
        add_ln203_10_reg_3717 <= add_ln203_10_fu_903_p2;
        add_ln203_8_reg_3712 <= add_ln203_8_fu_876_p2;
        shl_ln287_reg_3700[4 : 1] <= shl_ln287_fu_845_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd1))) begin
        add_ln203_12_reg_4100 <= add_ln203_12_fu_3390_p2;
        icmp_ln700_7_reg_4089 <= icmp_ln700_7_fu_3364_p2;
        sub_ln1148_15_reg_4084 <= sub_ln1148_15_fu_3358_p2;
        zext_ln203_18_reg_4095[14 : 0] <= zext_ln203_18_fu_3379_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln285_1_reg_3792 <= add_ln285_1_fu_1272_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln285_2_reg_3839 <= add_ln285_2_fu_1608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln285_3_reg_3886 <= add_ln285_3_fu_1944_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln285_4_reg_3933 <= add_ln285_4_fu_2280_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln285_5_reg_3980 <= add_ln285_5_fu_2616_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln285_6_reg_4027 <= add_ln285_6_fu_2952_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln285_7_reg_4074 <= add_ln285_7_fu_3288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln285_reg_3745 <= add_ln285_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln286_1_reg_3816 <= add_ln286_1_fu_1354_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln286_2_reg_3863 <= add_ln286_2_fu_1690_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln286_3_reg_3910 <= add_ln286_3_fu_2026_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln286_4_reg_3957 <= add_ln286_4_fu_2362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln286_5_reg_4004 <= add_ln286_5_fu_2698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_ln286_6_reg_4051 <= add_ln286_6_fu_3034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_ln286_7_reg_4108 <= add_ln286_7_fu_3405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln286_reg_3769 <= add_ln286_fu_1018_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_3661 <= empty_fu_766_p1;
        in_channel_blocks_reg_3655 <= {{in_channels[5:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_3695 <= i_fu_839_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln285_1_fu_1266_p2 == 1'd1))) begin
        icmp_ln700_1_reg_3807 <= icmp_ln700_1_fu_1338_p2;
        tmp_188_reg_3802 <= {{sub_ln1148_2_fu_1322_p2[39:18]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln285_2_fu_1602_p2 == 1'd1))) begin
        icmp_ln700_2_reg_3854 <= icmp_ln700_2_fu_1674_p2;
        tmp_190_reg_3849 <= {{sub_ln1148_4_fu_1658_p2[39:18]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln285_3_fu_1938_p2 == 1'd1))) begin
        icmp_ln700_3_reg_3901 <= icmp_ln700_3_fu_2010_p2;
        tmp_192_reg_3896 <= {{sub_ln1148_6_fu_1994_p2[39:18]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln285_4_fu_2274_p2 == 1'd1))) begin
        icmp_ln700_4_reg_3948 <= icmp_ln700_4_fu_2346_p2;
        tmp_194_reg_3943 <= {{sub_ln1148_8_fu_2330_p2[39:18]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln285_5_fu_2610_p2 == 1'd1))) begin
        icmp_ln700_5_reg_3995 <= icmp_ln700_5_fu_2682_p2;
        tmp_196_reg_3990 <= {{sub_ln1148_10_fu_2666_p2[39:18]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln285_6_fu_2946_p2 == 1'd1))) begin
        icmp_ln700_6_reg_4042 <= icmp_ln700_6_fu_3018_p2;
        tmp_198_reg_4037 <= {{sub_ln1148_12_fu_3002_p2[39:18]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln285_fu_930_p2 == 1'd1))) begin
        icmp_ln700_reg_3760 <= icmp_ln700_fu_1002_p2;
        tmp_186_reg_3755 <= {{sub_ln1148_fu_986_p2[39:18]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_3725 <= j_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        select_ln340_168_reg_3784 <= select_ln340_168_fu_1254_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        select_ln340_169_reg_3831 <= select_ln340_169_fu_1590_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        select_ln340_171_reg_3878 <= select_ln340_171_fu_1926_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        select_ln340_173_reg_3925 <= select_ln340_173_fu_2262_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        select_ln340_175_reg_3972 <= select_ln340_175_fu_2598_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        select_ln340_177_reg_4019 <= select_ln340_177_fu_2934_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        select_ln340_179_reg_4066 <= select_ln340_179_fu_3270_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        select_ln340_181_reg_4123 <= select_ln340_181_fu_3631_p3;
        zext_ln203_19_reg_4128[14 : 0] <= zext_ln203_19_fu_3640_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln279_fu_909_p2 == 1'd0))) begin
        shl_ln287_1_reg_3730[4 : 1] <= shl_ln287_1_fu_920_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tile_reg_3669 <= tile_fu_775_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln276_fu_770_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln276_fu_770_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        outputs_0_V_address0 = zext_ln203_19_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        outputs_0_V_address0 = zext_ln203_18_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        outputs_0_V_address0 = zext_ln1265_16_fu_1038_p1;
    end else begin
        outputs_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state6))) begin
        outputs_0_V_ce0 = 1'b1;
    end else begin
        outputs_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd1)))) begin
        outputs_0_V_we0 = 1'b1;
    end else begin
        outputs_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        outputs_1_V_address0 = zext_ln203_19_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        outputs_1_V_address0 = zext_ln203_18_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        outputs_1_V_address0 = zext_ln1265_21_fu_1374_p1;
    end else begin
        outputs_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state10))) begin
        outputs_1_V_ce0 = 1'b1;
    end else begin
        outputs_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd1)))) begin
        outputs_1_V_we0 = 1'b1;
    end else begin
        outputs_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        outputs_2_V_address0 = zext_ln203_19_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        outputs_2_V_address0 = zext_ln203_18_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        outputs_2_V_address0 = zext_ln1265_26_fu_1710_p1;
    end else begin
        outputs_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state14))) begin
        outputs_2_V_ce0 = 1'b1;
    end else begin
        outputs_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd1)))) begin
        outputs_2_V_we0 = 1'b1;
    end else begin
        outputs_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        outputs_3_V_address0 = zext_ln203_19_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        outputs_3_V_address0 = zext_ln203_18_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        outputs_3_V_address0 = zext_ln1265_31_fu_2046_p1;
    end else begin
        outputs_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state18))) begin
        outputs_3_V_ce0 = 1'b1;
    end else begin
        outputs_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd1)))) begin
        outputs_3_V_we0 = 1'b1;
    end else begin
        outputs_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        outputs_4_V_address0 = zext_ln203_19_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        outputs_4_V_address0 = zext_ln203_18_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        outputs_4_V_address0 = zext_ln1265_36_fu_2382_p1;
    end else begin
        outputs_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state22))) begin
        outputs_4_V_ce0 = 1'b1;
    end else begin
        outputs_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd1)))) begin
        outputs_4_V_we0 = 1'b1;
    end else begin
        outputs_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        outputs_5_V_address0 = zext_ln203_19_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        outputs_5_V_address0 = zext_ln203_18_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        outputs_5_V_address0 = zext_ln1265_41_fu_2718_p1;
    end else begin
        outputs_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state26))) begin
        outputs_5_V_ce0 = 1'b1;
    end else begin
        outputs_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd1)))) begin
        outputs_5_V_we0 = 1'b1;
    end else begin
        outputs_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        outputs_6_V_address0 = zext_ln203_19_fu_3640_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        outputs_6_V_address0 = zext_ln203_18_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        outputs_6_V_address0 = zext_ln1265_46_fu_3054_p1;
    end else begin
        outputs_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state30))) begin
        outputs_6_V_ce0 = 1'b1;
    end else begin
        outputs_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd1)))) begin
        outputs_6_V_we0 = 1'b1;
    end else begin
        outputs_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        outputs_7_V_address0 = zext_ln203_19_reg_4128;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        outputs_7_V_address0 = zext_ln203_18_reg_4095;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        outputs_7_V_address0 = zext_ln1265_48_fu_3425_p1;
    end else begin
        outputs_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34))) begin
        outputs_7_V_ce0 = 1'b1;
    end else begin
        outputs_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        outputs_7_V_d0 = select_ln340_181_reg_4123;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        outputs_7_V_d0 = select_ln340_181_fu_3631_p3;
    end else begin
        outputs_7_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        outputs_7_V_we0 = 1'b1;
    end else begin
        outputs_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln276_fu_770_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln278_fu_834_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln279_fu_909_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln285_fu_930_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln286_fu_1012_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln285_1_fu_1266_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln286_1_fu_1348_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln285_2_fu_1602_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln286_2_fu_1684_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln285_3_fu_1938_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln286_3_fu_2020_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln285_4_fu_2274_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln286_4_fu_2356_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln285_5_fu_2610_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln286_5_fu_2692_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln285_6_fu_2946_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln286_6_fu_3028_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln285_7_fu_3282_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln286_7_fu_3399_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_64_fu_1387_p2 = ($signed(sext_ln703_37_fu_1383_p1) + $signed(sext_ln703_36_fu_1379_p1));

assign add_ln1192_65_fu_1723_p2 = ($signed(sext_ln703_40_fu_1719_p1) + $signed(sext_ln703_39_fu_1715_p1));

assign add_ln1192_66_fu_2059_p2 = ($signed(sext_ln703_43_fu_2055_p1) + $signed(sext_ln703_42_fu_2051_p1));

assign add_ln1192_67_fu_2395_p2 = ($signed(sext_ln703_46_fu_2391_p1) + $signed(sext_ln703_45_fu_2387_p1));

assign add_ln1192_68_fu_2731_p2 = ($signed(sext_ln703_49_fu_2727_p1) + $signed(sext_ln703_48_fu_2723_p1));

assign add_ln1192_69_fu_3067_p2 = ($signed(sext_ln703_52_fu_3063_p1) + $signed(sext_ln703_51_fu_3059_p1));

assign add_ln1192_70_fu_3438_p2 = ($signed(sext_ln703_54_fu_3434_p1) + $signed(sext_ln703_53_fu_3430_p1));

assign add_ln1192_fu_1051_p2 = ($signed(sext_ln703_34_fu_1047_p1) + $signed(sext_ln703_fu_1043_p1));

assign add_ln1265_10_fu_1980_p2 = (zext_ln1265_24_fu_1976_p1 + zext_ln1265_23_fu_1964_p1);

assign add_ln1265_11_fu_1705_p2 = (add_ln1265_7_reg_3844 + zext_ln1265_25_fu_1701_p1);

assign add_ln1265_12_fu_2295_p2 = (zext_ln1265_27_fu_2291_p1 + add_ln1265_reg_3674);

assign add_ln1265_13_fu_2316_p2 = (zext_ln1265_29_fu_2312_p1 + zext_ln1265_28_fu_2300_p1);

assign add_ln1265_14_fu_2041_p2 = (add_ln1265_10_reg_3891 + zext_ln1265_30_fu_2037_p1);

assign add_ln1265_15_fu_2631_p2 = (zext_ln1265_32_fu_2627_p1 + add_ln1265_reg_3674);

assign add_ln1265_16_fu_2652_p2 = (zext_ln1265_34_fu_2648_p1 + zext_ln1265_33_fu_2636_p1);

assign add_ln1265_17_fu_2377_p2 = (add_ln1265_13_reg_3938 + zext_ln1265_35_fu_2373_p1);

assign add_ln1265_18_fu_2967_p2 = (zext_ln1265_37_fu_2963_p1 + add_ln1265_reg_3674);

assign add_ln1265_19_fu_2988_p2 = (zext_ln1265_39_fu_2984_p1 + zext_ln1265_38_fu_2972_p1);

assign add_ln1265_1_fu_951_p2 = (zext_ln1265_9_fu_947_p1 + add_ln1265_reg_3674);

assign add_ln1265_20_fu_2713_p2 = (add_ln1265_16_reg_3985 + zext_ln1265_40_fu_2709_p1);

assign add_ln1265_21_fu_3303_p2 = (zext_ln1265_42_fu_3299_p1 + add_ln1265_reg_3674);

assign add_ln1265_22_fu_3324_p2 = (zext_ln1265_44_fu_3320_p1 + zext_ln1265_43_fu_3308_p1);

assign add_ln1265_23_fu_3049_p2 = (add_ln1265_19_reg_4032 + zext_ln1265_45_fu_3045_p1);

assign add_ln1265_24_fu_3420_p2 = (add_ln1265_22_reg_4079 + zext_ln1265_47_fu_3416_p1);

assign add_ln1265_2_fu_972_p2 = (zext_ln1265_11_fu_968_p1 + zext_ln1265_10_fu_956_p1);

assign add_ln1265_3_fu_1287_p2 = (zext_ln1265_12_fu_1283_p1 + add_ln1265_reg_3674);

assign add_ln1265_4_fu_1308_p2 = (zext_ln1265_14_fu_1304_p1 + zext_ln1265_13_fu_1292_p1);

assign add_ln1265_5_fu_1033_p2 = (add_ln1265_2_reg_3750 + zext_ln1265_15_fu_1029_p1);

assign add_ln1265_6_fu_1623_p2 = (zext_ln1265_17_fu_1619_p1 + add_ln1265_reg_3674);

assign add_ln1265_7_fu_1644_p2 = (zext_ln1265_19_fu_1640_p1 + zext_ln1265_18_fu_1628_p1);

assign add_ln1265_8_fu_1369_p2 = (add_ln1265_4_reg_3797 + zext_ln1265_20_fu_1365_p1);

assign add_ln1265_9_fu_1959_p2 = (zext_ln1265_22_fu_1955_p1 + add_ln1265_reg_3674);

assign add_ln1265_fu_797_p2 = (zext_ln1265_fu_781_p1 + zext_ln1265_8_fu_793_p1);

assign add_ln203_10_fu_903_p2 = (zext_ln203_15_fu_887_p1 + zext_ln203_16_fu_899_p1);

assign add_ln203_11_fu_3374_p2 = (add_ln203_8_reg_3712 + zext_ln203_17_fu_3370_p1);

assign add_ln203_12_fu_3390_p2 = (add_ln203_10_reg_3717 + zext_ln203_17_fu_3370_p1);

assign add_ln203_7_fu_855_p2 = (add_ln1265_reg_3674 + zext_ln203_12_fu_851_p1);

assign add_ln203_8_fu_876_p2 = (zext_ln203_13_fu_860_p1 + zext_ln203_14_fu_872_p1);

assign add_ln203_9_fu_882_p2 = (add_ln203_reg_3687 + zext_ln203_12_fu_851_p1);

assign add_ln203_fu_824_p2 = (zext_ln203_fu_808_p1 + zext_ln203_11_fu_820_p1);

assign add_ln285_1_fu_1272_p2 = (ii_0_1_reg_446 + 2'd1);

assign add_ln285_2_fu_1608_p2 = (ii_0_2_reg_492 + 2'd1);

assign add_ln285_3_fu_1944_p2 = (ii_0_3_reg_538 + 2'd1);

assign add_ln285_4_fu_2280_p2 = (ii_0_4_reg_584 + 2'd1);

assign add_ln285_5_fu_2616_p2 = (ii_0_5_reg_630 + 2'd1);

assign add_ln285_6_fu_2952_p2 = (ii_0_6_reg_676 + 2'd1);

assign add_ln285_7_fu_3288_p2 = (ii_0_7_reg_722 + 2'd1);

assign add_ln285_fu_936_p2 = (ii_0_0_reg_400 + 2'd1);

assign add_ln286_1_fu_1354_p2 = (jj_0_1_reg_469 + 2'd1);

assign add_ln286_2_fu_1690_p2 = (jj_0_2_reg_515 + 2'd1);

assign add_ln286_3_fu_2026_p2 = (jj_0_3_reg_561 + 2'd1);

assign add_ln286_4_fu_2362_p2 = (jj_0_4_reg_607 + 2'd1);

assign add_ln286_5_fu_2698_p2 = (jj_0_5_reg_653 + 2'd1);

assign add_ln286_6_fu_3034_p2 = (jj_0_6_reg_699 + 2'd1);

assign add_ln286_7_fu_3405_p2 = (jj_0_7_reg_745 + 2'd1);

assign add_ln286_fu_1018_p2 = (jj_0_0_reg_423 + 2'd1);

assign add_ln287_10_fu_1696_p2 = (zext_ln286_2_fu_1680_p1 + shl_ln287_1_reg_3730);

assign add_ln287_11_fu_2032_p2 = (zext_ln286_3_fu_2016_p1 + shl_ln287_1_reg_3730);

assign add_ln287_12_fu_2368_p2 = (zext_ln286_4_fu_2352_p1 + shl_ln287_1_reg_3730);

assign add_ln287_13_fu_2704_p2 = (zext_ln286_5_fu_2688_p1 + shl_ln287_1_reg_3730);

assign add_ln287_14_fu_3040_p2 = (zext_ln286_6_fu_3024_p1 + shl_ln287_1_reg_3730);

assign add_ln287_15_fu_3411_p2 = (zext_ln286_7_fu_3395_p1 + shl_ln287_1_reg_3730);

assign add_ln287_1_fu_1024_p2 = (zext_ln286_fu_1008_p1 + shl_ln287_1_reg_3730);

assign add_ln287_2_fu_1614_p2 = (shl_ln287_reg_3700 + zext_ln285_2_fu_1598_p1);

assign add_ln287_3_fu_1950_p2 = (shl_ln287_reg_3700 + zext_ln285_3_fu_1934_p1);

assign add_ln287_4_fu_2286_p2 = (shl_ln287_reg_3700 + zext_ln285_4_fu_2270_p1);

assign add_ln287_5_fu_2622_p2 = (shl_ln287_reg_3700 + zext_ln285_5_fu_2606_p1);

assign add_ln287_6_fu_2958_p2 = (shl_ln287_reg_3700 + zext_ln285_6_fu_2942_p1);

assign add_ln287_7_fu_3294_p2 = (shl_ln287_reg_3700 + zext_ln285_7_fu_3278_p1);

assign add_ln287_8_fu_1278_p2 = (shl_ln287_reg_3700 + zext_ln285_1_fu_1262_p1);

assign add_ln287_9_fu_1360_p2 = (zext_ln286_1_fu_1344_p1 + shl_ln287_1_reg_3730);

assign add_ln287_fu_942_p2 = (shl_ln287_reg_3700 + zext_ln285_fu_926_p1);

assign add_ln293_fu_803_p2 = (in_channel_blocks_reg_3655 + tile_0_reg_354);

assign add_ln703_1_fu_1401_p1 = outputs_1_V_q0;

assign add_ln703_1_fu_1401_p2 = ($signed(p_Val2_62_1_reg_457) + $signed(add_ln703_1_fu_1401_p1));

assign add_ln703_2_fu_1737_p1 = outputs_2_V_q0;

assign add_ln703_2_fu_1737_p2 = ($signed(p_Val2_62_2_reg_503) + $signed(add_ln703_2_fu_1737_p1));

assign add_ln703_3_fu_2073_p1 = outputs_3_V_q0;

assign add_ln703_3_fu_2073_p2 = ($signed(p_Val2_62_3_reg_549) + $signed(add_ln703_3_fu_2073_p1));

assign add_ln703_4_fu_2409_p1 = outputs_4_V_q0;

assign add_ln703_4_fu_2409_p2 = ($signed(p_Val2_62_4_reg_595) + $signed(add_ln703_4_fu_2409_p1));

assign add_ln703_5_fu_2745_p1 = outputs_5_V_q0;

assign add_ln703_5_fu_2745_p2 = ($signed(p_Val2_62_5_reg_641) + $signed(add_ln703_5_fu_2745_p1));

assign add_ln703_6_fu_3081_p1 = outputs_6_V_q0;

assign add_ln703_6_fu_3081_p2 = ($signed(p_Val2_62_6_reg_687) + $signed(add_ln703_6_fu_3081_p1));

assign add_ln703_7_fu_3452_p1 = outputs_7_V_q0;

assign add_ln703_7_fu_3452_p2 = ($signed(p_Val2_62_7_reg_733) + $signed(add_ln703_7_fu_3452_p1));

assign add_ln703_fu_1065_p1 = outputs_0_V_q0;

assign add_ln703_fu_1065_p2 = ($signed(p_Val2_62_0_reg_411) + $signed(add_ln703_fu_1065_p1));

assign and_ln785_81_fu_1539_p2 = (xor_ln785_1_fu_1534_p2 & or_ln785_1_fu_1528_p2);

assign and_ln785_82_fu_1875_p2 = (xor_ln785_2_fu_1870_p2 & or_ln785_2_fu_1864_p2);

assign and_ln785_83_fu_2211_p2 = (xor_ln785_3_fu_2206_p2 & or_ln785_3_fu_2200_p2);

assign and_ln785_84_fu_2547_p2 = (xor_ln785_4_fu_2542_p2 & or_ln785_4_fu_2536_p2);

assign and_ln785_85_fu_2883_p2 = (xor_ln785_5_fu_2878_p2 & or_ln785_5_fu_2872_p2);

assign and_ln785_86_fu_3219_p2 = (xor_ln785_6_fu_3214_p2 & or_ln785_6_fu_3208_p2);

assign and_ln785_87_fu_3580_p2 = (xor_ln785_7_fu_3575_p2 & or_ln785_7_fu_3569_p2);

assign and_ln785_fu_1203_p2 = (xor_ln785_fu_1198_p2 & or_ln785_fu_1192_p2);

assign and_ln786_158_fu_1085_p2 = (xor_ln786_89_fu_1079_p2 & tmp_724_fu_1057_p3);

assign and_ln786_159_fu_1557_p2 = (xor_ln786_97_fu_1551_p2 & icmp_ln700_1_reg_3807);

assign and_ln786_160_fu_1421_p2 = (xor_ln786_90_fu_1415_p2 & tmp_730_fu_1393_p3);

assign and_ln786_161_fu_1893_p2 = (xor_ln786_98_fu_1887_p2 & icmp_ln700_2_reg_3854);

assign and_ln786_162_fu_1757_p2 = (xor_ln786_91_fu_1751_p2 & tmp_736_fu_1729_p3);

assign and_ln786_163_fu_2229_p2 = (xor_ln786_99_fu_2223_p2 & icmp_ln700_3_reg_3901);

assign and_ln786_164_fu_2093_p2 = (xor_ln786_92_fu_2087_p2 & tmp_742_fu_2065_p3);

assign and_ln786_165_fu_2565_p2 = (xor_ln786_100_fu_2559_p2 & icmp_ln700_4_reg_3948);

assign and_ln786_166_fu_2429_p2 = (xor_ln786_93_fu_2423_p2 & tmp_748_fu_2401_p3);

assign and_ln786_167_fu_2901_p2 = (xor_ln786_101_fu_2895_p2 & icmp_ln700_5_reg_3995);

assign and_ln786_168_fu_2765_p2 = (xor_ln786_94_fu_2759_p2 & tmp_754_fu_2737_p3);

assign and_ln786_169_fu_3237_p2 = (xor_ln786_102_fu_3231_p2 & icmp_ln700_6_reg_4042);

assign and_ln786_170_fu_3101_p2 = (xor_ln786_95_fu_3095_p2 & tmp_760_fu_3073_p3);

assign and_ln786_171_fu_3598_p2 = (xor_ln786_103_fu_3592_p2 & icmp_ln700_7_reg_4089);

assign and_ln786_172_fu_3472_p2 = (xor_ln786_96_fu_3466_p2 & tmp_762_fu_3444_p3);

assign and_ln786_173_fu_1209_p2 = (tmp_718_fu_1184_p3 & tmp_717_fu_1176_p3);

assign and_ln786_174_fu_1545_p2 = (tmp_722_fu_1520_p3 & tmp_721_fu_1512_p3);

assign and_ln786_175_fu_1881_p2 = (tmp_728_fu_1856_p3 & tmp_727_fu_1848_p3);

assign and_ln786_176_fu_2217_p2 = (tmp_734_fu_2192_p3 & tmp_733_fu_2184_p3);

assign and_ln786_177_fu_2553_p2 = (tmp_740_fu_2528_p3 & tmp_739_fu_2520_p3);

assign and_ln786_178_fu_2889_p2 = (tmp_746_fu_2864_p3 & tmp_745_fu_2856_p3);

assign and_ln786_179_fu_3225_p2 = (tmp_752_fu_3200_p3 & tmp_751_fu_3192_p3);

assign and_ln786_180_fu_3586_p2 = (tmp_758_fu_3561_p3 & tmp_757_fu_3553_p3);

assign and_ln786_fu_1221_p2 = (xor_ln786_fu_1215_p2 & icmp_ln700_reg_3760);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign empty_fu_766_p1 = H_fmap[4:0];

assign i_fu_839_p2 = (i_0_reg_365 + 5'd1);

assign icmp_ln276_fu_770_p2 = ((tile_0_reg_354 == in_channel_blocks_reg_3655) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_834_p2 = (($signed(zext_ln278_fu_830_p1) < $signed(H_fmap)) ? 1'b1 : 1'b0);

assign icmp_ln279_fu_909_p2 = ((j_0_reg_376 == empty_reg_3661) ? 1'b1 : 1'b0);

assign icmp_ln285_1_fu_1266_p2 = ((ii_0_1_reg_446 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln285_2_fu_1602_p2 = ((ii_0_2_reg_492 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln285_3_fu_1938_p2 = ((ii_0_3_reg_538 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln285_4_fu_2274_p2 = ((ii_0_4_reg_584 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln285_5_fu_2610_p2 = ((ii_0_5_reg_630 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln285_6_fu_2946_p2 = ((ii_0_6_reg_676 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln285_7_fu_3282_p2 = ((ii_0_7_reg_722 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_930_p2 = ((ii_0_0_reg_400 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln286_1_fu_1348_p2 = ((jj_0_1_reg_469 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln286_2_fu_1684_p2 = ((jj_0_2_reg_515 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln286_3_fu_2020_p2 = ((jj_0_3_reg_561 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln286_4_fu_2356_p2 = ((jj_0_4_reg_607 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln286_5_fu_2692_p2 = ((jj_0_5_reg_653 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln286_6_fu_3028_p2 = ((jj_0_6_reg_699 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln286_7_fu_3399_p2 = ((jj_0_7_reg_745 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln286_fu_1012_p2 = ((jj_0_0_reg_423 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln700_1_fu_1338_p2 = (($signed(shl_ln728_s_fu_1314_p3) < $signed(40'd1099511365633)) ? 1'b1 : 1'b0);

assign icmp_ln700_2_fu_1674_p2 = (($signed(shl_ln728_63_fu_1650_p3) < $signed(40'd1099511365633)) ? 1'b1 : 1'b0);

assign icmp_ln700_3_fu_2010_p2 = (($signed(shl_ln728_64_fu_1986_p3) < $signed(40'd1099511365633)) ? 1'b1 : 1'b0);

assign icmp_ln700_4_fu_2346_p2 = (($signed(shl_ln728_65_fu_2322_p3) < $signed(40'd1099511365633)) ? 1'b1 : 1'b0);

assign icmp_ln700_5_fu_2682_p2 = (($signed(shl_ln728_66_fu_2658_p3) < $signed(40'd1099511365633)) ? 1'b1 : 1'b0);

assign icmp_ln700_6_fu_3018_p2 = (($signed(shl_ln728_67_fu_2994_p3) < $signed(40'd1099511365633)) ? 1'b1 : 1'b0);

assign icmp_ln700_7_fu_3364_p2 = (($signed(shl_ln728_68_fu_3330_p3) < $signed(40'd1099511365633)) ? 1'b1 : 1'b0);

assign icmp_ln700_fu_1002_p2 = (($signed(shl_ln1_fu_978_p3) < $signed(40'd1099511365633)) ? 1'b1 : 1'b0);

assign j_fu_914_p2 = (j_0_reg_376 + 5'd1);

assign or_ln340_1_fu_1562_p2 = (and_ln786_159_fu_1557_p2 | and_ln785_81_fu_1539_p2);

assign or_ln340_204_fu_1103_p2 = (xor_ln340_32_fu_1097_p2 | tmp_725_fu_1071_p3);

assign or_ln340_208_fu_1439_p2 = (xor_ln340_34_fu_1433_p2 | tmp_731_fu_1407_p3);

assign or_ln340_212_fu_1775_p2 = (xor_ln340_36_fu_1769_p2 | tmp_737_fu_1743_p3);

assign or_ln340_216_fu_2111_p2 = (xor_ln340_38_fu_2105_p2 | tmp_743_fu_2079_p3);

assign or_ln340_217_fu_1232_p2 = (xor_ln785_fu_1198_p2 | and_ln786_173_fu_1209_p2);

assign or_ln340_218_fu_1568_p2 = (xor_ln785_1_fu_1534_p2 | and_ln786_174_fu_1545_p2);

assign or_ln340_219_fu_1904_p2 = (xor_ln785_2_fu_1870_p2 | and_ln786_175_fu_1881_p2);

assign or_ln340_220_fu_2447_p2 = (xor_ln340_40_fu_2441_p2 | tmp_749_fu_2415_p3);

assign or_ln340_221_fu_2240_p2 = (xor_ln785_3_fu_2206_p2 | and_ln786_176_fu_2217_p2);

assign or_ln340_222_fu_2576_p2 = (xor_ln785_4_fu_2542_p2 | and_ln786_177_fu_2553_p2);

assign or_ln340_223_fu_2912_p2 = (xor_ln785_5_fu_2878_p2 | and_ln786_178_fu_2889_p2);

assign or_ln340_224_fu_2783_p2 = (xor_ln340_42_fu_2777_p2 | tmp_755_fu_2751_p3);

assign or_ln340_225_fu_3248_p2 = (xor_ln785_6_fu_3214_p2 | and_ln786_179_fu_3225_p2);

assign or_ln340_226_fu_3609_p2 = (xor_ln785_7_fu_3575_p2 | and_ln786_180_fu_3586_p2);

assign or_ln340_227_fu_3119_p2 = (xor_ln340_44_fu_3113_p2 | tmp_761_fu_3087_p3);

assign or_ln340_228_fu_3490_p2 = (xor_ln340_46_fu_3484_p2 | tmp_763_fu_3458_p3);

assign or_ln340_2_fu_1898_p2 = (and_ln786_161_fu_1893_p2 | and_ln785_82_fu_1875_p2);

assign or_ln340_3_fu_2234_p2 = (and_ln786_163_fu_2229_p2 | and_ln785_83_fu_2211_p2);

assign or_ln340_4_fu_2570_p2 = (and_ln786_165_fu_2565_p2 | and_ln785_84_fu_2547_p2);

assign or_ln340_5_fu_2906_p2 = (and_ln786_167_fu_2901_p2 | and_ln785_85_fu_2883_p2);

assign or_ln340_6_fu_3242_p2 = (and_ln786_169_fu_3237_p2 | and_ln785_86_fu_3219_p2);

assign or_ln340_7_fu_3603_p2 = (and_ln786_171_fu_3598_p2 | and_ln785_87_fu_3580_p2);

assign or_ln340_fu_1226_p2 = (and_ln786_fu_1221_p2 | and_ln785_fu_1203_p2);

assign or_ln785_1_fu_1528_p2 = (tmp_722_fu_1520_p3 | tmp_721_fu_1512_p3);

assign or_ln785_2_fu_1864_p2 = (tmp_728_fu_1856_p3 | tmp_727_fu_1848_p3);

assign or_ln785_3_fu_2200_p2 = (tmp_734_fu_2192_p3 | tmp_733_fu_2184_p3);

assign or_ln785_4_fu_2536_p2 = (tmp_740_fu_2528_p3 | tmp_739_fu_2520_p3);

assign or_ln785_5_fu_2872_p2 = (tmp_746_fu_2864_p3 | tmp_745_fu_2856_p3);

assign or_ln785_6_fu_3208_p2 = (tmp_752_fu_3200_p3 | tmp_751_fu_3192_p3);

assign or_ln785_7_fu_3569_p2 = (tmp_758_fu_3561_p3 | tmp_757_fu_3553_p3);

assign or_ln785_fu_1192_p2 = (tmp_718_fu_1184_p3 | tmp_717_fu_1176_p3);

assign outputs_0_V_d0 = select_ln340_168_reg_3784;

assign outputs_1_V_d0 = select_ln340_169_reg_3831;

assign outputs_2_V_d0 = select_ln340_171_reg_3878;

assign outputs_3_V_d0 = select_ln340_173_reg_3925;

assign outputs_4_V_d0 = select_ln340_175_reg_3972;

assign outputs_5_V_d0 = select_ln340_177_reg_4019;

assign outputs_6_V_d0 = select_ln340_179_reg_4066;

assign select_ln1148_1_fu_1500_p3 = ((tmp_720_fu_1469_p3[0:0] === 1'b1) ? sub_ln1148_3_fu_1480_p2 : zext_ln1148_3_fu_1496_p1);

assign select_ln1148_2_fu_1836_p3 = ((tmp_726_fu_1805_p3[0:0] === 1'b1) ? sub_ln1148_5_fu_1816_p2 : zext_ln1148_5_fu_1832_p1);

assign select_ln1148_3_fu_2172_p3 = ((tmp_732_fu_2141_p3[0:0] === 1'b1) ? sub_ln1148_7_fu_2152_p2 : zext_ln1148_7_fu_2168_p1);

assign select_ln1148_4_fu_2508_p3 = ((tmp_738_fu_2477_p3[0:0] === 1'b1) ? sub_ln1148_9_fu_2488_p2 : zext_ln1148_9_fu_2504_p1);

assign select_ln1148_5_fu_2844_p3 = ((tmp_744_fu_2813_p3[0:0] === 1'b1) ? sub_ln1148_11_fu_2824_p2 : zext_ln1148_11_fu_2840_p1);

assign select_ln1148_6_fu_3180_p3 = ((tmp_750_fu_3149_p3[0:0] === 1'b1) ? sub_ln1148_13_fu_3160_p2 : zext_ln1148_13_fu_3176_p1);

assign select_ln1148_7_fu_3542_p3 = ((tmp_756_fu_3520_p3[0:0] === 1'b1) ? sub_ln1148_15_reg_4084 : zext_ln1148_15_fu_3538_p1);

assign select_ln1148_fu_1164_p3 = ((tmp_716_fu_1133_p3[0:0] === 1'b1) ? sub_ln1148_1_fu_1144_p2 : zext_ln1148_1_fu_1160_p1);

assign select_ln340_168_fu_1254_p3 = ((or_ln340_217_fu_1232_p2[0:0] === 1'b1) ? select_ln340_fu_1238_p3 : select_ln388_fu_1246_p3);

assign select_ln340_169_fu_1590_p3 = ((or_ln340_218_fu_1568_p2[0:0] === 1'b1) ? select_ln340_1_fu_1574_p3 : select_ln388_1_fu_1582_p3);

assign select_ln340_170_fu_1125_p3 = ((or_ln340_204_fu_1103_p2[0:0] === 1'b1) ? select_ln340_80_fu_1109_p3 : select_ln388_80_fu_1117_p3);

assign select_ln340_171_fu_1926_p3 = ((or_ln340_219_fu_1904_p2[0:0] === 1'b1) ? select_ln340_2_fu_1910_p3 : select_ln388_2_fu_1918_p3);

assign select_ln340_172_fu_1461_p3 = ((or_ln340_208_fu_1439_p2[0:0] === 1'b1) ? select_ln340_81_fu_1445_p3 : select_ln388_81_fu_1453_p3);

assign select_ln340_173_fu_2262_p3 = ((or_ln340_221_fu_2240_p2[0:0] === 1'b1) ? select_ln340_3_fu_2246_p3 : select_ln388_3_fu_2254_p3);

assign select_ln340_174_fu_1797_p3 = ((or_ln340_212_fu_1775_p2[0:0] === 1'b1) ? select_ln340_82_fu_1781_p3 : select_ln388_82_fu_1789_p3);

assign select_ln340_175_fu_2598_p3 = ((or_ln340_222_fu_2576_p2[0:0] === 1'b1) ? select_ln340_84_fu_2582_p3 : select_ln388_84_fu_2590_p3);

assign select_ln340_176_fu_2133_p3 = ((or_ln340_216_fu_2111_p2[0:0] === 1'b1) ? select_ln340_83_fu_2117_p3 : select_ln388_83_fu_2125_p3);

assign select_ln340_177_fu_2934_p3 = ((or_ln340_223_fu_2912_p2[0:0] === 1'b1) ? select_ln340_5_fu_2918_p3 : select_ln388_5_fu_2926_p3);

assign select_ln340_178_fu_2469_p3 = ((or_ln340_220_fu_2447_p2[0:0] === 1'b1) ? select_ln340_85_fu_2453_p3 : select_ln388_85_fu_2461_p3);

assign select_ln340_179_fu_3270_p3 = ((or_ln340_225_fu_3248_p2[0:0] === 1'b1) ? select_ln340_6_fu_3254_p3 : select_ln388_6_fu_3262_p3);

assign select_ln340_180_fu_2805_p3 = ((or_ln340_224_fu_2783_p2[0:0] === 1'b1) ? select_ln340_86_fu_2789_p3 : select_ln388_86_fu_2797_p3);

assign select_ln340_181_fu_3631_p3 = ((or_ln340_226_fu_3609_p2[0:0] === 1'b1) ? select_ln340_7_fu_3615_p3 : select_ln388_7_fu_3623_p3);

assign select_ln340_182_fu_3141_p3 = ((or_ln340_227_fu_3119_p2[0:0] === 1'b1) ? select_ln340_87_fu_3125_p3 : select_ln388_87_fu_3133_p3);

assign select_ln340_183_fu_3512_p3 = ((or_ln340_228_fu_3490_p2[0:0] === 1'b1) ? select_ln340_88_fu_3496_p3 : select_ln388_88_fu_3504_p3);

assign select_ln340_1_fu_1574_p3 = ((or_ln340_1_fu_1562_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln703_33_fu_1508_p1);

assign select_ln340_2_fu_1910_p3 = ((or_ln340_2_fu_1898_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln703_35_fu_1844_p1);

assign select_ln340_3_fu_2246_p3 = ((or_ln340_3_fu_2234_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln703_38_fu_2180_p1);

assign select_ln340_5_fu_2918_p3 = ((or_ln340_5_fu_2906_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln703_44_fu_2852_p1);

assign select_ln340_6_fu_3254_p3 = ((or_ln340_6_fu_3242_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln703_47_fu_3188_p1);

assign select_ln340_7_fu_3615_p3 = ((or_ln340_7_fu_3603_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln703_50_fu_3549_p1);

assign select_ln340_80_fu_1109_p3 = ((xor_ln340_fu_1091_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln703_fu_1065_p2);

assign select_ln340_81_fu_1445_p3 = ((xor_ln340_33_fu_1427_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln703_1_fu_1401_p2);

assign select_ln340_82_fu_1781_p3 = ((xor_ln340_35_fu_1763_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln703_2_fu_1737_p2);

assign select_ln340_83_fu_2117_p3 = ((xor_ln340_37_fu_2099_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln703_3_fu_2073_p2);

assign select_ln340_84_fu_2582_p3 = ((or_ln340_4_fu_2570_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln703_41_fu_2516_p1);

assign select_ln340_85_fu_2453_p3 = ((xor_ln340_39_fu_2435_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln703_4_fu_2409_p2);

assign select_ln340_86_fu_2789_p3 = ((xor_ln340_41_fu_2771_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln703_5_fu_2745_p2);

assign select_ln340_87_fu_3125_p3 = ((xor_ln340_43_fu_3107_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln703_6_fu_3081_p2);

assign select_ln340_88_fu_3496_p3 = ((xor_ln340_45_fu_3478_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln703_7_fu_3452_p2);

assign select_ln340_fu_1238_p3 = ((or_ln340_fu_1226_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln703_32_fu_1172_p1);

assign select_ln388_1_fu_1582_p3 = ((and_ln786_159_fu_1557_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln703_33_fu_1508_p1);

assign select_ln388_2_fu_1918_p3 = ((and_ln786_161_fu_1893_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln703_35_fu_1844_p1);

assign select_ln388_3_fu_2254_p3 = ((and_ln786_163_fu_2229_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln703_38_fu_2180_p1);

assign select_ln388_5_fu_2926_p3 = ((and_ln786_167_fu_2901_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln703_44_fu_2852_p1);

assign select_ln388_6_fu_3262_p3 = ((and_ln786_169_fu_3237_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln703_47_fu_3188_p1);

assign select_ln388_7_fu_3623_p3 = ((and_ln786_171_fu_3598_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln703_50_fu_3549_p1);

assign select_ln388_80_fu_1117_p3 = ((and_ln786_158_fu_1085_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln703_fu_1065_p2);

assign select_ln388_81_fu_1453_p3 = ((and_ln786_160_fu_1421_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln703_1_fu_1401_p2);

assign select_ln388_82_fu_1789_p3 = ((and_ln786_162_fu_1757_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln703_2_fu_1737_p2);

assign select_ln388_83_fu_2125_p3 = ((and_ln786_164_fu_2093_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln703_3_fu_2073_p2);

assign select_ln388_84_fu_2590_p3 = ((and_ln786_165_fu_2565_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln703_41_fu_2516_p1);

assign select_ln388_85_fu_2461_p3 = ((and_ln786_166_fu_2429_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln703_4_fu_2409_p2);

assign select_ln388_86_fu_2797_p3 = ((and_ln786_168_fu_2765_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln703_5_fu_2745_p2);

assign select_ln388_87_fu_3133_p3 = ((and_ln786_170_fu_3101_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln703_6_fu_3081_p2);

assign select_ln388_88_fu_3504_p3 = ((and_ln786_172_fu_3472_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln703_7_fu_3452_p2);

assign select_ln388_fu_1246_p3 = ((and_ln786_fu_1221_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln703_32_fu_1172_p1);

assign sext_ln703_32_fu_1172_p1 = select_ln1148_fu_1164_p3;

assign sext_ln703_33_fu_1508_p1 = select_ln1148_1_fu_1500_p3;

assign sext_ln703_34_fu_1047_p0 = outputs_0_V_q0;

assign sext_ln703_34_fu_1047_p1 = sext_ln703_34_fu_1047_p0;

assign sext_ln703_35_fu_1844_p1 = select_ln1148_2_fu_1836_p3;

assign sext_ln703_36_fu_1379_p1 = p_Val2_62_1_reg_457;

assign sext_ln703_37_fu_1383_p0 = outputs_1_V_q0;

assign sext_ln703_37_fu_1383_p1 = sext_ln703_37_fu_1383_p0;

assign sext_ln703_38_fu_2180_p1 = select_ln1148_3_fu_2172_p3;

assign sext_ln703_39_fu_1715_p1 = p_Val2_62_2_reg_503;

assign sext_ln703_40_fu_1719_p0 = outputs_2_V_q0;

assign sext_ln703_40_fu_1719_p1 = sext_ln703_40_fu_1719_p0;

assign sext_ln703_41_fu_2516_p1 = select_ln1148_4_fu_2508_p3;

assign sext_ln703_42_fu_2051_p1 = p_Val2_62_3_reg_549;

assign sext_ln703_43_fu_2055_p0 = outputs_3_V_q0;

assign sext_ln703_43_fu_2055_p1 = sext_ln703_43_fu_2055_p0;

assign sext_ln703_44_fu_2852_p1 = select_ln1148_5_fu_2844_p3;

assign sext_ln703_45_fu_2387_p1 = p_Val2_62_4_reg_595;

assign sext_ln703_46_fu_2391_p0 = outputs_4_V_q0;

assign sext_ln703_46_fu_2391_p1 = sext_ln703_46_fu_2391_p0;

assign sext_ln703_47_fu_3188_p1 = select_ln1148_6_fu_3180_p3;

assign sext_ln703_48_fu_2723_p1 = p_Val2_62_5_reg_641;

assign sext_ln703_49_fu_2727_p0 = outputs_5_V_q0;

assign sext_ln703_49_fu_2727_p1 = sext_ln703_49_fu_2727_p0;

assign sext_ln703_50_fu_3549_p1 = select_ln1148_7_fu_3542_p3;

assign sext_ln703_51_fu_3059_p1 = p_Val2_62_6_reg_687;

assign sext_ln703_52_fu_3063_p0 = outputs_6_V_q0;

assign sext_ln703_52_fu_3063_p1 = sext_ln703_52_fu_3063_p0;

assign sext_ln703_53_fu_3430_p1 = p_Val2_62_7_reg_733;

assign sext_ln703_54_fu_3434_p0 = outputs_7_V_q0;

assign sext_ln703_54_fu_3434_p1 = sext_ln703_54_fu_3434_p0;

assign sext_ln703_fu_1043_p1 = p_Val2_62_0_reg_411;

assign shl_ln1_fu_978_p3 = {{p_Val2_0_reg_388}, {16'd0}};

assign shl_ln287_1_fu_920_p2 = j_0_reg_376 << 5'd1;

assign shl_ln287_fu_845_p2 = i_0_reg_365 << 5'd1;

assign shl_ln728_63_fu_1650_p3 = {{p_Val2_2_reg_480}, {16'd0}};

assign shl_ln728_64_fu_1986_p3 = {{p_Val2_3_reg_526}, {16'd0}};

assign shl_ln728_65_fu_2322_p3 = {{p_Val2_4_reg_572}, {16'd0}};

assign shl_ln728_66_fu_2658_p3 = {{p_Val2_5_reg_618}, {16'd0}};

assign shl_ln728_67_fu_2994_p3 = {{p_Val2_6_reg_664}, {16'd0}};

assign shl_ln728_68_fu_3330_p3 = {{p_Val2_7_reg_710}, {16'd0}};

assign shl_ln728_s_fu_1314_p3 = {{p_Val2_1_reg_434}, {16'd0}};

assign sub_ln1148_10_fu_2666_p2 = (40'd0 - shl_ln728_66_fu_2658_p3);

assign sub_ln1148_11_fu_2824_p2 = (23'd0 - zext_ln1148_10_fu_2821_p1);

assign sub_ln1148_12_fu_3002_p2 = (40'd0 - shl_ln728_67_fu_2994_p3);

assign sub_ln1148_13_fu_3160_p2 = (23'd0 - zext_ln1148_12_fu_3157_p1);

assign sub_ln1148_14_fu_3338_p2 = (40'd0 - shl_ln728_68_fu_3330_p3);

assign sub_ln1148_15_fu_3358_p2 = (23'd0 - zext_ln1148_14_fu_3354_p1);

assign sub_ln1148_1_fu_1144_p2 = (23'd0 - zext_ln1148_fu_1141_p1);

assign sub_ln1148_2_fu_1322_p2 = (40'd0 - shl_ln728_s_fu_1314_p3);

assign sub_ln1148_3_fu_1480_p2 = (23'd0 - zext_ln1148_2_fu_1477_p1);

assign sub_ln1148_4_fu_1658_p2 = (40'd0 - shl_ln728_63_fu_1650_p3);

assign sub_ln1148_5_fu_1816_p2 = (23'd0 - zext_ln1148_4_fu_1813_p1);

assign sub_ln1148_6_fu_1994_p2 = (40'd0 - shl_ln728_64_fu_1986_p3);

assign sub_ln1148_7_fu_2152_p2 = (23'd0 - zext_ln1148_6_fu_2149_p1);

assign sub_ln1148_8_fu_2330_p2 = (40'd0 - shl_ln728_65_fu_2322_p3);

assign sub_ln1148_9_fu_2488_p2 = (23'd0 - zext_ln1148_8_fu_2485_p1);

assign sub_ln1148_fu_986_p2 = (40'd0 - shl_ln1_fu_978_p3);

assign tile_fu_775_p2 = (tile_0_reg_354 + 3'd1);

assign tmp_184_fu_785_p3 = {{tile_0_reg_354}, {5'd0}};

assign tmp_185_fu_812_p3 = {{add_ln293_fu_803_p2}, {5'd0}};

assign tmp_187_fu_1150_p4 = {{p_Val2_0_reg_388[23:2]}};

assign tmp_189_fu_1486_p4 = {{p_Val2_1_reg_434[23:2]}};

assign tmp_191_fu_1822_p4 = {{p_Val2_2_reg_480[23:2]}};

assign tmp_193_fu_2158_p4 = {{p_Val2_3_reg_526[23:2]}};

assign tmp_195_fu_2494_p4 = {{p_Val2_4_reg_572[23:2]}};

assign tmp_197_fu_2830_p4 = {{p_Val2_5_reg_618[23:2]}};

assign tmp_199_fu_3166_p4 = {{p_Val2_6_reg_664[23:2]}};

assign tmp_200_fu_3344_p4 = {{sub_ln1148_14_fu_3338_p2[39:18]}};

assign tmp_201_fu_3528_p4 = {{p_Val2_7_reg_710[23:2]}};

assign tmp_714_fu_864_p3 = {{add_ln203_7_fu_855_p2}, {5'd0}};

assign tmp_715_fu_891_p3 = {{add_ln203_9_fu_882_p2}, {5'd0}};

assign tmp_716_fu_1133_p3 = p_Val2_0_reg_388[32'd23];

assign tmp_717_fu_1176_p3 = select_ln1148_fu_1164_p3[32'd22];

assign tmp_718_fu_1184_p3 = select_ln1148_fu_1164_p3[32'd22];

assign tmp_719_fu_960_p3 = {{add_ln1265_1_fu_951_p2}, {5'd0}};

assign tmp_720_fu_1469_p3 = p_Val2_1_reg_434[32'd23];

assign tmp_721_fu_1512_p3 = select_ln1148_1_fu_1500_p3[32'd22];

assign tmp_722_fu_1520_p3 = select_ln1148_1_fu_1500_p3[32'd22];

assign tmp_723_fu_1296_p3 = {{add_ln1265_3_fu_1287_p2}, {5'd0}};

assign tmp_724_fu_1057_p3 = add_ln1192_fu_1051_p2[32'd24];

assign tmp_725_fu_1071_p3 = add_ln703_fu_1065_p2[32'd23];

assign tmp_726_fu_1805_p3 = p_Val2_2_reg_480[32'd23];

assign tmp_727_fu_1848_p3 = select_ln1148_2_fu_1836_p3[32'd22];

assign tmp_728_fu_1856_p3 = select_ln1148_2_fu_1836_p3[32'd22];

assign tmp_729_fu_1632_p3 = {{add_ln1265_6_fu_1623_p2}, {5'd0}};

assign tmp_730_fu_1393_p3 = add_ln1192_64_fu_1387_p2[32'd24];

assign tmp_731_fu_1407_p3 = add_ln703_1_fu_1401_p2[32'd23];

assign tmp_732_fu_2141_p3 = p_Val2_3_reg_526[32'd23];

assign tmp_733_fu_2184_p3 = select_ln1148_3_fu_2172_p3[32'd22];

assign tmp_734_fu_2192_p3 = select_ln1148_3_fu_2172_p3[32'd22];

assign tmp_735_fu_1968_p3 = {{add_ln1265_9_fu_1959_p2}, {5'd0}};

assign tmp_736_fu_1729_p3 = add_ln1192_65_fu_1723_p2[32'd24];

assign tmp_737_fu_1743_p3 = add_ln703_2_fu_1737_p2[32'd23];

assign tmp_738_fu_2477_p3 = p_Val2_4_reg_572[32'd23];

assign tmp_739_fu_2520_p3 = select_ln1148_4_fu_2508_p3[32'd22];

assign tmp_740_fu_2528_p3 = select_ln1148_4_fu_2508_p3[32'd22];

assign tmp_741_fu_2304_p3 = {{add_ln1265_12_fu_2295_p2}, {5'd0}};

assign tmp_742_fu_2065_p3 = add_ln1192_66_fu_2059_p2[32'd24];

assign tmp_743_fu_2079_p3 = add_ln703_3_fu_2073_p2[32'd23];

assign tmp_744_fu_2813_p3 = p_Val2_5_reg_618[32'd23];

assign tmp_745_fu_2856_p3 = select_ln1148_5_fu_2844_p3[32'd22];

assign tmp_746_fu_2864_p3 = select_ln1148_5_fu_2844_p3[32'd22];

assign tmp_747_fu_2640_p3 = {{add_ln1265_15_fu_2631_p2}, {5'd0}};

assign tmp_748_fu_2401_p3 = add_ln1192_67_fu_2395_p2[32'd24];

assign tmp_749_fu_2415_p3 = add_ln703_4_fu_2409_p2[32'd23];

assign tmp_750_fu_3149_p3 = p_Val2_6_reg_664[32'd23];

assign tmp_751_fu_3192_p3 = select_ln1148_6_fu_3180_p3[32'd22];

assign tmp_752_fu_3200_p3 = select_ln1148_6_fu_3180_p3[32'd22];

assign tmp_753_fu_2976_p3 = {{add_ln1265_18_fu_2967_p2}, {5'd0}};

assign tmp_754_fu_2737_p3 = add_ln1192_68_fu_2731_p2[32'd24];

assign tmp_755_fu_2751_p3 = add_ln703_5_fu_2745_p2[32'd23];

assign tmp_756_fu_3520_p3 = p_Val2_7_reg_710[32'd23];

assign tmp_757_fu_3553_p3 = select_ln1148_7_fu_3542_p3[32'd22];

assign tmp_758_fu_3561_p3 = select_ln1148_7_fu_3542_p3[32'd22];

assign tmp_759_fu_3312_p3 = {{add_ln1265_21_fu_3303_p2}, {5'd0}};

assign tmp_760_fu_3073_p3 = add_ln1192_69_fu_3067_p2[32'd24];

assign tmp_761_fu_3087_p3 = add_ln703_6_fu_3081_p2[32'd23];

assign tmp_762_fu_3444_p3 = add_ln1192_70_fu_3438_p2[32'd24];

assign tmp_763_fu_3458_p3 = add_ln703_7_fu_3452_p2[32'd23];

assign xor_ln340_32_fu_1097_p2 = (tmp_724_fu_1057_p3 ^ 1'd1);

assign xor_ln340_33_fu_1427_p2 = (tmp_731_fu_1407_p3 ^ tmp_730_fu_1393_p3);

assign xor_ln340_34_fu_1433_p2 = (tmp_730_fu_1393_p3 ^ 1'd1);

assign xor_ln340_35_fu_1763_p2 = (tmp_737_fu_1743_p3 ^ tmp_736_fu_1729_p3);

assign xor_ln340_36_fu_1769_p2 = (tmp_736_fu_1729_p3 ^ 1'd1);

assign xor_ln340_37_fu_2099_p2 = (tmp_743_fu_2079_p3 ^ tmp_742_fu_2065_p3);

assign xor_ln340_38_fu_2105_p2 = (tmp_742_fu_2065_p3 ^ 1'd1);

assign xor_ln340_39_fu_2435_p2 = (tmp_749_fu_2415_p3 ^ tmp_748_fu_2401_p3);

assign xor_ln340_40_fu_2441_p2 = (tmp_748_fu_2401_p3 ^ 1'd1);

assign xor_ln340_41_fu_2771_p2 = (tmp_755_fu_2751_p3 ^ tmp_754_fu_2737_p3);

assign xor_ln340_42_fu_2777_p2 = (tmp_754_fu_2737_p3 ^ 1'd1);

assign xor_ln340_43_fu_3107_p2 = (tmp_761_fu_3087_p3 ^ tmp_760_fu_3073_p3);

assign xor_ln340_44_fu_3113_p2 = (tmp_760_fu_3073_p3 ^ 1'd1);

assign xor_ln340_45_fu_3478_p2 = (tmp_763_fu_3458_p3 ^ tmp_762_fu_3444_p3);

assign xor_ln340_46_fu_3484_p2 = (tmp_762_fu_3444_p3 ^ 1'd1);

assign xor_ln340_fu_1091_p2 = (tmp_725_fu_1071_p3 ^ tmp_724_fu_1057_p3);

assign xor_ln785_1_fu_1534_p2 = (icmp_ln700_1_reg_3807 ^ 1'd1);

assign xor_ln785_2_fu_1870_p2 = (icmp_ln700_2_reg_3854 ^ 1'd1);

assign xor_ln785_3_fu_2206_p2 = (icmp_ln700_3_reg_3901 ^ 1'd1);

assign xor_ln785_4_fu_2542_p2 = (icmp_ln700_4_reg_3948 ^ 1'd1);

assign xor_ln785_5_fu_2878_p2 = (icmp_ln700_5_reg_3995 ^ 1'd1);

assign xor_ln785_6_fu_3214_p2 = (icmp_ln700_6_reg_4042 ^ 1'd1);

assign xor_ln785_7_fu_3575_p2 = (icmp_ln700_7_reg_4089 ^ 1'd1);

assign xor_ln785_fu_1198_p2 = (icmp_ln700_reg_3760 ^ 1'd1);

assign xor_ln786_100_fu_2559_p2 = (1'd1 ^ and_ln786_177_fu_2553_p2);

assign xor_ln786_101_fu_2895_p2 = (1'd1 ^ and_ln786_178_fu_2889_p2);

assign xor_ln786_102_fu_3231_p2 = (1'd1 ^ and_ln786_179_fu_3225_p2);

assign xor_ln786_103_fu_3592_p2 = (1'd1 ^ and_ln786_180_fu_3586_p2);

assign xor_ln786_89_fu_1079_p2 = (tmp_725_fu_1071_p3 ^ 1'd1);

assign xor_ln786_90_fu_1415_p2 = (tmp_731_fu_1407_p3 ^ 1'd1);

assign xor_ln786_91_fu_1751_p2 = (tmp_737_fu_1743_p3 ^ 1'd1);

assign xor_ln786_92_fu_2087_p2 = (tmp_743_fu_2079_p3 ^ 1'd1);

assign xor_ln786_93_fu_2423_p2 = (tmp_749_fu_2415_p3 ^ 1'd1);

assign xor_ln786_94_fu_2759_p2 = (tmp_755_fu_2751_p3 ^ 1'd1);

assign xor_ln786_95_fu_3095_p2 = (tmp_761_fu_3087_p3 ^ 1'd1);

assign xor_ln786_96_fu_3466_p2 = (tmp_763_fu_3458_p3 ^ 1'd1);

assign xor_ln786_97_fu_1551_p2 = (1'd1 ^ and_ln786_174_fu_1545_p2);

assign xor_ln786_98_fu_1887_p2 = (1'd1 ^ and_ln786_175_fu_1881_p2);

assign xor_ln786_99_fu_2223_p2 = (1'd1 ^ and_ln786_176_fu_2217_p2);

assign xor_ln786_fu_1215_p2 = (1'd1 ^ and_ln786_173_fu_1209_p2);

assign zext_ln1148_10_fu_2821_p1 = tmp_196_reg_3990;

assign zext_ln1148_11_fu_2840_p1 = tmp_197_fu_2830_p4;

assign zext_ln1148_12_fu_3157_p1 = tmp_198_reg_4037;

assign zext_ln1148_13_fu_3176_p1 = tmp_199_fu_3166_p4;

assign zext_ln1148_14_fu_3354_p1 = tmp_200_fu_3344_p4;

assign zext_ln1148_15_fu_3538_p1 = tmp_201_fu_3528_p4;

assign zext_ln1148_1_fu_1160_p1 = tmp_187_fu_1150_p4;

assign zext_ln1148_2_fu_1477_p1 = tmp_188_reg_3802;

assign zext_ln1148_3_fu_1496_p1 = tmp_189_fu_1486_p4;

assign zext_ln1148_4_fu_1813_p1 = tmp_190_reg_3849;

assign zext_ln1148_5_fu_1832_p1 = tmp_191_fu_1822_p4;

assign zext_ln1148_6_fu_2149_p1 = tmp_192_reg_3896;

assign zext_ln1148_7_fu_2168_p1 = tmp_193_fu_2158_p4;

assign zext_ln1148_8_fu_2485_p1 = tmp_194_reg_3943;

assign zext_ln1148_9_fu_2504_p1 = tmp_195_fu_2494_p4;

assign zext_ln1148_fu_1141_p1 = tmp_186_reg_3755;

assign zext_ln1265_10_fu_956_p1 = add_ln1265_1_fu_951_p2;

assign zext_ln1265_11_fu_968_p1 = tmp_719_fu_960_p3;

assign zext_ln1265_12_fu_1283_p1 = add_ln287_8_fu_1278_p2;

assign zext_ln1265_13_fu_1292_p1 = add_ln1265_3_fu_1287_p2;

assign zext_ln1265_14_fu_1304_p1 = tmp_723_fu_1296_p3;

assign zext_ln1265_15_fu_1029_p1 = add_ln287_1_fu_1024_p2;

assign zext_ln1265_16_fu_1038_p1 = add_ln1265_5_fu_1033_p2;

assign zext_ln1265_17_fu_1619_p1 = add_ln287_2_fu_1614_p2;

assign zext_ln1265_18_fu_1628_p1 = add_ln1265_6_fu_1623_p2;

assign zext_ln1265_19_fu_1640_p1 = tmp_729_fu_1632_p3;

assign zext_ln1265_20_fu_1365_p1 = add_ln287_9_fu_1360_p2;

assign zext_ln1265_21_fu_1374_p1 = add_ln1265_8_fu_1369_p2;

assign zext_ln1265_22_fu_1955_p1 = add_ln287_3_fu_1950_p2;

assign zext_ln1265_23_fu_1964_p1 = add_ln1265_9_fu_1959_p2;

assign zext_ln1265_24_fu_1976_p1 = tmp_735_fu_1968_p3;

assign zext_ln1265_25_fu_1701_p1 = add_ln287_10_fu_1696_p2;

assign zext_ln1265_26_fu_1710_p1 = add_ln1265_11_fu_1705_p2;

assign zext_ln1265_27_fu_2291_p1 = add_ln287_4_fu_2286_p2;

assign zext_ln1265_28_fu_2300_p1 = add_ln1265_12_fu_2295_p2;

assign zext_ln1265_29_fu_2312_p1 = tmp_741_fu_2304_p3;

assign zext_ln1265_30_fu_2037_p1 = add_ln287_11_fu_2032_p2;

assign zext_ln1265_31_fu_2046_p1 = add_ln1265_14_fu_2041_p2;

assign zext_ln1265_32_fu_2627_p1 = add_ln287_5_fu_2622_p2;

assign zext_ln1265_33_fu_2636_p1 = add_ln1265_15_fu_2631_p2;

assign zext_ln1265_34_fu_2648_p1 = tmp_747_fu_2640_p3;

assign zext_ln1265_35_fu_2373_p1 = add_ln287_12_fu_2368_p2;

assign zext_ln1265_36_fu_2382_p1 = add_ln1265_17_fu_2377_p2;

assign zext_ln1265_37_fu_2963_p1 = add_ln287_6_fu_2958_p2;

assign zext_ln1265_38_fu_2972_p1 = add_ln1265_18_fu_2967_p2;

assign zext_ln1265_39_fu_2984_p1 = tmp_753_fu_2976_p3;

assign zext_ln1265_40_fu_2709_p1 = add_ln287_13_fu_2704_p2;

assign zext_ln1265_41_fu_2718_p1 = add_ln1265_20_fu_2713_p2;

assign zext_ln1265_42_fu_3299_p1 = add_ln287_7_fu_3294_p2;

assign zext_ln1265_43_fu_3308_p1 = add_ln1265_21_fu_3303_p2;

assign zext_ln1265_44_fu_3320_p1 = tmp_759_fu_3312_p3;

assign zext_ln1265_45_fu_3045_p1 = add_ln287_14_fu_3040_p2;

assign zext_ln1265_46_fu_3054_p1 = add_ln1265_23_fu_3049_p2;

assign zext_ln1265_47_fu_3416_p1 = add_ln287_15_fu_3411_p2;

assign zext_ln1265_48_fu_3425_p1 = add_ln1265_24_fu_3420_p2;

assign zext_ln1265_8_fu_793_p1 = tmp_184_fu_785_p3;

assign zext_ln1265_9_fu_947_p1 = add_ln287_fu_942_p2;

assign zext_ln1265_fu_781_p1 = tile_0_reg_354;

assign zext_ln203_11_fu_820_p1 = tmp_185_fu_812_p3;

assign zext_ln203_12_fu_851_p1 = i_0_reg_365;

assign zext_ln203_13_fu_860_p1 = add_ln203_7_fu_855_p2;

assign zext_ln203_14_fu_872_p1 = tmp_714_fu_864_p3;

assign zext_ln203_15_fu_887_p1 = add_ln203_9_fu_882_p2;

assign zext_ln203_16_fu_899_p1 = tmp_715_fu_891_p3;

assign zext_ln203_17_fu_3370_p1 = j_0_reg_376;

assign zext_ln203_18_fu_3379_p1 = add_ln203_11_fu_3374_p2;

assign zext_ln203_19_fu_3640_p1 = add_ln203_12_reg_4100;

assign zext_ln203_fu_808_p1 = add_ln293_fu_803_p2;

assign zext_ln278_fu_830_p1 = i_0_reg_365;

assign zext_ln285_1_fu_1262_p1 = ii_0_1_reg_446;

assign zext_ln285_2_fu_1598_p1 = ii_0_2_reg_492;

assign zext_ln285_3_fu_1934_p1 = ii_0_3_reg_538;

assign zext_ln285_4_fu_2270_p1 = ii_0_4_reg_584;

assign zext_ln285_5_fu_2606_p1 = ii_0_5_reg_630;

assign zext_ln285_6_fu_2942_p1 = ii_0_6_reg_676;

assign zext_ln285_7_fu_3278_p1 = ii_0_7_reg_722;

assign zext_ln285_fu_926_p1 = ii_0_0_reg_400;

assign zext_ln286_1_fu_1344_p1 = jj_0_1_reg_469;

assign zext_ln286_2_fu_1680_p1 = jj_0_2_reg_515;

assign zext_ln286_3_fu_2016_p1 = jj_0_3_reg_561;

assign zext_ln286_4_fu_2352_p1 = jj_0_4_reg_607;

assign zext_ln286_5_fu_2688_p1 = jj_0_5_reg_653;

assign zext_ln286_6_fu_3024_p1 = jj_0_6_reg_699;

assign zext_ln286_7_fu_3395_p1 = jj_0_7_reg_745;

assign zext_ln286_fu_1008_p1 = jj_0_0_reg_423;

always @ (posedge ap_clk) begin
    shl_ln287_reg_3700[0] <= 1'b0;
    shl_ln287_1_reg_3730[0] <= 1'b0;
    zext_ln203_18_reg_4095[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln203_19_reg_4128[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
end

endmodule //avgpool_concat
