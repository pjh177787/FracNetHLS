-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity quant_and_pack is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    prior_outputs_0_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    prior_outputs_0_V_ce0 : OUT STD_LOGIC;
    prior_outputs_0_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    prior_outputs_1_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    prior_outputs_1_V_ce0 : OUT STD_LOGIC;
    prior_outputs_1_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    prior_outputs_2_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    prior_outputs_2_V_ce0 : OUT STD_LOGIC;
    prior_outputs_2_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    prior_outputs_3_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    prior_outputs_3_V_ce0 : OUT STD_LOGIC;
    prior_outputs_3_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    prior_outputs_4_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    prior_outputs_4_V_ce0 : OUT STD_LOGIC;
    prior_outputs_4_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    prior_outputs_5_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    prior_outputs_5_V_ce0 : OUT STD_LOGIC;
    prior_outputs_5_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    prior_outputs_6_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    prior_outputs_6_V_ce0 : OUT STD_LOGIC;
    prior_outputs_6_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    prior_outputs_7_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    prior_outputs_7_V_ce0 : OUT STD_LOGIC;
    prior_outputs_7_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    msb_buffer_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    msb_buffer_0_V_ce0 : OUT STD_LOGIC;
    msb_buffer_0_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    msb_buffer_0_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    msb_buffer_0_V_ce1 : OUT STD_LOGIC;
    msb_buffer_0_V_we1 : OUT STD_LOGIC;
    msb_buffer_0_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    lsb_buffer_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    lsb_buffer_V_ce0 : OUT STD_LOGIC;
    lsb_buffer_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    lsb_buffer_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    lsb_buffer_V_ce1 : OUT STD_LOGIC;
    lsb_buffer_V_we1 : OUT STD_LOGIC;
    lsb_buffer_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    H_fmap : IN STD_LOGIC_VECTOR (6 downto 0);
    in_channels : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of quant_and_pack is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten16_reg_272 : STD_LOGIC_VECTOR (14 downto 0);
    signal ch_t_0_reg_283 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_reg_294 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_0_reg_305 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_0_reg_316 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_fu_463_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_reg_1434 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln25_fu_475_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln25_reg_1439 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_481_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_4_reg_1444 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln36_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln36_reg_1449 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_1454 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln34_reg_1454_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_1454_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_1454_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln34_fu_626_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln34_1_fu_667_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln34_1_reg_1463 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln34_2_fu_680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_2_reg_1470 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_2_reg_1470_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_2_reg_1470_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_2_reg_1470_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_3_fu_688_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln34_3_reg_1474 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln34_3_reg_1474_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln34_3_reg_1474_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln34_3_reg_1474_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln34_4_fu_711_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_4_reg_1486 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_4_reg_1486_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_4_reg_1486_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_4_reg_1486_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_5_fu_734_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_5_reg_1490 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_5_reg_1490_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_5_reg_1490_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_5_reg_1490_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_6_fu_757_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_6_reg_1494 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_6_reg_1494_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_6_reg_1494_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_6_reg_1494_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_7_fu_780_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_7_reg_1498 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_7_reg_1498_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_7_reg_1498_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_7_reg_1498_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_8_fu_803_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_8_reg_1502 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_8_reg_1502_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_8_reg_1502_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_8_reg_1502_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_9_fu_826_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_9_reg_1506 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_9_reg_1506_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_9_reg_1506_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_9_reg_1506_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_10_fu_849_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_10_reg_1510 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_10_reg_1510_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_10_reg_1510_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_10_reg_1510_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln35_fu_881_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_reg_1514 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_reg_1514_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_reg_1514_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_1_fu_889_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_1_reg_1520 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_1_reg_1520_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_1_reg_1520_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal col_fu_897_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_2_fu_909_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal prior_outputs_0_V_l_reg_1578 : STD_LOGIC_VECTOR (23 downto 0);
    signal prior_outputs_1_V_l_reg_1583 : STD_LOGIC_VECTOR (23 downto 0);
    signal prior_outputs_2_V_l_reg_1588 : STD_LOGIC_VECTOR (23 downto 0);
    signal prior_outputs_3_V_l_reg_1593 : STD_LOGIC_VECTOR (23 downto 0);
    signal prior_outputs_4_V_l_reg_1598 : STD_LOGIC_VECTOR (23 downto 0);
    signal prior_outputs_5_V_l_reg_1603 : STD_LOGIC_VECTOR (23 downto 0);
    signal prior_outputs_6_V_l_reg_1608 : STD_LOGIC_VECTOR (23 downto 0);
    signal prior_outputs_7_V_l_reg_1613 : STD_LOGIC_VECTOR (23 downto 0);
    signal msb_buffer_0_V_addr_reg_1618 : STD_LOGIC_VECTOR (10 downto 0);
    signal lsb_buffer_V_addr_reg_1624 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal grp_to2bit_fu_415_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_to2bit_fu_421_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_to2bit_fu_427_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_to2bit_fu_433_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_to2bit_fu_439_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_to2bit_fu_445_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_to2bit_fu_451_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_to2bit_fu_457_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_ch_t_0_phi_fu_287_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_row_0_phi_fu_309_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_p_Val2_0_phi_fu_331_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_0_reg_327 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_0_reg_327 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_0_reg_327 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_0_reg_327 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_0_reg_327 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_Val2_1_phi_fu_342_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_1_reg_338 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_1_reg_338 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_1_reg_338 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_1_reg_338 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_1_reg_338 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_Val2_2_phi_fu_353_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_2_reg_349 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_2_reg_349 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_2_reg_349 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_2_reg_349 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_2_reg_349 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_Val2_3_phi_fu_364_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_3_reg_360 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_3_reg_360 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_3_reg_360 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_3_reg_360 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_3_reg_360 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_Val2_4_phi_fu_375_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_4_reg_371 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_4_reg_371 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_4_reg_371 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_4_reg_371 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_4_reg_371 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_Val2_59_phi_fu_386_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_59_reg_382 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_59_reg_382 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_59_reg_382 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_59_reg_382 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_59_reg_382 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_Val2_610_phi_fu_397_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_610_reg_393 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_610_reg_393 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_610_reg_393 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_610_reg_393 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_610_reg_393 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_Val2_7_phi_fu_408_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_7_reg_404 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_7_reg_404 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_7_reg_404 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_7_reg_404 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_7_reg_404 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln40_5_fu_973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln821_17_fu_1014_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln25_fu_475_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln25_fu_475_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln38_fu_495_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal channel_start_fu_499_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln38_fu_507_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln41_fu_516_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_fu_522_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln41_1_fu_531_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_1_fu_537_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln41_2_fu_546_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_2_fu_552_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln41_3_fu_561_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_3_fu_567_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln41_4_fu_576_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_4_fu_582_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln41_5_fu_591_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_5_fu_597_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln41_6_fu_606_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_6_fu_612_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln35_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ch_t_fu_632_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln38_1_fu_651_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal channel_start_mid1_fu_655_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln38_1_fu_663_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln42_8_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_7_fu_696_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_7_fu_702_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln42_9_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_1_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_8_fu_719_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_8_fu_725_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln42_10_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_2_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_9_fu_742_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_9_fu_748_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln42_11_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_3_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_10_fu_765_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_10_fu_771_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln42_12_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_4_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_11_fu_788_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_11_fu_794_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln42_13_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_5_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_12_fu_811_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_12_fu_817_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln42_14_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_6_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_13_fu_834_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_13_fu_840_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln42_15_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_7_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln36_1_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_fu_643_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln34_11_fu_862_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln35_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_fu_869_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln35_1_fu_903_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_920_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln40_fu_917_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln40_1_fu_927_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln40_fu_931_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln35_1_fu_937_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln40_1_fu_940_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln40_2_fu_946_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl1_cast_fu_950_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln40_2_fu_958_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln40_4_fu_964_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln40_3_fu_967_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_fu_988_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln35_fu_985_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln821_16_fu_995_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln821_fu_999_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln40_3_fu_1005_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln821_1_fu_1008_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal xor_ln34_fu_1020_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln34_1_fu_1029_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln34_2_fu_1038_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln34_3_fu_1047_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln34_4_fu_1056_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln34_5_fu_1065_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln34_6_fu_1074_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln34_7_fu_1083_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1096_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln34_fu_1025_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln821_fu_1104_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln821_fu_1092_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln821_1_fu_1118_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_1136_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1108_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_1_fu_1034_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln821_2_fu_1144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln821_1_fu_1132_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1122_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln821_3_fu_1158_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1176_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1148_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_2_fu_1043_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln821_4_fu_1184_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln821_2_fu_1172_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1162_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln821_5_fu_1198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1188_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_3_fu_1052_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln821_6_fu_1224_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln821_3_fu_1212_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1202_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln821_7_fu_1238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1228_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_4_fu_1061_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln821_8_fu_1264_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln821_4_fu_1252_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1242_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln821_9_fu_1278_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_1296_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1268_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_5_fu_1070_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln821_10_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln821_5_fu_1292_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1282_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln821_11_fu_1318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1336_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1308_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_6_fu_1079_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln821_12_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln821_6_fu_1332_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1322_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln821_13_fu_1358_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_1376_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1348_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_7_fu_1088_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln821_14_fu_1384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln821_7_fu_1372_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1362_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln821_15_fu_1399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln25_fu_475_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln25_fu_475_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_condition_157 : BOOLEAN;

    component to2bit IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    grp_to2bit_fu_415 : component to2bit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => prior_outputs_0_V_l_reg_1578,
        ap_return => grp_to2bit_fu_415_ap_return);

    grp_to2bit_fu_421 : component to2bit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => prior_outputs_1_V_l_reg_1583,
        ap_return => grp_to2bit_fu_421_ap_return);

    grp_to2bit_fu_427 : component to2bit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => prior_outputs_2_V_l_reg_1588,
        ap_return => grp_to2bit_fu_427_ap_return);

    grp_to2bit_fu_433 : component to2bit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => prior_outputs_3_V_l_reg_1593,
        ap_return => grp_to2bit_fu_433_ap_return);

    grp_to2bit_fu_439 : component to2bit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => prior_outputs_4_V_l_reg_1598,
        ap_return => grp_to2bit_fu_439_ap_return);

    grp_to2bit_fu_445 : component to2bit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => prior_outputs_5_V_l_reg_1603,
        ap_return => grp_to2bit_fu_445_ap_return);

    grp_to2bit_fu_451 : component to2bit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => prior_outputs_6_V_l_reg_1608,
        ap_return => grp_to2bit_fu_451_ap_return);

    grp_to2bit_fu_457 : component to2bit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => prior_outputs_7_V_l_reg_1613,
        ap_return => grp_to2bit_fu_457_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_Val2_0_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_157)) then
                if (((select_ln34_2_fu_680_p3 = ap_const_lv1_0) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_0_reg_327 <= ap_const_lv2_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_0_reg_327 <= ap_phi_reg_pp0_iter0_p_Val2_0_reg_327;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_Val2_1_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_157)) then
                if (((select_ln34_4_fu_711_p3 = ap_const_lv1_0) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_1_reg_338 <= ap_const_lv2_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_1_reg_338 <= ap_phi_reg_pp0_iter0_p_Val2_1_reg_338;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_Val2_2_reg_349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_157)) then
                if (((select_ln34_5_fu_734_p3 = ap_const_lv1_0) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_2_reg_349 <= ap_const_lv2_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_2_reg_349 <= ap_phi_reg_pp0_iter0_p_Val2_2_reg_349;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_Val2_3_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_157)) then
                if (((select_ln34_6_fu_757_p3 = ap_const_lv1_0) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_3_reg_360 <= ap_const_lv2_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_3_reg_360 <= ap_phi_reg_pp0_iter0_p_Val2_3_reg_360;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_Val2_4_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_157)) then
                if (((select_ln34_7_fu_780_p3 = ap_const_lv1_0) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_4_reg_371 <= ap_const_lv2_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_4_reg_371 <= ap_phi_reg_pp0_iter0_p_Val2_4_reg_371;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_Val2_59_reg_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_157)) then
                if (((select_ln34_8_fu_803_p3 = ap_const_lv1_0) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_59_reg_382 <= ap_const_lv2_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_59_reg_382 <= ap_phi_reg_pp0_iter0_p_Val2_59_reg_382;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_Val2_610_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_157)) then
                if (((select_ln34_9_fu_826_p3 = ap_const_lv1_0) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_610_reg_393 <= ap_const_lv2_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_610_reg_393 <= ap_phi_reg_pp0_iter0_p_Val2_610_reg_393;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_Val2_7_reg_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_157)) then
                if (((select_ln34_10_fu_849_p3 = ap_const_lv1_0) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_7_reg_404 <= ap_const_lv2_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_7_reg_404 <= ap_phi_reg_pp0_iter0_p_Val2_7_reg_404;
                end if;
            end if; 
        end if;
    end process;

    ch_t_0_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_reg_1454 = ap_const_lv1_0))) then 
                ch_t_0_reg_283 <= select_ln34_1_reg_1463;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ch_t_0_reg_283 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    col_0_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                col_0_reg_316 <= col_fu_897_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_0_reg_316 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten16_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                indvar_flatten16_reg_272 <= add_ln34_fu_626_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten16_reg_272 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_294 <= select_ln35_2_fu_909_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_294 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    row_0_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_reg_1454 = ap_const_lv1_0))) then 
                row_0_reg_305 <= select_ln35_1_reg_1520;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_0_reg_305 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_p_Val2_0_reg_327 <= ap_phi_reg_pp0_iter1_p_Val2_0_reg_327;
                ap_phi_reg_pp0_iter2_p_Val2_1_reg_338 <= ap_phi_reg_pp0_iter1_p_Val2_1_reg_338;
                ap_phi_reg_pp0_iter2_p_Val2_2_reg_349 <= ap_phi_reg_pp0_iter1_p_Val2_2_reg_349;
                ap_phi_reg_pp0_iter2_p_Val2_3_reg_360 <= ap_phi_reg_pp0_iter1_p_Val2_3_reg_360;
                ap_phi_reg_pp0_iter2_p_Val2_4_reg_371 <= ap_phi_reg_pp0_iter1_p_Val2_4_reg_371;
                ap_phi_reg_pp0_iter2_p_Val2_59_reg_382 <= ap_phi_reg_pp0_iter1_p_Val2_59_reg_382;
                ap_phi_reg_pp0_iter2_p_Val2_610_reg_393 <= ap_phi_reg_pp0_iter1_p_Val2_610_reg_393;
                ap_phi_reg_pp0_iter2_p_Val2_7_reg_404 <= ap_phi_reg_pp0_iter1_p_Val2_7_reg_404;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_p_Val2_0_reg_327 <= ap_phi_reg_pp0_iter2_p_Val2_0_reg_327;
                ap_phi_reg_pp0_iter3_p_Val2_1_reg_338 <= ap_phi_reg_pp0_iter2_p_Val2_1_reg_338;
                ap_phi_reg_pp0_iter3_p_Val2_2_reg_349 <= ap_phi_reg_pp0_iter2_p_Val2_2_reg_349;
                ap_phi_reg_pp0_iter3_p_Val2_3_reg_360 <= ap_phi_reg_pp0_iter2_p_Val2_3_reg_360;
                ap_phi_reg_pp0_iter3_p_Val2_4_reg_371 <= ap_phi_reg_pp0_iter2_p_Val2_4_reg_371;
                ap_phi_reg_pp0_iter3_p_Val2_59_reg_382 <= ap_phi_reg_pp0_iter2_p_Val2_59_reg_382;
                ap_phi_reg_pp0_iter3_p_Val2_610_reg_393 <= ap_phi_reg_pp0_iter2_p_Val2_610_reg_393;
                ap_phi_reg_pp0_iter3_p_Val2_7_reg_404 <= ap_phi_reg_pp0_iter2_p_Val2_7_reg_404;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_p_Val2_0_reg_327 <= ap_phi_reg_pp0_iter3_p_Val2_0_reg_327;
                ap_phi_reg_pp0_iter4_p_Val2_1_reg_338 <= ap_phi_reg_pp0_iter3_p_Val2_1_reg_338;
                ap_phi_reg_pp0_iter4_p_Val2_2_reg_349 <= ap_phi_reg_pp0_iter3_p_Val2_2_reg_349;
                ap_phi_reg_pp0_iter4_p_Val2_3_reg_360 <= ap_phi_reg_pp0_iter3_p_Val2_3_reg_360;
                ap_phi_reg_pp0_iter4_p_Val2_4_reg_371 <= ap_phi_reg_pp0_iter3_p_Val2_4_reg_371;
                ap_phi_reg_pp0_iter4_p_Val2_59_reg_382 <= ap_phi_reg_pp0_iter3_p_Val2_59_reg_382;
                ap_phi_reg_pp0_iter4_p_Val2_610_reg_393 <= ap_phi_reg_pp0_iter3_p_Val2_610_reg_393;
                ap_phi_reg_pp0_iter4_p_Val2_7_reg_404 <= ap_phi_reg_pp0_iter3_p_Val2_7_reg_404;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                empty_reg_1434 <= empty_fu_463_p1;
                icmp_ln36_reg_1449 <= icmp_ln36_fu_489_p2;
                mul_ln25_reg_1439 <= mul_ln25_fu_475_p2;
                    tmp_4_reg_1444(14 downto 3) <= tmp_4_fu_481_p3(14 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln34_reg_1454 <= icmp_ln34_fu_621_p2;
                icmp_ln34_reg_1454_pp0_iter1_reg <= icmp_ln34_reg_1454;
                select_ln34_10_reg_1510_pp0_iter1_reg <= select_ln34_10_reg_1510;
                select_ln34_2_reg_1470_pp0_iter1_reg <= select_ln34_2_reg_1470;
                    select_ln34_3_reg_1474_pp0_iter1_reg(5 downto 3) <= select_ln34_3_reg_1474(5 downto 3);
                select_ln34_4_reg_1486_pp0_iter1_reg <= select_ln34_4_reg_1486;
                select_ln34_5_reg_1490_pp0_iter1_reg <= select_ln34_5_reg_1490;
                select_ln34_6_reg_1494_pp0_iter1_reg <= select_ln34_6_reg_1494;
                select_ln34_7_reg_1498_pp0_iter1_reg <= select_ln34_7_reg_1498;
                select_ln34_8_reg_1502_pp0_iter1_reg <= select_ln34_8_reg_1502;
                select_ln34_9_reg_1506_pp0_iter1_reg <= select_ln34_9_reg_1506;
                select_ln35_1_reg_1520_pp0_iter1_reg <= select_ln35_1_reg_1520;
                select_ln35_reg_1514_pp0_iter1_reg <= select_ln35_reg_1514;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln34_reg_1454_pp0_iter2_reg <= icmp_ln34_reg_1454_pp0_iter1_reg;
                icmp_ln34_reg_1454_pp0_iter3_reg <= icmp_ln34_reg_1454_pp0_iter2_reg;
                select_ln34_10_reg_1510_pp0_iter2_reg <= select_ln34_10_reg_1510_pp0_iter1_reg;
                select_ln34_10_reg_1510_pp0_iter3_reg <= select_ln34_10_reg_1510_pp0_iter2_reg;
                select_ln34_2_reg_1470_pp0_iter2_reg <= select_ln34_2_reg_1470_pp0_iter1_reg;
                select_ln34_2_reg_1470_pp0_iter3_reg <= select_ln34_2_reg_1470_pp0_iter2_reg;
                    select_ln34_3_reg_1474_pp0_iter2_reg(5 downto 3) <= select_ln34_3_reg_1474_pp0_iter1_reg(5 downto 3);
                    select_ln34_3_reg_1474_pp0_iter3_reg(5 downto 3) <= select_ln34_3_reg_1474_pp0_iter2_reg(5 downto 3);
                select_ln34_4_reg_1486_pp0_iter2_reg <= select_ln34_4_reg_1486_pp0_iter1_reg;
                select_ln34_4_reg_1486_pp0_iter3_reg <= select_ln34_4_reg_1486_pp0_iter2_reg;
                select_ln34_5_reg_1490_pp0_iter2_reg <= select_ln34_5_reg_1490_pp0_iter1_reg;
                select_ln34_5_reg_1490_pp0_iter3_reg <= select_ln34_5_reg_1490_pp0_iter2_reg;
                select_ln34_6_reg_1494_pp0_iter2_reg <= select_ln34_6_reg_1494_pp0_iter1_reg;
                select_ln34_6_reg_1494_pp0_iter3_reg <= select_ln34_6_reg_1494_pp0_iter2_reg;
                select_ln34_7_reg_1498_pp0_iter2_reg <= select_ln34_7_reg_1498_pp0_iter1_reg;
                select_ln34_7_reg_1498_pp0_iter3_reg <= select_ln34_7_reg_1498_pp0_iter2_reg;
                select_ln34_8_reg_1502_pp0_iter2_reg <= select_ln34_8_reg_1502_pp0_iter1_reg;
                select_ln34_8_reg_1502_pp0_iter3_reg <= select_ln34_8_reg_1502_pp0_iter2_reg;
                select_ln34_9_reg_1506_pp0_iter2_reg <= select_ln34_9_reg_1506_pp0_iter1_reg;
                select_ln34_9_reg_1506_pp0_iter3_reg <= select_ln34_9_reg_1506_pp0_iter2_reg;
                select_ln35_1_reg_1520_pp0_iter2_reg <= select_ln35_1_reg_1520_pp0_iter1_reg;
                select_ln35_reg_1514_pp0_iter2_reg <= select_ln35_reg_1514_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_reg_1454_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lsb_buffer_V_addr_reg_1624 <= zext_ln821_17_fu_1014_p1(11 - 1 downto 0);
                msb_buffer_0_V_addr_reg_1618 <= zext_ln821_17_fu_1014_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_reg_1454_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                prior_outputs_0_V_l_reg_1578 <= prior_outputs_0_V_q0;
                prior_outputs_1_V_l_reg_1583 <= prior_outputs_1_V_q0;
                prior_outputs_2_V_l_reg_1588 <= prior_outputs_2_V_q0;
                prior_outputs_3_V_l_reg_1593 <= prior_outputs_3_V_q0;
                prior_outputs_4_V_l_reg_1598 <= prior_outputs_4_V_q0;
                prior_outputs_5_V_l_reg_1603 <= prior_outputs_5_V_q0;
                prior_outputs_6_V_l_reg_1608 <= prior_outputs_6_V_q0;
                prior_outputs_7_V_l_reg_1613 <= prior_outputs_7_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then
                select_ln34_10_reg_1510 <= select_ln34_10_fu_849_p3;
                select_ln34_2_reg_1470 <= select_ln34_2_fu_680_p3;
                    select_ln34_3_reg_1474(5 downto 3) <= select_ln34_3_fu_688_p3(5 downto 3);
                select_ln34_4_reg_1486 <= select_ln34_4_fu_711_p3;
                select_ln34_5_reg_1490 <= select_ln34_5_fu_734_p3;
                select_ln34_6_reg_1494 <= select_ln34_6_fu_757_p3;
                select_ln34_7_reg_1498 <= select_ln34_7_fu_780_p3;
                select_ln34_8_reg_1502 <= select_ln34_8_fu_803_p3;
                select_ln34_9_reg_1506 <= select_ln34_9_fu_826_p3;
                select_ln35_reg_1514 <= select_ln35_fu_881_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln34_fu_621_p2 = ap_const_lv1_0))) then
                select_ln34_1_reg_1463 <= select_ln34_1_fu_667_p3;
                select_ln35_1_reg_1520 <= select_ln35_1_fu_889_p3;
            end if;
        end if;
    end process;
    tmp_4_reg_1444(2 downto 0) <= "000";
    select_ln34_3_reg_1474(2 downto 0) <= "000";
    select_ln34_3_reg_1474_pp0_iter1_reg(2 downto 0) <= "000";
    select_ln34_3_reg_1474_pp0_iter2_reg(2 downto 0) <= "000";
    select_ln34_3_reg_1474_pp0_iter3_reg(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln34_fu_621_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln34_fu_621_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln34_fu_621_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln34_fu_626_p2 <= std_logic_vector(unsigned(ap_const_lv15_1) + unsigned(indvar_flatten16_reg_272));
    add_ln35_1_fu_903_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(indvar_flatten_reg_294));
    add_ln40_1_fu_940_p2 <= std_logic_vector(unsigned(add_ln40_fu_931_p2) + unsigned(zext_ln35_1_fu_937_p1));
    add_ln40_2_fu_958_p2 <= std_logic_vector(unsigned(zext_ln40_2_fu_946_p1) + unsigned(p_shl1_cast_fu_950_p3));
    add_ln40_3_fu_967_p2 <= std_logic_vector(unsigned(add_ln40_2_fu_958_p2) + unsigned(zext_ln40_4_fu_964_p1));
    add_ln40_fu_931_p2 <= std_logic_vector(unsigned(zext_ln40_fu_917_p1) + unsigned(zext_ln40_1_fu_927_p1));
    add_ln821_1_fu_1008_p2 <= std_logic_vector(unsigned(add_ln821_fu_999_p2) + unsigned(zext_ln40_3_fu_1005_p1));
    add_ln821_fu_999_p2 <= std_logic_vector(unsigned(zext_ln35_fu_985_p1) + unsigned(zext_ln821_16_fu_995_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_157_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_157 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln34_fu_621_p2)
    begin
        if ((icmp_ln34_fu_621_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_ch_t_0_phi_fu_287_p4_assign_proc : process(ch_t_0_reg_283, icmp_ln34_reg_1454, ap_CS_fsm_pp0_stage0, select_ln34_1_reg_1463, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln34_reg_1454 = ap_const_lv1_0))) then 
            ap_phi_mux_ch_t_0_phi_fu_287_p4 <= select_ln34_1_reg_1463;
        else 
            ap_phi_mux_ch_t_0_phi_fu_287_p4 <= ch_t_0_reg_283;
        end if; 
    end process;


    ap_phi_mux_p_Val2_0_phi_fu_331_p4_assign_proc : process(icmp_ln34_reg_1454_pp0_iter3_reg, select_ln34_2_reg_1470_pp0_iter3_reg, grp_to2bit_fu_415_ap_return, ap_phi_reg_pp0_iter4_p_Val2_0_reg_327)
    begin
        if (((select_ln34_2_reg_1470_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_0_phi_fu_331_p4 <= grp_to2bit_fu_415_ap_return;
        else 
            ap_phi_mux_p_Val2_0_phi_fu_331_p4 <= ap_phi_reg_pp0_iter4_p_Val2_0_reg_327;
        end if; 
    end process;


    ap_phi_mux_p_Val2_1_phi_fu_342_p4_assign_proc : process(icmp_ln34_reg_1454_pp0_iter3_reg, select_ln34_4_reg_1486_pp0_iter3_reg, grp_to2bit_fu_421_ap_return, ap_phi_reg_pp0_iter4_p_Val2_1_reg_338)
    begin
        if (((select_ln34_4_reg_1486_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_1_phi_fu_342_p4 <= grp_to2bit_fu_421_ap_return;
        else 
            ap_phi_mux_p_Val2_1_phi_fu_342_p4 <= ap_phi_reg_pp0_iter4_p_Val2_1_reg_338;
        end if; 
    end process;


    ap_phi_mux_p_Val2_2_phi_fu_353_p4_assign_proc : process(icmp_ln34_reg_1454_pp0_iter3_reg, select_ln34_5_reg_1490_pp0_iter3_reg, grp_to2bit_fu_427_ap_return, ap_phi_reg_pp0_iter4_p_Val2_2_reg_349)
    begin
        if (((select_ln34_5_reg_1490_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_2_phi_fu_353_p4 <= grp_to2bit_fu_427_ap_return;
        else 
            ap_phi_mux_p_Val2_2_phi_fu_353_p4 <= ap_phi_reg_pp0_iter4_p_Val2_2_reg_349;
        end if; 
    end process;


    ap_phi_mux_p_Val2_3_phi_fu_364_p4_assign_proc : process(icmp_ln34_reg_1454_pp0_iter3_reg, select_ln34_6_reg_1494_pp0_iter3_reg, grp_to2bit_fu_433_ap_return, ap_phi_reg_pp0_iter4_p_Val2_3_reg_360)
    begin
        if (((select_ln34_6_reg_1494_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_3_phi_fu_364_p4 <= grp_to2bit_fu_433_ap_return;
        else 
            ap_phi_mux_p_Val2_3_phi_fu_364_p4 <= ap_phi_reg_pp0_iter4_p_Val2_3_reg_360;
        end if; 
    end process;


    ap_phi_mux_p_Val2_4_phi_fu_375_p4_assign_proc : process(icmp_ln34_reg_1454_pp0_iter3_reg, select_ln34_7_reg_1498_pp0_iter3_reg, grp_to2bit_fu_439_ap_return, ap_phi_reg_pp0_iter4_p_Val2_4_reg_371)
    begin
        if (((select_ln34_7_reg_1498_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_4_phi_fu_375_p4 <= grp_to2bit_fu_439_ap_return;
        else 
            ap_phi_mux_p_Val2_4_phi_fu_375_p4 <= ap_phi_reg_pp0_iter4_p_Val2_4_reg_371;
        end if; 
    end process;


    ap_phi_mux_p_Val2_59_phi_fu_386_p4_assign_proc : process(icmp_ln34_reg_1454_pp0_iter3_reg, select_ln34_8_reg_1502_pp0_iter3_reg, grp_to2bit_fu_445_ap_return, ap_phi_reg_pp0_iter4_p_Val2_59_reg_382)
    begin
        if (((select_ln34_8_reg_1502_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_59_phi_fu_386_p4 <= grp_to2bit_fu_445_ap_return;
        else 
            ap_phi_mux_p_Val2_59_phi_fu_386_p4 <= ap_phi_reg_pp0_iter4_p_Val2_59_reg_382;
        end if; 
    end process;


    ap_phi_mux_p_Val2_610_phi_fu_397_p4_assign_proc : process(icmp_ln34_reg_1454_pp0_iter3_reg, select_ln34_9_reg_1506_pp0_iter3_reg, grp_to2bit_fu_451_ap_return, ap_phi_reg_pp0_iter4_p_Val2_610_reg_393)
    begin
        if (((select_ln34_9_reg_1506_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_610_phi_fu_397_p4 <= grp_to2bit_fu_451_ap_return;
        else 
            ap_phi_mux_p_Val2_610_phi_fu_397_p4 <= ap_phi_reg_pp0_iter4_p_Val2_610_reg_393;
        end if; 
    end process;


    ap_phi_mux_p_Val2_7_phi_fu_408_p4_assign_proc : process(icmp_ln34_reg_1454_pp0_iter3_reg, select_ln34_10_reg_1510_pp0_iter3_reg, grp_to2bit_fu_457_ap_return, ap_phi_reg_pp0_iter4_p_Val2_7_reg_404)
    begin
        if (((select_ln34_10_reg_1510_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_7_phi_fu_408_p4 <= grp_to2bit_fu_457_ap_return;
        else 
            ap_phi_mux_p_Val2_7_phi_fu_408_p4 <= ap_phi_reg_pp0_iter4_p_Val2_7_reg_404;
        end if; 
    end process;


    ap_phi_mux_row_0_phi_fu_309_p4_assign_proc : process(row_0_reg_305, icmp_ln34_reg_1454, ap_CS_fsm_pp0_stage0, select_ln35_1_reg_1520, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln34_reg_1454 = ap_const_lv1_0))) then 
            ap_phi_mux_row_0_phi_fu_309_p4 <= select_ln35_1_reg_1520;
        else 
            ap_phi_mux_row_0_phi_fu_309_p4 <= row_0_reg_305;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_Val2_0_reg_327 <= "XX";
    ap_phi_reg_pp0_iter0_p_Val2_1_reg_338 <= "XX";
    ap_phi_reg_pp0_iter0_p_Val2_2_reg_349 <= "XX";
    ap_phi_reg_pp0_iter0_p_Val2_3_reg_360 <= "XX";
    ap_phi_reg_pp0_iter0_p_Val2_4_reg_371 <= "XX";
    ap_phi_reg_pp0_iter0_p_Val2_59_reg_382 <= "XX";
    ap_phi_reg_pp0_iter0_p_Val2_610_reg_393 <= "XX";
    ap_phi_reg_pp0_iter0_p_Val2_7_reg_404 <= "XX";

    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ch_t_fu_632_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_ch_t_0_phi_fu_287_p4));
    channel_start_fu_499_p3 <= (trunc_ln38_fu_495_p1 & ap_const_lv3_0);
    channel_start_mid1_fu_655_p3 <= (trunc_ln38_1_fu_651_p1 & ap_const_lv3_0);
    col_fu_897_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(select_ln35_fu_881_p3));
    empty_fu_463_p1 <= H_fmap(6 - 1 downto 0);
    icmp_ln34_fu_621_p2 <= "1" when (indvar_flatten16_reg_272 = tmp_4_reg_1444) else "0";
    icmp_ln35_fu_638_p2 <= "1" when (indvar_flatten_reg_294 = mul_ln25_reg_1439) else "0";
    icmp_ln36_1_fu_857_p2 <= "1" when (col_0_reg_316 = empty_reg_1434) else "0";
    icmp_ln36_fu_489_p2 <= "1" when (empty_fu_463_p1 = ap_const_lv6_0) else "0";
    icmp_ln42_10_fu_729_p2 <= "1" when (signed(zext_ln41_8_fu_725_p1) < signed(in_channels)) else "0";
    icmp_ln42_11_fu_752_p2 <= "1" when (signed(zext_ln41_9_fu_748_p1) < signed(in_channels)) else "0";
    icmp_ln42_12_fu_775_p2 <= "1" when (signed(zext_ln41_10_fu_771_p1) < signed(in_channels)) else "0";
    icmp_ln42_13_fu_798_p2 <= "1" when (signed(zext_ln41_11_fu_794_p1) < signed(in_channels)) else "0";
    icmp_ln42_14_fu_821_p2 <= "1" when (signed(zext_ln41_12_fu_817_p1) < signed(in_channels)) else "0";
    icmp_ln42_15_fu_844_p2 <= "1" when (signed(zext_ln41_13_fu_840_p1) < signed(in_channels)) else "0";
    icmp_ln42_1_fu_526_p2 <= "1" when (signed(zext_ln41_fu_522_p1) < signed(in_channels)) else "0";
    icmp_ln42_2_fu_541_p2 <= "1" when (signed(zext_ln41_1_fu_537_p1) < signed(in_channels)) else "0";
    icmp_ln42_3_fu_556_p2 <= "1" when (signed(zext_ln41_2_fu_552_p1) < signed(in_channels)) else "0";
    icmp_ln42_4_fu_571_p2 <= "1" when (signed(zext_ln41_3_fu_567_p1) < signed(in_channels)) else "0";
    icmp_ln42_5_fu_586_p2 <= "1" when (signed(zext_ln41_4_fu_582_p1) < signed(in_channels)) else "0";
    icmp_ln42_6_fu_601_p2 <= "1" when (signed(zext_ln41_5_fu_597_p1) < signed(in_channels)) else "0";
    icmp_ln42_7_fu_616_p2 <= "1" when (signed(zext_ln41_6_fu_612_p1) < signed(in_channels)) else "0";
    icmp_ln42_8_fu_675_p2 <= "1" when (signed(zext_ln38_1_fu_663_p1) < signed(in_channels)) else "0";
    icmp_ln42_9_fu_706_p2 <= "1" when (signed(zext_ln41_7_fu_702_p1) < signed(in_channels)) else "0";
    icmp_ln42_fu_511_p2 <= "1" when (signed(zext_ln38_fu_507_p1) < signed(in_channels)) else "0";
    lsb_buffer_V_address0 <= zext_ln821_17_fu_1014_p1(11 - 1 downto 0);
    lsb_buffer_V_address1 <= lsb_buffer_V_addr_reg_1624;

    lsb_buffer_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lsb_buffer_V_ce0 <= ap_const_logic_1;
        else 
            lsb_buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lsb_buffer_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lsb_buffer_V_ce1 <= ap_const_logic_1;
        else 
            lsb_buffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    
    lsb_buffer_V_d1_proc : process(tmp_29_fu_1362_p4, zext_ln34_7_fu_1088_p1, zext_ln821_15_fu_1399_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        lsb_buffer_V_d1 <= tmp_29_fu_1362_p4;
        if to_integer(unsigned(zext_ln34_7_fu_1088_p1)) >= tmp_29_fu_1362_p4'low and to_integer(unsigned(zext_ln34_7_fu_1088_p1)) <= tmp_29_fu_1362_p4'high then
            result(0) := '0';
            for i in zext_ln821_15_fu_1399_p1'range loop
                result(0) := result(0) or zext_ln821_15_fu_1399_p1(i);
            end loop;
            lsb_buffer_V_d1(to_integer(unsigned(zext_ln34_7_fu_1088_p1))) <= result(0);
        end if;
    end process;


    lsb_buffer_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln34_reg_1454_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lsb_buffer_V_we1 <= ap_const_logic_1;
        else 
            lsb_buffer_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    msb_buffer_0_V_address0 <= zext_ln821_17_fu_1014_p1(11 - 1 downto 0);
    msb_buffer_0_V_address1 <= msb_buffer_0_V_addr_reg_1618;

    msb_buffer_0_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            msb_buffer_0_V_ce0 <= ap_const_logic_1;
        else 
            msb_buffer_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    msb_buffer_0_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            msb_buffer_0_V_ce1 <= ap_const_logic_1;
        else 
            msb_buffer_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    
    msb_buffer_0_V_d1_proc : process(tmp_28_fu_1348_p4, zext_ln34_7_fu_1088_p1, zext_ln821_14_fu_1384_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        msb_buffer_0_V_d1 <= tmp_28_fu_1348_p4;
        if to_integer(unsigned(zext_ln34_7_fu_1088_p1)) >= tmp_28_fu_1348_p4'low and to_integer(unsigned(zext_ln34_7_fu_1088_p1)) <= tmp_28_fu_1348_p4'high then
            result(0) := '0';
            for i in zext_ln821_14_fu_1384_p1'range loop
                result(0) := result(0) or zext_ln821_14_fu_1384_p1(i);
            end loop;
            msb_buffer_0_V_d1(to_integer(unsigned(zext_ln34_7_fu_1088_p1))) <= result(0);
        end if;
    end process;


    msb_buffer_0_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln34_reg_1454_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln34_reg_1454_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            msb_buffer_0_V_we1 <= ap_const_logic_1;
        else 
            msb_buffer_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln25_fu_475_p0 <= mul_ln25_fu_475_p00(7 - 1 downto 0);
    mul_ln25_fu_475_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(H_fmap),12));
    mul_ln25_fu_475_p1 <= mul_ln25_fu_475_p10(6 - 1 downto 0);
    mul_ln25_fu_475_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_463_p1),12));
    mul_ln25_fu_475_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln25_fu_475_p0) * unsigned(mul_ln25_fu_475_p1), 12));
    or_ln35_fu_875_p2 <= (select_ln34_11_fu_862_p3 or icmp_ln35_fu_638_p2);
    or_ln41_10_fu_765_p2 <= (channel_start_mid1_fu_655_p3 or ap_const_lv6_4);
    or_ln41_11_fu_788_p2 <= (channel_start_mid1_fu_655_p3 or ap_const_lv6_5);
    or_ln41_12_fu_811_p2 <= (channel_start_mid1_fu_655_p3 or ap_const_lv6_6);
    or_ln41_13_fu_834_p2 <= (channel_start_mid1_fu_655_p3 or ap_const_lv6_7);
    or_ln41_1_fu_531_p2 <= (channel_start_fu_499_p3 or ap_const_lv6_2);
    or_ln41_2_fu_546_p2 <= (channel_start_fu_499_p3 or ap_const_lv6_3);
    or_ln41_3_fu_561_p2 <= (channel_start_fu_499_p3 or ap_const_lv6_4);
    or_ln41_4_fu_576_p2 <= (channel_start_fu_499_p3 or ap_const_lv6_5);
    or_ln41_5_fu_591_p2 <= (channel_start_fu_499_p3 or ap_const_lv6_6);
    or_ln41_6_fu_606_p2 <= (channel_start_fu_499_p3 or ap_const_lv6_7);
    or_ln41_7_fu_696_p2 <= (channel_start_mid1_fu_655_p3 or ap_const_lv6_1);
    or_ln41_8_fu_719_p2 <= (channel_start_mid1_fu_655_p3 or ap_const_lv6_2);
    or_ln41_9_fu_742_p2 <= (channel_start_mid1_fu_655_p3 or ap_const_lv6_3);
    or_ln41_fu_516_p2 <= (channel_start_fu_499_p3 or ap_const_lv6_1);
    p_shl1_cast_fu_950_p3 <= (add_ln40_1_fu_940_p2 & ap_const_lv5_0);
    prior_outputs_0_V_address0 <= zext_ln40_5_fu_973_p1(14 - 1 downto 0);

    prior_outputs_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            prior_outputs_0_V_ce0 <= ap_const_logic_1;
        else 
            prior_outputs_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prior_outputs_1_V_address0 <= zext_ln40_5_fu_973_p1(14 - 1 downto 0);

    prior_outputs_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            prior_outputs_1_V_ce0 <= ap_const_logic_1;
        else 
            prior_outputs_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prior_outputs_2_V_address0 <= zext_ln40_5_fu_973_p1(14 - 1 downto 0);

    prior_outputs_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            prior_outputs_2_V_ce0 <= ap_const_logic_1;
        else 
            prior_outputs_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prior_outputs_3_V_address0 <= zext_ln40_5_fu_973_p1(14 - 1 downto 0);

    prior_outputs_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            prior_outputs_3_V_ce0 <= ap_const_logic_1;
        else 
            prior_outputs_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prior_outputs_4_V_address0 <= zext_ln40_5_fu_973_p1(14 - 1 downto 0);

    prior_outputs_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            prior_outputs_4_V_ce0 <= ap_const_logic_1;
        else 
            prior_outputs_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prior_outputs_5_V_address0 <= zext_ln40_5_fu_973_p1(14 - 1 downto 0);

    prior_outputs_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            prior_outputs_5_V_ce0 <= ap_const_logic_1;
        else 
            prior_outputs_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prior_outputs_6_V_address0 <= zext_ln40_5_fu_973_p1(14 - 1 downto 0);

    prior_outputs_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            prior_outputs_6_V_ce0 <= ap_const_logic_1;
        else 
            prior_outputs_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prior_outputs_7_V_address0 <= zext_ln40_5_fu_973_p1(14 - 1 downto 0);

    prior_outputs_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            prior_outputs_7_V_ce0 <= ap_const_logic_1;
        else 
            prior_outputs_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    row_fu_869_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(select_ln34_fu_643_p3));
    select_ln34_10_fu_849_p3 <= 
        icmp_ln42_15_fu_844_p2 when (icmp_ln35_fu_638_p2(0) = '1') else 
        icmp_ln42_7_fu_616_p2;
    select_ln34_11_fu_862_p3 <= 
        icmp_ln36_reg_1449 when (icmp_ln35_fu_638_p2(0) = '1') else 
        icmp_ln36_1_fu_857_p2;
    select_ln34_1_fu_667_p3 <= 
        ch_t_fu_632_p2 when (icmp_ln35_fu_638_p2(0) = '1') else 
        ap_phi_mux_ch_t_0_phi_fu_287_p4;
    select_ln34_2_fu_680_p3 <= 
        icmp_ln42_8_fu_675_p2 when (icmp_ln35_fu_638_p2(0) = '1') else 
        icmp_ln42_fu_511_p2;
    select_ln34_3_fu_688_p3 <= 
        channel_start_mid1_fu_655_p3 when (icmp_ln35_fu_638_p2(0) = '1') else 
        channel_start_fu_499_p3;
    select_ln34_4_fu_711_p3 <= 
        icmp_ln42_9_fu_706_p2 when (icmp_ln35_fu_638_p2(0) = '1') else 
        icmp_ln42_1_fu_526_p2;
    select_ln34_5_fu_734_p3 <= 
        icmp_ln42_10_fu_729_p2 when (icmp_ln35_fu_638_p2(0) = '1') else 
        icmp_ln42_2_fu_541_p2;
    select_ln34_6_fu_757_p3 <= 
        icmp_ln42_11_fu_752_p2 when (icmp_ln35_fu_638_p2(0) = '1') else 
        icmp_ln42_3_fu_556_p2;
    select_ln34_7_fu_780_p3 <= 
        icmp_ln42_12_fu_775_p2 when (icmp_ln35_fu_638_p2(0) = '1') else 
        icmp_ln42_4_fu_571_p2;
    select_ln34_8_fu_803_p3 <= 
        icmp_ln42_13_fu_798_p2 when (icmp_ln35_fu_638_p2(0) = '1') else 
        icmp_ln42_5_fu_586_p2;
    select_ln34_9_fu_826_p3 <= 
        icmp_ln42_14_fu_821_p2 when (icmp_ln35_fu_638_p2(0) = '1') else 
        icmp_ln42_6_fu_601_p2;
    select_ln34_fu_643_p3 <= 
        ap_const_lv6_0 when (icmp_ln35_fu_638_p2(0) = '1') else 
        ap_phi_mux_row_0_phi_fu_309_p4;
    select_ln35_1_fu_889_p3 <= 
        row_fu_869_p2 when (select_ln34_11_fu_862_p3(0) = '1') else 
        select_ln34_fu_643_p3;
    select_ln35_2_fu_909_p3 <= 
        ap_const_lv12_1 when (icmp_ln35_fu_638_p2(0) = '1') else 
        add_ln35_1_fu_903_p2;
    select_ln35_fu_881_p3 <= 
        ap_const_lv6_0 when (or_ln35_fu_875_p2(0) = '1') else 
        col_0_reg_316;
    
    tmp_10_fu_1108_p4_proc : process(msb_buffer_0_V_q0, zext_ln34_fu_1025_p1, zext_ln821_fu_1104_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_10_fu_1108_p4 <= msb_buffer_0_V_q0;
        if to_integer(unsigned(zext_ln34_fu_1025_p1)) >= msb_buffer_0_V_q0'low and to_integer(unsigned(zext_ln34_fu_1025_p1)) <= msb_buffer_0_V_q0'high then
            result(0) := '0';
            for i in zext_ln821_fu_1104_p1'range loop
                result(0) := result(0) or zext_ln821_fu_1104_p1(i);
            end loop;
            tmp_10_fu_1108_p4(to_integer(unsigned(zext_ln34_fu_1025_p1))) <= result(0);
        end if;
    end process;

    
    tmp_11_fu_1122_p4_proc : process(lsb_buffer_V_q0, zext_ln34_fu_1025_p1, zext_ln821_1_fu_1118_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_11_fu_1122_p4 <= lsb_buffer_V_q0;
        if to_integer(unsigned(zext_ln34_fu_1025_p1)) >= lsb_buffer_V_q0'low and to_integer(unsigned(zext_ln34_fu_1025_p1)) <= lsb_buffer_V_q0'high then
            result(0) := '0';
            for i in zext_ln821_1_fu_1118_p1'range loop
                result(0) := result(0) or zext_ln821_1_fu_1118_p1(i);
            end loop;
            tmp_11_fu_1122_p4(to_integer(unsigned(zext_ln34_fu_1025_p1))) <= result(0);
        end if;
    end process;

    tmp_12_fu_1136_p3 <= ap_phi_mux_p_Val2_1_phi_fu_342_p4(1 downto 1);
    
    tmp_13_fu_1148_p4_proc : process(tmp_10_fu_1108_p4, zext_ln34_1_fu_1034_p1, zext_ln821_2_fu_1144_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_13_fu_1148_p4 <= tmp_10_fu_1108_p4;
        if to_integer(unsigned(zext_ln34_1_fu_1034_p1)) >= tmp_10_fu_1108_p4'low and to_integer(unsigned(zext_ln34_1_fu_1034_p1)) <= tmp_10_fu_1108_p4'high then
            result(0) := '0';
            for i in zext_ln821_2_fu_1144_p1'range loop
                result(0) := result(0) or zext_ln821_2_fu_1144_p1(i);
            end loop;
            tmp_13_fu_1148_p4(to_integer(unsigned(zext_ln34_1_fu_1034_p1))) <= result(0);
        end if;
    end process;

    
    tmp_14_fu_1162_p4_proc : process(tmp_11_fu_1122_p4, zext_ln34_1_fu_1034_p1, zext_ln821_3_fu_1158_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_14_fu_1162_p4 <= tmp_11_fu_1122_p4;
        if to_integer(unsigned(zext_ln34_1_fu_1034_p1)) >= tmp_11_fu_1122_p4'low and to_integer(unsigned(zext_ln34_1_fu_1034_p1)) <= tmp_11_fu_1122_p4'high then
            result(0) := '0';
            for i in zext_ln821_3_fu_1158_p1'range loop
                result(0) := result(0) or zext_ln821_3_fu_1158_p1(i);
            end loop;
            tmp_14_fu_1162_p4(to_integer(unsigned(zext_ln34_1_fu_1034_p1))) <= result(0);
        end if;
    end process;

    tmp_15_fu_1176_p3 <= ap_phi_mux_p_Val2_2_phi_fu_353_p4(1 downto 1);
    
    tmp_16_fu_1188_p4_proc : process(tmp_13_fu_1148_p4, zext_ln34_2_fu_1043_p1, zext_ln821_4_fu_1184_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_16_fu_1188_p4 <= tmp_13_fu_1148_p4;
        if to_integer(unsigned(zext_ln34_2_fu_1043_p1)) >= tmp_13_fu_1148_p4'low and to_integer(unsigned(zext_ln34_2_fu_1043_p1)) <= tmp_13_fu_1148_p4'high then
            result(0) := '0';
            for i in zext_ln821_4_fu_1184_p1'range loop
                result(0) := result(0) or zext_ln821_4_fu_1184_p1(i);
            end loop;
            tmp_16_fu_1188_p4(to_integer(unsigned(zext_ln34_2_fu_1043_p1))) <= result(0);
        end if;
    end process;

    
    tmp_17_fu_1202_p4_proc : process(tmp_14_fu_1162_p4, zext_ln34_2_fu_1043_p1, zext_ln821_5_fu_1198_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_17_fu_1202_p4 <= tmp_14_fu_1162_p4;
        if to_integer(unsigned(zext_ln34_2_fu_1043_p1)) >= tmp_14_fu_1162_p4'low and to_integer(unsigned(zext_ln34_2_fu_1043_p1)) <= tmp_14_fu_1162_p4'high then
            result(0) := '0';
            for i in zext_ln821_5_fu_1198_p1'range loop
                result(0) := result(0) or zext_ln821_5_fu_1198_p1(i);
            end loop;
            tmp_17_fu_1202_p4(to_integer(unsigned(zext_ln34_2_fu_1043_p1))) <= result(0);
        end if;
    end process;

    tmp_18_fu_1216_p3 <= ap_phi_mux_p_Val2_3_phi_fu_364_p4(1 downto 1);
    
    tmp_19_fu_1228_p4_proc : process(tmp_16_fu_1188_p4, zext_ln34_3_fu_1052_p1, zext_ln821_6_fu_1224_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_19_fu_1228_p4 <= tmp_16_fu_1188_p4;
        if to_integer(unsigned(zext_ln34_3_fu_1052_p1)) >= tmp_16_fu_1188_p4'low and to_integer(unsigned(zext_ln34_3_fu_1052_p1)) <= tmp_16_fu_1188_p4'high then
            result(0) := '0';
            for i in zext_ln821_6_fu_1224_p1'range loop
                result(0) := result(0) or zext_ln821_6_fu_1224_p1(i);
            end loop;
            tmp_19_fu_1228_p4(to_integer(unsigned(zext_ln34_3_fu_1052_p1))) <= result(0);
        end if;
    end process;

    
    tmp_20_fu_1242_p4_proc : process(tmp_17_fu_1202_p4, zext_ln34_3_fu_1052_p1, zext_ln821_7_fu_1238_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_20_fu_1242_p4 <= tmp_17_fu_1202_p4;
        if to_integer(unsigned(zext_ln34_3_fu_1052_p1)) >= tmp_17_fu_1202_p4'low and to_integer(unsigned(zext_ln34_3_fu_1052_p1)) <= tmp_17_fu_1202_p4'high then
            result(0) := '0';
            for i in zext_ln821_7_fu_1238_p1'range loop
                result(0) := result(0) or zext_ln821_7_fu_1238_p1(i);
            end loop;
            tmp_20_fu_1242_p4(to_integer(unsigned(zext_ln34_3_fu_1052_p1))) <= result(0);
        end if;
    end process;

    tmp_21_fu_1256_p3 <= ap_phi_mux_p_Val2_4_phi_fu_375_p4(1 downto 1);
    
    tmp_22_fu_1268_p4_proc : process(tmp_19_fu_1228_p4, zext_ln34_4_fu_1061_p1, zext_ln821_8_fu_1264_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_22_fu_1268_p4 <= tmp_19_fu_1228_p4;
        if to_integer(unsigned(zext_ln34_4_fu_1061_p1)) >= tmp_19_fu_1228_p4'low and to_integer(unsigned(zext_ln34_4_fu_1061_p1)) <= tmp_19_fu_1228_p4'high then
            result(0) := '0';
            for i in zext_ln821_8_fu_1264_p1'range loop
                result(0) := result(0) or zext_ln821_8_fu_1264_p1(i);
            end loop;
            tmp_22_fu_1268_p4(to_integer(unsigned(zext_ln34_4_fu_1061_p1))) <= result(0);
        end if;
    end process;

    
    tmp_23_fu_1282_p4_proc : process(tmp_20_fu_1242_p4, zext_ln34_4_fu_1061_p1, zext_ln821_9_fu_1278_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_23_fu_1282_p4 <= tmp_20_fu_1242_p4;
        if to_integer(unsigned(zext_ln34_4_fu_1061_p1)) >= tmp_20_fu_1242_p4'low and to_integer(unsigned(zext_ln34_4_fu_1061_p1)) <= tmp_20_fu_1242_p4'high then
            result(0) := '0';
            for i in zext_ln821_9_fu_1278_p1'range loop
                result(0) := result(0) or zext_ln821_9_fu_1278_p1(i);
            end loop;
            tmp_23_fu_1282_p4(to_integer(unsigned(zext_ln34_4_fu_1061_p1))) <= result(0);
        end if;
    end process;

    tmp_24_fu_1296_p3 <= ap_phi_mux_p_Val2_59_phi_fu_386_p4(1 downto 1);
    
    tmp_25_fu_1308_p4_proc : process(tmp_22_fu_1268_p4, zext_ln34_5_fu_1070_p1, zext_ln821_10_fu_1304_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_25_fu_1308_p4 <= tmp_22_fu_1268_p4;
        if to_integer(unsigned(zext_ln34_5_fu_1070_p1)) >= tmp_22_fu_1268_p4'low and to_integer(unsigned(zext_ln34_5_fu_1070_p1)) <= tmp_22_fu_1268_p4'high then
            result(0) := '0';
            for i in zext_ln821_10_fu_1304_p1'range loop
                result(0) := result(0) or zext_ln821_10_fu_1304_p1(i);
            end loop;
            tmp_25_fu_1308_p4(to_integer(unsigned(zext_ln34_5_fu_1070_p1))) <= result(0);
        end if;
    end process;

    
    tmp_26_fu_1322_p4_proc : process(tmp_23_fu_1282_p4, zext_ln34_5_fu_1070_p1, zext_ln821_11_fu_1318_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_26_fu_1322_p4 <= tmp_23_fu_1282_p4;
        if to_integer(unsigned(zext_ln34_5_fu_1070_p1)) >= tmp_23_fu_1282_p4'low and to_integer(unsigned(zext_ln34_5_fu_1070_p1)) <= tmp_23_fu_1282_p4'high then
            result(0) := '0';
            for i in zext_ln821_11_fu_1318_p1'range loop
                result(0) := result(0) or zext_ln821_11_fu_1318_p1(i);
            end loop;
            tmp_26_fu_1322_p4(to_integer(unsigned(zext_ln34_5_fu_1070_p1))) <= result(0);
        end if;
    end process;

    tmp_27_fu_1336_p3 <= ap_phi_mux_p_Val2_610_phi_fu_397_p4(1 downto 1);
    
    tmp_28_fu_1348_p4_proc : process(tmp_25_fu_1308_p4, zext_ln34_6_fu_1079_p1, zext_ln821_12_fu_1344_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_28_fu_1348_p4 <= tmp_25_fu_1308_p4;
        if to_integer(unsigned(zext_ln34_6_fu_1079_p1)) >= tmp_25_fu_1308_p4'low and to_integer(unsigned(zext_ln34_6_fu_1079_p1)) <= tmp_25_fu_1308_p4'high then
            result(0) := '0';
            for i in zext_ln821_12_fu_1344_p1'range loop
                result(0) := result(0) or zext_ln821_12_fu_1344_p1(i);
            end loop;
            tmp_28_fu_1348_p4(to_integer(unsigned(zext_ln34_6_fu_1079_p1))) <= result(0);
        end if;
    end process;

    
    tmp_29_fu_1362_p4_proc : process(tmp_26_fu_1322_p4, zext_ln34_6_fu_1079_p1, zext_ln821_13_fu_1358_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_29_fu_1362_p4 <= tmp_26_fu_1322_p4;
        if to_integer(unsigned(zext_ln34_6_fu_1079_p1)) >= tmp_26_fu_1322_p4'low and to_integer(unsigned(zext_ln34_6_fu_1079_p1)) <= tmp_26_fu_1322_p4'high then
            result(0) := '0';
            for i in zext_ln821_13_fu_1358_p1'range loop
                result(0) := result(0) or zext_ln821_13_fu_1358_p1(i);
            end loop;
            tmp_29_fu_1362_p4(to_integer(unsigned(zext_ln34_6_fu_1079_p1))) <= result(0);
        end if;
    end process;

    tmp_30_fu_1376_p3 <= ap_phi_mux_p_Val2_7_phi_fu_408_p4(1 downto 1);
    tmp_4_fu_481_p3 <= (mul_ln25_fu_475_p2 & ap_const_lv3_0);
    tmp_7_fu_920_p3 <= (select_ln34_1_reg_1463 & ap_const_lv5_0);
    tmp_8_fu_988_p3 <= (select_ln35_1_reg_1520_pp0_iter2_reg & ap_const_lv5_0);
    tmp_9_fu_1096_p3 <= ap_phi_mux_p_Val2_0_phi_fu_331_p4(1 downto 1);
    trunc_ln38_1_fu_651_p1 <= ch_t_fu_632_p2(3 - 1 downto 0);
    trunc_ln38_fu_495_p1 <= ap_phi_mux_ch_t_0_phi_fu_287_p4(3 - 1 downto 0);
    trunc_ln821_1_fu_1132_p1 <= ap_phi_mux_p_Val2_1_phi_fu_342_p4(1 - 1 downto 0);
    trunc_ln821_2_fu_1172_p1 <= ap_phi_mux_p_Val2_2_phi_fu_353_p4(1 - 1 downto 0);
    trunc_ln821_3_fu_1212_p1 <= ap_phi_mux_p_Val2_3_phi_fu_364_p4(1 - 1 downto 0);
    trunc_ln821_4_fu_1252_p1 <= ap_phi_mux_p_Val2_4_phi_fu_375_p4(1 - 1 downto 0);
    trunc_ln821_5_fu_1292_p1 <= ap_phi_mux_p_Val2_59_phi_fu_386_p4(1 - 1 downto 0);
    trunc_ln821_6_fu_1332_p1 <= ap_phi_mux_p_Val2_610_phi_fu_397_p4(1 - 1 downto 0);
    trunc_ln821_7_fu_1372_p1 <= ap_phi_mux_p_Val2_7_phi_fu_408_p4(1 - 1 downto 0);
    trunc_ln821_fu_1092_p1 <= ap_phi_mux_p_Val2_0_phi_fu_331_p4(1 - 1 downto 0);
    xor_ln34_1_fu_1029_p2 <= (select_ln34_3_reg_1474_pp0_iter3_reg xor ap_const_lv6_3E);
    xor_ln34_2_fu_1038_p2 <= (select_ln34_3_reg_1474_pp0_iter3_reg xor ap_const_lv6_3D);
    xor_ln34_3_fu_1047_p2 <= (select_ln34_3_reg_1474_pp0_iter3_reg xor ap_const_lv6_3C);
    xor_ln34_4_fu_1056_p2 <= (select_ln34_3_reg_1474_pp0_iter3_reg xor ap_const_lv6_3B);
    xor_ln34_5_fu_1065_p2 <= (select_ln34_3_reg_1474_pp0_iter3_reg xor ap_const_lv6_3A);
    xor_ln34_6_fu_1074_p2 <= (select_ln34_3_reg_1474_pp0_iter3_reg xor ap_const_lv6_39);
    xor_ln34_7_fu_1083_p2 <= (select_ln34_3_reg_1474_pp0_iter3_reg xor ap_const_lv6_38);
    xor_ln34_fu_1020_p2 <= (select_ln34_3_reg_1474_pp0_iter3_reg xor ap_const_lv6_3F);
    zext_ln34_1_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln34_1_fu_1029_p2),32));
    zext_ln34_2_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln34_2_fu_1038_p2),32));
    zext_ln34_3_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln34_3_fu_1047_p2),32));
    zext_ln34_4_fu_1061_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln34_4_fu_1056_p2),32));
    zext_ln34_5_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln34_5_fu_1065_p2),32));
    zext_ln34_6_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln34_6_fu_1074_p2),32));
    zext_ln34_7_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln34_7_fu_1083_p2),32));
    zext_ln34_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln34_fu_1020_p2),32));
    zext_ln35_1_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_1_reg_1520),10));
    zext_ln35_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_1_reg_1520_pp0_iter2_reg),12));
    zext_ln38_1_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(channel_start_mid1_fu_655_p3),8));
    zext_ln38_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(channel_start_fu_499_p3),8));
    zext_ln40_1_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_920_p3),10));
    zext_ln40_2_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_1_fu_940_p2),15));
    zext_ln40_3_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_reg_1514_pp0_iter2_reg),12));
    zext_ln40_4_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_reg_1514),15));
    zext_ln40_5_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_3_fu_967_p2),64));
    zext_ln40_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln34_1_reg_1463),10));
    zext_ln41_10_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_10_fu_765_p2),8));
    zext_ln41_11_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_11_fu_788_p2),8));
    zext_ln41_12_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_12_fu_811_p2),8));
    zext_ln41_13_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_13_fu_834_p2),8));
    zext_ln41_1_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_1_fu_531_p2),8));
    zext_ln41_2_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_2_fu_546_p2),8));
    zext_ln41_3_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_3_fu_561_p2),8));
    zext_ln41_4_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_4_fu_576_p2),8));
    zext_ln41_5_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_5_fu_591_p2),8));
    zext_ln41_6_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_6_fu_606_p2),8));
    zext_ln41_7_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_7_fu_696_p2),8));
    zext_ln41_8_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_8_fu_719_p2),8));
    zext_ln41_9_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_9_fu_742_p2),8));
    zext_ln41_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_fu_516_p2),8));
    zext_ln821_10_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_1296_p3),64));
    zext_ln821_11_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln821_5_fu_1292_p1),64));
    zext_ln821_12_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1336_p3),64));
    zext_ln821_13_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln821_6_fu_1332_p1),64));
    zext_ln821_14_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_1376_p3),64));
    zext_ln821_15_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln821_7_fu_1372_p1),64));
    zext_ln821_16_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_988_p3),12));
    zext_ln821_17_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln821_1_fu_1008_p2),64));
    zext_ln821_1_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln821_fu_1092_p1),64));
    zext_ln821_2_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1136_p3),64));
    zext_ln821_3_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln821_1_fu_1132_p1),64));
    zext_ln821_4_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1176_p3),64));
    zext_ln821_5_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln821_2_fu_1172_p1),64));
    zext_ln821_6_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_1216_p3),64));
    zext_ln821_7_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln821_3_fu_1212_p1),64));
    zext_ln821_8_fu_1264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1256_p3),64));
    zext_ln821_9_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln821_4_fu_1252_p1),64));
    zext_ln821_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1096_p3),64));
end behav;
