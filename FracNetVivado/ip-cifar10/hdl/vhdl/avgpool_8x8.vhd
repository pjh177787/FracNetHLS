-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity avgpool_8x8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inputs_0_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    inputs_0_V_ce0 : OUT STD_LOGIC;
    inputs_0_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    inputs_1_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    inputs_1_V_ce0 : OUT STD_LOGIC;
    inputs_1_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    inputs_2_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    inputs_2_V_ce0 : OUT STD_LOGIC;
    inputs_2_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    inputs_3_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    inputs_3_V_ce0 : OUT STD_LOGIC;
    inputs_3_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    inputs_4_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    inputs_4_V_ce0 : OUT STD_LOGIC;
    inputs_4_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    inputs_5_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    inputs_5_V_ce0 : OUT STD_LOGIC;
    inputs_5_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    inputs_6_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    inputs_6_V_ce0 : OUT STD_LOGIC;
    inputs_6_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    inputs_7_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    inputs_7_V_ce0 : OUT STD_LOGIC;
    inputs_7_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    outputs_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    outputs_V_ce0 : OUT STD_LOGIC;
    outputs_V_we0 : OUT STD_LOGIC;
    outputs_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of avgpool_8x8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv24_7FFFFF : STD_LOGIC_VECTOR (23 downto 0) := "011111111111111111111111";
    constant ap_const_lv24_800000 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv40_FFFFC00001 : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111110000000000000000000001";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten29_reg_441 : STD_LOGIC_VECTOR (9 downto 0);
    signal c0_0_reg_452 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_reg_463 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_0_reg_474 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_0_reg_485 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_0_reg_496 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_0_reg_496_pp1_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state7_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal c_0_reg_496_pp1_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln313_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_reg_1622 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln313_reg_1622_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln313_fu_514_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln313_reg_1626 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln320_1_fu_540_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln320_1_reg_1631 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln323_fu_578_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln323_reg_1639 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln323_1_fu_586_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln323_1_reg_1645 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln314_fu_600_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln314_reg_1651 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal j_fu_676_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_1696 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_0_V_addr_1_reg_1701 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_V_addr_reg_1706 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_V_addr_reg_1711 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_V_addr_reg_1716 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_V_addr_reg_1721 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_V_addr_reg_1726 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_V_addr_reg_1731 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_V_addr_reg_1736 : STD_LOGIC_VECTOR (2 downto 0);
    signal inputs_0_V_load_reg_1741 : STD_LOGIC_VECTOR (23 downto 0);
    signal inputs_1_V_load_reg_1747 : STD_LOGIC_VECTOR (23 downto 0);
    signal inputs_2_V_load_reg_1753 : STD_LOGIC_VECTOR (23 downto 0);
    signal inputs_3_V_load_reg_1759 : STD_LOGIC_VECTOR (23 downto 0);
    signal inputs_4_V_load_reg_1765 : STD_LOGIC_VECTOR (23 downto 0);
    signal inputs_5_V_load_reg_1771 : STD_LOGIC_VECTOR (23 downto 0);
    signal inputs_6_V_load_reg_1777 : STD_LOGIC_VECTOR (23 downto 0);
    signal inputs_7_V_load_reg_1783 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln331_fu_1404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln331_reg_1789 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln331_reg_1789_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln331_reg_1789_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal c_fu_1410_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_reg_1793 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_780_reg_1838 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_202_reg_1843 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_203_reg_1848 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_s_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1853 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1853_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1148_fu_1524_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal select_ln1148_reg_1859 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_2_reg_1864 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_782_reg_1870 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state7 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal tmp_0_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_0_V_ce0 : STD_LOGIC;
    signal tmp_0_V_we0 : STD_LOGIC;
    signal tmp_0_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_V_ce0 : STD_LOGIC;
    signal tmp_1_V_we0 : STD_LOGIC;
    signal tmp_1_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_V_ce0 : STD_LOGIC;
    signal tmp_2_V_we0 : STD_LOGIC;
    signal tmp_2_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_V_ce0 : STD_LOGIC;
    signal tmp_3_V_we0 : STD_LOGIC;
    signal tmp_3_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_V_ce0 : STD_LOGIC;
    signal tmp_4_V_we0 : STD_LOGIC;
    signal tmp_4_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_V_ce0 : STD_LOGIC;
    signal tmp_5_V_we0 : STD_LOGIC;
    signal tmp_5_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_V_ce0 : STD_LOGIC;
    signal tmp_6_V_we0 : STD_LOGIC;
    signal tmp_6_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_7_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_V_ce0 : STD_LOGIC;
    signal tmp_7_V_we0 : STD_LOGIC;
    signal tmp_7_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_7_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_indvar_flatten29_phi_fu_445_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_c0_0_phi_fu_456_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_467_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_i_0_phi_fu_478_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_j_0_phi_fu_489_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_c_0_phi_fu_500_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal zext_ln1265_52_fu_664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln320_fu_681_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_1_fu_1426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_fu_1547_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln340_185_fu_772_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln314_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c0_fu_520_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln315_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln320_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln320_fu_532_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln320_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln323_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_566_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln314_1_fu_594_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_611_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1265_fu_608_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1265_49_fu_618_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1265_fu_622_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln323_fu_628_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1265_25_fu_631_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1265_50_fu_637_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl_cast_fu_641_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1265_26_fu_649_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1265_51_fu_655_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1265_27_fu_658_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_fu_692_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_fu_692_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_55_fu_696_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_fu_699_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_0_0_V_fu_713_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_0_V_fu_713_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_765_fu_718_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_764_fu_705_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_97_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_47_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_229_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_89_fu_756_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_0_V_1_fu_764_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_56_fu_781_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_56_fu_781_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_57_fu_785_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_71_fu_788_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_0_1_V_1_fu_802_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_1_V_1_fu_802_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_767_fu_807_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_766_fu_794_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_98_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_49_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_48_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_173_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_230_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_90_fu_845_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_1_V_2_fu_853_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_58_fu_870_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_58_fu_870_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_59_fu_874_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_72_fu_877_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_0_2_V_1_fu_891_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_2_V_1_fu_891_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_769_fu_896_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_768_fu_883_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_99_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_51_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_50_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_174_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_231_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_91_fu_934_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_2_V_2_fu_942_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_60_fu_959_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_60_fu_959_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_61_fu_963_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_73_fu_966_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_0_3_V_1_fu_980_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_3_V_1_fu_980_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_771_fu_985_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_770_fu_972_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_100_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_53_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_52_fu_1005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_175_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_232_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_92_fu_1023_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_3_V_2_fu_1031_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_62_fu_1048_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_62_fu_1048_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_63_fu_1052_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_74_fu_1055_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_0_4_V_1_fu_1069_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_4_V_1_fu_1069_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_773_fu_1074_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_772_fu_1061_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_101_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_55_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_54_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_176_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_233_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_93_fu_1112_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_4_V_2_fu_1120_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_64_fu_1137_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_64_fu_1137_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_65_fu_1141_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_75_fu_1144_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_0_5_V_1_fu_1158_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_5_V_1_fu_1158_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_775_fu_1163_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_774_fu_1150_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_102_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_57_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_56_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_177_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_234_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_94_fu_1201_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_5_V_2_fu_1209_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_66_fu_1226_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_66_fu_1226_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_67_fu_1230_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_76_fu_1233_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_0_6_V_1_fu_1247_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_6_V_1_fu_1247_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_777_fu_1252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_776_fu_1239_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_103_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_59_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_58_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_178_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_235_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_95_fu_1290_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_6_V_2_fu_1298_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_68_fu_1315_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_68_fu_1315_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_69_fu_1319_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_77_fu_1322_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_0_7_V_1_fu_1336_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_7_V_1_fu_1336_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_779_fu_1341_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_778_fu_1328_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_104_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_61_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_60_fu_1361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_179_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_236_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_96_fu_1379_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_0_7_V_2_fu_1387_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln333_1_fu_1416_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_s_fu_1442_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_s_fu_1442_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal t_V_fu_1464_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln1148_fu_1480_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal zext_ln1148_fu_1512_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1148_16_fu_1515_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1148_16_fu_1521_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal or_ln785_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_1559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_181_fu_1570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_1580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_fu_1552_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln340_237_fu_1591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1597_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln388_fu_1605_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component FracNet_T_mux_83_bJp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        din3 : IN STD_LOGIC_VECTOR (23 downto 0);
        din4 : IN STD_LOGIC_VECTOR (23 downto 0);
        din5 : IN STD_LOGIC_VECTOR (23 downto 0);
        din6 : IN STD_LOGIC_VECTOR (23 downto 0);
        din7 : IN STD_LOGIC_VECTOR (23 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component avgpool_8x8_tmp_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    tmp_0_V_U : component avgpool_8x8_tmp_0_V
    generic map (
        DataWidth => 24,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_0_V_address0,
        ce0 => tmp_0_V_ce0,
        we0 => tmp_0_V_we0,
        d0 => tmp_0_V_d0,
        q0 => tmp_0_V_q0);

    tmp_1_V_U : component avgpool_8x8_tmp_0_V
    generic map (
        DataWidth => 24,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_1_V_address0,
        ce0 => tmp_1_V_ce0,
        we0 => tmp_1_V_we0,
        d0 => tmp_1_V_d0,
        q0 => tmp_1_V_q0);

    tmp_2_V_U : component avgpool_8x8_tmp_0_V
    generic map (
        DataWidth => 24,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_2_V_address0,
        ce0 => tmp_2_V_ce0,
        we0 => tmp_2_V_we0,
        d0 => tmp_2_V_d0,
        q0 => tmp_2_V_q0);

    tmp_3_V_U : component avgpool_8x8_tmp_0_V
    generic map (
        DataWidth => 24,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_3_V_address0,
        ce0 => tmp_3_V_ce0,
        we0 => tmp_3_V_we0,
        d0 => tmp_3_V_d0,
        q0 => tmp_3_V_q0);

    tmp_4_V_U : component avgpool_8x8_tmp_0_V
    generic map (
        DataWidth => 24,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_4_V_address0,
        ce0 => tmp_4_V_ce0,
        we0 => tmp_4_V_we0,
        d0 => tmp_4_V_d0,
        q0 => tmp_4_V_q0);

    tmp_5_V_U : component avgpool_8x8_tmp_0_V
    generic map (
        DataWidth => 24,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_5_V_address0,
        ce0 => tmp_5_V_ce0,
        we0 => tmp_5_V_we0,
        d0 => tmp_5_V_d0,
        q0 => tmp_5_V_q0);

    tmp_6_V_U : component avgpool_8x8_tmp_0_V
    generic map (
        DataWidth => 24,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_6_V_address0,
        ce0 => tmp_6_V_ce0,
        we0 => tmp_6_V_we0,
        d0 => tmp_6_V_d0,
        q0 => tmp_6_V_q0);

    tmp_7_V_U : component avgpool_8x8_tmp_0_V
    generic map (
        DataWidth => 24,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_7_V_address0,
        ce0 => tmp_7_V_ce0,
        we0 => tmp_7_V_we0,
        d0 => tmp_7_V_d0,
        q0 => tmp_7_V_q0);

    FracNet_T_mux_83_bJp_U278 : component FracNet_T_mux_83_bJp
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 24,
        din4_WIDTH => 24,
        din5_WIDTH => 24,
        din6_WIDTH => 24,
        din7_WIDTH => 24,
        din8_WIDTH => 3,
        dout_WIDTH => 24)
    port map (
        din0 => tmp_0_V_q0,
        din1 => tmp_1_V_q0,
        din2 => tmp_2_V_q0,
        din3 => tmp_3_V_q0,
        din4 => tmp_4_V_q0,
        din5 => tmp_5_V_q0,
        din6 => tmp_6_V_q0,
        din7 => tmp_7_V_q0,
        din8 => p_Val2_s_fu_1442_p9,
        dout => p_Val2_s_fu_1442_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state7);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c0_0_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
                c0_0_reg_452 <= select_ln320_1_reg_1631;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c0_0_reg_452 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    c_0_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                c_0_reg_496 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln331_reg_1789 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                c_0_reg_496 <= c_reg_1793;
            end if; 
        end if;
    end process;

    i_0_reg_474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
                i_0_reg_474 <= select_ln323_1_reg_1645;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_474 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten29_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
                indvar_flatten29_reg_441 <= add_ln313_reg_1626;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten29_reg_441 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
                indvar_flatten_reg_463 <= select_ln314_reg_1651;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_463 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    j_0_reg_485_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
                j_0_reg_485 <= j_reg_1696;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_0_reg_485 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln313_reg_1626 <= add_ln313_fu_514_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                c_0_reg_496_pp1_iter1_reg <= c_0_reg_496;
                icmp_ln331_reg_1789 <= icmp_ln331_fu_1404_p2;
                icmp_ln331_reg_1789_pp1_iter1_reg <= icmp_ln331_reg_1789;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                c_0_reg_496_pp1_iter2_reg <= c_0_reg_496_pp1_iter1_reg;
                icmp_ln331_reg_1789_pp1_iter2_reg <= icmp_ln331_reg_1789_pp1_iter1_reg;
                p_Result_s_reg_1853_pp1_iter2_reg <= p_Result_s_reg_1853;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                c_reg_1793 <= c_fu_1410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln313_reg_1622 <= icmp_ln313_fu_508_p2;
                icmp_ln313_reg_1622_pp0_iter1_reg <= icmp_ln313_reg_1622;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then
                inputs_0_V_load_reg_1741 <= inputs_0_V_q0;
                inputs_1_V_load_reg_1747 <= inputs_1_V_q0;
                inputs_2_V_load_reg_1753 <= inputs_2_V_q0;
                inputs_3_V_load_reg_1759 <= inputs_3_V_q0;
                inputs_4_V_load_reg_1765 <= inputs_4_V_q0;
                inputs_5_V_load_reg_1771 <= inputs_5_V_q0;
                inputs_6_V_load_reg_1777 <= inputs_6_V_q0;
                inputs_7_V_load_reg_1783 <= inputs_7_V_q0;
                tmp_0_V_addr_1_reg_1701 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
                tmp_1_V_addr_reg_1706 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
                tmp_2_V_addr_reg_1711 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
                tmp_3_V_addr_reg_1716 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
                tmp_4_V_addr_reg_1721 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
                tmp_5_V_addr_reg_1726 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
                tmp_6_V_addr_reg_1731 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
                tmp_7_V_addr_reg_1736 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then
                j_reg_1696 <= j_fu_676_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln331_reg_1789_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_Result_2_reg_1864 <= select_ln1148_fu_1524_p3(18 downto 18);
                select_ln1148_reg_1859 <= select_ln1148_fu_1524_p3;
                tmp_782_reg_1870 <= select_ln1148_fu_1524_p3(18 downto 18);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln331_reg_1789 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_Result_s_reg_1853 <= p_Result_s_fu_1506_p2;
                tmp_202_reg_1843 <= sub_ln1148_fu_1480_p2(39 downto 22);
                tmp_203_reg_1848 <= p_Val2_s_fu_1442_p10(23 downto 6);
                tmp_780_reg_1838 <= p_Val2_s_fu_1442_p10(23 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_fu_508_p2 = ap_const_lv1_0))) then
                select_ln314_reg_1651 <= select_ln314_fu_600_p3;
                select_ln320_1_reg_1631 <= select_ln320_1_fu_540_p3;
                select_ln323_1_reg_1645 <= select_ln323_1_fu_586_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_fu_508_p2 = ap_const_lv1_0))) then
                select_ln323_reg_1639 <= select_ln323_fu_578_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln313_fu_508_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln331_fu_1404_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln313_fu_508_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln313_fu_508_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln331_fu_1404_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln331_fu_1404_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln1192_71_fu_788_p2 <= std_logic_vector(signed(sext_ln703_56_fu_781_p1) + signed(sext_ln703_57_fu_785_p1));
    add_ln1192_72_fu_877_p2 <= std_logic_vector(signed(sext_ln703_58_fu_870_p1) + signed(sext_ln703_59_fu_874_p1));
    add_ln1192_73_fu_966_p2 <= std_logic_vector(signed(sext_ln703_60_fu_959_p1) + signed(sext_ln703_61_fu_963_p1));
    add_ln1192_74_fu_1055_p2 <= std_logic_vector(signed(sext_ln703_62_fu_1048_p1) + signed(sext_ln703_63_fu_1052_p1));
    add_ln1192_75_fu_1144_p2 <= std_logic_vector(signed(sext_ln703_64_fu_1137_p1) + signed(sext_ln703_65_fu_1141_p1));
    add_ln1192_76_fu_1233_p2 <= std_logic_vector(signed(sext_ln703_66_fu_1226_p1) + signed(sext_ln703_67_fu_1230_p1));
    add_ln1192_77_fu_1322_p2 <= std_logic_vector(signed(sext_ln703_68_fu_1315_p1) + signed(sext_ln703_69_fu_1319_p1));
    add_ln1192_fu_699_p2 <= std_logic_vector(signed(sext_ln703_fu_692_p1) + signed(sext_ln703_55_fu_696_p1));
    add_ln1265_25_fu_631_p2 <= std_logic_vector(unsigned(add_ln1265_fu_622_p2) + unsigned(zext_ln323_fu_628_p1));
    add_ln1265_26_fu_649_p2 <= std_logic_vector(unsigned(zext_ln1265_50_fu_637_p1) + unsigned(p_shl_cast_fu_641_p3));
    add_ln1265_27_fu_658_p2 <= std_logic_vector(unsigned(add_ln1265_26_fu_649_p2) + unsigned(zext_ln1265_51_fu_655_p1));
    add_ln1265_fu_622_p2 <= std_logic_vector(unsigned(zext_ln1265_fu_608_p1) + unsigned(zext_ln1265_49_fu_618_p1));
    add_ln313_fu_514_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten29_phi_fu_445_p4) + unsigned(ap_const_lv10_1));
    add_ln314_1_fu_594_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_467_p4) + unsigned(ap_const_lv8_1));
    and_ln320_fu_560_p2 <= (xor_ln320_fu_548_p2 and icmp_ln315_fu_554_p2);
    and_ln786_173_fu_821_p2 <= (xor_ln786_98_fu_815_p2 and tmp_766_fu_794_p3);
    and_ln786_174_fu_910_p2 <= (xor_ln786_99_fu_904_p2 and tmp_768_fu_883_p3);
    and_ln786_175_fu_999_p2 <= (xor_ln786_100_fu_993_p2 and tmp_770_fu_972_p3);
    and_ln786_176_fu_1088_p2 <= (xor_ln786_101_fu_1082_p2 and tmp_772_fu_1061_p3);
    and_ln786_177_fu_1177_p2 <= (xor_ln786_102_fu_1171_p2 and tmp_774_fu_1150_p3);
    and_ln786_178_fu_1266_p2 <= (xor_ln786_103_fu_1260_p2 and tmp_776_fu_1239_p3);
    and_ln786_179_fu_1355_p2 <= (xor_ln786_104_fu_1349_p2 and tmp_778_fu_1328_p3);
    and_ln786_181_fu_1570_p2 <= (tmp_782_reg_1870 and p_Result_2_reg_1864);
    and_ln786_fu_732_p2 <= (xor_ln786_97_fu_726_p2 and tmp_764_fu_705_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(5);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln313_fu_508_p2)
    begin
        if ((icmp_ln313_fu_508_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state7_assign_proc : process(icmp_ln331_fu_1404_p2)
    begin
        if ((icmp_ln331_fu_1404_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c0_0_phi_fu_456_p4_assign_proc : process(c0_0_reg_452, icmp_ln313_reg_1622, ap_CS_fsm_pp0_stage0, select_ln320_1_reg_1631, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
            ap_phi_mux_c0_0_phi_fu_456_p4 <= select_ln320_1_reg_1631;
        else 
            ap_phi_mux_c0_0_phi_fu_456_p4 <= c0_0_reg_452;
        end if; 
    end process;


    ap_phi_mux_c_0_phi_fu_500_p4_assign_proc : process(c_0_reg_496, ap_CS_fsm_pp1_stage0, icmp_ln331_reg_1789, c_reg_1793, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln331_reg_1789 = ap_const_lv1_0))) then 
            ap_phi_mux_c_0_phi_fu_500_p4 <= c_reg_1793;
        else 
            ap_phi_mux_c_0_phi_fu_500_p4 <= c_0_reg_496;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_478_p4_assign_proc : process(i_0_reg_474, icmp_ln313_reg_1622, ap_CS_fsm_pp0_stage0, select_ln323_1_reg_1645, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
            ap_phi_mux_i_0_phi_fu_478_p4 <= select_ln323_1_reg_1645;
        else 
            ap_phi_mux_i_0_phi_fu_478_p4 <= i_0_reg_474;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten29_phi_fu_445_p4_assign_proc : process(indvar_flatten29_reg_441, icmp_ln313_reg_1622, ap_CS_fsm_pp0_stage0, add_ln313_reg_1626, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten29_phi_fu_445_p4 <= add_ln313_reg_1626;
        else 
            ap_phi_mux_indvar_flatten29_phi_fu_445_p4 <= indvar_flatten29_reg_441;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_467_p4_assign_proc : process(indvar_flatten_reg_463, icmp_ln313_reg_1622, ap_CS_fsm_pp0_stage0, select_ln314_reg_1651, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_467_p4 <= select_ln314_reg_1651;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_467_p4 <= indvar_flatten_reg_463;
        end if; 
    end process;


    ap_phi_mux_j_0_phi_fu_489_p4_assign_proc : process(j_0_reg_485, icmp_ln313_reg_1622, ap_CS_fsm_pp0_stage0, j_reg_1696, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln313_reg_1622 = ap_const_lv1_0))) then 
            ap_phi_mux_j_0_phi_fu_489_p4 <= j_reg_1696;
        else 
            ap_phi_mux_j_0_phi_fu_489_p4 <= j_0_reg_485;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c0_fu_520_p2 <= std_logic_vector(unsigned(ap_phi_mux_c0_0_phi_fu_456_p4) + unsigned(ap_const_lv4_1));
    c_fu_1410_p2 <= std_logic_vector(unsigned(ap_phi_mux_c_0_phi_fu_500_p4) + unsigned(ap_const_lv7_1));
    i_fu_566_p2 <= std_logic_vector(unsigned(select_ln320_fu_532_p3) + unsigned(ap_const_lv4_1));
    icmp_ln313_fu_508_p2 <= "1" when (ap_phi_mux_indvar_flatten29_phi_fu_445_p4 = ap_const_lv10_200) else "0";
    icmp_ln314_fu_526_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_467_p4 = ap_const_lv8_40) else "0";
    icmp_ln315_fu_554_p2 <= "1" when (ap_phi_mux_j_0_phi_fu_489_p4 = ap_const_lv4_8) else "0";
    icmp_ln331_fu_1404_p2 <= "1" when (ap_phi_mux_c_0_phi_fu_500_p4 = ap_const_lv7_40) else "0";
    inputs_0_V_address0 <= zext_ln1265_52_fu_664_p1(14 - 1 downto 0);

    inputs_0_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputs_0_V_ce0 <= ap_const_logic_1;
        else 
            inputs_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_1_V_address0 <= zext_ln1265_52_fu_664_p1(14 - 1 downto 0);

    inputs_1_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputs_1_V_ce0 <= ap_const_logic_1;
        else 
            inputs_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_2_V_address0 <= zext_ln1265_52_fu_664_p1(14 - 1 downto 0);

    inputs_2_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputs_2_V_ce0 <= ap_const_logic_1;
        else 
            inputs_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_3_V_address0 <= zext_ln1265_52_fu_664_p1(14 - 1 downto 0);

    inputs_3_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputs_3_V_ce0 <= ap_const_logic_1;
        else 
            inputs_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_4_V_address0 <= zext_ln1265_52_fu_664_p1(14 - 1 downto 0);

    inputs_4_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputs_4_V_ce0 <= ap_const_logic_1;
        else 
            inputs_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_5_V_address0 <= zext_ln1265_52_fu_664_p1(14 - 1 downto 0);

    inputs_5_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputs_5_V_ce0 <= ap_const_logic_1;
        else 
            inputs_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_6_V_address0 <= zext_ln1265_52_fu_664_p1(14 - 1 downto 0);

    inputs_6_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputs_6_V_ce0 <= ap_const_logic_1;
        else 
            inputs_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inputs_7_V_address0 <= zext_ln1265_52_fu_664_p1(14 - 1 downto 0);

    inputs_7_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputs_7_V_ce0 <= ap_const_logic_1;
        else 
            inputs_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_676_p2 <= std_logic_vector(unsigned(select_ln323_reg_1639) + unsigned(ap_const_lv4_1));
    or_ln323_fu_572_p2 <= (icmp_ln314_fu_526_p2 or and_ln320_fu_560_p2);
    or_ln340_229_fu_750_p2 <= (xor_ln340_47_fu_744_p2 or tmp_765_fu_718_p3);
    or_ln340_230_fu_839_p2 <= (xor_ln340_49_fu_833_p2 or tmp_767_fu_807_p3);
    or_ln340_231_fu_928_p2 <= (xor_ln340_51_fu_922_p2 or tmp_769_fu_896_p3);
    or_ln340_232_fu_1017_p2 <= (xor_ln340_53_fu_1011_p2 or tmp_771_fu_985_p3);
    or_ln340_233_fu_1106_p2 <= (xor_ln340_55_fu_1100_p2 or tmp_773_fu_1074_p3);
    or_ln340_234_fu_1195_p2 <= (xor_ln340_57_fu_1189_p2 or tmp_775_fu_1163_p3);
    or_ln340_235_fu_1284_p2 <= (xor_ln340_59_fu_1278_p2 or tmp_777_fu_1252_p3);
    or_ln340_236_fu_1373_p2 <= (xor_ln340_61_fu_1367_p2 or tmp_779_fu_1341_p3);
    or_ln340_237_fu_1591_p2 <= (xor_ln785_fu_1559_p2 or and_ln786_181_fu_1570_p2);
    or_ln340_fu_1585_p2 <= (underflow_fu_1580_p2 or overflow_fu_1564_p2);
    or_ln785_fu_1555_p2 <= (tmp_782_reg_1870 or p_Result_2_reg_1864);
    outputs_V_address0 <= zext_ln333_fu_1547_p1(6 - 1 downto 0);

    outputs_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            outputs_V_ce0 <= ap_const_logic_1;
        else 
            outputs_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    outputs_V_d0 <= 
        select_ln340_fu_1597_p3 when (or_ln340_237_fu_1591_p2(0) = '1') else 
        select_ln388_fu_1605_p3;

    outputs_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln331_reg_1789_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln331_reg_1789_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            outputs_V_we0 <= ap_const_logic_1;
        else 
            outputs_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    overflow_fu_1564_p2 <= (xor_ln785_fu_1559_p2 and or_ln785_fu_1555_p2);
    p_Result_s_fu_1506_p2 <= "1" when (signed(t_V_fu_1464_p3) < signed(ap_const_lv40_FFFFC00001)) else "0";
        p_Val2_5_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1148_reg_1859),24));

    p_Val2_s_fu_1442_p9 <= c_0_reg_496(3 - 1 downto 0);
    p_shl_cast_fu_641_p3 <= (add_ln1265_25_fu_631_p2 & ap_const_lv5_0);
    select_ln1148_fu_1524_p3 <= 
        sub_ln1148_16_fu_1515_p2 when (tmp_780_reg_1838(0) = '1') else 
        zext_ln1148_16_fu_1521_p1;
    select_ln314_fu_600_p3 <= 
        ap_const_lv8_1 when (icmp_ln314_fu_526_p2(0) = '1') else 
        add_ln314_1_fu_594_p2;
    select_ln320_1_fu_540_p3 <= 
        c0_fu_520_p2 when (icmp_ln314_fu_526_p2(0) = '1') else 
        ap_phi_mux_c0_0_phi_fu_456_p4;
    select_ln320_fu_532_p3 <= 
        ap_const_lv4_0 when (icmp_ln314_fu_526_p2(0) = '1') else 
        ap_phi_mux_i_0_phi_fu_478_p4;
    select_ln323_1_fu_586_p3 <= 
        i_fu_566_p2 when (and_ln320_fu_560_p2(0) = '1') else 
        select_ln320_fu_532_p3;
    select_ln323_fu_578_p3 <= 
        ap_const_lv4_0 when (or_ln323_fu_572_p2(0) = '1') else 
        ap_phi_mux_j_0_phi_fu_489_p4;
    select_ln340_185_fu_772_p3 <= 
        select_ln340_89_fu_756_p3 when (or_ln340_229_fu_750_p2(0) = '1') else 
        tmp_0_0_V_1_fu_764_p3;
    select_ln340_89_fu_756_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_fu_738_p2(0) = '1') else 
        tmp_0_0_V_fu_713_p2;
    select_ln340_90_fu_845_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_48_fu_827_p2(0) = '1') else 
        tmp_0_1_V_1_fu_802_p2;
    select_ln340_91_fu_934_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_50_fu_916_p2(0) = '1') else 
        tmp_0_2_V_1_fu_891_p2;
    select_ln340_92_fu_1023_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_52_fu_1005_p2(0) = '1') else 
        tmp_0_3_V_1_fu_980_p2;
    select_ln340_93_fu_1112_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_54_fu_1094_p2(0) = '1') else 
        tmp_0_4_V_1_fu_1069_p2;
    select_ln340_94_fu_1201_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_56_fu_1183_p2(0) = '1') else 
        tmp_0_5_V_1_fu_1158_p2;
    select_ln340_95_fu_1290_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_58_fu_1272_p2(0) = '1') else 
        tmp_0_6_V_1_fu_1247_p2;
    select_ln340_96_fu_1379_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_60_fu_1361_p2(0) = '1') else 
        tmp_0_7_V_1_fu_1336_p2;
    select_ln340_fu_1597_p3 <= 
        ap_const_lv24_7FFFFF when (or_ln340_fu_1585_p2(0) = '1') else 
        p_Val2_5_fu_1552_p1;
    select_ln388_fu_1605_p3 <= 
        ap_const_lv24_800000 when (underflow_fu_1580_p2(0) = '1') else 
        p_Val2_5_fu_1552_p1;
        sext_ln703_55_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inputs_0_V_load_reg_1741),25));

    sext_ln703_56_fu_781_p0 <= tmp_1_V_q0;
        sext_ln703_56_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_56_fu_781_p0),25));

        sext_ln703_57_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inputs_1_V_load_reg_1747),25));

    sext_ln703_58_fu_870_p0 <= tmp_2_V_q0;
        sext_ln703_58_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_58_fu_870_p0),25));

        sext_ln703_59_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inputs_2_V_load_reg_1753),25));

    sext_ln703_60_fu_959_p0 <= tmp_3_V_q0;
        sext_ln703_60_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_60_fu_959_p0),25));

        sext_ln703_61_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inputs_3_V_load_reg_1759),25));

    sext_ln703_62_fu_1048_p0 <= tmp_4_V_q0;
        sext_ln703_62_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_62_fu_1048_p0),25));

        sext_ln703_63_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inputs_4_V_load_reg_1765),25));

    sext_ln703_64_fu_1137_p0 <= tmp_5_V_q0;
        sext_ln703_64_fu_1137_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_64_fu_1137_p0),25));

        sext_ln703_65_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inputs_5_V_load_reg_1771),25));

    sext_ln703_66_fu_1226_p0 <= tmp_6_V_q0;
        sext_ln703_66_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_66_fu_1226_p0),25));

        sext_ln703_67_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inputs_6_V_load_reg_1777),25));

    sext_ln703_68_fu_1315_p0 <= tmp_7_V_q0;
        sext_ln703_68_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_68_fu_1315_p0),25));

        sext_ln703_69_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inputs_7_V_load_reg_1783),25));

    sext_ln703_fu_692_p0 <= tmp_0_V_q0;
        sext_ln703_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_fu_692_p0),25));

    sub_ln1148_16_fu_1515_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(zext_ln1148_fu_1512_p1));
    sub_ln1148_fu_1480_p2 <= std_logic_vector(unsigned(ap_const_lv40_0) - unsigned(t_V_fu_1464_p3));
    t_V_fu_1464_p3 <= (p_Val2_s_fu_1442_p10 & ap_const_lv16_0);
    tmp_0_0_V_1_fu_764_p3 <= 
        ap_const_lv24_800000 when (and_ln786_fu_732_p2(0) = '1') else 
        tmp_0_0_V_fu_713_p2;
    tmp_0_0_V_fu_713_p1 <= tmp_0_V_q0;
    tmp_0_0_V_fu_713_p2 <= std_logic_vector(signed(inputs_0_V_load_reg_1741) + signed(tmp_0_0_V_fu_713_p1));
    tmp_0_1_V_1_fu_802_p1 <= tmp_1_V_q0;
    tmp_0_1_V_1_fu_802_p2 <= std_logic_vector(signed(inputs_1_V_load_reg_1747) + signed(tmp_0_1_V_1_fu_802_p1));
    tmp_0_1_V_2_fu_853_p3 <= 
        ap_const_lv24_800000 when (and_ln786_173_fu_821_p2(0) = '1') else 
        tmp_0_1_V_1_fu_802_p2;
    tmp_0_2_V_1_fu_891_p1 <= tmp_2_V_q0;
    tmp_0_2_V_1_fu_891_p2 <= std_logic_vector(signed(inputs_2_V_load_reg_1753) + signed(tmp_0_2_V_1_fu_891_p1));
    tmp_0_2_V_2_fu_942_p3 <= 
        ap_const_lv24_800000 when (and_ln786_174_fu_910_p2(0) = '1') else 
        tmp_0_2_V_1_fu_891_p2;
    tmp_0_3_V_1_fu_980_p1 <= tmp_3_V_q0;
    tmp_0_3_V_1_fu_980_p2 <= std_logic_vector(signed(inputs_3_V_load_reg_1759) + signed(tmp_0_3_V_1_fu_980_p1));
    tmp_0_3_V_2_fu_1031_p3 <= 
        ap_const_lv24_800000 when (and_ln786_175_fu_999_p2(0) = '1') else 
        tmp_0_3_V_1_fu_980_p2;
    tmp_0_4_V_1_fu_1069_p1 <= tmp_4_V_q0;
    tmp_0_4_V_1_fu_1069_p2 <= std_logic_vector(signed(inputs_4_V_load_reg_1765) + signed(tmp_0_4_V_1_fu_1069_p1));
    tmp_0_4_V_2_fu_1120_p3 <= 
        ap_const_lv24_800000 when (and_ln786_176_fu_1088_p2(0) = '1') else 
        tmp_0_4_V_1_fu_1069_p2;
    tmp_0_5_V_1_fu_1158_p1 <= tmp_5_V_q0;
    tmp_0_5_V_1_fu_1158_p2 <= std_logic_vector(signed(inputs_5_V_load_reg_1771) + signed(tmp_0_5_V_1_fu_1158_p1));
    tmp_0_5_V_2_fu_1209_p3 <= 
        ap_const_lv24_800000 when (and_ln786_177_fu_1177_p2(0) = '1') else 
        tmp_0_5_V_1_fu_1158_p2;
    tmp_0_6_V_1_fu_1247_p1 <= tmp_6_V_q0;
    tmp_0_6_V_1_fu_1247_p2 <= std_logic_vector(signed(inputs_6_V_load_reg_1777) + signed(tmp_0_6_V_1_fu_1247_p1));
    tmp_0_6_V_2_fu_1298_p3 <= 
        ap_const_lv24_800000 when (and_ln786_178_fu_1266_p2(0) = '1') else 
        tmp_0_6_V_1_fu_1247_p2;
    tmp_0_7_V_1_fu_1336_p1 <= tmp_7_V_q0;
    tmp_0_7_V_1_fu_1336_p2 <= std_logic_vector(signed(inputs_7_V_load_reg_1783) + signed(tmp_0_7_V_1_fu_1336_p1));
    tmp_0_7_V_2_fu_1387_p3 <= 
        ap_const_lv24_800000 when (and_ln786_179_fu_1355_p2(0) = '1') else 
        tmp_0_7_V_1_fu_1336_p2;

    tmp_0_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_0_V_addr_1_reg_1701, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, zext_ln320_fu_681_p1, zext_ln333_1_fu_1426_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            tmp_0_V_address0 <= zext_ln333_1_fu_1426_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_0_V_address0 <= tmp_0_V_addr_1_reg_1701;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_0_V_address0 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            tmp_0_V_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            tmp_0_V_address0 <= "XXX";
        end if; 
    end process;


    tmp_0_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_0_V_ce0 <= ap_const_logic_1;
        else 
            tmp_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_0_V_d0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1, select_ln340_185_fu_772_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_0_V_d0 <= select_ln340_185_fu_772_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            tmp_0_V_d0 <= ap_const_lv24_0;
        else 
            tmp_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_0_V_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln313_reg_1622_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln313_reg_1622_pp0_iter1_reg = ap_const_lv1_0)))) then 
            tmp_0_V_we0 <= ap_const_logic_1;
        else 
            tmp_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_1_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_1_V_addr_reg_1706, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, zext_ln320_fu_681_p1, zext_ln333_1_fu_1426_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            tmp_1_V_address0 <= zext_ln333_1_fu_1426_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_1_V_address0 <= tmp_1_V_addr_reg_1706;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_1_V_address0 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
        else 
            tmp_1_V_address0 <= "XXX";
        end if; 
    end process;


    tmp_1_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_1_V_ce0 <= ap_const_logic_1;
        else 
            tmp_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_V_d0 <= 
        select_ln340_90_fu_845_p3 when (or_ln340_230_fu_839_p2(0) = '1') else 
        tmp_0_1_V_2_fu_853_p3;

    tmp_1_V_we0_assign_proc : process(icmp_ln313_reg_1622_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln313_reg_1622_pp0_iter1_reg = ap_const_lv1_0))) then 
            tmp_1_V_we0 <= ap_const_logic_1;
        else 
            tmp_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_2_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_2_V_addr_reg_1711, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, zext_ln320_fu_681_p1, zext_ln333_1_fu_1426_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            tmp_2_V_address0 <= zext_ln333_1_fu_1426_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_2_V_address0 <= tmp_2_V_addr_reg_1711;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_2_V_address0 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
        else 
            tmp_2_V_address0 <= "XXX";
        end if; 
    end process;


    tmp_2_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_2_V_ce0 <= ap_const_logic_1;
        else 
            tmp_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_V_d0 <= 
        select_ln340_91_fu_934_p3 when (or_ln340_231_fu_928_p2(0) = '1') else 
        tmp_0_2_V_2_fu_942_p3;

    tmp_2_V_we0_assign_proc : process(icmp_ln313_reg_1622_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln313_reg_1622_pp0_iter1_reg = ap_const_lv1_0))) then 
            tmp_2_V_we0 <= ap_const_logic_1;
        else 
            tmp_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_3_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_3_V_addr_reg_1716, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, zext_ln320_fu_681_p1, zext_ln333_1_fu_1426_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            tmp_3_V_address0 <= zext_ln333_1_fu_1426_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_3_V_address0 <= tmp_3_V_addr_reg_1716;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_3_V_address0 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
        else 
            tmp_3_V_address0 <= "XXX";
        end if; 
    end process;


    tmp_3_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_3_V_ce0 <= ap_const_logic_1;
        else 
            tmp_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_3_V_d0 <= 
        select_ln340_92_fu_1023_p3 when (or_ln340_232_fu_1017_p2(0) = '1') else 
        tmp_0_3_V_2_fu_1031_p3;

    tmp_3_V_we0_assign_proc : process(icmp_ln313_reg_1622_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln313_reg_1622_pp0_iter1_reg = ap_const_lv1_0))) then 
            tmp_3_V_we0 <= ap_const_logic_1;
        else 
            tmp_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_4_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_4_V_addr_reg_1721, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, zext_ln320_fu_681_p1, zext_ln333_1_fu_1426_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            tmp_4_V_address0 <= zext_ln333_1_fu_1426_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_4_V_address0 <= tmp_4_V_addr_reg_1721;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_4_V_address0 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
        else 
            tmp_4_V_address0 <= "XXX";
        end if; 
    end process;


    tmp_4_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_4_V_ce0 <= ap_const_logic_1;
        else 
            tmp_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_4_V_d0 <= 
        select_ln340_93_fu_1112_p3 when (or_ln340_233_fu_1106_p2(0) = '1') else 
        tmp_0_4_V_2_fu_1120_p3;

    tmp_4_V_we0_assign_proc : process(icmp_ln313_reg_1622_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln313_reg_1622_pp0_iter1_reg = ap_const_lv1_0))) then 
            tmp_4_V_we0 <= ap_const_logic_1;
        else 
            tmp_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_5_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_5_V_addr_reg_1726, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, zext_ln320_fu_681_p1, zext_ln333_1_fu_1426_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            tmp_5_V_address0 <= zext_ln333_1_fu_1426_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_5_V_address0 <= tmp_5_V_addr_reg_1726;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_5_V_address0 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
        else 
            tmp_5_V_address0 <= "XXX";
        end if; 
    end process;


    tmp_5_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_5_V_ce0 <= ap_const_logic_1;
        else 
            tmp_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_5_V_d0 <= 
        select_ln340_94_fu_1201_p3 when (or_ln340_234_fu_1195_p2(0) = '1') else 
        tmp_0_5_V_2_fu_1209_p3;

    tmp_5_V_we0_assign_proc : process(icmp_ln313_reg_1622_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln313_reg_1622_pp0_iter1_reg = ap_const_lv1_0))) then 
            tmp_5_V_we0 <= ap_const_logic_1;
        else 
            tmp_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_6_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_6_V_addr_reg_1731, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, zext_ln320_fu_681_p1, zext_ln333_1_fu_1426_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            tmp_6_V_address0 <= zext_ln333_1_fu_1426_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_6_V_address0 <= tmp_6_V_addr_reg_1731;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_6_V_address0 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
        else 
            tmp_6_V_address0 <= "XXX";
        end if; 
    end process;


    tmp_6_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_6_V_ce0 <= ap_const_logic_1;
        else 
            tmp_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_6_V_d0 <= 
        select_ln340_95_fu_1290_p3 when (or_ln340_235_fu_1284_p2(0) = '1') else 
        tmp_0_6_V_2_fu_1298_p3;

    tmp_6_V_we0_assign_proc : process(icmp_ln313_reg_1622_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln313_reg_1622_pp0_iter1_reg = ap_const_lv1_0))) then 
            tmp_6_V_we0 <= ap_const_logic_1;
        else 
            tmp_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_764_fu_705_p3 <= add_ln1192_fu_699_p2(24 downto 24);
    tmp_765_fu_718_p3 <= tmp_0_0_V_fu_713_p2(23 downto 23);
    tmp_766_fu_794_p3 <= add_ln1192_71_fu_788_p2(24 downto 24);
    tmp_767_fu_807_p3 <= tmp_0_1_V_1_fu_802_p2(23 downto 23);
    tmp_768_fu_883_p3 <= add_ln1192_72_fu_877_p2(24 downto 24);
    tmp_769_fu_896_p3 <= tmp_0_2_V_1_fu_891_p2(23 downto 23);
    tmp_770_fu_972_p3 <= add_ln1192_73_fu_966_p2(24 downto 24);
    tmp_771_fu_985_p3 <= tmp_0_3_V_1_fu_980_p2(23 downto 23);
    tmp_772_fu_1061_p3 <= add_ln1192_74_fu_1055_p2(24 downto 24);
    tmp_773_fu_1074_p3 <= tmp_0_4_V_1_fu_1069_p2(23 downto 23);
    tmp_774_fu_1150_p3 <= add_ln1192_75_fu_1144_p2(24 downto 24);
    tmp_775_fu_1163_p3 <= tmp_0_5_V_1_fu_1158_p2(23 downto 23);
    tmp_776_fu_1239_p3 <= add_ln1192_76_fu_1233_p2(24 downto 24);
    tmp_777_fu_1252_p3 <= tmp_0_6_V_1_fu_1247_p2(23 downto 23);
    tmp_778_fu_1328_p3 <= add_ln1192_77_fu_1322_p2(24 downto 24);
    tmp_779_fu_1341_p3 <= tmp_0_7_V_1_fu_1336_p2(23 downto 23);

    tmp_7_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_7_V_addr_reg_1736, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage1, zext_ln320_fu_681_p1, zext_ln333_1_fu_1426_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            tmp_7_V_address0 <= zext_ln333_1_fu_1426_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_7_V_address0 <= tmp_7_V_addr_reg_1736;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_7_V_address0 <= zext_ln320_fu_681_p1(3 - 1 downto 0);
        else 
            tmp_7_V_address0 <= "XXX";
        end if; 
    end process;


    tmp_7_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_7_V_ce0 <= ap_const_logic_1;
        else 
            tmp_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_7_V_d0 <= 
        select_ln340_96_fu_1379_p3 when (or_ln340_236_fu_1373_p2(0) = '1') else 
        tmp_0_7_V_2_fu_1387_p3;

    tmp_7_V_we0_assign_proc : process(icmp_ln313_reg_1622_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln313_reg_1622_pp0_iter1_reg = ap_const_lv1_0))) then 
            tmp_7_V_we0 <= ap_const_logic_1;
        else 
            tmp_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_611_p3 <= (select_ln320_1_reg_1631 & ap_const_lv5_0);
    trunc_ln333_1_fu_1416_p4 <= ap_phi_mux_c_0_phi_fu_500_p4(5 downto 3);
    underflow_fu_1580_p2 <= (xor_ln786_fu_1574_p2 and p_Result_s_reg_1853_pp1_iter2_reg);
    xor_ln320_fu_548_p2 <= (icmp_ln314_fu_526_p2 xor ap_const_lv1_1);
    xor_ln340_47_fu_744_p2 <= (tmp_764_fu_705_p3 xor ap_const_lv1_1);
    xor_ln340_48_fu_827_p2 <= (tmp_767_fu_807_p3 xor tmp_766_fu_794_p3);
    xor_ln340_49_fu_833_p2 <= (tmp_766_fu_794_p3 xor ap_const_lv1_1);
    xor_ln340_50_fu_916_p2 <= (tmp_769_fu_896_p3 xor tmp_768_fu_883_p3);
    xor_ln340_51_fu_922_p2 <= (tmp_768_fu_883_p3 xor ap_const_lv1_1);
    xor_ln340_52_fu_1005_p2 <= (tmp_771_fu_985_p3 xor tmp_770_fu_972_p3);
    xor_ln340_53_fu_1011_p2 <= (tmp_770_fu_972_p3 xor ap_const_lv1_1);
    xor_ln340_54_fu_1094_p2 <= (tmp_773_fu_1074_p3 xor tmp_772_fu_1061_p3);
    xor_ln340_55_fu_1100_p2 <= (tmp_772_fu_1061_p3 xor ap_const_lv1_1);
    xor_ln340_56_fu_1183_p2 <= (tmp_775_fu_1163_p3 xor tmp_774_fu_1150_p3);
    xor_ln340_57_fu_1189_p2 <= (tmp_774_fu_1150_p3 xor ap_const_lv1_1);
    xor_ln340_58_fu_1272_p2 <= (tmp_777_fu_1252_p3 xor tmp_776_fu_1239_p3);
    xor_ln340_59_fu_1278_p2 <= (tmp_776_fu_1239_p3 xor ap_const_lv1_1);
    xor_ln340_60_fu_1361_p2 <= (tmp_779_fu_1341_p3 xor tmp_778_fu_1328_p3);
    xor_ln340_61_fu_1367_p2 <= (tmp_778_fu_1328_p3 xor ap_const_lv1_1);
    xor_ln340_fu_738_p2 <= (tmp_765_fu_718_p3 xor tmp_764_fu_705_p3);
    xor_ln785_fu_1559_p2 <= (p_Result_s_reg_1853_pp1_iter2_reg xor ap_const_lv1_1);
    xor_ln786_100_fu_993_p2 <= (tmp_771_fu_985_p3 xor ap_const_lv1_1);
    xor_ln786_101_fu_1082_p2 <= (tmp_773_fu_1074_p3 xor ap_const_lv1_1);
    xor_ln786_102_fu_1171_p2 <= (tmp_775_fu_1163_p3 xor ap_const_lv1_1);
    xor_ln786_103_fu_1260_p2 <= (tmp_777_fu_1252_p3 xor ap_const_lv1_1);
    xor_ln786_104_fu_1349_p2 <= (tmp_779_fu_1341_p3 xor ap_const_lv1_1);
    xor_ln786_97_fu_726_p2 <= (tmp_765_fu_718_p3 xor ap_const_lv1_1);
    xor_ln786_98_fu_815_p2 <= (tmp_767_fu_807_p3 xor ap_const_lv1_1);
    xor_ln786_99_fu_904_p2 <= (tmp_769_fu_896_p3 xor ap_const_lv1_1);
    xor_ln786_fu_1574_p2 <= (ap_const_lv1_1 xor and_ln786_181_fu_1570_p2);
    zext_ln1148_16_fu_1521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_203_reg_1848),19));
    zext_ln1148_fu_1512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_202_reg_1843),19));
    zext_ln1265_49_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_611_p3),10));
    zext_ln1265_50_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1265_25_fu_631_p2),15));
    zext_ln1265_51_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln323_reg_1639),15));
    zext_ln1265_52_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1265_27_fu_658_p2),64));
    zext_ln1265_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln320_1_reg_1631),10));
    zext_ln320_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln320_1_reg_1631),64));
    zext_ln323_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln323_1_reg_1645),10));
    zext_ln333_1_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln333_1_fu_1416_p4),64));
    zext_ln333_fu_1547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_0_reg_496_pp1_iter2_reg),64));
end behav;
