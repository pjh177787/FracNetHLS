-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inputs_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    inputs_V_ce0 : OUT STD_LOGIC;
    inputs_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    outputs_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outputs_V_ce0 : OUT STD_LOGIC;
    outputs_V_we0 : OUT STD_LOGIC;
    outputs_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of matmul is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv24_29F84 : STD_LOGIC_VECTOR (23 downto 0) := "000000101001111110000100";
    constant ap_const_lv24_FC4068 : STD_LOGIC_VECTOR (23 downto 0) := "111111000100000001101000";
    constant ap_const_lv24_278B4 : STD_LOGIC_VECTOR (23 downto 0) := "000000100111100010110100";
    constant ap_const_lv24_54C65 : STD_LOGIC_VECTOR (23 downto 0) := "000001010100110001100101";
    constant ap_const_lv24_5431 : STD_LOGIC_VECTOR (23 downto 0) := "000000000101010000110001";
    constant ap_const_lv24_1D342 : STD_LOGIC_VECTOR (23 downto 0) := "000000011101001101000010";
    constant ap_const_lv24_FD4C98 : STD_LOGIC_VECTOR (23 downto 0) := "111111010100110010011000";
    constant ap_const_lv24_FFDAB0 : STD_LOGIC_VECTOR (23 downto 0) := "111111111101101010110000";
    constant ap_const_lv24_FA0D53 : STD_LOGIC_VECTOR (23 downto 0) := "111110100000110101010011";
    constant ap_const_lv24_3EB0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000011111010110000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv24_7FFFFF : STD_LOGIC_VECTOR (23 downto 0) := "011111111111111111111111";
    constant ap_const_lv24_800000 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal linear_weight_fix_V_s_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_s_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_s_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal linear_weight_fix_V_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_1_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_1_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal linear_weight_fix_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_2_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_2_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal linear_weight_fix_V_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_3_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_3_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal linear_weight_fix_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_4_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_4_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal linear_weight_fix_V_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_5_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_5_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal linear_weight_fix_V_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_6_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_6_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal linear_weight_fix_V_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_7_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_7_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal linear_weight_fix_V_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_8_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_8_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal linear_weight_fix_V_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal linear_weight_fix_V_9_ce0 : STD_LOGIC;
    signal linear_weight_fix_V_9_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal buf_9_V_210_reg_367 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_8_V_29_reg_377 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_7_V_28_reg_387 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_6_V_27_reg_397 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_5_V_26_reg_407 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_4_V_25_reg_417 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_3_V_24_reg_427 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_2_V_23_reg_437 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_1_V_22_reg_447 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_0_V_21_reg_457 : STD_LOGIC_VECTOR (23 downto 0);
    signal cii_0_reg_467 : STD_LOGIC_VECTOR (6 downto 0);
    signal buf_0_V_0_load_reg_3674 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal buf_1_V_0_load_reg_3679 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_2_V_0_load_reg_3684 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_3_V_0_load_reg_3689 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_4_V_0_load_reg_3694 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_5_V_0_load_reg_3699 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_6_V_0_load_reg_3704 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_7_V_0_load_reg_3709 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_8_V_0_load_reg_3714 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_9_V_0_load_reg_3719 : STD_LOGIC_VECTOR (23 downto 0);
    signal coo_fu_525_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln356_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln356_reg_3732 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state4_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln356_reg_3732_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln356_reg_3732_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln356_reg_3732_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cii_fu_649_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_in_V_reg_3796 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln415_fu_696_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_reg_3802 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_1_fu_728_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_1_reg_3807 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_2_fu_760_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_2_reg_3812 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_3_fu_792_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln415_3_reg_3817 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln415_4_fu_824_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_4_reg_3822 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_5_fu_856_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_5_reg_3827 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_6_fu_888_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_6_reg_3832 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_7_fu_920_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_7_reg_3837 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_8_fu_952_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_8_reg_3842 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_9_fu_984_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln415_9_reg_3847 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln1118_fu_3534_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_reg_3852 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1192_fu_999_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_reg_3857 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_183_reg_3862 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_1_fu_3542_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_1_reg_3867 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1192_1_fu_1012_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_1_reg_3872 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_189_reg_3877 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_2_fu_3550_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_2_reg_3882 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1192_2_fu_1025_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_2_reg_3887 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_195_reg_3892 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_3_fu_3558_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal mul_ln1118_3_reg_3897 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln1192_3_fu_1038_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_3_reg_3902 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_201_reg_3907 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_4_fu_3566_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_4_reg_3912 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1192_4_fu_1051_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_4_reg_3917 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_207_reg_3922 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_5_fu_3574_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_5_reg_3927 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1192_5_fu_1064_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_5_reg_3932 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_213_reg_3937 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_6_fu_3582_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_6_reg_3942 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1192_6_fu_1077_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_6_reg_3947 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_219_reg_3952 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_7_fu_3590_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_7_reg_3957 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1192_7_fu_1090_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_7_reg_3962 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_225_reg_3967 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_8_fu_3598_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_8_reg_3972 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1192_8_fu_1103_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_8_reg_3977 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_231_reg_3982 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_9_fu_3606_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_9_reg_3987 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln1192_9_fu_1116_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln1192_9_reg_3992 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_237_reg_3997 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_0_V_fu_1181_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_0_V_reg_4002 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_reg_4007 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_10_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_10_reg_4012 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_1_V_fu_1404_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_1_V_reg_4017 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_1_fu_1536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_1_reg_4022 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_11_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_11_reg_4027 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_2_V_fu_1627_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_2_V_reg_4032 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_2_fu_1759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_2_reg_4037 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_12_fu_1789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_12_reg_4042 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_3_V_fu_1854_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_3_V_reg_4047 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_3_fu_1986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_3_reg_4052 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_13_fu_2016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_13_reg_4057 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_4_V_fu_2077_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_4_V_reg_4062 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_4_fu_2209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_4_reg_4067 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_14_fu_2239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_14_reg_4072 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_5_V_fu_2300_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_5_V_reg_4077 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_5_fu_2432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_5_reg_4082 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_15_fu_2462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_15_reg_4087 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_6_V_fu_2523_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_6_V_reg_4092 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_6_fu_2655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_6_reg_4097 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_16_fu_2685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_16_reg_4102 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_7_V_fu_2746_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_7_V_reg_4107 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_7_fu_2878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_7_reg_4112 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_17_fu_2908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_17_reg_4117 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_8_V_1_fu_2969_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_8_V_1_reg_4122 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_8_fu_3101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_8_reg_4127 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_18_fu_3131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_18_reg_4132 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_9_V_fu_3192_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_9_V_reg_4137 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln785_9_fu_3324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_9_reg_4142 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_19_fu_3354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_19_reg_4147 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln785_1_fu_3367_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal select_ln785_3_fu_3380_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_5_fu_3393_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_7_fu_3406_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_9_fu_3419_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_11_fu_3432_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_13_fu_3445_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_15_fu_3458_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_17_fu_3471_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_19_fu_3484_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal coo_1_fu_3496_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_phi_mux_coo_0_phi_fu_360_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal coo_0_reg_356 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln351_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_buf_9_V_210_phi_fu_370_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_buf_8_V_29_phi_fu_380_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_buf_7_V_28_phi_fu_390_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_buf_6_V_27_phi_fu_400_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_buf_5_V_26_phi_fu_410_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_buf_4_V_25_phi_fu_420_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_buf_3_V_24_phi_fu_430_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_buf_2_V_23_phi_fu_440_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_buf_1_V_22_phi_fu_450_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_buf_0_V_21_phi_fu_460_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal coo4_0_reg_478 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln369_fu_3490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln358_fu_655_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln371_fu_3502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_0_V_0_fu_160 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln415_fu_589_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_1_V_0_fu_164 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_2_V_0_fu_168 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_3_V_0_fu_172 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_4_V_0_fu_176 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_5_V_0_fu_180 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_6_V_0_fu_184 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_7_V_0_fu_188 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_8_V_0_fu_192 : STD_LOGIC_VECTOR (23 downto 0);
    signal buf_9_V_0_fu_196 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_22_fu_3507_p12 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_s_fu_531_p12 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln_fu_557_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_160_fu_571_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln713_fu_567_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln415_fu_579_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal buf_0_V_2_fu_583_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_161_fu_670_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_162_fu_684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_1_fu_680_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln415_1_fu_692_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_163_fu_702_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_164_fu_716_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_2_fu_712_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln415_2_fu_724_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_165_fu_734_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_166_fu_748_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_3_fu_744_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln415_3_fu_756_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_167_fu_766_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_168_fu_780_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_4_fu_776_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln415_4_fu_788_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_169_fu_798_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_170_fu_812_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_5_fu_808_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln415_5_fu_820_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_171_fu_830_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_172_fu_844_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_6_fu_840_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln415_6_fu_852_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_173_fu_862_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_174_fu_876_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_7_fu_872_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln415_7_fu_884_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_175_fu_894_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_176_fu_908_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_8_fu_904_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln415_8_fu_916_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_177_fu_926_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_178_fu_940_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_9_fu_936_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln415_9_fu_948_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_179_fu_958_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_180_fu_972_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln415_10_fu_968_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln415_10_fu_980_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln_fu_1126_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln728_fu_1134_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_fu_1138_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_fu_1142_p2 : STD_LOGIC_VECTOR (43 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln1192_fu_1142_p2 : signal is "no";
    signal zext_ln415_11_fu_1178_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_s_fu_1160_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_184_fu_1187_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_182_fu_1170_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1215_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1231_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_10_fu_1147_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_186_fu_1261_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_1225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_1253_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_185_fu_1207_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_1295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_181_fu_1152_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_1301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_1_fu_1307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_fu_1281_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_1289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_10_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_1_fu_1349_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln728_1_fu_1357_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_1_fu_1361_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_1_fu_1365_p2 : STD_LOGIC_VECTOR (43 downto 0);
    attribute use_dsp48 of add_ln1192_1_fu_1365_p2 : signal is "no";
    signal zext_ln415_12_fu_1401_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_1_fu_1383_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_190_fu_1410_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_188_fu_1393_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_1_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1438_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_1454_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_1_fu_1424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_11_fu_1370_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_192_fu_1484_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_1_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_1_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_1_fu_1476_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_191_fu_1430_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_10_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_187_fu_1375_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_1_fu_1524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_11_fu_1530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_1_fu_1504_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_1_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_1_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_1554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_11_fu_1560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_2_fu_1572_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln728_2_fu_1580_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_2_fu_1584_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_2_fu_1588_p2 : STD_LOGIC_VECTOR (43 downto 0);
    attribute use_dsp48 of add_ln1192_2_fu_1588_p2 : signal is "no";
    signal zext_ln415_13_fu_1624_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_2_fu_1606_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_196_fu_1633_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_194_fu_1616_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_2_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1661_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_1677_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_2_fu_1647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_fu_1687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_12_fu_1593_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_198_fu_1707_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_fu_1671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_2_fu_1715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_2_fu_1721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_2_fu_1699_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_197_fu_1653_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_2_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_fu_1598_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_2_fu_1747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_12_fu_1753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_2_fu_1727_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_2_fu_1735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_fu_1765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_2_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_1777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_12_fu_1783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_3_fu_1795_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1192_10_fu_1807_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln728_3_fu_1803_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_3_fu_1810_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_3_fu_1814_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln415_14_fu_1851_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_3_fu_1833_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_202_fu_1860_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_200_fu_1843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_3_fu_1868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_1888_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_1904_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_3_fu_1874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_fu_1914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_fu_1920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_13_fu_1820_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_204_fu_1934_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_3_fu_1942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_3_fu_1948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_3_fu_1926_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_203_fu_1880_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_3_fu_1968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_199_fu_1825_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_3_fu_1974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_13_fu_1980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_3_fu_1954_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_3_fu_1962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_fu_1992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_3_fu_1998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_2004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_13_fu_2010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_4_fu_2022_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln728_4_fu_2030_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_4_fu_2034_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_4_fu_2038_p2 : STD_LOGIC_VECTOR (43 downto 0);
    attribute use_dsp48 of add_ln1192_4_fu_2038_p2 : signal is "no";
    signal zext_ln415_15_fu_2074_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_4_fu_2056_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_208_fu_2083_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_206_fu_2066_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_4_fu_2091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_2111_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_2127_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_4_fu_2097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_fu_2137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_fu_2143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_14_fu_2043_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_210_fu_2157_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_fu_2121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_4_fu_2165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_4_fu_2171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_4_fu_2149_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_209_fu_2103_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_4_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_205_fu_2048_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_4_fu_2197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_14_fu_2203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_4_fu_2177_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_4_fu_2185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_4_fu_2215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_4_fu_2221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_14_fu_2233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_5_fu_2245_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln728_5_fu_2253_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_5_fu_2257_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_5_fu_2261_p2 : STD_LOGIC_VECTOR (43 downto 0);
    attribute use_dsp48 of add_ln1192_5_fu_2261_p2 : signal is "no";
    signal zext_ln415_16_fu_2297_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_5_fu_2279_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_214_fu_2306_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_212_fu_2289_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_5_fu_2314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_2334_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_2350_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_5_fu_2320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_11_fu_2360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_fu_2366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_15_fu_2266_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_216_fu_2380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_10_fu_2344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_5_fu_2388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_5_fu_2394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_5_fu_2372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_215_fu_2326_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_5_fu_2414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_211_fu_2271_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_5_fu_2420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_15_fu_2426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_5_fu_2400_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_5_fu_2408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_5_fu_2438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_5_fu_2444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_2450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_15_fu_2456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_6_fu_2468_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln728_6_fu_2476_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_6_fu_2480_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_6_fu_2484_p2 : STD_LOGIC_VECTOR (43 downto 0);
    attribute use_dsp48 of add_ln1192_6_fu_2484_p2 : signal is "no";
    signal zext_ln415_17_fu_2520_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_6_fu_2502_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_220_fu_2529_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_218_fu_2512_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_6_fu_2537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_2557_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_2573_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_6_fu_2543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_13_fu_2583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_6_fu_2589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_16_fu_2489_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_222_fu_2603_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_12_fu_2567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_6_fu_2611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_6_fu_2617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_6_fu_2595_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_221_fu_2549_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_6_fu_2637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_217_fu_2494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_6_fu_2643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_16_fu_2649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_6_fu_2623_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_6_fu_2631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_6_fu_2661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_6_fu_2667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_2673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_16_fu_2679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_7_fu_2691_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln728_7_fu_2699_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_7_fu_2703_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_7_fu_2707_p2 : STD_LOGIC_VECTOR (43 downto 0);
    attribute use_dsp48 of add_ln1192_7_fu_2707_p2 : signal is "no";
    signal zext_ln415_18_fu_2743_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_7_fu_2725_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_226_fu_2752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_224_fu_2735_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_7_fu_2760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_2780_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_2796_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_7_fu_2766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_15_fu_2806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_7_fu_2812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_17_fu_2712_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_228_fu_2826_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_14_fu_2790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_7_fu_2834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_7_fu_2840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_7_fu_2818_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_227_fu_2772_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_7_fu_2860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_223_fu_2717_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_7_fu_2866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_17_fu_2872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_7_fu_2846_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_7_fu_2854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_7_fu_2884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_7_fu_2890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_2896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_17_fu_2902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_8_fu_2914_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln728_8_fu_2922_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_8_fu_2926_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_8_fu_2930_p2 : STD_LOGIC_VECTOR (43 downto 0);
    attribute use_dsp48 of add_ln1192_8_fu_2930_p2 : signal is "no";
    signal zext_ln415_19_fu_2966_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_8_fu_2948_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_232_fu_2975_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_230_fu_2958_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_8_fu_2983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_3003_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_fu_3019_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_8_fu_2989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_17_fu_3029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_8_fu_3035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_18_fu_2935_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_234_fu_3049_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_16_fu_3013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_8_fu_3057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_8_fu_3063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_8_fu_3041_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_233_fu_2995_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_8_fu_3083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_229_fu_2940_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_8_fu_3089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_18_fu_3095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_8_fu_3069_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_8_fu_3077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_8_fu_3107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_8_fu_3113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_3119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_18_fu_3125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln728_9_fu_3137_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln728_9_fu_3145_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1192_9_fu_3149_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_9_fu_3153_p2 : STD_LOGIC_VECTOR (43 downto 0);
    attribute use_dsp48 of add_ln1192_9_fu_3153_p2 : signal is "no";
    signal zext_ln415_20_fu_3189_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_9_fu_3171_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_238_fu_3198_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_236_fu_3181_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_9_fu_3206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_3226_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_3242_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln416_9_fu_3212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_19_fu_3252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_9_fu_3258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_19_fu_3158_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_240_fu_3272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_18_fu_3236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln779_9_fu_3280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln779_9_fu_3286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_9_fu_3264_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_239_fu_3218_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_9_fu_3306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_235_fu_3163_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_9_fu_3312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_19_fu_3318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln416_9_fu_3292_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_9_fu_3300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_9_fu_3330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_9_fu_3336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_9_fu_3342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_19_fu_3348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln785_fu_3360_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_2_fu_3373_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_4_fu_3386_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_6_fu_3399_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_8_fu_3412_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_10_fu_3425_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_12_fu_3438_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_14_fu_3451_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_16_fu_3464_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln785_18_fu_3477_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_fu_3534_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_2_fu_993_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_1_fu_3542_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_2_fu_3550_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_4_fu_3566_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_5_fu_3574_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_6_fu_3582_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_7_fu_3590_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_8_fu_3598_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_9_fu_3606_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component FracNet_T_mux_104bUr IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        din3 : IN STD_LOGIC_VECTOR (23 downto 0);
        din4 : IN STD_LOGIC_VECTOR (23 downto 0);
        din5 : IN STD_LOGIC_VECTOR (23 downto 0);
        din6 : IN STD_LOGIC_VECTOR (23 downto 0);
        din7 : IN STD_LOGIC_VECTOR (23 downto 0);
        din8 : IN STD_LOGIC_VECTOR (23 downto 0);
        din9 : IN STD_LOGIC_VECTOR (23 downto 0);
        din10 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component FracNet_T_mul_mulbVr IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component FracNet_T_mul_mulbWr IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component matmul_linear_weibKp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component matmul_linear_weibLp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component matmul_linear_weibMq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component matmul_linear_weibNq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component matmul_linear_weibOq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component matmul_linear_weibPq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component matmul_linear_weibQq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component matmul_linear_weibRq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component matmul_linear_weibSr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component matmul_linear_weibTr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;



begin
    linear_weight_fix_V_s_U : component matmul_linear_weibKp
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_s_address0,
        ce0 => linear_weight_fix_V_s_ce0,
        q0 => linear_weight_fix_V_s_q0);

    linear_weight_fix_V_1_U : component matmul_linear_weibLp
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_1_address0,
        ce0 => linear_weight_fix_V_1_ce0,
        q0 => linear_weight_fix_V_1_q0);

    linear_weight_fix_V_2_U : component matmul_linear_weibMq
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_2_address0,
        ce0 => linear_weight_fix_V_2_ce0,
        q0 => linear_weight_fix_V_2_q0);

    linear_weight_fix_V_3_U : component matmul_linear_weibNq
    generic map (
        DataWidth => 21,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_3_address0,
        ce0 => linear_weight_fix_V_3_ce0,
        q0 => linear_weight_fix_V_3_q0);

    linear_weight_fix_V_4_U : component matmul_linear_weibOq
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_4_address0,
        ce0 => linear_weight_fix_V_4_ce0,
        q0 => linear_weight_fix_V_4_q0);

    linear_weight_fix_V_5_U : component matmul_linear_weibPq
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_5_address0,
        ce0 => linear_weight_fix_V_5_ce0,
        q0 => linear_weight_fix_V_5_q0);

    linear_weight_fix_V_6_U : component matmul_linear_weibQq
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_6_address0,
        ce0 => linear_weight_fix_V_6_ce0,
        q0 => linear_weight_fix_V_6_q0);

    linear_weight_fix_V_7_U : component matmul_linear_weibRq
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_7_address0,
        ce0 => linear_weight_fix_V_7_ce0,
        q0 => linear_weight_fix_V_7_q0);

    linear_weight_fix_V_8_U : component matmul_linear_weibSr
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_8_address0,
        ce0 => linear_weight_fix_V_8_ce0,
        q0 => linear_weight_fix_V_8_q0);

    linear_weight_fix_V_9_U : component matmul_linear_weibTr
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linear_weight_fix_V_9_address0,
        ce0 => linear_weight_fix_V_9_ce0,
        q0 => linear_weight_fix_V_9_q0);

    FracNet_T_mux_104bUr_U290 : component FracNet_T_mux_104bUr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 24,
        din4_WIDTH => 24,
        din5_WIDTH => 24,
        din6_WIDTH => 24,
        din7_WIDTH => 24,
        din8_WIDTH => 24,
        din9_WIDTH => 24,
        din10_WIDTH => 4,
        dout_WIDTH => 24)
    port map (
        din0 => ap_const_lv24_29F84,
        din1 => ap_const_lv24_FC4068,
        din2 => ap_const_lv24_278B4,
        din3 => ap_const_lv24_54C65,
        din4 => ap_const_lv24_5431,
        din5 => ap_const_lv24_1D342,
        din6 => ap_const_lv24_FD4C98,
        din7 => ap_const_lv24_FFDAB0,
        din8 => ap_const_lv24_FA0D53,
        din9 => ap_const_lv24_3EB0,
        din10 => coo_0_reg_356,
        dout => p_Val2_s_fu_531_p12);

    FracNet_T_mux_104bUr_U291 : component FracNet_T_mux_104bUr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 24,
        din4_WIDTH => 24,
        din5_WIDTH => 24,
        din6_WIDTH => 24,
        din7_WIDTH => 24,
        din8_WIDTH => 24,
        din9_WIDTH => 24,
        din10_WIDTH => 4,
        dout_WIDTH => 24)
    port map (
        din0 => buf_0_V_21_reg_457,
        din1 => buf_1_V_22_reg_447,
        din2 => buf_2_V_23_reg_437,
        din3 => buf_3_V_24_reg_427,
        din4 => buf_4_V_25_reg_417,
        din5 => buf_5_V_26_reg_407,
        din6 => buf_6_V_27_reg_397,
        din7 => buf_7_V_28_reg_387,
        din8 => buf_8_V_29_reg_377,
        din9 => buf_9_V_210_reg_367,
        din10 => coo4_0_reg_478,
        dout => tmp_22_fu_3507_p12);

    FracNet_T_mul_mulbVr_U292 : component FracNet_T_mul_mulbVr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 24,
        dout_WIDTH => 44)
    port map (
        din0 => add_ln415_reg_3802,
        din1 => mul_ln1118_fu_3534_p1,
        dout => mul_ln1118_fu_3534_p2);

    FracNet_T_mul_mulbVr_U293 : component FracNet_T_mul_mulbVr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 24,
        dout_WIDTH => 44)
    port map (
        din0 => add_ln415_1_reg_3807,
        din1 => mul_ln1118_1_fu_3542_p1,
        dout => mul_ln1118_1_fu_3542_p2);

    FracNet_T_mul_mulbVr_U294 : component FracNet_T_mul_mulbVr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 24,
        dout_WIDTH => 44)
    port map (
        din0 => add_ln415_2_reg_3812,
        din1 => mul_ln1118_2_fu_3550_p1,
        dout => mul_ln1118_2_fu_3550_p2);

    FracNet_T_mul_mulbWr_U295 : component FracNet_T_mul_mulbWr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 24,
        dout_WIDTH => 43)
    port map (
        din0 => add_ln415_3_reg_3817,
        din1 => tmp_in_V_reg_3796,
        dout => mul_ln1118_3_fu_3558_p2);

    FracNet_T_mul_mulbVr_U296 : component FracNet_T_mul_mulbVr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 24,
        dout_WIDTH => 44)
    port map (
        din0 => add_ln415_4_reg_3822,
        din1 => mul_ln1118_4_fu_3566_p1,
        dout => mul_ln1118_4_fu_3566_p2);

    FracNet_T_mul_mulbVr_U297 : component FracNet_T_mul_mulbVr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 24,
        dout_WIDTH => 44)
    port map (
        din0 => add_ln415_5_reg_3827,
        din1 => mul_ln1118_5_fu_3574_p1,
        dout => mul_ln1118_5_fu_3574_p2);

    FracNet_T_mul_mulbVr_U298 : component FracNet_T_mul_mulbVr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 24,
        dout_WIDTH => 44)
    port map (
        din0 => add_ln415_6_reg_3832,
        din1 => mul_ln1118_6_fu_3582_p1,
        dout => mul_ln1118_6_fu_3582_p2);

    FracNet_T_mul_mulbVr_U299 : component FracNet_T_mul_mulbVr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 24,
        dout_WIDTH => 44)
    port map (
        din0 => add_ln415_7_reg_3837,
        din1 => mul_ln1118_7_fu_3590_p1,
        dout => mul_ln1118_7_fu_3590_p2);

    FracNet_T_mul_mulbVr_U300 : component FracNet_T_mul_mulbVr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 24,
        dout_WIDTH => 44)
    port map (
        din0 => add_ln415_8_reg_3842,
        din1 => mul_ln1118_8_fu_3598_p1,
        dout => mul_ln1118_8_fu_3598_p2);

    FracNet_T_mul_mulbVr_U301 : component FracNet_T_mul_mulbVr
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 24,
        dout_WIDTH => 44)
    port map (
        din0 => add_ln415_9_reg_3847,
        din1 => mul_ln1118_9_fu_3606_p1,
        dout => mul_ln1118_9_fu_3606_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state4)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    buf_0_V_21_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_0_V_21_reg_457 <= buf_0_V_0_load_reg_3674;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_0_V_21_reg_457 <= select_ln785_1_fu_3367_p3;
            end if; 
        end if;
    end process;

    buf_1_V_22_reg_447_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_1_V_22_reg_447 <= buf_1_V_0_load_reg_3679;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_1_V_22_reg_447 <= select_ln785_3_fu_3380_p3;
            end if; 
        end if;
    end process;

    buf_2_V_23_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_2_V_23_reg_437 <= buf_2_V_0_load_reg_3684;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_2_V_23_reg_437 <= select_ln785_5_fu_3393_p3;
            end if; 
        end if;
    end process;

    buf_3_V_24_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_3_V_24_reg_427 <= buf_3_V_0_load_reg_3689;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_3_V_24_reg_427 <= select_ln785_7_fu_3406_p3;
            end if; 
        end if;
    end process;

    buf_4_V_25_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_4_V_25_reg_417 <= buf_4_V_0_load_reg_3694;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_4_V_25_reg_417 <= select_ln785_9_fu_3419_p3;
            end if; 
        end if;
    end process;

    buf_5_V_26_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_5_V_26_reg_407 <= buf_5_V_0_load_reg_3699;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_5_V_26_reg_407 <= select_ln785_11_fu_3432_p3;
            end if; 
        end if;
    end process;

    buf_6_V_27_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_6_V_27_reg_397 <= buf_6_V_0_load_reg_3704;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_6_V_27_reg_397 <= select_ln785_13_fu_3445_p3;
            end if; 
        end if;
    end process;

    buf_7_V_28_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_7_V_28_reg_387 <= buf_7_V_0_load_reg_3709;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_7_V_28_reg_387 <= select_ln785_15_fu_3458_p3;
            end if; 
        end if;
    end process;

    buf_8_V_29_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_8_V_29_reg_377 <= buf_8_V_0_load_reg_3714;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_8_V_29_reg_377 <= select_ln785_17_fu_3471_p3;
            end if; 
        end if;
    end process;

    buf_9_V_210_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                buf_9_V_210_reg_367 <= buf_9_V_0_load_reg_3719;
            elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                buf_9_V_210_reg_367 <= select_ln785_19_fu_3484_p3;
            end if; 
        end if;
    end process;

    cii_0_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                cii_0_reg_467 <= ap_const_lv7_0;
            elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln356_fu_643_p2 = ap_const_lv1_0))) then 
                cii_0_reg_467 <= cii_fu_649_p2;
            end if; 
        end if;
    end process;

    coo4_0_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                coo4_0_reg_478 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln369_fu_3490_p2 = ap_const_lv1_0))) then 
                coo4_0_reg_478 <= coo_1_fu_3496_p2;
            end if; 
        end if;
    end process;

    coo_0_reg_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then 
                coo_0_reg_356 <= coo_fu_525_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                coo_0_reg_356 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln356_reg_3732 = ap_const_lv1_0))) then
                add_ln415_1_reg_3807 <= add_ln415_1_fu_728_p2;
                add_ln415_2_reg_3812 <= add_ln415_2_fu_760_p2;
                add_ln415_3_reg_3817 <= add_ln415_3_fu_792_p2;
                add_ln415_4_reg_3822 <= add_ln415_4_fu_824_p2;
                add_ln415_5_reg_3827 <= add_ln415_5_fu_856_p2;
                add_ln415_6_reg_3832 <= add_ln415_6_fu_888_p2;
                add_ln415_7_reg_3837 <= add_ln415_7_fu_920_p2;
                add_ln415_8_reg_3842 <= add_ln415_8_fu_952_p2;
                add_ln415_9_reg_3847 <= add_ln415_9_fu_984_p2;
                add_ln415_reg_3802 <= add_ln415_fu_696_p2;
                tmp_in_V_reg_3796 <= inputs_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln356_reg_3732_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln785_1_reg_4022 <= and_ln785_1_fu_1536_p2;
                and_ln785_2_reg_4037 <= and_ln785_2_fu_1759_p2;
                and_ln785_3_reg_4052 <= and_ln785_3_fu_1986_p2;
                and_ln785_4_reg_4067 <= and_ln785_4_fu_2209_p2;
                and_ln785_5_reg_4082 <= and_ln785_5_fu_2432_p2;
                and_ln785_6_reg_4097 <= and_ln785_6_fu_2655_p2;
                and_ln785_7_reg_4112 <= and_ln785_7_fu_2878_p2;
                and_ln785_8_reg_4127 <= and_ln785_8_fu_3101_p2;
                and_ln785_9_reg_4142 <= and_ln785_9_fu_3324_p2;
                and_ln785_reg_4007 <= and_ln785_fu_1313_p2;
                buf_0_V_reg_4002 <= buf_0_V_fu_1181_p2;
                buf_1_V_reg_4017 <= buf_1_V_fu_1404_p2;
                buf_2_V_reg_4032 <= buf_2_V_fu_1627_p2;
                buf_3_V_reg_4047 <= buf_3_V_fu_1854_p2;
                buf_4_V_reg_4062 <= buf_4_V_fu_2077_p2;
                buf_5_V_reg_4077 <= buf_5_V_fu_2300_p2;
                buf_6_V_reg_4092 <= buf_6_V_fu_2523_p2;
                buf_7_V_reg_4107 <= buf_7_V_fu_2746_p2;
                buf_8_V_1_reg_4122 <= buf_8_V_1_fu_2969_p2;
                buf_9_V_reg_4137 <= buf_9_V_fu_3192_p2;
                or_ln785_10_reg_4012 <= or_ln785_10_fu_1343_p2;
                or_ln785_11_reg_4027 <= or_ln785_11_fu_1566_p2;
                or_ln785_12_reg_4042 <= or_ln785_12_fu_1789_p2;
                or_ln785_13_reg_4057 <= or_ln785_13_fu_2016_p2;
                or_ln785_14_reg_4072 <= or_ln785_14_fu_2239_p2;
                or_ln785_15_reg_4087 <= or_ln785_15_fu_2462_p2;
                or_ln785_16_reg_4102 <= or_ln785_16_fu_2685_p2;
                or_ln785_17_reg_4117 <= or_ln785_17_fu_2908_p2;
                or_ln785_18_reg_4132 <= or_ln785_18_fu_3131_p2;
                or_ln785_19_reg_4147 <= or_ln785_19_fu_3354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_0_V_0_fu_160 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                buf_0_V_0_load_reg_3674 <= buf_0_V_0_fu_160;
                buf_1_V_0_load_reg_3679 <= buf_1_V_0_fu_164;
                buf_2_V_0_load_reg_3684 <= buf_2_V_0_fu_168;
                buf_3_V_0_load_reg_3689 <= buf_3_V_0_fu_172;
                buf_4_V_0_load_reg_3694 <= buf_4_V_0_fu_176;
                buf_5_V_0_load_reg_3699 <= buf_5_V_0_fu_180;
                buf_6_V_0_load_reg_3704 <= buf_6_V_0_fu_184;
                buf_7_V_0_load_reg_3709 <= buf_7_V_0_fu_188;
                buf_8_V_0_load_reg_3714 <= buf_8_V_0_fu_192;
                buf_9_V_0_load_reg_3719 <= buf_9_V_0_fu_196;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_1_V_0_fu_164 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_2) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_2_V_0_fu_168 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_3) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_3_V_0_fu_172 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_4) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_4_V_0_fu_176 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_5_V_0_fu_180 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_6_V_0_fu_184 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_7_V_0_fu_188 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_8) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_8_V_0_fu_192 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_8)) and not((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_7)) and not((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_6)) and not((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_5)) and not((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_4)) and not((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_3)) and not((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_2)) and not((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_1)) and not((ap_phi_mux_coo_0_phi_fu_360_p4 = ap_const_lv4_0)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                buf_9_V_0_fu_196 <= sext_ln415_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln356_reg_3732 <= icmp_ln356_fu_643_p2;
                icmp_ln356_reg_3732_pp1_iter1_reg <= icmp_ln356_reg_3732;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln356_reg_3732_pp1_iter2_reg <= icmp_ln356_reg_3732_pp1_iter1_reg;
                icmp_ln356_reg_3732_pp1_iter3_reg <= icmp_ln356_reg_3732_pp1_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln356_reg_3732_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                mul_ln1118_1_reg_3867 <= mul_ln1118_1_fu_3542_p2;
                mul_ln1118_2_reg_3882 <= mul_ln1118_2_fu_3550_p2;
                mul_ln1118_3_reg_3897 <= mul_ln1118_3_fu_3558_p2;
                mul_ln1118_4_reg_3912 <= mul_ln1118_4_fu_3566_p2;
                mul_ln1118_5_reg_3927 <= mul_ln1118_5_fu_3574_p2;
                mul_ln1118_6_reg_3942 <= mul_ln1118_6_fu_3582_p2;
                mul_ln1118_7_reg_3957 <= mul_ln1118_7_fu_3590_p2;
                mul_ln1118_8_reg_3972 <= mul_ln1118_8_fu_3598_p2;
                mul_ln1118_9_reg_3987 <= mul_ln1118_9_fu_3606_p2;
                mul_ln1118_reg_3852 <= mul_ln1118_fu_3534_p2;
                tmp_183_reg_3862 <= mul_ln1118_fu_3534_p2(15 downto 15);
                tmp_189_reg_3877 <= mul_ln1118_1_fu_3542_p2(15 downto 15);
                tmp_195_reg_3892 <= mul_ln1118_2_fu_3550_p2(15 downto 15);
                tmp_201_reg_3907 <= mul_ln1118_3_fu_3558_p2(15 downto 15);
                tmp_207_reg_3922 <= mul_ln1118_4_fu_3566_p2(15 downto 15);
                tmp_213_reg_3937 <= mul_ln1118_5_fu_3574_p2(15 downto 15);
                tmp_219_reg_3952 <= mul_ln1118_6_fu_3582_p2(15 downto 15);
                tmp_225_reg_3967 <= mul_ln1118_7_fu_3590_p2(15 downto 15);
                tmp_231_reg_3982 <= mul_ln1118_8_fu_3598_p2(15 downto 15);
                tmp_237_reg_3997 <= mul_ln1118_9_fu_3606_p2(15 downto 15);
                trunc_ln1192_1_reg_3872 <= trunc_ln1192_1_fu_1012_p1;
                trunc_ln1192_2_reg_3887 <= trunc_ln1192_2_fu_1025_p1;
                trunc_ln1192_3_reg_3902 <= trunc_ln1192_3_fu_1038_p1;
                trunc_ln1192_4_reg_3917 <= trunc_ln1192_4_fu_1051_p1;
                trunc_ln1192_5_reg_3932 <= trunc_ln1192_5_fu_1064_p1;
                trunc_ln1192_6_reg_3947 <= trunc_ln1192_6_fu_1077_p1;
                trunc_ln1192_7_reg_3962 <= trunc_ln1192_7_fu_1090_p1;
                trunc_ln1192_8_reg_3977 <= trunc_ln1192_8_fu_1103_p1;
                trunc_ln1192_9_reg_3992 <= trunc_ln1192_9_fu_1116_p1;
                trunc_ln1192_reg_3857 <= trunc_ln1192_fu_999_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln356_fu_643_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, ap_CS_fsm_state10, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, icmp_ln351_fu_519_p2, icmp_ln369_fu_3490_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln351_fu_519_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln356_fu_643_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln356_fu_643_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln369_fu_3490_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln1192_10_fu_1147_p2 <= std_logic_vector(signed(sext_ln1192_fu_1138_p1) + signed(trunc_ln1192_reg_3857));
    add_ln1192_11_fu_1370_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_1361_p1) + signed(trunc_ln1192_1_reg_3872));
    add_ln1192_12_fu_1593_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_1584_p1) + signed(trunc_ln1192_2_reg_3887));
    add_ln1192_13_fu_1820_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_1810_p1) + signed(trunc_ln1192_3_reg_3902));
    add_ln1192_14_fu_2043_p2 <= std_logic_vector(signed(sext_ln1192_4_fu_2034_p1) + signed(trunc_ln1192_4_reg_3917));
    add_ln1192_15_fu_2266_p2 <= std_logic_vector(signed(sext_ln1192_5_fu_2257_p1) + signed(trunc_ln1192_5_reg_3932));
    add_ln1192_16_fu_2489_p2 <= std_logic_vector(signed(sext_ln1192_6_fu_2480_p1) + signed(trunc_ln1192_6_reg_3947));
    add_ln1192_17_fu_2712_p2 <= std_logic_vector(signed(sext_ln1192_7_fu_2703_p1) + signed(trunc_ln1192_7_reg_3962));
    add_ln1192_18_fu_2935_p2 <= std_logic_vector(signed(sext_ln1192_8_fu_2926_p1) + signed(trunc_ln1192_8_reg_3977));
    add_ln1192_19_fu_3158_p2 <= std_logic_vector(signed(sext_ln1192_9_fu_3149_p1) + signed(trunc_ln1192_9_reg_3992));
    add_ln1192_1_fu_1365_p2 <= std_logic_vector(signed(mul_ln1118_1_reg_3867) + signed(sext_ln728_1_fu_1357_p1));
    add_ln1192_2_fu_1588_p2 <= std_logic_vector(signed(mul_ln1118_2_reg_3882) + signed(sext_ln728_2_fu_1580_p1));
    add_ln1192_3_fu_1814_p2 <= std_logic_vector(signed(sext_ln1192_10_fu_1807_p1) + signed(sext_ln728_3_fu_1803_p1));
    add_ln1192_4_fu_2038_p2 <= std_logic_vector(signed(mul_ln1118_4_reg_3912) + signed(sext_ln728_4_fu_2030_p1));
    add_ln1192_5_fu_2261_p2 <= std_logic_vector(signed(mul_ln1118_5_reg_3927) + signed(sext_ln728_5_fu_2253_p1));
    add_ln1192_6_fu_2484_p2 <= std_logic_vector(signed(mul_ln1118_6_reg_3942) + signed(sext_ln728_6_fu_2476_p1));
    add_ln1192_7_fu_2707_p2 <= std_logic_vector(signed(mul_ln1118_7_reg_3957) + signed(sext_ln728_7_fu_2699_p1));
    add_ln1192_8_fu_2930_p2 <= std_logic_vector(signed(mul_ln1118_8_reg_3972) + signed(sext_ln728_8_fu_2922_p1));
    add_ln1192_9_fu_3153_p2 <= std_logic_vector(signed(mul_ln1118_9_reg_3987) + signed(sext_ln728_9_fu_3145_p1));
    add_ln1192_fu_1142_p2 <= std_logic_vector(signed(mul_ln1118_reg_3852) + signed(sext_ln728_fu_1134_p1));
    add_ln415_1_fu_728_p2 <= std_logic_vector(signed(sext_ln415_2_fu_712_p1) + signed(zext_ln415_2_fu_724_p1));
    add_ln415_2_fu_760_p2 <= std_logic_vector(signed(sext_ln415_3_fu_744_p1) + signed(zext_ln415_3_fu_756_p1));
    add_ln415_3_fu_792_p2 <= std_logic_vector(signed(sext_ln415_4_fu_776_p1) + signed(zext_ln415_4_fu_788_p1));
    add_ln415_4_fu_824_p2 <= std_logic_vector(signed(sext_ln415_5_fu_808_p1) + signed(zext_ln415_5_fu_820_p1));
    add_ln415_5_fu_856_p2 <= std_logic_vector(signed(sext_ln415_6_fu_840_p1) + signed(zext_ln415_6_fu_852_p1));
    add_ln415_6_fu_888_p2 <= std_logic_vector(signed(sext_ln415_7_fu_872_p1) + signed(zext_ln415_7_fu_884_p1));
    add_ln415_7_fu_920_p2 <= std_logic_vector(signed(sext_ln415_8_fu_904_p1) + signed(zext_ln415_8_fu_916_p1));
    add_ln415_8_fu_952_p2 <= std_logic_vector(signed(sext_ln415_9_fu_936_p1) + signed(zext_ln415_9_fu_948_p1));
    add_ln415_9_fu_984_p2 <= std_logic_vector(signed(sext_ln415_10_fu_968_p1) + signed(zext_ln415_10_fu_980_p1));
    add_ln415_fu_696_p2 <= std_logic_vector(signed(sext_ln415_1_fu_680_p1) + signed(zext_ln415_1_fu_692_p1));
    and_ln416_1_fu_1424_p2 <= (xor_ln416_1_fu_1418_p2 and tmp_188_fu_1393_p3);
    and_ln416_2_fu_1647_p2 <= (xor_ln416_2_fu_1641_p2 and tmp_194_fu_1616_p3);
    and_ln416_3_fu_1874_p2 <= (xor_ln416_3_fu_1868_p2 and tmp_200_fu_1843_p3);
    and_ln416_4_fu_2097_p2 <= (xor_ln416_4_fu_2091_p2 and tmp_206_fu_2066_p3);
    and_ln416_5_fu_2320_p2 <= (xor_ln416_5_fu_2314_p2 and tmp_212_fu_2289_p3);
    and_ln416_6_fu_2543_p2 <= (xor_ln416_6_fu_2537_p2 and tmp_218_fu_2512_p3);
    and_ln416_7_fu_2766_p2 <= (xor_ln416_7_fu_2760_p2 and tmp_224_fu_2735_p3);
    and_ln416_8_fu_2989_p2 <= (xor_ln416_8_fu_2983_p2 and tmp_230_fu_2958_p3);
    and_ln416_9_fu_3212_p2 <= (xor_ln416_9_fu_3206_p2 and tmp_236_fu_3181_p3);
    and_ln416_fu_1201_p2 <= (xor_ln416_fu_1195_p2 and tmp_182_fu_1170_p3);
    and_ln779_1_fu_1498_p2 <= (xor_ln779_1_fu_1492_p2 and icmp_ln879_2_fu_1448_p2);
    and_ln779_2_fu_1721_p2 <= (xor_ln779_2_fu_1715_p2 and icmp_ln879_4_fu_1671_p2);
    and_ln779_3_fu_1948_p2 <= (xor_ln779_3_fu_1942_p2 and icmp_ln879_6_fu_1898_p2);
    and_ln779_4_fu_2171_p2 <= (xor_ln779_4_fu_2165_p2 and icmp_ln879_8_fu_2121_p2);
    and_ln779_5_fu_2394_p2 <= (xor_ln779_5_fu_2388_p2 and icmp_ln879_10_fu_2344_p2);
    and_ln779_6_fu_2617_p2 <= (xor_ln779_6_fu_2611_p2 and icmp_ln879_12_fu_2567_p2);
    and_ln779_7_fu_2840_p2 <= (xor_ln779_7_fu_2834_p2 and icmp_ln879_14_fu_2790_p2);
    and_ln779_8_fu_3063_p2 <= (xor_ln779_8_fu_3057_p2 and icmp_ln879_16_fu_3013_p2);
    and_ln779_9_fu_3286_p2 <= (xor_ln779_9_fu_3280_p2 and icmp_ln879_18_fu_3236_p2);
    and_ln779_fu_1275_p2 <= (xor_ln779_fu_1269_p2 and icmp_ln879_fu_1225_p2);
    and_ln781_1_fu_1512_p2 <= (icmp_ln879_3_fu_1464_p2 and and_ln416_1_fu_1424_p2);
    and_ln781_2_fu_1735_p2 <= (icmp_ln879_5_fu_1687_p2 and and_ln416_2_fu_1647_p2);
    and_ln781_3_fu_1962_p2 <= (icmp_ln879_7_fu_1914_p2 and and_ln416_3_fu_1874_p2);
    and_ln781_4_fu_2185_p2 <= (icmp_ln879_9_fu_2137_p2 and and_ln416_4_fu_2097_p2);
    and_ln781_5_fu_2408_p2 <= (icmp_ln879_11_fu_2360_p2 and and_ln416_5_fu_2320_p2);
    and_ln781_6_fu_2631_p2 <= (icmp_ln879_13_fu_2583_p2 and and_ln416_6_fu_2543_p2);
    and_ln781_7_fu_2854_p2 <= (icmp_ln879_15_fu_2806_p2 and and_ln416_7_fu_2766_p2);
    and_ln781_8_fu_3077_p2 <= (icmp_ln879_17_fu_3029_p2 and and_ln416_8_fu_2989_p2);
    and_ln781_9_fu_3300_p2 <= (icmp_ln879_19_fu_3252_p2 and and_ln416_9_fu_3212_p2);
    and_ln781_fu_1289_p2 <= (icmp_ln879_1_fu_1241_p2 and and_ln416_fu_1201_p2);
    and_ln785_1_fu_1536_p2 <= (xor_ln785_11_fu_1530_p2 and or_ln785_1_fu_1524_p2);
    and_ln785_2_fu_1759_p2 <= (xor_ln785_12_fu_1753_p2 and or_ln785_2_fu_1747_p2);
    and_ln785_3_fu_1986_p2 <= (xor_ln785_13_fu_1980_p2 and or_ln785_3_fu_1974_p2);
    and_ln785_4_fu_2209_p2 <= (xor_ln785_14_fu_2203_p2 and or_ln785_4_fu_2197_p2);
    and_ln785_5_fu_2432_p2 <= (xor_ln785_15_fu_2426_p2 and or_ln785_5_fu_2420_p2);
    and_ln785_6_fu_2655_p2 <= (xor_ln785_16_fu_2649_p2 and or_ln785_6_fu_2643_p2);
    and_ln785_7_fu_2878_p2 <= (xor_ln785_17_fu_2872_p2 and or_ln785_7_fu_2866_p2);
    and_ln785_8_fu_3101_p2 <= (xor_ln785_18_fu_3095_p2 and or_ln785_8_fu_3089_p2);
    and_ln785_9_fu_3324_p2 <= (xor_ln785_19_fu_3318_p2 and or_ln785_9_fu_3312_p2);
    and_ln785_fu_1313_p2 <= (xor_ln785_1_fu_1307_p2 and or_ln785_fu_1301_p2);
    and_ln786_10_fu_1337_p2 <= (xor_ln786_fu_1331_p2 and tmp_181_fu_1152_p3);
    and_ln786_11_fu_1560_p2 <= (xor_ln786_1_fu_1554_p2 and tmp_187_fu_1375_p3);
    and_ln786_12_fu_1783_p2 <= (xor_ln786_2_fu_1777_p2 and tmp_193_fu_1598_p3);
    and_ln786_13_fu_2010_p2 <= (xor_ln786_3_fu_2004_p2 and tmp_199_fu_1825_p3);
    and_ln786_14_fu_2233_p2 <= (xor_ln786_4_fu_2227_p2 and tmp_205_fu_2048_p3);
    and_ln786_15_fu_2456_p2 <= (xor_ln786_5_fu_2450_p2 and tmp_211_fu_2271_p3);
    and_ln786_16_fu_2679_p2 <= (xor_ln786_6_fu_2673_p2 and tmp_217_fu_2494_p3);
    and_ln786_17_fu_2902_p2 <= (xor_ln786_7_fu_2896_p2 and tmp_223_fu_2717_p3);
    and_ln786_18_fu_3125_p2 <= (xor_ln786_8_fu_3119_p2 and tmp_229_fu_2940_p3);
    and_ln786_19_fu_3348_p2 <= (xor_ln786_9_fu_3342_p2 and tmp_235_fu_3163_p3);
    and_ln786_1_fu_1542_p2 <= (tmp_191_fu_1430_p3 and select_ln416_1_fu_1504_p3);
    and_ln786_2_fu_1765_p2 <= (tmp_197_fu_1653_p3 and select_ln416_2_fu_1727_p3);
    and_ln786_3_fu_1992_p2 <= (tmp_203_fu_1880_p3 and select_ln416_3_fu_1954_p3);
    and_ln786_4_fu_2215_p2 <= (tmp_209_fu_2103_p3 and select_ln416_4_fu_2177_p3);
    and_ln786_5_fu_2438_p2 <= (tmp_215_fu_2326_p3 and select_ln416_5_fu_2400_p3);
    and_ln786_6_fu_2661_p2 <= (tmp_221_fu_2549_p3 and select_ln416_6_fu_2623_p3);
    and_ln786_7_fu_2884_p2 <= (tmp_227_fu_2772_p3 and select_ln416_7_fu_2846_p3);
    and_ln786_8_fu_3107_p2 <= (tmp_233_fu_2995_p3 and select_ln416_8_fu_3069_p3);
    and_ln786_9_fu_3330_p2 <= (tmp_239_fu_3218_p3 and select_ln416_9_fu_3292_p3);
    and_ln786_fu_1319_p2 <= (tmp_185_fu_1207_p3 and select_ln416_fu_1281_p3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5);
    ap_CS_fsm_state11 <= ap_CS_fsm(6);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state9 <= ap_CS_fsm(4);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state4_assign_proc : process(icmp_ln356_fu_643_p2)
    begin
        if ((icmp_ln356_fu_643_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_buf_0_V_21_phi_fu_460_p4_assign_proc : process(buf_0_V_21_reg_457, icmp_ln356_reg_3732_pp1_iter3_reg, select_ln785_1_fu_3367_p3, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_0_V_21_phi_fu_460_p4 <= select_ln785_1_fu_3367_p3;
        else 
            ap_phi_mux_buf_0_V_21_phi_fu_460_p4 <= buf_0_V_21_reg_457;
        end if; 
    end process;


    ap_phi_mux_buf_1_V_22_phi_fu_450_p4_assign_proc : process(buf_1_V_22_reg_447, icmp_ln356_reg_3732_pp1_iter3_reg, ap_enable_reg_pp1_iter4, select_ln785_3_fu_3380_p3, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_1_V_22_phi_fu_450_p4 <= select_ln785_3_fu_3380_p3;
        else 
            ap_phi_mux_buf_1_V_22_phi_fu_450_p4 <= buf_1_V_22_reg_447;
        end if; 
    end process;


    ap_phi_mux_buf_2_V_23_phi_fu_440_p4_assign_proc : process(buf_2_V_23_reg_437, icmp_ln356_reg_3732_pp1_iter3_reg, ap_enable_reg_pp1_iter4, select_ln785_5_fu_3393_p3, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_2_V_23_phi_fu_440_p4 <= select_ln785_5_fu_3393_p3;
        else 
            ap_phi_mux_buf_2_V_23_phi_fu_440_p4 <= buf_2_V_23_reg_437;
        end if; 
    end process;


    ap_phi_mux_buf_3_V_24_phi_fu_430_p4_assign_proc : process(buf_3_V_24_reg_427, icmp_ln356_reg_3732_pp1_iter3_reg, ap_enable_reg_pp1_iter4, select_ln785_7_fu_3406_p3, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_3_V_24_phi_fu_430_p4 <= select_ln785_7_fu_3406_p3;
        else 
            ap_phi_mux_buf_3_V_24_phi_fu_430_p4 <= buf_3_V_24_reg_427;
        end if; 
    end process;


    ap_phi_mux_buf_4_V_25_phi_fu_420_p4_assign_proc : process(buf_4_V_25_reg_417, icmp_ln356_reg_3732_pp1_iter3_reg, ap_enable_reg_pp1_iter4, select_ln785_9_fu_3419_p3, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_4_V_25_phi_fu_420_p4 <= select_ln785_9_fu_3419_p3;
        else 
            ap_phi_mux_buf_4_V_25_phi_fu_420_p4 <= buf_4_V_25_reg_417;
        end if; 
    end process;


    ap_phi_mux_buf_5_V_26_phi_fu_410_p4_assign_proc : process(buf_5_V_26_reg_407, icmp_ln356_reg_3732_pp1_iter3_reg, ap_enable_reg_pp1_iter4, select_ln785_11_fu_3432_p3, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_5_V_26_phi_fu_410_p4 <= select_ln785_11_fu_3432_p3;
        else 
            ap_phi_mux_buf_5_V_26_phi_fu_410_p4 <= buf_5_V_26_reg_407;
        end if; 
    end process;


    ap_phi_mux_buf_6_V_27_phi_fu_400_p4_assign_proc : process(buf_6_V_27_reg_397, icmp_ln356_reg_3732_pp1_iter3_reg, ap_enable_reg_pp1_iter4, select_ln785_13_fu_3445_p3, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_6_V_27_phi_fu_400_p4 <= select_ln785_13_fu_3445_p3;
        else 
            ap_phi_mux_buf_6_V_27_phi_fu_400_p4 <= buf_6_V_27_reg_397;
        end if; 
    end process;


    ap_phi_mux_buf_7_V_28_phi_fu_390_p4_assign_proc : process(buf_7_V_28_reg_387, icmp_ln356_reg_3732_pp1_iter3_reg, ap_enable_reg_pp1_iter4, select_ln785_15_fu_3458_p3, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_7_V_28_phi_fu_390_p4 <= select_ln785_15_fu_3458_p3;
        else 
            ap_phi_mux_buf_7_V_28_phi_fu_390_p4 <= buf_7_V_28_reg_387;
        end if; 
    end process;


    ap_phi_mux_buf_8_V_29_phi_fu_380_p4_assign_proc : process(buf_8_V_29_reg_377, icmp_ln356_reg_3732_pp1_iter3_reg, ap_enable_reg_pp1_iter4, select_ln785_17_fu_3471_p3, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_8_V_29_phi_fu_380_p4 <= select_ln785_17_fu_3471_p3;
        else 
            ap_phi_mux_buf_8_V_29_phi_fu_380_p4 <= buf_8_V_29_reg_377;
        end if; 
    end process;


    ap_phi_mux_buf_9_V_210_phi_fu_370_p4_assign_proc : process(buf_9_V_210_reg_367, icmp_ln356_reg_3732_pp1_iter3_reg, ap_enable_reg_pp1_iter4, select_ln785_19_fu_3484_p3, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln356_reg_3732_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_buf_9_V_210_phi_fu_370_p4 <= select_ln785_19_fu_3484_p3;
        else 
            ap_phi_mux_buf_9_V_210_phi_fu_370_p4 <= buf_9_V_210_reg_367;
        end if; 
    end process;

    ap_phi_mux_coo_0_phi_fu_360_p4 <= coo_0_reg_356;

    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buf_0_V_2_fu_583_p2 <= std_logic_vector(signed(sext_ln713_fu_567_p1) + signed(zext_ln415_fu_579_p1));
    buf_0_V_fu_1181_p2 <= std_logic_vector(unsigned(zext_ln415_11_fu_1178_p1) + unsigned(trunc_ln708_s_fu_1160_p4));
    buf_1_V_fu_1404_p2 <= std_logic_vector(unsigned(zext_ln415_12_fu_1401_p1) + unsigned(trunc_ln708_1_fu_1383_p4));
    buf_2_V_fu_1627_p2 <= std_logic_vector(unsigned(zext_ln415_13_fu_1624_p1) + unsigned(trunc_ln708_2_fu_1606_p4));
    buf_3_V_fu_1854_p2 <= std_logic_vector(unsigned(zext_ln415_14_fu_1851_p1) + unsigned(trunc_ln708_3_fu_1833_p4));
    buf_4_V_fu_2077_p2 <= std_logic_vector(unsigned(zext_ln415_15_fu_2074_p1) + unsigned(trunc_ln708_4_fu_2056_p4));
    buf_5_V_fu_2300_p2 <= std_logic_vector(unsigned(zext_ln415_16_fu_2297_p1) + unsigned(trunc_ln708_5_fu_2279_p4));
    buf_6_V_fu_2523_p2 <= std_logic_vector(unsigned(zext_ln415_17_fu_2520_p1) + unsigned(trunc_ln708_6_fu_2502_p4));
    buf_7_V_fu_2746_p2 <= std_logic_vector(unsigned(zext_ln415_18_fu_2743_p1) + unsigned(trunc_ln708_7_fu_2725_p4));
    buf_8_V_1_fu_2969_p2 <= std_logic_vector(unsigned(zext_ln415_19_fu_2966_p1) + unsigned(trunc_ln708_8_fu_2948_p4));
    buf_9_V_fu_3192_p2 <= std_logic_vector(unsigned(zext_ln415_20_fu_3189_p1) + unsigned(trunc_ln708_9_fu_3171_p4));
    cii_fu_649_p2 <= std_logic_vector(unsigned(cii_0_reg_467) + unsigned(ap_const_lv7_1));
    coo_1_fu_3496_p2 <= std_logic_vector(unsigned(coo4_0_reg_478) + unsigned(ap_const_lv4_1));
    coo_fu_525_p2 <= std_logic_vector(unsigned(coo_0_reg_356) + unsigned(ap_const_lv4_1));
    icmp_ln351_fu_519_p2 <= "1" when (coo_0_reg_356 = ap_const_lv4_A) else "0";
    icmp_ln356_fu_643_p2 <= "1" when (cii_0_reg_467 = ap_const_lv7_40) else "0";
    icmp_ln369_fu_3490_p2 <= "1" when (coo4_0_reg_478 = ap_const_lv4_A) else "0";
    icmp_ln768_1_fu_1470_p2 <= "1" when (tmp_7_fu_1454_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_2_fu_1693_p2 <= "1" when (tmp_9_fu_1677_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_3_fu_1920_p2 <= "1" when (tmp_3_fu_1904_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_4_fu_2143_p2 <= "1" when (tmp_11_fu_2127_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_5_fu_2366_p2 <= "1" when (tmp_13_fu_2350_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_6_fu_2589_p2 <= "1" when (tmp_15_fu_2573_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_7_fu_2812_p2 <= "1" when (tmp_17_fu_2796_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_8_fu_3035_p2 <= "1" when (tmp_19_fu_3019_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_9_fu_3258_p2 <= "1" when (tmp_21_fu_3242_p4 = ap_const_lv4_0) else "0";
    icmp_ln768_fu_1247_p2 <= "1" when (tmp_5_fu_1231_p4 = ap_const_lv4_0) else "0";
    icmp_ln879_10_fu_2344_p2 <= "1" when (tmp_12_fu_2334_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_11_fu_2360_p2 <= "1" when (tmp_13_fu_2350_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_12_fu_2567_p2 <= "1" when (tmp_14_fu_2557_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_13_fu_2583_p2 <= "1" when (tmp_15_fu_2573_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_14_fu_2790_p2 <= "1" when (tmp_16_fu_2780_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_15_fu_2806_p2 <= "1" when (tmp_17_fu_2796_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_16_fu_3013_p2 <= "1" when (tmp_18_fu_3003_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_17_fu_3029_p2 <= "1" when (tmp_19_fu_3019_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_18_fu_3236_p2 <= "1" when (tmp_20_fu_3226_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_19_fu_3252_p2 <= "1" when (tmp_21_fu_3242_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_1_fu_1241_p2 <= "1" when (tmp_5_fu_1231_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_2_fu_1448_p2 <= "1" when (tmp_6_fu_1438_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_3_fu_1464_p2 <= "1" when (tmp_7_fu_1454_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_4_fu_1671_p2 <= "1" when (tmp_8_fu_1661_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_5_fu_1687_p2 <= "1" when (tmp_9_fu_1677_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_6_fu_1898_p2 <= "1" when (tmp_2_fu_1888_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_7_fu_1914_p2 <= "1" when (tmp_3_fu_1904_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_8_fu_2121_p2 <= "1" when (tmp_10_fu_2111_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_9_fu_2137_p2 <= "1" when (tmp_11_fu_2127_p4 = ap_const_lv4_F) else "0";
    icmp_ln879_fu_1225_p2 <= "1" when (tmp_4_fu_1215_p4 = ap_const_lv3_7) else "0";
    inputs_V_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    inputs_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            inputs_V_ce0 <= ap_const_logic_1;
        else 
            inputs_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_1_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_1_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_2_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_2_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_2_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_3_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_3_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_3_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_4_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_4_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_4_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_5_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_5_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_5_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_6_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_6_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_6_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_7_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_7_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_7_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_8_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_8_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_8_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_9_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_9_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_9_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linear_weight_fix_V_s_address0 <= zext_ln358_fu_655_p1(6 - 1 downto 0);

    linear_weight_fix_V_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            linear_weight_fix_V_s_ce0 <= ap_const_logic_1;
        else 
            linear_weight_fix_V_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_1_fu_3542_p1 <= sext_ln1118_2_fu_993_p1(24 - 1 downto 0);
    mul_ln1118_2_fu_3550_p1 <= sext_ln1118_2_fu_993_p1(24 - 1 downto 0);
    mul_ln1118_4_fu_3566_p1 <= sext_ln1118_2_fu_993_p1(24 - 1 downto 0);
    mul_ln1118_5_fu_3574_p1 <= sext_ln1118_2_fu_993_p1(24 - 1 downto 0);
    mul_ln1118_6_fu_3582_p1 <= sext_ln1118_2_fu_993_p1(24 - 1 downto 0);
    mul_ln1118_7_fu_3590_p1 <= sext_ln1118_2_fu_993_p1(24 - 1 downto 0);
    mul_ln1118_8_fu_3598_p1 <= sext_ln1118_2_fu_993_p1(24 - 1 downto 0);
    mul_ln1118_9_fu_3606_p1 <= sext_ln1118_2_fu_993_p1(24 - 1 downto 0);
    mul_ln1118_fu_3534_p1 <= sext_ln1118_2_fu_993_p1(24 - 1 downto 0);
    or_ln785_10_fu_1343_p2 <= (and_ln786_10_fu_1337_p2 or and_ln785_fu_1313_p2);
    or_ln785_11_fu_1566_p2 <= (and_ln786_11_fu_1560_p2 or and_ln785_1_fu_1536_p2);
    or_ln785_12_fu_1789_p2 <= (and_ln786_12_fu_1783_p2 or and_ln785_2_fu_1759_p2);
    or_ln785_13_fu_2016_p2 <= (and_ln786_13_fu_2010_p2 or and_ln785_3_fu_1986_p2);
    or_ln785_14_fu_2239_p2 <= (and_ln786_14_fu_2233_p2 or and_ln785_4_fu_2209_p2);
    or_ln785_15_fu_2462_p2 <= (and_ln786_15_fu_2456_p2 or and_ln785_5_fu_2432_p2);
    or_ln785_16_fu_2685_p2 <= (and_ln786_16_fu_2679_p2 or and_ln785_6_fu_2655_p2);
    or_ln785_17_fu_2908_p2 <= (and_ln786_17_fu_2902_p2 or and_ln785_7_fu_2878_p2);
    or_ln785_18_fu_3131_p2 <= (and_ln786_18_fu_3125_p2 or and_ln785_8_fu_3101_p2);
    or_ln785_19_fu_3354_p2 <= (and_ln786_19_fu_3348_p2 or and_ln785_9_fu_3324_p2);
    or_ln785_1_fu_1524_p2 <= (xor_ln785_10_fu_1518_p2 or tmp_191_fu_1430_p3);
    or_ln785_2_fu_1747_p2 <= (xor_ln785_2_fu_1741_p2 or tmp_197_fu_1653_p3);
    or_ln785_3_fu_1974_p2 <= (xor_ln785_3_fu_1968_p2 or tmp_203_fu_1880_p3);
    or_ln785_4_fu_2197_p2 <= (xor_ln785_4_fu_2191_p2 or tmp_209_fu_2103_p3);
    or_ln785_5_fu_2420_p2 <= (xor_ln785_5_fu_2414_p2 or tmp_215_fu_2326_p3);
    or_ln785_6_fu_2643_p2 <= (xor_ln785_6_fu_2637_p2 or tmp_221_fu_2549_p3);
    or_ln785_7_fu_2866_p2 <= (xor_ln785_7_fu_2860_p2 or tmp_227_fu_2772_p3);
    or_ln785_8_fu_3089_p2 <= (xor_ln785_8_fu_3083_p2 or tmp_233_fu_2995_p3);
    or_ln785_9_fu_3312_p2 <= (xor_ln785_9_fu_3306_p2 or tmp_239_fu_3218_p3);
    or_ln785_fu_1301_p2 <= (xor_ln785_fu_1295_p2 or tmp_185_fu_1207_p3);
    or_ln786_1_fu_1548_p2 <= (and_ln786_1_fu_1542_p2 or and_ln781_1_fu_1512_p2);
    or_ln786_2_fu_1771_p2 <= (and_ln786_2_fu_1765_p2 or and_ln781_2_fu_1735_p2);
    or_ln786_3_fu_1998_p2 <= (and_ln786_3_fu_1992_p2 or and_ln781_3_fu_1962_p2);
    or_ln786_4_fu_2221_p2 <= (and_ln786_4_fu_2215_p2 or and_ln781_4_fu_2185_p2);
    or_ln786_5_fu_2444_p2 <= (and_ln786_5_fu_2438_p2 or and_ln781_5_fu_2408_p2);
    or_ln786_6_fu_2667_p2 <= (and_ln786_6_fu_2661_p2 or and_ln781_6_fu_2631_p2);
    or_ln786_7_fu_2890_p2 <= (and_ln786_7_fu_2884_p2 or and_ln781_7_fu_2854_p2);
    or_ln786_8_fu_3113_p2 <= (and_ln786_8_fu_3107_p2 or and_ln781_8_fu_3077_p2);
    or_ln786_9_fu_3336_p2 <= (and_ln786_9_fu_3330_p2 or and_ln781_9_fu_3300_p2);
    or_ln786_fu_1325_p2 <= (and_ln786_fu_1319_p2 or and_ln781_fu_1289_p2);
    outputs_V_address0 <= zext_ln371_fu_3502_p1(4 - 1 downto 0);

    outputs_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            outputs_V_ce0 <= ap_const_logic_1;
        else 
            outputs_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    outputs_V_d0 <= tmp_22_fu_3507_p12;

    outputs_V_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln369_fu_3490_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln369_fu_3490_p2 = ap_const_lv1_0))) then 
            outputs_V_we0 <= ap_const_logic_1;
        else 
            outputs_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln416_1_fu_1504_p3 <= 
        and_ln779_1_fu_1498_p2 when (and_ln416_1_fu_1424_p2(0) = '1') else 
        icmp_ln879_3_fu_1464_p2;
    select_ln416_2_fu_1727_p3 <= 
        and_ln779_2_fu_1721_p2 when (and_ln416_2_fu_1647_p2(0) = '1') else 
        icmp_ln879_5_fu_1687_p2;
    select_ln416_3_fu_1954_p3 <= 
        and_ln779_3_fu_1948_p2 when (and_ln416_3_fu_1874_p2(0) = '1') else 
        icmp_ln879_7_fu_1914_p2;
    select_ln416_4_fu_2177_p3 <= 
        and_ln779_4_fu_2171_p2 when (and_ln416_4_fu_2097_p2(0) = '1') else 
        icmp_ln879_9_fu_2137_p2;
    select_ln416_5_fu_2400_p3 <= 
        and_ln779_5_fu_2394_p2 when (and_ln416_5_fu_2320_p2(0) = '1') else 
        icmp_ln879_11_fu_2360_p2;
    select_ln416_6_fu_2623_p3 <= 
        and_ln779_6_fu_2617_p2 when (and_ln416_6_fu_2543_p2(0) = '1') else 
        icmp_ln879_13_fu_2583_p2;
    select_ln416_7_fu_2846_p3 <= 
        and_ln779_7_fu_2840_p2 when (and_ln416_7_fu_2766_p2(0) = '1') else 
        icmp_ln879_15_fu_2806_p2;
    select_ln416_8_fu_3069_p3 <= 
        and_ln779_8_fu_3063_p2 when (and_ln416_8_fu_2989_p2(0) = '1') else 
        icmp_ln879_17_fu_3029_p2;
    select_ln416_9_fu_3292_p3 <= 
        and_ln779_9_fu_3286_p2 when (and_ln416_9_fu_3212_p2(0) = '1') else 
        icmp_ln879_19_fu_3252_p2;
    select_ln416_fu_1281_p3 <= 
        and_ln779_fu_1275_p2 when (and_ln416_fu_1201_p2(0) = '1') else 
        icmp_ln879_1_fu_1241_p2;
    select_ln777_1_fu_1476_p3 <= 
        icmp_ln879_3_fu_1464_p2 when (and_ln416_1_fu_1424_p2(0) = '1') else 
        icmp_ln768_1_fu_1470_p2;
    select_ln777_2_fu_1699_p3 <= 
        icmp_ln879_5_fu_1687_p2 when (and_ln416_2_fu_1647_p2(0) = '1') else 
        icmp_ln768_2_fu_1693_p2;
    select_ln777_3_fu_1926_p3 <= 
        icmp_ln879_7_fu_1914_p2 when (and_ln416_3_fu_1874_p2(0) = '1') else 
        icmp_ln768_3_fu_1920_p2;
    select_ln777_4_fu_2149_p3 <= 
        icmp_ln879_9_fu_2137_p2 when (and_ln416_4_fu_2097_p2(0) = '1') else 
        icmp_ln768_4_fu_2143_p2;
    select_ln777_5_fu_2372_p3 <= 
        icmp_ln879_11_fu_2360_p2 when (and_ln416_5_fu_2320_p2(0) = '1') else 
        icmp_ln768_5_fu_2366_p2;
    select_ln777_6_fu_2595_p3 <= 
        icmp_ln879_13_fu_2583_p2 when (and_ln416_6_fu_2543_p2(0) = '1') else 
        icmp_ln768_6_fu_2589_p2;
    select_ln777_7_fu_2818_p3 <= 
        icmp_ln879_15_fu_2806_p2 when (and_ln416_7_fu_2766_p2(0) = '1') else 
        icmp_ln768_7_fu_2812_p2;
    select_ln777_8_fu_3041_p3 <= 
        icmp_ln879_17_fu_3029_p2 when (and_ln416_8_fu_2989_p2(0) = '1') else 
        icmp_ln768_8_fu_3035_p2;
    select_ln777_9_fu_3264_p3 <= 
        icmp_ln879_19_fu_3252_p2 when (and_ln416_9_fu_3212_p2(0) = '1') else 
        icmp_ln768_9_fu_3258_p2;
    select_ln777_fu_1253_p3 <= 
        icmp_ln879_1_fu_1241_p2 when (and_ln416_fu_1201_p2(0) = '1') else 
        icmp_ln768_fu_1247_p2;
    select_ln785_10_fu_3425_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_5_reg_4082(0) = '1') else 
        ap_const_lv24_800000;
    select_ln785_11_fu_3432_p3 <= 
        select_ln785_10_fu_3425_p3 when (or_ln785_15_reg_4087(0) = '1') else 
        buf_5_V_reg_4077;
    select_ln785_12_fu_3438_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_6_reg_4097(0) = '1') else 
        ap_const_lv24_800000;
    select_ln785_13_fu_3445_p3 <= 
        select_ln785_12_fu_3438_p3 when (or_ln785_16_reg_4102(0) = '1') else 
        buf_6_V_reg_4092;
    select_ln785_14_fu_3451_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_7_reg_4112(0) = '1') else 
        ap_const_lv24_800000;
    select_ln785_15_fu_3458_p3 <= 
        select_ln785_14_fu_3451_p3 when (or_ln785_17_reg_4117(0) = '1') else 
        buf_7_V_reg_4107;
    select_ln785_16_fu_3464_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_8_reg_4127(0) = '1') else 
        ap_const_lv24_800000;
    select_ln785_17_fu_3471_p3 <= 
        select_ln785_16_fu_3464_p3 when (or_ln785_18_reg_4132(0) = '1') else 
        buf_8_V_1_reg_4122;
    select_ln785_18_fu_3477_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_9_reg_4142(0) = '1') else 
        ap_const_lv24_800000;
    select_ln785_19_fu_3484_p3 <= 
        select_ln785_18_fu_3477_p3 when (or_ln785_19_reg_4147(0) = '1') else 
        buf_9_V_reg_4137;
    select_ln785_1_fu_3367_p3 <= 
        select_ln785_fu_3360_p3 when (or_ln785_10_reg_4012(0) = '1') else 
        buf_0_V_reg_4002;
    select_ln785_2_fu_3373_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_1_reg_4022(0) = '1') else 
        ap_const_lv24_800000;
    select_ln785_3_fu_3380_p3 <= 
        select_ln785_2_fu_3373_p3 when (or_ln785_11_reg_4027(0) = '1') else 
        buf_1_V_reg_4017;
    select_ln785_4_fu_3386_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_2_reg_4037(0) = '1') else 
        ap_const_lv24_800000;
    select_ln785_5_fu_3393_p3 <= 
        select_ln785_4_fu_3386_p3 when (or_ln785_12_reg_4042(0) = '1') else 
        buf_2_V_reg_4032;
    select_ln785_6_fu_3399_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_3_reg_4052(0) = '1') else 
        ap_const_lv24_800000;
    select_ln785_7_fu_3406_p3 <= 
        select_ln785_6_fu_3399_p3 when (or_ln785_13_reg_4057(0) = '1') else 
        buf_3_V_reg_4047;
    select_ln785_8_fu_3412_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_4_reg_4067(0) = '1') else 
        ap_const_lv24_800000;
    select_ln785_9_fu_3419_p3 <= 
        select_ln785_8_fu_3412_p3 when (or_ln785_14_reg_4072(0) = '1') else 
        buf_4_V_reg_4062;
    select_ln785_fu_3360_p3 <= 
        ap_const_lv24_7FFFFF when (and_ln785_reg_4007(0) = '1') else 
        ap_const_lv24_800000;
        sext_ln1118_2_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_in_V_reg_3796),44));

        sext_ln1192_10_fu_1807_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_3_reg_3897),44));

        sext_ln1192_1_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_1_fu_1349_p3),41));

        sext_ln1192_2_fu_1584_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_2_fu_1572_p3),41));

        sext_ln1192_3_fu_1810_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_3_fu_1795_p3),41));

        sext_ln1192_4_fu_2034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_4_fu_2022_p3),41));

        sext_ln1192_5_fu_2257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_5_fu_2245_p3),41));

        sext_ln1192_6_fu_2480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_6_fu_2468_p3),41));

        sext_ln1192_7_fu_2703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_7_fu_2691_p3),41));

        sext_ln1192_8_fu_2926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_8_fu_2914_p3),41));

        sext_ln1192_9_fu_3149_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_9_fu_3137_p3),41));

        sext_ln1192_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1126_p3),41));

        sext_ln415_10_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_179_fu_958_p4),19));

        sext_ln415_1_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_161_fu_670_p4),19));

        sext_ln415_2_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_163_fu_702_p4),19));

        sext_ln415_3_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_165_fu_734_p4),19));

        sext_ln415_4_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_167_fu_766_p4),18));

        sext_ln415_5_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_169_fu_798_p4),19));

        sext_ln415_6_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_171_fu_830_p4),19));

        sext_ln415_7_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_173_fu_862_p4),19));

        sext_ln415_8_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_175_fu_894_p4),19));

        sext_ln415_9_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_177_fu_926_p4),19));

        sext_ln415_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(buf_0_V_2_fu_583_p2),24));

        sext_ln713_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_557_p4),21));

        sext_ln728_1_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_1_fu_1349_p3),44));

        sext_ln728_2_fu_1580_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_2_fu_1572_p3),44));

        sext_ln728_3_fu_1803_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_3_fu_1795_p3),44));

        sext_ln728_4_fu_2030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_4_fu_2022_p3),44));

        sext_ln728_5_fu_2253_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_5_fu_2245_p3),44));

        sext_ln728_6_fu_2476_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_6_fu_2468_p3),44));

        sext_ln728_7_fu_2699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_7_fu_2691_p3),44));

        sext_ln728_8_fu_2922_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_8_fu_2914_p3),44));

        sext_ln728_9_fu_3145_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_9_fu_3137_p3),44));

        sext_ln728_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1126_p3),44));

    shl_ln728_1_fu_1349_p3 <= (ap_phi_mux_buf_1_V_22_phi_fu_450_p4 & ap_const_lv16_0);
    shl_ln728_2_fu_1572_p3 <= (ap_phi_mux_buf_2_V_23_phi_fu_440_p4 & ap_const_lv16_0);
    shl_ln728_3_fu_1795_p3 <= (ap_phi_mux_buf_3_V_24_phi_fu_430_p4 & ap_const_lv16_0);
    shl_ln728_4_fu_2022_p3 <= (ap_phi_mux_buf_4_V_25_phi_fu_420_p4 & ap_const_lv16_0);
    shl_ln728_5_fu_2245_p3 <= (ap_phi_mux_buf_5_V_26_phi_fu_410_p4 & ap_const_lv16_0);
    shl_ln728_6_fu_2468_p3 <= (ap_phi_mux_buf_6_V_27_phi_fu_400_p4 & ap_const_lv16_0);
    shl_ln728_7_fu_2691_p3 <= (ap_phi_mux_buf_7_V_28_phi_fu_390_p4 & ap_const_lv16_0);
    shl_ln728_8_fu_2914_p3 <= (ap_phi_mux_buf_8_V_29_phi_fu_380_p4 & ap_const_lv16_0);
    shl_ln728_9_fu_3137_p3 <= (ap_phi_mux_buf_9_V_210_phi_fu_370_p4 & ap_const_lv16_0);
    shl_ln_fu_1126_p3 <= (ap_phi_mux_buf_0_V_21_phi_fu_460_p4 & ap_const_lv16_0);
    tmp_10_fu_2111_p4 <= add_ln1192_4_fu_2038_p2(43 downto 41);
    tmp_11_fu_2127_p4 <= add_ln1192_4_fu_2038_p2(43 downto 40);
    tmp_12_fu_2334_p4 <= add_ln1192_5_fu_2261_p2(43 downto 41);
    tmp_13_fu_2350_p4 <= add_ln1192_5_fu_2261_p2(43 downto 40);
    tmp_14_fu_2557_p4 <= add_ln1192_6_fu_2484_p2(43 downto 41);
    tmp_15_fu_2573_p4 <= add_ln1192_6_fu_2484_p2(43 downto 40);
    tmp_160_fu_571_p3 <= p_Val2_s_fu_531_p12(3 downto 3);
    tmp_161_fu_670_p4 <= linear_weight_fix_V_s_q0(21 downto 4);
    tmp_162_fu_684_p3 <= linear_weight_fix_V_s_q0(3 downto 3);
    tmp_163_fu_702_p4 <= linear_weight_fix_V_1_q0(21 downto 4);
    tmp_164_fu_716_p3 <= linear_weight_fix_V_1_q0(3 downto 3);
    tmp_165_fu_734_p4 <= linear_weight_fix_V_2_q0(21 downto 4);
    tmp_166_fu_748_p3 <= linear_weight_fix_V_2_q0(3 downto 3);
    tmp_167_fu_766_p4 <= linear_weight_fix_V_3_q0(20 downto 4);
    tmp_168_fu_780_p3 <= linear_weight_fix_V_3_q0(3 downto 3);
    tmp_169_fu_798_p4 <= linear_weight_fix_V_4_q0(21 downto 4);
    tmp_16_fu_2780_p4 <= add_ln1192_7_fu_2707_p2(43 downto 41);
    tmp_170_fu_812_p3 <= linear_weight_fix_V_4_q0(3 downto 3);
    tmp_171_fu_830_p4 <= linear_weight_fix_V_5_q0(21 downto 4);
    tmp_172_fu_844_p3 <= linear_weight_fix_V_5_q0(3 downto 3);
    tmp_173_fu_862_p4 <= linear_weight_fix_V_6_q0(21 downto 4);
    tmp_174_fu_876_p3 <= linear_weight_fix_V_6_q0(3 downto 3);
    tmp_175_fu_894_p4 <= linear_weight_fix_V_7_q0(21 downto 4);
    tmp_176_fu_908_p3 <= linear_weight_fix_V_7_q0(3 downto 3);
    tmp_177_fu_926_p4 <= linear_weight_fix_V_8_q0(21 downto 4);
    tmp_178_fu_940_p3 <= linear_weight_fix_V_8_q0(3 downto 3);
    tmp_179_fu_958_p4 <= linear_weight_fix_V_9_q0(21 downto 4);
    tmp_17_fu_2796_p4 <= add_ln1192_7_fu_2707_p2(43 downto 40);
    tmp_180_fu_972_p3 <= linear_weight_fix_V_9_q0(3 downto 3);
    tmp_181_fu_1152_p3 <= add_ln1192_fu_1142_p2(43 downto 43);
    tmp_182_fu_1170_p3 <= add_ln1192_fu_1142_p2(39 downto 39);
    tmp_184_fu_1187_p3 <= buf_0_V_fu_1181_p2(23 downto 23);
    tmp_185_fu_1207_p3 <= buf_0_V_fu_1181_p2(23 downto 23);
    tmp_186_fu_1261_p3 <= add_ln1192_10_fu_1147_p2(40 downto 40);
    tmp_187_fu_1375_p3 <= add_ln1192_1_fu_1365_p2(43 downto 43);
    tmp_188_fu_1393_p3 <= add_ln1192_1_fu_1365_p2(39 downto 39);
    tmp_18_fu_3003_p4 <= add_ln1192_8_fu_2930_p2(43 downto 41);
    tmp_190_fu_1410_p3 <= buf_1_V_fu_1404_p2(23 downto 23);
    tmp_191_fu_1430_p3 <= buf_1_V_fu_1404_p2(23 downto 23);
    tmp_192_fu_1484_p3 <= add_ln1192_11_fu_1370_p2(40 downto 40);
    tmp_193_fu_1598_p3 <= add_ln1192_2_fu_1588_p2(43 downto 43);
    tmp_194_fu_1616_p3 <= add_ln1192_2_fu_1588_p2(39 downto 39);
    tmp_196_fu_1633_p3 <= buf_2_V_fu_1627_p2(23 downto 23);
    tmp_197_fu_1653_p3 <= buf_2_V_fu_1627_p2(23 downto 23);
    tmp_198_fu_1707_p3 <= add_ln1192_12_fu_1593_p2(40 downto 40);
    tmp_199_fu_1825_p3 <= add_ln1192_3_fu_1814_p2(43 downto 43);
    tmp_19_fu_3019_p4 <= add_ln1192_8_fu_2930_p2(43 downto 40);
    tmp_200_fu_1843_p3 <= add_ln1192_3_fu_1814_p2(39 downto 39);
    tmp_202_fu_1860_p3 <= buf_3_V_fu_1854_p2(23 downto 23);
    tmp_203_fu_1880_p3 <= buf_3_V_fu_1854_p2(23 downto 23);
    tmp_204_fu_1934_p3 <= add_ln1192_13_fu_1820_p2(40 downto 40);
    tmp_205_fu_2048_p3 <= add_ln1192_4_fu_2038_p2(43 downto 43);
    tmp_206_fu_2066_p3 <= add_ln1192_4_fu_2038_p2(39 downto 39);
    tmp_208_fu_2083_p3 <= buf_4_V_fu_2077_p2(23 downto 23);
    tmp_209_fu_2103_p3 <= buf_4_V_fu_2077_p2(23 downto 23);
    tmp_20_fu_3226_p4 <= add_ln1192_9_fu_3153_p2(43 downto 41);
    tmp_210_fu_2157_p3 <= add_ln1192_14_fu_2043_p2(40 downto 40);
    tmp_211_fu_2271_p3 <= add_ln1192_5_fu_2261_p2(43 downto 43);
    tmp_212_fu_2289_p3 <= add_ln1192_5_fu_2261_p2(39 downto 39);
    tmp_214_fu_2306_p3 <= buf_5_V_fu_2300_p2(23 downto 23);
    tmp_215_fu_2326_p3 <= buf_5_V_fu_2300_p2(23 downto 23);
    tmp_216_fu_2380_p3 <= add_ln1192_15_fu_2266_p2(40 downto 40);
    tmp_217_fu_2494_p3 <= add_ln1192_6_fu_2484_p2(43 downto 43);
    tmp_218_fu_2512_p3 <= add_ln1192_6_fu_2484_p2(39 downto 39);
    tmp_21_fu_3242_p4 <= add_ln1192_9_fu_3153_p2(43 downto 40);
    tmp_220_fu_2529_p3 <= buf_6_V_fu_2523_p2(23 downto 23);
    tmp_221_fu_2549_p3 <= buf_6_V_fu_2523_p2(23 downto 23);
    tmp_222_fu_2603_p3 <= add_ln1192_16_fu_2489_p2(40 downto 40);
    tmp_223_fu_2717_p3 <= add_ln1192_7_fu_2707_p2(43 downto 43);
    tmp_224_fu_2735_p3 <= add_ln1192_7_fu_2707_p2(39 downto 39);
    tmp_226_fu_2752_p3 <= buf_7_V_fu_2746_p2(23 downto 23);
    tmp_227_fu_2772_p3 <= buf_7_V_fu_2746_p2(23 downto 23);
    tmp_228_fu_2826_p3 <= add_ln1192_17_fu_2712_p2(40 downto 40);
    tmp_229_fu_2940_p3 <= add_ln1192_8_fu_2930_p2(43 downto 43);
    tmp_230_fu_2958_p3 <= add_ln1192_8_fu_2930_p2(39 downto 39);
    tmp_232_fu_2975_p3 <= buf_8_V_1_fu_2969_p2(23 downto 23);
    tmp_233_fu_2995_p3 <= buf_8_V_1_fu_2969_p2(23 downto 23);
    tmp_234_fu_3049_p3 <= add_ln1192_18_fu_2935_p2(40 downto 40);
    tmp_235_fu_3163_p3 <= add_ln1192_9_fu_3153_p2(43 downto 43);
    tmp_236_fu_3181_p3 <= add_ln1192_9_fu_3153_p2(39 downto 39);
    tmp_238_fu_3198_p3 <= buf_9_V_fu_3192_p2(23 downto 23);
    tmp_239_fu_3218_p3 <= buf_9_V_fu_3192_p2(23 downto 23);
    tmp_240_fu_3272_p3 <= add_ln1192_19_fu_3158_p2(40 downto 40);
    tmp_2_fu_1888_p4 <= add_ln1192_3_fu_1814_p2(43 downto 41);
    tmp_3_fu_1904_p4 <= add_ln1192_3_fu_1814_p2(43 downto 40);
    tmp_4_fu_1215_p4 <= add_ln1192_fu_1142_p2(43 downto 41);
    tmp_5_fu_1231_p4 <= add_ln1192_fu_1142_p2(43 downto 40);
    tmp_6_fu_1438_p4 <= add_ln1192_1_fu_1365_p2(43 downto 41);
    tmp_7_fu_1454_p4 <= add_ln1192_1_fu_1365_p2(43 downto 40);
    tmp_8_fu_1661_p4 <= add_ln1192_2_fu_1588_p2(43 downto 41);
    tmp_9_fu_1677_p4 <= add_ln1192_2_fu_1588_p2(43 downto 40);
    trunc_ln1192_1_fu_1012_p1 <= mul_ln1118_1_fu_3542_p2(41 - 1 downto 0);
    trunc_ln1192_2_fu_1025_p1 <= mul_ln1118_2_fu_3550_p2(41 - 1 downto 0);
    trunc_ln1192_3_fu_1038_p1 <= mul_ln1118_3_fu_3558_p2(41 - 1 downto 0);
    trunc_ln1192_4_fu_1051_p1 <= mul_ln1118_4_fu_3566_p2(41 - 1 downto 0);
    trunc_ln1192_5_fu_1064_p1 <= mul_ln1118_5_fu_3574_p2(41 - 1 downto 0);
    trunc_ln1192_6_fu_1077_p1 <= mul_ln1118_6_fu_3582_p2(41 - 1 downto 0);
    trunc_ln1192_7_fu_1090_p1 <= mul_ln1118_7_fu_3590_p2(41 - 1 downto 0);
    trunc_ln1192_8_fu_1103_p1 <= mul_ln1118_8_fu_3598_p2(41 - 1 downto 0);
    trunc_ln1192_9_fu_1116_p1 <= mul_ln1118_9_fu_3606_p2(41 - 1 downto 0);
    trunc_ln1192_fu_999_p1 <= mul_ln1118_fu_3534_p2(41 - 1 downto 0);
    trunc_ln708_1_fu_1383_p4 <= add_ln1192_1_fu_1365_p2(39 downto 16);
    trunc_ln708_2_fu_1606_p4 <= add_ln1192_2_fu_1588_p2(39 downto 16);
    trunc_ln708_3_fu_1833_p4 <= add_ln1192_3_fu_1814_p2(39 downto 16);
    trunc_ln708_4_fu_2056_p4 <= add_ln1192_4_fu_2038_p2(39 downto 16);
    trunc_ln708_5_fu_2279_p4 <= add_ln1192_5_fu_2261_p2(39 downto 16);
    trunc_ln708_6_fu_2502_p4 <= add_ln1192_6_fu_2484_p2(39 downto 16);
    trunc_ln708_7_fu_2725_p4 <= add_ln1192_7_fu_2707_p2(39 downto 16);
    trunc_ln708_8_fu_2948_p4 <= add_ln1192_8_fu_2930_p2(39 downto 16);
    trunc_ln708_9_fu_3171_p4 <= add_ln1192_9_fu_3153_p2(39 downto 16);
    trunc_ln708_s_fu_1160_p4 <= add_ln1192_fu_1142_p2(39 downto 16);
    trunc_ln_fu_557_p4 <= p_Val2_s_fu_531_p12(23 downto 4);
    xor_ln416_1_fu_1418_p2 <= (tmp_190_fu_1410_p3 xor ap_const_lv1_1);
    xor_ln416_2_fu_1641_p2 <= (tmp_196_fu_1633_p3 xor ap_const_lv1_1);
    xor_ln416_3_fu_1868_p2 <= (tmp_202_fu_1860_p3 xor ap_const_lv1_1);
    xor_ln416_4_fu_2091_p2 <= (tmp_208_fu_2083_p3 xor ap_const_lv1_1);
    xor_ln416_5_fu_2314_p2 <= (tmp_214_fu_2306_p3 xor ap_const_lv1_1);
    xor_ln416_6_fu_2537_p2 <= (tmp_220_fu_2529_p3 xor ap_const_lv1_1);
    xor_ln416_7_fu_2760_p2 <= (tmp_226_fu_2752_p3 xor ap_const_lv1_1);
    xor_ln416_8_fu_2983_p2 <= (tmp_232_fu_2975_p3 xor ap_const_lv1_1);
    xor_ln416_9_fu_3206_p2 <= (tmp_238_fu_3198_p3 xor ap_const_lv1_1);
    xor_ln416_fu_1195_p2 <= (tmp_184_fu_1187_p3 xor ap_const_lv1_1);
    xor_ln779_1_fu_1492_p2 <= (tmp_192_fu_1484_p3 xor ap_const_lv1_1);
    xor_ln779_2_fu_1715_p2 <= (tmp_198_fu_1707_p3 xor ap_const_lv1_1);
    xor_ln779_3_fu_1942_p2 <= (tmp_204_fu_1934_p3 xor ap_const_lv1_1);
    xor_ln779_4_fu_2165_p2 <= (tmp_210_fu_2157_p3 xor ap_const_lv1_1);
    xor_ln779_5_fu_2388_p2 <= (tmp_216_fu_2380_p3 xor ap_const_lv1_1);
    xor_ln779_6_fu_2611_p2 <= (tmp_222_fu_2603_p3 xor ap_const_lv1_1);
    xor_ln779_7_fu_2834_p2 <= (tmp_228_fu_2826_p3 xor ap_const_lv1_1);
    xor_ln779_8_fu_3057_p2 <= (tmp_234_fu_3049_p3 xor ap_const_lv1_1);
    xor_ln779_9_fu_3280_p2 <= (tmp_240_fu_3272_p3 xor ap_const_lv1_1);
    xor_ln779_fu_1269_p2 <= (tmp_186_fu_1261_p3 xor ap_const_lv1_1);
    xor_ln785_10_fu_1518_p2 <= (select_ln777_1_fu_1476_p3 xor ap_const_lv1_1);
    xor_ln785_11_fu_1530_p2 <= (tmp_187_fu_1375_p3 xor ap_const_lv1_1);
    xor_ln785_12_fu_1753_p2 <= (tmp_193_fu_1598_p3 xor ap_const_lv1_1);
    xor_ln785_13_fu_1980_p2 <= (tmp_199_fu_1825_p3 xor ap_const_lv1_1);
    xor_ln785_14_fu_2203_p2 <= (tmp_205_fu_2048_p3 xor ap_const_lv1_1);
    xor_ln785_15_fu_2426_p2 <= (tmp_211_fu_2271_p3 xor ap_const_lv1_1);
    xor_ln785_16_fu_2649_p2 <= (tmp_217_fu_2494_p3 xor ap_const_lv1_1);
    xor_ln785_17_fu_2872_p2 <= (tmp_223_fu_2717_p3 xor ap_const_lv1_1);
    xor_ln785_18_fu_3095_p2 <= (tmp_229_fu_2940_p3 xor ap_const_lv1_1);
    xor_ln785_19_fu_3318_p2 <= (tmp_235_fu_3163_p3 xor ap_const_lv1_1);
    xor_ln785_1_fu_1307_p2 <= (tmp_181_fu_1152_p3 xor ap_const_lv1_1);
    xor_ln785_2_fu_1741_p2 <= (select_ln777_2_fu_1699_p3 xor ap_const_lv1_1);
    xor_ln785_3_fu_1968_p2 <= (select_ln777_3_fu_1926_p3 xor ap_const_lv1_1);
    xor_ln785_4_fu_2191_p2 <= (select_ln777_4_fu_2149_p3 xor ap_const_lv1_1);
    xor_ln785_5_fu_2414_p2 <= (select_ln777_5_fu_2372_p3 xor ap_const_lv1_1);
    xor_ln785_6_fu_2637_p2 <= (select_ln777_6_fu_2595_p3 xor ap_const_lv1_1);
    xor_ln785_7_fu_2860_p2 <= (select_ln777_7_fu_2818_p3 xor ap_const_lv1_1);
    xor_ln785_8_fu_3083_p2 <= (select_ln777_8_fu_3041_p3 xor ap_const_lv1_1);
    xor_ln785_9_fu_3306_p2 <= (select_ln777_9_fu_3264_p3 xor ap_const_lv1_1);
    xor_ln785_fu_1295_p2 <= (select_ln777_fu_1253_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_1554_p2 <= (or_ln786_1_fu_1548_p2 xor ap_const_lv1_1);
    xor_ln786_2_fu_1777_p2 <= (or_ln786_2_fu_1771_p2 xor ap_const_lv1_1);
    xor_ln786_3_fu_2004_p2 <= (or_ln786_3_fu_1998_p2 xor ap_const_lv1_1);
    xor_ln786_4_fu_2227_p2 <= (or_ln786_4_fu_2221_p2 xor ap_const_lv1_1);
    xor_ln786_5_fu_2450_p2 <= (or_ln786_5_fu_2444_p2 xor ap_const_lv1_1);
    xor_ln786_6_fu_2673_p2 <= (or_ln786_6_fu_2667_p2 xor ap_const_lv1_1);
    xor_ln786_7_fu_2896_p2 <= (or_ln786_7_fu_2890_p2 xor ap_const_lv1_1);
    xor_ln786_8_fu_3119_p2 <= (or_ln786_8_fu_3113_p2 xor ap_const_lv1_1);
    xor_ln786_9_fu_3342_p2 <= (or_ln786_9_fu_3336_p2 xor ap_const_lv1_1);
    xor_ln786_fu_1331_p2 <= (or_ln786_fu_1325_p2 xor ap_const_lv1_1);
    zext_ln358_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cii_0_reg_467),64));
    zext_ln371_fu_3502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(coo4_0_reg_478),64));
    zext_ln415_10_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_180_fu_972_p3),19));
    zext_ln415_11_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_183_reg_3862),24));
    zext_ln415_12_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_189_reg_3877),24));
    zext_ln415_13_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_195_reg_3892),24));
    zext_ln415_14_fu_1851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_201_reg_3907),24));
    zext_ln415_15_fu_2074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_207_reg_3922),24));
    zext_ln415_16_fu_2297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_213_reg_3937),24));
    zext_ln415_17_fu_2520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_219_reg_3952),24));
    zext_ln415_18_fu_2743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_225_reg_3967),24));
    zext_ln415_19_fu_2966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_231_reg_3982),24));
    zext_ln415_1_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_162_fu_684_p3),19));
    zext_ln415_20_fu_3189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_237_reg_3997),24));
    zext_ln415_2_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_164_fu_716_p3),19));
    zext_ln415_3_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_166_fu_748_p3),19));
    zext_ln415_4_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_168_fu_780_p3),18));
    zext_ln415_5_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_170_fu_812_p3),19));
    zext_ln415_6_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_172_fu_844_p3),19));
    zext_ln415_7_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_174_fu_876_p3),19));
    zext_ln415_8_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_176_fu_908_p3),19));
    zext_ln415_9_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_178_fu_940_p3),19));
    zext_ln415_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_160_fu_571_p3),21));
end behav;
