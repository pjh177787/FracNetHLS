// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_layer_1D_weight_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_weights_all_V_AWVALID,
        m_axi_weights_all_V_AWREADY,
        m_axi_weights_all_V_AWADDR,
        m_axi_weights_all_V_AWID,
        m_axi_weights_all_V_AWLEN,
        m_axi_weights_all_V_AWSIZE,
        m_axi_weights_all_V_AWBURST,
        m_axi_weights_all_V_AWLOCK,
        m_axi_weights_all_V_AWCACHE,
        m_axi_weights_all_V_AWPROT,
        m_axi_weights_all_V_AWQOS,
        m_axi_weights_all_V_AWREGION,
        m_axi_weights_all_V_AWUSER,
        m_axi_weights_all_V_WVALID,
        m_axi_weights_all_V_WREADY,
        m_axi_weights_all_V_WDATA,
        m_axi_weights_all_V_WSTRB,
        m_axi_weights_all_V_WLAST,
        m_axi_weights_all_V_WID,
        m_axi_weights_all_V_WUSER,
        m_axi_weights_all_V_ARVALID,
        m_axi_weights_all_V_ARREADY,
        m_axi_weights_all_V_ARADDR,
        m_axi_weights_all_V_ARID,
        m_axi_weights_all_V_ARLEN,
        m_axi_weights_all_V_ARSIZE,
        m_axi_weights_all_V_ARBURST,
        m_axi_weights_all_V_ARLOCK,
        m_axi_weights_all_V_ARCACHE,
        m_axi_weights_all_V_ARPROT,
        m_axi_weights_all_V_ARQOS,
        m_axi_weights_all_V_ARREGION,
        m_axi_weights_all_V_ARUSER,
        m_axi_weights_all_V_RVALID,
        m_axi_weights_all_V_RREADY,
        m_axi_weights_all_V_RDATA,
        m_axi_weights_all_V_RLAST,
        m_axi_weights_all_V_RID,
        m_axi_weights_all_V_RUSER,
        m_axi_weights_all_V_RRESP,
        m_axi_weights_all_V_BVALID,
        m_axi_weights_all_V_BREADY,
        m_axi_weights_all_V_BRESP,
        m_axi_weights_all_V_BID,
        m_axi_weights_all_V_BUSER,
        weights_all_V_offset,
        weights_all_ptr_start_offset,
        c_out_offset,
        conv_out_channels_offset,
        pw_out_channels_offset,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53,
        ap_return_54,
        ap_return_55,
        ap_return_56,
        ap_return_57,
        ap_return_58,
        ap_return_59,
        ap_return_60,
        ap_return_61,
        ap_return_62,
        ap_return_63,
        ap_return_64,
        ap_return_65,
        ap_return_66,
        ap_return_67,
        ap_return_68,
        ap_return_69,
        ap_return_70,
        ap_return_71,
        ap_return_72,
        ap_return_73,
        ap_return_74,
        ap_return_75,
        ap_return_76,
        ap_return_77,
        ap_return_78,
        ap_return_79,
        ap_return_80,
        ap_return_81,
        ap_return_82,
        ap_return_83,
        ap_return_84,
        ap_return_85,
        ap_return_86,
        ap_return_87,
        ap_return_88,
        ap_return_89,
        ap_return_90,
        ap_return_91,
        ap_return_92,
        ap_return_93,
        ap_return_94,
        ap_return_95,
        ap_return_96,
        ap_return_97,
        ap_return_98,
        ap_return_99,
        ap_return_100,
        ap_return_101,
        ap_return_102,
        ap_return_103,
        ap_return_104,
        ap_return_105,
        ap_return_106,
        ap_return_107,
        ap_return_108,
        ap_return_109,
        ap_return_110,
        ap_return_111,
        ap_return_112,
        ap_return_113,
        ap_return_114,
        ap_return_115,
        ap_return_116,
        ap_return_117,
        ap_return_118,
        ap_return_119,
        ap_return_120,
        ap_return_121,
        ap_return_122,
        ap_return_123,
        ap_return_124,
        ap_return_125,
        ap_return_126,
        ap_return_127,
        ap_return_128,
        ap_return_129,
        ap_return_130,
        ap_return_131,
        ap_return_132,
        ap_return_133,
        ap_return_134,
        ap_return_135,
        ap_return_136,
        ap_return_137,
        ap_return_138,
        ap_return_139,
        ap_return_140,
        ap_return_141,
        ap_return_142,
        ap_return_143,
        ap_return_144,
        ap_return_145,
        ap_return_146,
        ap_return_147,
        ap_return_148,
        ap_return_149,
        ap_return_150,
        ap_return_151,
        ap_return_152,
        ap_return_153,
        ap_return_154,
        ap_return_155,
        ap_return_156,
        ap_return_157,
        ap_return_158,
        ap_return_159,
        ap_return_160,
        ap_return_161,
        ap_return_162,
        ap_return_163,
        ap_return_164,
        ap_return_165,
        ap_return_166,
        ap_return_167,
        ap_return_168,
        ap_return_169,
        ap_return_170,
        ap_return_171,
        ap_return_172,
        ap_return_173,
        ap_return_174,
        ap_return_175,
        ap_return_176,
        ap_return_177,
        ap_return_178,
        ap_return_179,
        ap_return_180,
        ap_return_181,
        ap_return_182,
        ap_return_183,
        ap_return_184,
        ap_return_185,
        ap_return_186,
        ap_return_187,
        ap_return_188,
        ap_return_189,
        ap_return_190,
        ap_return_191,
        ap_return_192,
        ap_return_193,
        ap_return_194,
        ap_return_195,
        ap_return_196,
        ap_return_197,
        ap_return_198,
        ap_return_199,
        ap_return_200,
        ap_return_201,
        ap_return_202,
        ap_return_203,
        ap_return_204,
        ap_return_205,
        ap_return_206,
        ap_return_207,
        ap_return_208,
        ap_return_209,
        ap_return_210,
        ap_return_211,
        ap_return_212,
        ap_return_213,
        ap_return_214,
        ap_return_215,
        ap_return_216,
        ap_return_217,
        ap_return_218,
        ap_return_219,
        ap_return_220,
        ap_return_221,
        ap_return_222,
        ap_return_223,
        ap_return_224,
        ap_return_225,
        ap_return_226,
        ap_return_227,
        ap_return_228,
        ap_return_229,
        ap_return_230,
        ap_return_231,
        ap_return_232,
        ap_return_233,
        ap_return_234,
        ap_return_235,
        ap_return_236,
        ap_return_237,
        ap_return_238,
        ap_return_239,
        ap_return_240,
        ap_return_241,
        ap_return_242,
        ap_return_243,
        ap_return_244,
        ap_return_245,
        ap_return_246,
        ap_return_247,
        ap_return_248,
        ap_return_249,
        ap_return_250,
        ap_return_251,
        ap_return_252,
        ap_return_253,
        ap_return_254,
        ap_return_255
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_weights_all_V_AWVALID;
input   m_axi_weights_all_V_AWREADY;
output  [31:0] m_axi_weights_all_V_AWADDR;
output  [0:0] m_axi_weights_all_V_AWID;
output  [31:0] m_axi_weights_all_V_AWLEN;
output  [2:0] m_axi_weights_all_V_AWSIZE;
output  [1:0] m_axi_weights_all_V_AWBURST;
output  [1:0] m_axi_weights_all_V_AWLOCK;
output  [3:0] m_axi_weights_all_V_AWCACHE;
output  [2:0] m_axi_weights_all_V_AWPROT;
output  [3:0] m_axi_weights_all_V_AWQOS;
output  [3:0] m_axi_weights_all_V_AWREGION;
output  [0:0] m_axi_weights_all_V_AWUSER;
output   m_axi_weights_all_V_WVALID;
input   m_axi_weights_all_V_WREADY;
output  [511:0] m_axi_weights_all_V_WDATA;
output  [63:0] m_axi_weights_all_V_WSTRB;
output   m_axi_weights_all_V_WLAST;
output  [0:0] m_axi_weights_all_V_WID;
output  [0:0] m_axi_weights_all_V_WUSER;
output   m_axi_weights_all_V_ARVALID;
input   m_axi_weights_all_V_ARREADY;
output  [31:0] m_axi_weights_all_V_ARADDR;
output  [0:0] m_axi_weights_all_V_ARID;
output  [31:0] m_axi_weights_all_V_ARLEN;
output  [2:0] m_axi_weights_all_V_ARSIZE;
output  [1:0] m_axi_weights_all_V_ARBURST;
output  [1:0] m_axi_weights_all_V_ARLOCK;
output  [3:0] m_axi_weights_all_V_ARCACHE;
output  [2:0] m_axi_weights_all_V_ARPROT;
output  [3:0] m_axi_weights_all_V_ARQOS;
output  [3:0] m_axi_weights_all_V_ARREGION;
output  [0:0] m_axi_weights_all_V_ARUSER;
input   m_axi_weights_all_V_RVALID;
output   m_axi_weights_all_V_RREADY;
input  [511:0] m_axi_weights_all_V_RDATA;
input   m_axi_weights_all_V_RLAST;
input  [0:0] m_axi_weights_all_V_RID;
input  [0:0] m_axi_weights_all_V_RUSER;
input  [1:0] m_axi_weights_all_V_RRESP;
input   m_axi_weights_all_V_BVALID;
output   m_axi_weights_all_V_BREADY;
input  [1:0] m_axi_weights_all_V_BRESP;
input  [0:0] m_axi_weights_all_V_BID;
input  [0:0] m_axi_weights_all_V_BUSER;
input  [25:0] weights_all_V_offset;
input  [12:0] weights_all_ptr_start_offset;
input  [5:0] c_out_offset;
input  [11:0] conv_out_channels_offset;
input  [11:0] pw_out_channels_offset;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;
output  [15:0] ap_return_16;
output  [15:0] ap_return_17;
output  [15:0] ap_return_18;
output  [15:0] ap_return_19;
output  [15:0] ap_return_20;
output  [15:0] ap_return_21;
output  [15:0] ap_return_22;
output  [15:0] ap_return_23;
output  [15:0] ap_return_24;
output  [15:0] ap_return_25;
output  [15:0] ap_return_26;
output  [15:0] ap_return_27;
output  [15:0] ap_return_28;
output  [15:0] ap_return_29;
output  [15:0] ap_return_30;
output  [15:0] ap_return_31;
output  [15:0] ap_return_32;
output  [15:0] ap_return_33;
output  [15:0] ap_return_34;
output  [15:0] ap_return_35;
output  [15:0] ap_return_36;
output  [15:0] ap_return_37;
output  [15:0] ap_return_38;
output  [15:0] ap_return_39;
output  [15:0] ap_return_40;
output  [15:0] ap_return_41;
output  [15:0] ap_return_42;
output  [15:0] ap_return_43;
output  [15:0] ap_return_44;
output  [15:0] ap_return_45;
output  [15:0] ap_return_46;
output  [15:0] ap_return_47;
output  [15:0] ap_return_48;
output  [15:0] ap_return_49;
output  [15:0] ap_return_50;
output  [15:0] ap_return_51;
output  [15:0] ap_return_52;
output  [15:0] ap_return_53;
output  [15:0] ap_return_54;
output  [15:0] ap_return_55;
output  [15:0] ap_return_56;
output  [15:0] ap_return_57;
output  [15:0] ap_return_58;
output  [15:0] ap_return_59;
output  [15:0] ap_return_60;
output  [15:0] ap_return_61;
output  [15:0] ap_return_62;
output  [15:0] ap_return_63;
output  [15:0] ap_return_64;
output  [15:0] ap_return_65;
output  [15:0] ap_return_66;
output  [15:0] ap_return_67;
output  [15:0] ap_return_68;
output  [15:0] ap_return_69;
output  [15:0] ap_return_70;
output  [15:0] ap_return_71;
output  [15:0] ap_return_72;
output  [15:0] ap_return_73;
output  [15:0] ap_return_74;
output  [15:0] ap_return_75;
output  [15:0] ap_return_76;
output  [15:0] ap_return_77;
output  [15:0] ap_return_78;
output  [15:0] ap_return_79;
output  [15:0] ap_return_80;
output  [15:0] ap_return_81;
output  [15:0] ap_return_82;
output  [15:0] ap_return_83;
output  [15:0] ap_return_84;
output  [15:0] ap_return_85;
output  [15:0] ap_return_86;
output  [15:0] ap_return_87;
output  [15:0] ap_return_88;
output  [15:0] ap_return_89;
output  [15:0] ap_return_90;
output  [15:0] ap_return_91;
output  [15:0] ap_return_92;
output  [15:0] ap_return_93;
output  [15:0] ap_return_94;
output  [15:0] ap_return_95;
output  [15:0] ap_return_96;
output  [15:0] ap_return_97;
output  [15:0] ap_return_98;
output  [15:0] ap_return_99;
output  [15:0] ap_return_100;
output  [15:0] ap_return_101;
output  [15:0] ap_return_102;
output  [15:0] ap_return_103;
output  [15:0] ap_return_104;
output  [15:0] ap_return_105;
output  [15:0] ap_return_106;
output  [15:0] ap_return_107;
output  [15:0] ap_return_108;
output  [15:0] ap_return_109;
output  [15:0] ap_return_110;
output  [15:0] ap_return_111;
output  [15:0] ap_return_112;
output  [15:0] ap_return_113;
output  [15:0] ap_return_114;
output  [15:0] ap_return_115;
output  [15:0] ap_return_116;
output  [15:0] ap_return_117;
output  [15:0] ap_return_118;
output  [15:0] ap_return_119;
output  [15:0] ap_return_120;
output  [15:0] ap_return_121;
output  [15:0] ap_return_122;
output  [15:0] ap_return_123;
output  [15:0] ap_return_124;
output  [15:0] ap_return_125;
output  [15:0] ap_return_126;
output  [15:0] ap_return_127;
output  [15:0] ap_return_128;
output  [15:0] ap_return_129;
output  [15:0] ap_return_130;
output  [15:0] ap_return_131;
output  [15:0] ap_return_132;
output  [15:0] ap_return_133;
output  [15:0] ap_return_134;
output  [15:0] ap_return_135;
output  [15:0] ap_return_136;
output  [15:0] ap_return_137;
output  [15:0] ap_return_138;
output  [15:0] ap_return_139;
output  [15:0] ap_return_140;
output  [15:0] ap_return_141;
output  [15:0] ap_return_142;
output  [15:0] ap_return_143;
output  [15:0] ap_return_144;
output  [15:0] ap_return_145;
output  [15:0] ap_return_146;
output  [15:0] ap_return_147;
output  [15:0] ap_return_148;
output  [15:0] ap_return_149;
output  [15:0] ap_return_150;
output  [15:0] ap_return_151;
output  [15:0] ap_return_152;
output  [15:0] ap_return_153;
output  [15:0] ap_return_154;
output  [15:0] ap_return_155;
output  [15:0] ap_return_156;
output  [15:0] ap_return_157;
output  [15:0] ap_return_158;
output  [15:0] ap_return_159;
output  [15:0] ap_return_160;
output  [15:0] ap_return_161;
output  [15:0] ap_return_162;
output  [15:0] ap_return_163;
output  [15:0] ap_return_164;
output  [15:0] ap_return_165;
output  [15:0] ap_return_166;
output  [15:0] ap_return_167;
output  [15:0] ap_return_168;
output  [15:0] ap_return_169;
output  [15:0] ap_return_170;
output  [15:0] ap_return_171;
output  [15:0] ap_return_172;
output  [15:0] ap_return_173;
output  [15:0] ap_return_174;
output  [15:0] ap_return_175;
output  [15:0] ap_return_176;
output  [15:0] ap_return_177;
output  [15:0] ap_return_178;
output  [15:0] ap_return_179;
output  [15:0] ap_return_180;
output  [15:0] ap_return_181;
output  [15:0] ap_return_182;
output  [15:0] ap_return_183;
output  [15:0] ap_return_184;
output  [15:0] ap_return_185;
output  [15:0] ap_return_186;
output  [15:0] ap_return_187;
output  [15:0] ap_return_188;
output  [15:0] ap_return_189;
output  [15:0] ap_return_190;
output  [15:0] ap_return_191;
output  [15:0] ap_return_192;
output  [15:0] ap_return_193;
output  [15:0] ap_return_194;
output  [15:0] ap_return_195;
output  [15:0] ap_return_196;
output  [15:0] ap_return_197;
output  [15:0] ap_return_198;
output  [15:0] ap_return_199;
output  [15:0] ap_return_200;
output  [15:0] ap_return_201;
output  [15:0] ap_return_202;
output  [15:0] ap_return_203;
output  [15:0] ap_return_204;
output  [15:0] ap_return_205;
output  [15:0] ap_return_206;
output  [15:0] ap_return_207;
output  [15:0] ap_return_208;
output  [15:0] ap_return_209;
output  [15:0] ap_return_210;
output  [15:0] ap_return_211;
output  [15:0] ap_return_212;
output  [15:0] ap_return_213;
output  [15:0] ap_return_214;
output  [15:0] ap_return_215;
output  [15:0] ap_return_216;
output  [15:0] ap_return_217;
output  [15:0] ap_return_218;
output  [15:0] ap_return_219;
output  [15:0] ap_return_220;
output  [15:0] ap_return_221;
output  [15:0] ap_return_222;
output  [15:0] ap_return_223;
output  [15:0] ap_return_224;
output  [15:0] ap_return_225;
output  [15:0] ap_return_226;
output  [15:0] ap_return_227;
output  [15:0] ap_return_228;
output  [15:0] ap_return_229;
output  [15:0] ap_return_230;
output  [15:0] ap_return_231;
output  [15:0] ap_return_232;
output  [15:0] ap_return_233;
output  [15:0] ap_return_234;
output  [15:0] ap_return_235;
output  [15:0] ap_return_236;
output  [15:0] ap_return_237;
output  [15:0] ap_return_238;
output  [15:0] ap_return_239;
output  [15:0] ap_return_240;
output  [15:0] ap_return_241;
output  [15:0] ap_return_242;
output  [15:0] ap_return_243;
output  [15:0] ap_return_244;
output  [15:0] ap_return_245;
output  [15:0] ap_return_246;
output  [15:0] ap_return_247;
output  [15:0] ap_return_248;
output  [15:0] ap_return_249;
output  [15:0] ap_return_250;
output  [15:0] ap_return_251;
output  [15:0] ap_return_252;
output  [15:0] ap_return_253;
output  [15:0] ap_return_254;
output  [15:0] ap_return_255;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_weights_all_V_ARVALID;
reg[31:0] m_axi_weights_all_V_ARADDR;
reg m_axi_weights_all_V_RREADY;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weights_all_V_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    weights_all_V_blk_n_R;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire   [11:0] weights_all_ptr_fu_312_p2;
reg   [11:0] weights_all_ptr_reg_4387;
wire   [26:0] zext_ln30_1_fu_322_p1;
reg   [26:0] zext_ln30_1_reg_4392;
wire   [26:0] add_ln30_fu_326_p2;
reg   [26:0] add_ln30_reg_4403;
wire   [5:0] conv_channels_after_s_fu_332_p4;
reg   [5:0] conv_channels_after_s_reg_4408;
wire   [11:0] zext_ln58_1_fu_342_p1;
reg   [11:0] zext_ln58_1_reg_4413;
wire   [11:0] weights_all_ptr_1_fu_356_p2;
reg   [11:0] weights_all_ptr_1_reg_4427;
wire   [26:0] add_ln30_1_fu_365_p2;
reg   [26:0] add_ln30_1_reg_4432;
wire   [11:0] weights_all_ptr_2_fu_397_p2;
reg   [11:0] weights_all_ptr_2_reg_4443;
wire   [26:0] add_ln30_2_fu_405_p2;
reg   [26:0] add_ln30_2_reg_4448;
wire   [7:0] weights_all_ptr_9_fu_428_p2;
reg   [7:0] weights_all_ptr_9_reg_4453;
wire   [11:0] zext_ln73_1_fu_444_p1;
reg   [11:0] zext_ln73_1_reg_4464;
wire   [11:0] weights_all_ptr_4_fu_447_p2;
reg   [11:0] weights_all_ptr_4_reg_4469;
wire   [26:0] add_ln30_3_fu_456_p2;
reg   [26:0] add_ln30_3_reg_4474;
wire   [11:0] weights_all_ptr_5_fu_471_p2;
reg   [11:0] weights_all_ptr_5_reg_4485;
wire   [26:0] add_ln30_4_fu_479_p2;
reg   [26:0] add_ln30_4_reg_4490;
wire   [26:0] add_ln30_5_fu_502_p2;
reg   [26:0] add_ln30_5_reg_4501;
wire   [11:0] weights_all_ptr_7_fu_507_p2;
reg   [11:0] weights_all_ptr_7_reg_4506;
wire   [26:0] add_ln30_6_fu_525_p2;
reg   [26:0] add_ln30_6_reg_4518;
wire   [26:0] add_ln30_7_fu_538_p2;
reg   [26:0] add_ln30_7_reg_4523;
wire   [15:0] trunc_ln647_fu_553_p1;
reg   [15:0] trunc_ln647_reg_4534;
reg   [15:0] weight_buffer_1_V_w_reg_4539;
reg   [15:0] weight_buffer_2_V_w_reg_4544;
reg   [15:0] weight_buffer_3_V_w_reg_4549;
reg   [15:0] weight_buffer_4_V_w_reg_4554;
reg   [15:0] weight_buffer_5_V_w_reg_4559;
reg   [15:0] weight_buffer_6_V_w_reg_4564;
reg   [15:0] weight_buffer_7_V_w_reg_4569;
reg   [15:0] weight_buffer_8_V_w_reg_4574;
reg   [15:0] weight_buffer_9_V_w_reg_4579;
reg   [15:0] weight_buffer_10_V_s_reg_4584;
reg   [15:0] weight_buffer_11_V_s_reg_4589;
reg   [15:0] weight_buffer_12_V_s_reg_4594;
reg   [15:0] weight_buffer_13_V_s_reg_4599;
reg   [15:0] weight_buffer_14_V_s_reg_4604;
reg   [15:0] weight_buffer_15_V_s_reg_4609;
reg   [15:0] weight_buffer_16_V_s_reg_4614;
reg   [15:0] weight_buffer_17_V_s_reg_4619;
reg   [15:0] weight_buffer_18_V_s_reg_4624;
reg   [15:0] weight_buffer_19_V_s_reg_4629;
reg   [15:0] weight_buffer_20_V_s_reg_4634;
reg   [15:0] weight_buffer_21_V_s_reg_4639;
reg   [15:0] weight_buffer_22_V_s_reg_4644;
reg   [15:0] weight_buffer_23_V_s_reg_4649;
reg   [15:0] weight_buffer_24_V_s_reg_4654;
reg   [15:0] weight_buffer_25_V_s_reg_4659;
reg   [15:0] weight_buffer_26_V_s_reg_4664;
reg   [15:0] weight_buffer_27_V_s_reg_4669;
reg   [15:0] weight_buffer_28_V_s_reg_4674;
reg   [15:0] weight_buffer_29_V_s_reg_4679;
reg   [15:0] weight_buffer_30_V_s_reg_4684;
reg   [15:0] weight_buffer_31_V_s_reg_4689;
wire   [15:0] trunc_ln647_1_fu_877_p1;
reg   [15:0] trunc_ln647_1_reg_4700;
reg   [15:0] weight_buffer_1_V_w_1_reg_4705;
reg   [15:0] weight_buffer_2_V_w_1_reg_4710;
reg   [15:0] weight_buffer_3_V_w_1_reg_4715;
reg   [15:0] weight_buffer_4_V_w_1_reg_4720;
reg   [15:0] weight_buffer_5_V_w_1_reg_4725;
reg   [15:0] weight_buffer_6_V_w_1_reg_4730;
reg   [15:0] weight_buffer_7_V_w_1_reg_4735;
reg   [15:0] weight_buffer_8_V_w_1_reg_4740;
reg   [15:0] weight_buffer_9_V_w_1_reg_4745;
reg   [15:0] weight_buffer_10_V_1_reg_4750;
reg   [15:0] weight_buffer_11_V_1_reg_4755;
reg   [15:0] weight_buffer_12_V_1_reg_4760;
reg   [15:0] weight_buffer_13_V_1_reg_4765;
reg   [15:0] weight_buffer_14_V_1_reg_4770;
reg   [15:0] weight_buffer_15_V_1_reg_4775;
reg   [15:0] weight_buffer_16_V_1_reg_4780;
reg   [15:0] weight_buffer_17_V_1_reg_4785;
reg   [15:0] weight_buffer_18_V_1_reg_4790;
reg   [15:0] weight_buffer_19_V_1_reg_4795;
reg   [15:0] weight_buffer_20_V_1_reg_4800;
reg   [15:0] weight_buffer_21_V_1_reg_4805;
reg   [15:0] weight_buffer_22_V_1_reg_4810;
reg   [15:0] weight_buffer_23_V_1_reg_4815;
reg   [15:0] weight_buffer_24_V_1_reg_4820;
reg   [15:0] weight_buffer_25_V_1_reg_4825;
reg   [15:0] weight_buffer_26_V_1_reg_4830;
reg   [15:0] weight_buffer_27_V_1_reg_4835;
reg   [15:0] weight_buffer_28_V_1_reg_4840;
reg   [15:0] weight_buffer_29_V_1_reg_4845;
reg   [15:0] weight_buffer_30_V_1_reg_4850;
reg   [15:0] weight_buffer_31_V_1_reg_4855;
wire   [15:0] trunc_ln647_2_fu_1191_p1;
reg   [15:0] trunc_ln647_2_reg_4860;
reg   [15:0] weight_buffer_1_V_w_2_reg_4865;
reg   [15:0] weight_buffer_2_V_w_2_reg_4870;
reg   [15:0] weight_buffer_3_V_w_2_reg_4875;
reg   [15:0] weight_buffer_4_V_w_2_reg_4880;
reg   [15:0] weight_buffer_5_V_w_2_reg_4885;
reg   [15:0] weight_buffer_6_V_w_2_reg_4890;
reg   [15:0] weight_buffer_7_V_w_2_reg_4895;
reg   [15:0] weight_buffer_8_V_w_2_reg_4900;
reg   [15:0] weight_buffer_9_V_w_2_reg_4905;
reg   [15:0] weight_buffer_10_V_2_reg_4910;
reg   [15:0] weight_buffer_11_V_2_reg_4915;
reg   [15:0] weight_buffer_12_V_2_reg_4920;
reg   [15:0] weight_buffer_13_V_2_reg_4925;
reg   [15:0] weight_buffer_14_V_2_reg_4930;
reg   [15:0] weight_buffer_15_V_2_reg_4935;
reg   [15:0] weight_buffer_16_V_2_reg_4940;
reg   [15:0] weight_buffer_17_V_2_reg_4945;
reg   [15:0] weight_buffer_18_V_2_reg_4950;
reg   [15:0] weight_buffer_19_V_2_reg_4955;
reg   [15:0] weight_buffer_20_V_2_reg_4960;
reg   [15:0] weight_buffer_21_V_2_reg_4965;
reg   [15:0] weight_buffer_22_V_2_reg_4970;
reg   [15:0] weight_buffer_23_V_2_reg_4975;
reg   [15:0] weight_buffer_24_V_2_reg_4980;
reg   [15:0] weight_buffer_25_V_2_reg_4985;
reg   [15:0] weight_buffer_26_V_2_reg_4990;
reg   [15:0] weight_buffer_27_V_2_reg_4995;
reg   [15:0] weight_buffer_28_V_2_reg_5000;
reg   [15:0] weight_buffer_29_V_2_reg_5005;
reg   [15:0] weight_buffer_30_V_2_reg_5010;
reg   [15:0] weight_buffer_31_V_2_reg_5015;
wire   [15:0] trunc_ln647_3_fu_1505_p1;
reg   [15:0] trunc_ln647_3_reg_5020;
reg   [15:0] weight_buffer_1_V_w_3_reg_5025;
reg   [15:0] weight_buffer_2_V_w_3_reg_5030;
reg   [15:0] weight_buffer_3_V_w_3_reg_5035;
reg   [15:0] weight_buffer_4_V_w_3_reg_5040;
reg   [15:0] weight_buffer_5_V_w_3_reg_5045;
reg   [15:0] weight_buffer_6_V_w_3_reg_5050;
reg   [15:0] weight_buffer_7_V_w_3_reg_5055;
reg   [15:0] weight_buffer_8_V_w_3_reg_5060;
reg   [15:0] weight_buffer_9_V_w_3_reg_5065;
reg   [15:0] weight_buffer_10_V_3_reg_5070;
reg   [15:0] weight_buffer_11_V_3_reg_5075;
reg   [15:0] weight_buffer_12_V_3_reg_5080;
reg   [15:0] weight_buffer_13_V_3_reg_5085;
reg   [15:0] weight_buffer_14_V_3_reg_5090;
reg   [15:0] weight_buffer_15_V_3_reg_5095;
reg   [15:0] weight_buffer_16_V_3_reg_5100;
reg   [15:0] weight_buffer_17_V_3_reg_5105;
reg   [15:0] weight_buffer_18_V_3_reg_5110;
reg   [15:0] weight_buffer_19_V_3_reg_5115;
reg   [15:0] weight_buffer_20_V_3_reg_5120;
reg   [15:0] weight_buffer_21_V_3_reg_5125;
reg   [15:0] weight_buffer_22_V_3_reg_5130;
reg   [15:0] weight_buffer_23_V_3_reg_5135;
reg   [15:0] weight_buffer_24_V_3_reg_5140;
reg   [15:0] weight_buffer_25_V_3_reg_5145;
reg   [15:0] weight_buffer_26_V_3_reg_5150;
reg   [15:0] weight_buffer_27_V_3_reg_5155;
reg   [15:0] weight_buffer_28_V_3_reg_5160;
reg   [15:0] weight_buffer_29_V_3_reg_5165;
reg   [15:0] weight_buffer_30_V_3_reg_5170;
reg   [15:0] weight_buffer_31_V_3_reg_5175;
wire   [15:0] trunc_ln647_4_fu_1819_p1;
reg   [15:0] trunc_ln647_4_reg_5180;
reg   [15:0] weight_buffer_1_V_w_4_reg_5185;
reg   [15:0] weight_buffer_2_V_w_4_reg_5190;
reg   [15:0] weight_buffer_3_V_w_4_reg_5195;
reg   [15:0] weight_buffer_4_V_w_4_reg_5200;
reg   [15:0] weight_buffer_5_V_w_4_reg_5205;
reg   [15:0] weight_buffer_6_V_w_4_reg_5210;
reg   [15:0] weight_buffer_7_V_w_4_reg_5215;
reg   [15:0] weight_buffer_8_V_w_4_reg_5220;
reg   [15:0] weight_buffer_9_V_w_4_reg_5225;
reg   [15:0] weight_buffer_10_V_4_reg_5230;
reg   [15:0] weight_buffer_11_V_4_reg_5235;
reg   [15:0] weight_buffer_12_V_4_reg_5240;
reg   [15:0] weight_buffer_13_V_4_reg_5245;
reg   [15:0] weight_buffer_14_V_4_reg_5250;
reg   [15:0] weight_buffer_15_V_4_reg_5255;
reg   [15:0] weight_buffer_16_V_4_reg_5260;
reg   [15:0] weight_buffer_17_V_4_reg_5265;
reg   [15:0] weight_buffer_18_V_4_reg_5270;
reg   [15:0] weight_buffer_19_V_4_reg_5275;
reg   [15:0] weight_buffer_20_V_4_reg_5280;
reg   [15:0] weight_buffer_21_V_4_reg_5285;
reg   [15:0] weight_buffer_22_V_4_reg_5290;
reg   [15:0] weight_buffer_23_V_4_reg_5295;
reg   [15:0] weight_buffer_24_V_4_reg_5300;
reg   [15:0] weight_buffer_25_V_4_reg_5305;
reg   [15:0] weight_buffer_26_V_4_reg_5310;
reg   [15:0] weight_buffer_27_V_4_reg_5315;
reg   [15:0] weight_buffer_28_V_4_reg_5320;
reg   [15:0] weight_buffer_29_V_4_reg_5325;
reg   [15:0] weight_buffer_30_V_4_reg_5330;
reg   [15:0] weight_buffer_31_V_4_reg_5335;
wire   [15:0] trunc_ln647_5_fu_2133_p1;
reg   [15:0] trunc_ln647_5_reg_5340;
reg   [15:0] weight_buffer_1_V_w_5_reg_5345;
reg   [15:0] weight_buffer_2_V_w_5_reg_5350;
reg   [15:0] weight_buffer_3_V_w_5_reg_5355;
reg   [15:0] weight_buffer_4_V_w_5_reg_5360;
reg   [15:0] weight_buffer_5_V_w_5_reg_5365;
reg   [15:0] weight_buffer_6_V_w_5_reg_5370;
reg   [15:0] weight_buffer_7_V_w_5_reg_5375;
reg   [15:0] weight_buffer_8_V_w_5_reg_5380;
reg   [15:0] weight_buffer_9_V_w_5_reg_5385;
reg   [15:0] weight_buffer_10_V_5_reg_5390;
reg   [15:0] weight_buffer_11_V_5_reg_5395;
reg   [15:0] weight_buffer_12_V_5_reg_5400;
reg   [15:0] weight_buffer_13_V_5_reg_5405;
reg   [15:0] weight_buffer_14_V_5_reg_5410;
reg   [15:0] weight_buffer_15_V_5_reg_5415;
reg   [15:0] weight_buffer_16_V_5_reg_5420;
reg   [15:0] weight_buffer_17_V_5_reg_5425;
reg   [15:0] weight_buffer_18_V_5_reg_5430;
reg   [15:0] weight_buffer_19_V_5_reg_5435;
reg   [15:0] weight_buffer_20_V_5_reg_5440;
reg   [15:0] weight_buffer_21_V_5_reg_5445;
reg   [15:0] weight_buffer_22_V_5_reg_5450;
reg   [15:0] weight_buffer_23_V_5_reg_5455;
reg   [15:0] weight_buffer_24_V_5_reg_5460;
reg   [15:0] weight_buffer_25_V_5_reg_5465;
reg   [15:0] weight_buffer_26_V_5_reg_5470;
reg   [15:0] weight_buffer_27_V_5_reg_5475;
reg   [15:0] weight_buffer_28_V_5_reg_5480;
reg   [15:0] weight_buffer_29_V_5_reg_5485;
reg   [15:0] weight_buffer_30_V_5_reg_5490;
reg   [15:0] weight_buffer_31_V_5_reg_5495;
wire   [15:0] trunc_ln647_6_fu_2447_p1;
reg   [15:0] trunc_ln647_6_reg_5500;
reg   [15:0] weight_buffer_1_V_w_6_reg_5505;
reg   [15:0] weight_buffer_2_V_w_6_reg_5510;
reg   [15:0] weight_buffer_3_V_w_6_reg_5515;
reg   [15:0] weight_buffer_4_V_w_6_reg_5520;
reg   [15:0] weight_buffer_5_V_w_6_reg_5525;
reg   [15:0] weight_buffer_6_V_w_6_reg_5530;
reg   [15:0] weight_buffer_7_V_w_6_reg_5535;
reg   [15:0] weight_buffer_8_V_w_6_reg_5540;
reg   [15:0] weight_buffer_9_V_w_6_reg_5545;
reg   [15:0] weight_buffer_10_V_6_reg_5550;
reg   [15:0] weight_buffer_11_V_6_reg_5555;
reg   [15:0] weight_buffer_12_V_6_reg_5560;
reg   [15:0] weight_buffer_13_V_6_reg_5565;
reg   [15:0] weight_buffer_14_V_6_reg_5570;
reg   [15:0] weight_buffer_15_V_6_reg_5575;
reg   [15:0] weight_buffer_16_V_6_reg_5580;
reg   [15:0] weight_buffer_17_V_6_reg_5585;
reg   [15:0] weight_buffer_18_V_6_reg_5590;
reg   [15:0] weight_buffer_19_V_6_reg_5595;
reg   [15:0] weight_buffer_20_V_6_reg_5600;
reg   [15:0] weight_buffer_21_V_6_reg_5605;
reg   [15:0] weight_buffer_22_V_6_reg_5610;
reg   [15:0] weight_buffer_23_V_6_reg_5615;
reg   [15:0] weight_buffer_24_V_6_reg_5620;
reg   [15:0] weight_buffer_25_V_6_reg_5625;
reg   [15:0] weight_buffer_26_V_6_reg_5630;
reg   [15:0] weight_buffer_27_V_6_reg_5635;
reg   [15:0] weight_buffer_28_V_6_reg_5640;
reg   [15:0] weight_buffer_29_V_6_reg_5645;
reg   [15:0] weight_buffer_30_V_6_reg_5650;
reg   [15:0] weight_buffer_31_V_6_reg_5655;
wire   [63:0] zext_ln30_2_fu_346_p1;
wire   [63:0] zext_ln30_4_fu_387_p1;
wire   [63:0] zext_ln30_6_fu_434_p1;
wire   [63:0] zext_ln30_8_fu_461_p1;
wire   [63:0] zext_ln30_10_fu_484_p1;
wire   [63:0] zext_ln30_12_fu_512_p1;
wire   [63:0] zext_ln30_14_fu_543_p1;
wire   [63:0] zext_ln30_16_fu_867_p1;
wire   [11:0] zext_ln61_fu_304_p1;
wire   [11:0] trunc_ln61_fu_308_p1;
wire   [26:0] zext_ln30_fu_318_p1;
wire   [26:0] zext_ln30_3_fu_361_p1;
wire   [5:0] pw_channels_after_ti_fu_373_p4;
wire   [26:0] zext_ln30_5_fu_401_p1;
wire   [6:0] zext_ln59_fu_383_p1;
wire   [6:0] factor_fu_410_p3;
wire   [6:0] add_ln73_fu_418_p2;
wire   [7:0] zext_ln73_fu_424_p1;
wire   [7:0] zext_ln58_fu_370_p1;
wire   [26:0] zext_ln30_7_fu_452_p1;
wire   [26:0] zext_ln30_9_fu_475_p1;
wire   [11:0] weights_all_ptr_6_fu_494_p2;
wire   [26:0] zext_ln30_11_fu_498_p1;
wire   [26:0] zext_ln30_13_fu_522_p1;
wire   [11:0] weights_all_ptr_8_fu_530_p2;
wire   [26:0] zext_ln30_15_fu_534_p1;
wire   [15:0] trunc_ln647_7_fu_2761_p1;
reg   [15:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln30_1_reg_4432 <= add_ln30_1_fu_365_p2;
        conv_channels_after_s_reg_4408 <= {{conv_out_channels_offset[10:5]}};
        weights_all_ptr_1_reg_4427 <= weights_all_ptr_1_fu_356_p2;
        zext_ln58_1_reg_4413[5 : 0] <= zext_ln58_1_fu_342_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln30_2_reg_4448 <= add_ln30_2_fu_405_p2;
        weights_all_ptr_2_reg_4443 <= weights_all_ptr_2_fu_397_p2;
        weights_all_ptr_9_reg_4453 <= weights_all_ptr_9_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln30_3_reg_4474 <= add_ln30_3_fu_456_p2;
        weights_all_ptr_4_reg_4469 <= weights_all_ptr_4_fu_447_p2;
        zext_ln73_1_reg_4464[7 : 0] <= zext_ln73_1_fu_444_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln30_4_reg_4490 <= add_ln30_4_fu_479_p2;
        weights_all_ptr_5_reg_4485 <= weights_all_ptr_5_fu_471_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln30_5_reg_4501 <= add_ln30_5_fu_502_p2;
        weights_all_ptr_7_reg_4506 <= weights_all_ptr_7_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        add_ln30_6_reg_4518 <= add_ln30_6_fu_525_p2;
        add_ln30_7_reg_4523 <= add_ln30_7_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln30_reg_4403 <= add_ln30_fu_326_p2;
        weights_all_ptr_reg_4387 <= weights_all_ptr_fu_312_p2;
        zext_ln30_1_reg_4392[25 : 0] <= zext_ln30_1_fu_322_p1[25 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        trunc_ln647_1_reg_4700 <= trunc_ln647_1_fu_877_p1;
        weight_buffer_10_V_1_reg_4750 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_1_reg_4755 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_1_reg_4760 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_1_reg_4765 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_1_reg_4770 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_1_reg_4775 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_1_reg_4780 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_1_reg_4785 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_1_reg_4790 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_1_reg_4795 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_1_reg_4705 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_1_reg_4800 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_1_reg_4805 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_1_reg_4810 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_1_reg_4815 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_1_reg_4820 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_1_reg_4825 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_1_reg_4830 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_1_reg_4835 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_1_reg_4840 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_1_reg_4845 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_1_reg_4710 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_1_reg_4850 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_1_reg_4855 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_1_reg_4715 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_1_reg_4720 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_1_reg_4725 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_1_reg_4730 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_1_reg_4735 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_1_reg_4740 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_1_reg_4745 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        trunc_ln647_2_reg_4860 <= trunc_ln647_2_fu_1191_p1;
        weight_buffer_10_V_2_reg_4910 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_2_reg_4915 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_2_reg_4920 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_2_reg_4925 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_2_reg_4930 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_2_reg_4935 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_2_reg_4940 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_2_reg_4945 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_2_reg_4950 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_2_reg_4955 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_2_reg_4865 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_2_reg_4960 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_2_reg_4965 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_2_reg_4970 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_2_reg_4975 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_2_reg_4980 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_2_reg_4985 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_2_reg_4990 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_2_reg_4995 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_2_reg_5000 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_2_reg_5005 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_2_reg_4870 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_2_reg_5010 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_2_reg_5015 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_2_reg_4875 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_2_reg_4880 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_2_reg_4885 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_2_reg_4890 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_2_reg_4895 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_2_reg_4900 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_2_reg_4905 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        trunc_ln647_3_reg_5020 <= trunc_ln647_3_fu_1505_p1;
        weight_buffer_10_V_3_reg_5070 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_3_reg_5075 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_3_reg_5080 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_3_reg_5085 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_3_reg_5090 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_3_reg_5095 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_3_reg_5100 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_3_reg_5105 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_3_reg_5110 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_3_reg_5115 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_3_reg_5025 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_3_reg_5120 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_3_reg_5125 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_3_reg_5130 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_3_reg_5135 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_3_reg_5140 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_3_reg_5145 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_3_reg_5150 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_3_reg_5155 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_3_reg_5160 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_3_reg_5165 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_3_reg_5030 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_3_reg_5170 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_3_reg_5175 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_3_reg_5035 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_3_reg_5040 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_3_reg_5045 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_3_reg_5050 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_3_reg_5055 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_3_reg_5060 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_3_reg_5065 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        trunc_ln647_4_reg_5180 <= trunc_ln647_4_fu_1819_p1;
        weight_buffer_10_V_4_reg_5230 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_4_reg_5235 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_4_reg_5240 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_4_reg_5245 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_4_reg_5250 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_4_reg_5255 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_4_reg_5260 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_4_reg_5265 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_4_reg_5270 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_4_reg_5275 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_4_reg_5185 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_4_reg_5280 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_4_reg_5285 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_4_reg_5290 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_4_reg_5295 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_4_reg_5300 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_4_reg_5305 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_4_reg_5310 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_4_reg_5315 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_4_reg_5320 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_4_reg_5325 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_4_reg_5190 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_4_reg_5330 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_4_reg_5335 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_4_reg_5195 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_4_reg_5200 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_4_reg_5205 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_4_reg_5210 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_4_reg_5215 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_4_reg_5220 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_4_reg_5225 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        trunc_ln647_5_reg_5340 <= trunc_ln647_5_fu_2133_p1;
        weight_buffer_10_V_5_reg_5390 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_5_reg_5395 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_5_reg_5400 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_5_reg_5405 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_5_reg_5410 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_5_reg_5415 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_5_reg_5420 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_5_reg_5425 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_5_reg_5430 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_5_reg_5435 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_5_reg_5345 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_5_reg_5440 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_5_reg_5445 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_5_reg_5450 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_5_reg_5455 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_5_reg_5460 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_5_reg_5465 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_5_reg_5470 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_5_reg_5475 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_5_reg_5480 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_5_reg_5485 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_5_reg_5350 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_5_reg_5490 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_5_reg_5495 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_5_reg_5355 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_5_reg_5360 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_5_reg_5365 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_5_reg_5370 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_5_reg_5375 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_5_reg_5380 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_5_reg_5385 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        trunc_ln647_6_reg_5500 <= trunc_ln647_6_fu_2447_p1;
        weight_buffer_10_V_6_reg_5550 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_6_reg_5555 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_6_reg_5560 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_6_reg_5565 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_6_reg_5570 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_6_reg_5575 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_6_reg_5580 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_6_reg_5585 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_6_reg_5590 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_6_reg_5595 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_6_reg_5505 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_6_reg_5600 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_6_reg_5605 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_6_reg_5610 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_6_reg_5615 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_6_reg_5620 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_6_reg_5625 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_6_reg_5630 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_6_reg_5635 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_6_reg_5640 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_6_reg_5645 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_6_reg_5510 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_6_reg_5650 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_6_reg_5655 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_6_reg_5515 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_6_reg_5520 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_6_reg_5525 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_6_reg_5530 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_6_reg_5535 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_6_reg_5540 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_6_reg_5545 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        trunc_ln647_reg_4534 <= trunc_ln647_fu_553_p1;
        weight_buffer_10_V_s_reg_4584 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_s_reg_4589 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_s_reg_4594 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_s_reg_4599 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_s_reg_4604 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_s_reg_4609 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_s_reg_4614 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_s_reg_4619 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_s_reg_4624 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_s_reg_4629 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_reg_4539 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_s_reg_4634 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_s_reg_4639 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_s_reg_4644 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_s_reg_4649 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_s_reg_4654 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_s_reg_4659 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_s_reg_4664 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_s_reg_4669 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_s_reg_4674 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_s_reg_4679 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_reg_4544 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_s_reg_4684 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_s_reg_4689 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_reg_4549 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_reg_4554 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_reg_4559 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_reg_4564 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_reg_4569 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_reg_4574 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_reg_4579 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (*) begin
    if ((((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_16_fu_867_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_14_fu_543_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_12_fu_512_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_10_fu_484_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_8_fu_461_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_6_fu_434_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_4_fu_387_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_2_fu_346_p1;
    end else begin
        m_axi_weights_all_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_weights_all_V_ARVALID = 1'b1;
    end else begin
        m_axi_weights_all_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | (~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        m_axi_weights_all_V_RREADY = 1'b1;
    end else begin
        m_axi_weights_all_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2))) begin
        weights_all_V_blk_n_AR = m_axi_weights_all_V_ARREADY;
    end else begin
        weights_all_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        weights_all_V_blk_n_R = m_axi_weights_all_V_RVALID;
    end else begin
        weights_all_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln30_1_fu_365_p2 = (zext_ln30_3_fu_361_p1 + zext_ln30_1_reg_4392);

assign add_ln30_2_fu_405_p2 = (zext_ln30_5_fu_401_p1 + zext_ln30_1_reg_4392);

assign add_ln30_3_fu_456_p2 = (zext_ln30_7_fu_452_p1 + zext_ln30_1_reg_4392);

assign add_ln30_4_fu_479_p2 = (zext_ln30_9_fu_475_p1 + zext_ln30_1_reg_4392);

assign add_ln30_5_fu_502_p2 = (zext_ln30_11_fu_498_p1 + zext_ln30_1_reg_4392);

assign add_ln30_6_fu_525_p2 = (zext_ln30_13_fu_522_p1 + zext_ln30_1_reg_4392);

assign add_ln30_7_fu_538_p2 = (zext_ln30_15_fu_534_p1 + zext_ln30_1_reg_4392);

assign add_ln30_fu_326_p2 = (zext_ln30_fu_318_p1 + zext_ln30_1_fu_322_p1);

assign add_ln73_fu_418_p2 = (zext_ln59_fu_383_p1 + factor_fu_410_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return_0 = trunc_ln647_reg_4534;

assign ap_return_1 = weight_buffer_1_V_w_reg_4539;

assign ap_return_10 = weight_buffer_10_V_s_reg_4584;

assign ap_return_100 = weight_buffer_4_V_w_3_reg_5040;

assign ap_return_101 = weight_buffer_5_V_w_3_reg_5045;

assign ap_return_102 = weight_buffer_6_V_w_3_reg_5050;

assign ap_return_103 = weight_buffer_7_V_w_3_reg_5055;

assign ap_return_104 = weight_buffer_8_V_w_3_reg_5060;

assign ap_return_105 = weight_buffer_9_V_w_3_reg_5065;

assign ap_return_106 = weight_buffer_10_V_3_reg_5070;

assign ap_return_107 = weight_buffer_11_V_3_reg_5075;

assign ap_return_108 = weight_buffer_12_V_3_reg_5080;

assign ap_return_109 = weight_buffer_13_V_3_reg_5085;

assign ap_return_11 = weight_buffer_11_V_s_reg_4589;

assign ap_return_110 = weight_buffer_14_V_3_reg_5090;

assign ap_return_111 = weight_buffer_15_V_3_reg_5095;

assign ap_return_112 = weight_buffer_16_V_3_reg_5100;

assign ap_return_113 = weight_buffer_17_V_3_reg_5105;

assign ap_return_114 = weight_buffer_18_V_3_reg_5110;

assign ap_return_115 = weight_buffer_19_V_3_reg_5115;

assign ap_return_116 = weight_buffer_20_V_3_reg_5120;

assign ap_return_117 = weight_buffer_21_V_3_reg_5125;

assign ap_return_118 = weight_buffer_22_V_3_reg_5130;

assign ap_return_119 = weight_buffer_23_V_3_reg_5135;

assign ap_return_12 = weight_buffer_12_V_s_reg_4594;

assign ap_return_120 = weight_buffer_24_V_3_reg_5140;

assign ap_return_121 = weight_buffer_25_V_3_reg_5145;

assign ap_return_122 = weight_buffer_26_V_3_reg_5150;

assign ap_return_123 = weight_buffer_27_V_3_reg_5155;

assign ap_return_124 = weight_buffer_28_V_3_reg_5160;

assign ap_return_125 = weight_buffer_29_V_3_reg_5165;

assign ap_return_126 = weight_buffer_30_V_3_reg_5170;

assign ap_return_127 = weight_buffer_31_V_3_reg_5175;

assign ap_return_128 = trunc_ln647_4_reg_5180;

assign ap_return_129 = weight_buffer_1_V_w_4_reg_5185;

assign ap_return_13 = weight_buffer_13_V_s_reg_4599;

assign ap_return_130 = weight_buffer_2_V_w_4_reg_5190;

assign ap_return_131 = weight_buffer_3_V_w_4_reg_5195;

assign ap_return_132 = weight_buffer_4_V_w_4_reg_5200;

assign ap_return_133 = weight_buffer_5_V_w_4_reg_5205;

assign ap_return_134 = weight_buffer_6_V_w_4_reg_5210;

assign ap_return_135 = weight_buffer_7_V_w_4_reg_5215;

assign ap_return_136 = weight_buffer_8_V_w_4_reg_5220;

assign ap_return_137 = weight_buffer_9_V_w_4_reg_5225;

assign ap_return_138 = weight_buffer_10_V_4_reg_5230;

assign ap_return_139 = weight_buffer_11_V_4_reg_5235;

assign ap_return_14 = weight_buffer_14_V_s_reg_4604;

assign ap_return_140 = weight_buffer_12_V_4_reg_5240;

assign ap_return_141 = weight_buffer_13_V_4_reg_5245;

assign ap_return_142 = weight_buffer_14_V_4_reg_5250;

assign ap_return_143 = weight_buffer_15_V_4_reg_5255;

assign ap_return_144 = weight_buffer_16_V_4_reg_5260;

assign ap_return_145 = weight_buffer_17_V_4_reg_5265;

assign ap_return_146 = weight_buffer_18_V_4_reg_5270;

assign ap_return_147 = weight_buffer_19_V_4_reg_5275;

assign ap_return_148 = weight_buffer_20_V_4_reg_5280;

assign ap_return_149 = weight_buffer_21_V_4_reg_5285;

assign ap_return_15 = weight_buffer_15_V_s_reg_4609;

assign ap_return_150 = weight_buffer_22_V_4_reg_5290;

assign ap_return_151 = weight_buffer_23_V_4_reg_5295;

assign ap_return_152 = weight_buffer_24_V_4_reg_5300;

assign ap_return_153 = weight_buffer_25_V_4_reg_5305;

assign ap_return_154 = weight_buffer_26_V_4_reg_5310;

assign ap_return_155 = weight_buffer_27_V_4_reg_5315;

assign ap_return_156 = weight_buffer_28_V_4_reg_5320;

assign ap_return_157 = weight_buffer_29_V_4_reg_5325;

assign ap_return_158 = weight_buffer_30_V_4_reg_5330;

assign ap_return_159 = weight_buffer_31_V_4_reg_5335;

assign ap_return_16 = weight_buffer_16_V_s_reg_4614;

assign ap_return_160 = trunc_ln647_5_reg_5340;

assign ap_return_161 = weight_buffer_1_V_w_5_reg_5345;

assign ap_return_162 = weight_buffer_2_V_w_5_reg_5350;

assign ap_return_163 = weight_buffer_3_V_w_5_reg_5355;

assign ap_return_164 = weight_buffer_4_V_w_5_reg_5360;

assign ap_return_165 = weight_buffer_5_V_w_5_reg_5365;

assign ap_return_166 = weight_buffer_6_V_w_5_reg_5370;

assign ap_return_167 = weight_buffer_7_V_w_5_reg_5375;

assign ap_return_168 = weight_buffer_8_V_w_5_reg_5380;

assign ap_return_169 = weight_buffer_9_V_w_5_reg_5385;

assign ap_return_17 = weight_buffer_17_V_s_reg_4619;

assign ap_return_170 = weight_buffer_10_V_5_reg_5390;

assign ap_return_171 = weight_buffer_11_V_5_reg_5395;

assign ap_return_172 = weight_buffer_12_V_5_reg_5400;

assign ap_return_173 = weight_buffer_13_V_5_reg_5405;

assign ap_return_174 = weight_buffer_14_V_5_reg_5410;

assign ap_return_175 = weight_buffer_15_V_5_reg_5415;

assign ap_return_176 = weight_buffer_16_V_5_reg_5420;

assign ap_return_177 = weight_buffer_17_V_5_reg_5425;

assign ap_return_178 = weight_buffer_18_V_5_reg_5430;

assign ap_return_179 = weight_buffer_19_V_5_reg_5435;

assign ap_return_18 = weight_buffer_18_V_s_reg_4624;

assign ap_return_180 = weight_buffer_20_V_5_reg_5440;

assign ap_return_181 = weight_buffer_21_V_5_reg_5445;

assign ap_return_182 = weight_buffer_22_V_5_reg_5450;

assign ap_return_183 = weight_buffer_23_V_5_reg_5455;

assign ap_return_184 = weight_buffer_24_V_5_reg_5460;

assign ap_return_185 = weight_buffer_25_V_5_reg_5465;

assign ap_return_186 = weight_buffer_26_V_5_reg_5470;

assign ap_return_187 = weight_buffer_27_V_5_reg_5475;

assign ap_return_188 = weight_buffer_28_V_5_reg_5480;

assign ap_return_189 = weight_buffer_29_V_5_reg_5485;

assign ap_return_19 = weight_buffer_19_V_s_reg_4629;

assign ap_return_190 = weight_buffer_30_V_5_reg_5490;

assign ap_return_191 = weight_buffer_31_V_5_reg_5495;

assign ap_return_192 = trunc_ln647_6_reg_5500;

assign ap_return_193 = weight_buffer_1_V_w_6_reg_5505;

assign ap_return_194 = weight_buffer_2_V_w_6_reg_5510;

assign ap_return_195 = weight_buffer_3_V_w_6_reg_5515;

assign ap_return_196 = weight_buffer_4_V_w_6_reg_5520;

assign ap_return_197 = weight_buffer_5_V_w_6_reg_5525;

assign ap_return_198 = weight_buffer_6_V_w_6_reg_5530;

assign ap_return_199 = weight_buffer_7_V_w_6_reg_5535;

assign ap_return_2 = weight_buffer_2_V_w_reg_4544;

assign ap_return_20 = weight_buffer_20_V_s_reg_4634;

assign ap_return_200 = weight_buffer_8_V_w_6_reg_5540;

assign ap_return_201 = weight_buffer_9_V_w_6_reg_5545;

assign ap_return_202 = weight_buffer_10_V_6_reg_5550;

assign ap_return_203 = weight_buffer_11_V_6_reg_5555;

assign ap_return_204 = weight_buffer_12_V_6_reg_5560;

assign ap_return_205 = weight_buffer_13_V_6_reg_5565;

assign ap_return_206 = weight_buffer_14_V_6_reg_5570;

assign ap_return_207 = weight_buffer_15_V_6_reg_5575;

assign ap_return_208 = weight_buffer_16_V_6_reg_5580;

assign ap_return_209 = weight_buffer_17_V_6_reg_5585;

assign ap_return_21 = weight_buffer_21_V_s_reg_4639;

assign ap_return_210 = weight_buffer_18_V_6_reg_5590;

assign ap_return_211 = weight_buffer_19_V_6_reg_5595;

assign ap_return_212 = weight_buffer_20_V_6_reg_5600;

assign ap_return_213 = weight_buffer_21_V_6_reg_5605;

assign ap_return_214 = weight_buffer_22_V_6_reg_5610;

assign ap_return_215 = weight_buffer_23_V_6_reg_5615;

assign ap_return_216 = weight_buffer_24_V_6_reg_5620;

assign ap_return_217 = weight_buffer_25_V_6_reg_5625;

assign ap_return_218 = weight_buffer_26_V_6_reg_5630;

assign ap_return_219 = weight_buffer_27_V_6_reg_5635;

assign ap_return_22 = weight_buffer_22_V_s_reg_4644;

assign ap_return_220 = weight_buffer_28_V_6_reg_5640;

assign ap_return_221 = weight_buffer_29_V_6_reg_5645;

assign ap_return_222 = weight_buffer_30_V_6_reg_5650;

assign ap_return_223 = weight_buffer_31_V_6_reg_5655;

assign ap_return_224 = trunc_ln647_7_fu_2761_p1;

assign ap_return_225 = {{m_axi_weights_all_V_RDATA[31:16]}};

assign ap_return_226 = {{m_axi_weights_all_V_RDATA[47:32]}};

assign ap_return_227 = {{m_axi_weights_all_V_RDATA[63:48]}};

assign ap_return_228 = {{m_axi_weights_all_V_RDATA[79:64]}};

assign ap_return_229 = {{m_axi_weights_all_V_RDATA[95:80]}};

assign ap_return_23 = weight_buffer_23_V_s_reg_4649;

assign ap_return_230 = {{m_axi_weights_all_V_RDATA[111:96]}};

assign ap_return_231 = {{m_axi_weights_all_V_RDATA[127:112]}};

assign ap_return_232 = {{m_axi_weights_all_V_RDATA[143:128]}};

assign ap_return_233 = {{m_axi_weights_all_V_RDATA[159:144]}};

assign ap_return_234 = {{m_axi_weights_all_V_RDATA[175:160]}};

assign ap_return_235 = {{m_axi_weights_all_V_RDATA[191:176]}};

assign ap_return_236 = {{m_axi_weights_all_V_RDATA[207:192]}};

assign ap_return_237 = {{m_axi_weights_all_V_RDATA[223:208]}};

assign ap_return_238 = {{m_axi_weights_all_V_RDATA[239:224]}};

assign ap_return_239 = {{m_axi_weights_all_V_RDATA[255:240]}};

assign ap_return_24 = weight_buffer_24_V_s_reg_4654;

assign ap_return_240 = {{m_axi_weights_all_V_RDATA[271:256]}};

assign ap_return_241 = {{m_axi_weights_all_V_RDATA[287:272]}};

assign ap_return_242 = {{m_axi_weights_all_V_RDATA[303:288]}};

assign ap_return_243 = {{m_axi_weights_all_V_RDATA[319:304]}};

assign ap_return_244 = {{m_axi_weights_all_V_RDATA[335:320]}};

assign ap_return_245 = {{m_axi_weights_all_V_RDATA[351:336]}};

assign ap_return_246 = {{m_axi_weights_all_V_RDATA[367:352]}};

assign ap_return_247 = {{m_axi_weights_all_V_RDATA[383:368]}};

assign ap_return_248 = {{m_axi_weights_all_V_RDATA[399:384]}};

assign ap_return_249 = {{m_axi_weights_all_V_RDATA[415:400]}};

assign ap_return_25 = weight_buffer_25_V_s_reg_4659;

assign ap_return_250 = {{m_axi_weights_all_V_RDATA[431:416]}};

assign ap_return_251 = {{m_axi_weights_all_V_RDATA[447:432]}};

assign ap_return_252 = {{m_axi_weights_all_V_RDATA[463:448]}};

assign ap_return_253 = {{m_axi_weights_all_V_RDATA[479:464]}};

assign ap_return_254 = {{m_axi_weights_all_V_RDATA[495:480]}};

assign ap_return_255 = {{m_axi_weights_all_V_RDATA[511:496]}};

assign ap_return_26 = weight_buffer_26_V_s_reg_4664;

assign ap_return_27 = weight_buffer_27_V_s_reg_4669;

assign ap_return_28 = weight_buffer_28_V_s_reg_4674;

assign ap_return_29 = weight_buffer_29_V_s_reg_4679;

assign ap_return_3 = weight_buffer_3_V_w_reg_4549;

assign ap_return_30 = weight_buffer_30_V_s_reg_4684;

assign ap_return_31 = weight_buffer_31_V_s_reg_4689;

assign ap_return_32 = trunc_ln647_1_reg_4700;

assign ap_return_33 = weight_buffer_1_V_w_1_reg_4705;

assign ap_return_34 = weight_buffer_2_V_w_1_reg_4710;

assign ap_return_35 = weight_buffer_3_V_w_1_reg_4715;

assign ap_return_36 = weight_buffer_4_V_w_1_reg_4720;

assign ap_return_37 = weight_buffer_5_V_w_1_reg_4725;

assign ap_return_38 = weight_buffer_6_V_w_1_reg_4730;

assign ap_return_39 = weight_buffer_7_V_w_1_reg_4735;

assign ap_return_4 = weight_buffer_4_V_w_reg_4554;

assign ap_return_40 = weight_buffer_8_V_w_1_reg_4740;

assign ap_return_41 = weight_buffer_9_V_w_1_reg_4745;

assign ap_return_42 = weight_buffer_10_V_1_reg_4750;

assign ap_return_43 = weight_buffer_11_V_1_reg_4755;

assign ap_return_44 = weight_buffer_12_V_1_reg_4760;

assign ap_return_45 = weight_buffer_13_V_1_reg_4765;

assign ap_return_46 = weight_buffer_14_V_1_reg_4770;

assign ap_return_47 = weight_buffer_15_V_1_reg_4775;

assign ap_return_48 = weight_buffer_16_V_1_reg_4780;

assign ap_return_49 = weight_buffer_17_V_1_reg_4785;

assign ap_return_5 = weight_buffer_5_V_w_reg_4559;

assign ap_return_50 = weight_buffer_18_V_1_reg_4790;

assign ap_return_51 = weight_buffer_19_V_1_reg_4795;

assign ap_return_52 = weight_buffer_20_V_1_reg_4800;

assign ap_return_53 = weight_buffer_21_V_1_reg_4805;

assign ap_return_54 = weight_buffer_22_V_1_reg_4810;

assign ap_return_55 = weight_buffer_23_V_1_reg_4815;

assign ap_return_56 = weight_buffer_24_V_1_reg_4820;

assign ap_return_57 = weight_buffer_25_V_1_reg_4825;

assign ap_return_58 = weight_buffer_26_V_1_reg_4830;

assign ap_return_59 = weight_buffer_27_V_1_reg_4835;

assign ap_return_6 = weight_buffer_6_V_w_reg_4564;

assign ap_return_60 = weight_buffer_28_V_1_reg_4840;

assign ap_return_61 = weight_buffer_29_V_1_reg_4845;

assign ap_return_62 = weight_buffer_30_V_1_reg_4850;

assign ap_return_63 = weight_buffer_31_V_1_reg_4855;

assign ap_return_64 = trunc_ln647_2_reg_4860;

assign ap_return_65 = weight_buffer_1_V_w_2_reg_4865;

assign ap_return_66 = weight_buffer_2_V_w_2_reg_4870;

assign ap_return_67 = weight_buffer_3_V_w_2_reg_4875;

assign ap_return_68 = weight_buffer_4_V_w_2_reg_4880;

assign ap_return_69 = weight_buffer_5_V_w_2_reg_4885;

assign ap_return_7 = weight_buffer_7_V_w_reg_4569;

assign ap_return_70 = weight_buffer_6_V_w_2_reg_4890;

assign ap_return_71 = weight_buffer_7_V_w_2_reg_4895;

assign ap_return_72 = weight_buffer_8_V_w_2_reg_4900;

assign ap_return_73 = weight_buffer_9_V_w_2_reg_4905;

assign ap_return_74 = weight_buffer_10_V_2_reg_4910;

assign ap_return_75 = weight_buffer_11_V_2_reg_4915;

assign ap_return_76 = weight_buffer_12_V_2_reg_4920;

assign ap_return_77 = weight_buffer_13_V_2_reg_4925;

assign ap_return_78 = weight_buffer_14_V_2_reg_4930;

assign ap_return_79 = weight_buffer_15_V_2_reg_4935;

assign ap_return_8 = weight_buffer_8_V_w_reg_4574;

assign ap_return_80 = weight_buffer_16_V_2_reg_4940;

assign ap_return_81 = weight_buffer_17_V_2_reg_4945;

assign ap_return_82 = weight_buffer_18_V_2_reg_4950;

assign ap_return_83 = weight_buffer_19_V_2_reg_4955;

assign ap_return_84 = weight_buffer_20_V_2_reg_4960;

assign ap_return_85 = weight_buffer_21_V_2_reg_4965;

assign ap_return_86 = weight_buffer_22_V_2_reg_4970;

assign ap_return_87 = weight_buffer_23_V_2_reg_4975;

assign ap_return_88 = weight_buffer_24_V_2_reg_4980;

assign ap_return_89 = weight_buffer_25_V_2_reg_4985;

assign ap_return_9 = weight_buffer_9_V_w_reg_4579;

assign ap_return_90 = weight_buffer_26_V_2_reg_4990;

assign ap_return_91 = weight_buffer_27_V_2_reg_4995;

assign ap_return_92 = weight_buffer_28_V_2_reg_5000;

assign ap_return_93 = weight_buffer_29_V_2_reg_5005;

assign ap_return_94 = weight_buffer_30_V_2_reg_5010;

assign ap_return_95 = weight_buffer_31_V_2_reg_5015;

assign ap_return_96 = trunc_ln647_3_reg_5020;

assign ap_return_97 = weight_buffer_1_V_w_3_reg_5025;

assign ap_return_98 = weight_buffer_2_V_w_3_reg_5030;

assign ap_return_99 = weight_buffer_3_V_w_3_reg_5035;

assign conv_channels_after_s_fu_332_p4 = {{conv_out_channels_offset[10:5]}};

assign factor_fu_410_p3 = {{pw_channels_after_ti_fu_373_p4}, {1'd0}};

assign m_axi_weights_all_V_ARBURST = 2'd0;

assign m_axi_weights_all_V_ARCACHE = 4'd0;

assign m_axi_weights_all_V_ARID = 1'd0;

assign m_axi_weights_all_V_ARLEN = 32'd1;

assign m_axi_weights_all_V_ARLOCK = 2'd0;

assign m_axi_weights_all_V_ARPROT = 3'd0;

assign m_axi_weights_all_V_ARQOS = 4'd0;

assign m_axi_weights_all_V_ARREGION = 4'd0;

assign m_axi_weights_all_V_ARSIZE = 3'd0;

assign m_axi_weights_all_V_ARUSER = 1'd0;

assign m_axi_weights_all_V_AWADDR = 32'd0;

assign m_axi_weights_all_V_AWBURST = 2'd0;

assign m_axi_weights_all_V_AWCACHE = 4'd0;

assign m_axi_weights_all_V_AWID = 1'd0;

assign m_axi_weights_all_V_AWLEN = 32'd0;

assign m_axi_weights_all_V_AWLOCK = 2'd0;

assign m_axi_weights_all_V_AWPROT = 3'd0;

assign m_axi_weights_all_V_AWQOS = 4'd0;

assign m_axi_weights_all_V_AWREGION = 4'd0;

assign m_axi_weights_all_V_AWSIZE = 3'd0;

assign m_axi_weights_all_V_AWUSER = 1'd0;

assign m_axi_weights_all_V_AWVALID = 1'b0;

assign m_axi_weights_all_V_BREADY = 1'b0;

assign m_axi_weights_all_V_WDATA = 512'd0;

assign m_axi_weights_all_V_WID = 1'd0;

assign m_axi_weights_all_V_WLAST = 1'b0;

assign m_axi_weights_all_V_WSTRB = 64'd0;

assign m_axi_weights_all_V_WUSER = 1'd0;

assign m_axi_weights_all_V_WVALID = 1'b0;

assign pw_channels_after_ti_fu_373_p4 = {{pw_out_channels_offset[10:5]}};

assign trunc_ln61_fu_308_p1 = weights_all_ptr_start_offset[11:0];

assign trunc_ln647_1_fu_877_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_2_fu_1191_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_3_fu_1505_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_4_fu_1819_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_5_fu_2133_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_6_fu_2447_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_7_fu_2761_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_fu_553_p1 = m_axi_weights_all_V_RDATA[15:0];

assign weights_all_ptr_1_fu_356_p2 = (weights_all_ptr_reg_4387 + zext_ln58_1_fu_342_p1);

assign weights_all_ptr_2_fu_397_p2 = (zext_ln58_1_reg_4413 + weights_all_ptr_1_reg_4427);

assign weights_all_ptr_4_fu_447_p2 = (weights_all_ptr_2_reg_4443 + zext_ln73_1_fu_444_p1);

assign weights_all_ptr_5_fu_471_p2 = (zext_ln58_1_reg_4413 + weights_all_ptr_4_reg_4469);

assign weights_all_ptr_6_fu_494_p2 = (zext_ln58_1_reg_4413 + weights_all_ptr_5_reg_4485);

assign weights_all_ptr_7_fu_507_p2 = (zext_ln73_1_reg_4464 + weights_all_ptr_6_fu_494_p2);

assign weights_all_ptr_8_fu_530_p2 = (zext_ln58_1_reg_4413 + weights_all_ptr_7_reg_4506);

assign weights_all_ptr_9_fu_428_p2 = (zext_ln73_fu_424_p1 + zext_ln58_fu_370_p1);

assign weights_all_ptr_fu_312_p2 = (zext_ln61_fu_304_p1 + trunc_ln61_fu_308_p1);

assign zext_ln30_10_fu_484_p1 = add_ln30_4_reg_4490;

assign zext_ln30_11_fu_498_p1 = weights_all_ptr_6_fu_494_p2;

assign zext_ln30_12_fu_512_p1 = add_ln30_5_reg_4501;

assign zext_ln30_13_fu_522_p1 = weights_all_ptr_7_reg_4506;

assign zext_ln30_14_fu_543_p1 = add_ln30_6_reg_4518;

assign zext_ln30_15_fu_534_p1 = weights_all_ptr_8_fu_530_p2;

assign zext_ln30_16_fu_867_p1 = add_ln30_7_reg_4523;

assign zext_ln30_1_fu_322_p1 = weights_all_V_offset;

assign zext_ln30_2_fu_346_p1 = add_ln30_reg_4403;

assign zext_ln30_3_fu_361_p1 = weights_all_ptr_1_fu_356_p2;

assign zext_ln30_4_fu_387_p1 = add_ln30_1_reg_4432;

assign zext_ln30_5_fu_401_p1 = weights_all_ptr_2_fu_397_p2;

assign zext_ln30_6_fu_434_p1 = add_ln30_2_reg_4448;

assign zext_ln30_7_fu_452_p1 = weights_all_ptr_4_fu_447_p2;

assign zext_ln30_8_fu_461_p1 = add_ln30_3_reg_4474;

assign zext_ln30_9_fu_475_p1 = weights_all_ptr_5_fu_471_p2;

assign zext_ln30_fu_318_p1 = weights_all_ptr_fu_312_p2;

assign zext_ln58_1_fu_342_p1 = conv_channels_after_s_fu_332_p4;

assign zext_ln58_fu_370_p1 = conv_channels_after_s_reg_4408;

assign zext_ln59_fu_383_p1 = pw_channels_after_ti_fu_373_p4;

assign zext_ln61_fu_304_p1 = c_out_offset;

assign zext_ln73_1_fu_444_p1 = weights_all_ptr_9_reg_4453;

assign zext_ln73_fu_424_p1 = add_ln73_fu_418_p2;

always @ (posedge ap_clk) begin
    zext_ln30_1_reg_4392[26] <= 1'b0;
    zext_ln58_1_reg_4413[11:6] <= 6'b000000;
    zext_ln73_1_reg_4464[11:8] <= 4'b0000;
end

endmodule //load_layer_1D_weight_1
