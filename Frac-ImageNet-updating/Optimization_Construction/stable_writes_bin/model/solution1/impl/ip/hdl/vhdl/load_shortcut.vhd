-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity load_shortcut is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_buf_sc_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_0_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_0_V_we0 : OUT STD_LOGIC;
    out_buf_sc_0_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_1_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_1_V_we0 : OUT STD_LOGIC;
    out_buf_sc_1_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_2_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_2_V_we0 : OUT STD_LOGIC;
    out_buf_sc_2_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_3_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_3_V_we0 : OUT STD_LOGIC;
    out_buf_sc_3_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_4_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_4_V_we0 : OUT STD_LOGIC;
    out_buf_sc_4_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_5_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_5_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_5_V_we0 : OUT STD_LOGIC;
    out_buf_sc_5_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_6_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_6_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_6_V_we0 : OUT STD_LOGIC;
    out_buf_sc_6_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_7_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_7_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_7_V_we0 : OUT STD_LOGIC;
    out_buf_sc_7_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_8_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_8_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_8_V_we0 : OUT STD_LOGIC;
    out_buf_sc_8_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_9_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_9_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_9_V_we0 : OUT STD_LOGIC;
    out_buf_sc_9_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_10_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_10_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_10_V_we0 : OUT STD_LOGIC;
    out_buf_sc_10_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_11_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_11_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_11_V_we0 : OUT STD_LOGIC;
    out_buf_sc_11_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_12_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_12_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_12_V_we0 : OUT STD_LOGIC;
    out_buf_sc_12_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_13_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_13_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_13_V_we0 : OUT STD_LOGIC;
    out_buf_sc_13_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_14_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_14_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_14_V_we0 : OUT STD_LOGIC;
    out_buf_sc_14_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_15_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_15_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_15_V_we0 : OUT STD_LOGIC;
    out_buf_sc_15_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_16_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_16_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_16_V_we0 : OUT STD_LOGIC;
    out_buf_sc_16_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_17_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_17_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_17_V_we0 : OUT STD_LOGIC;
    out_buf_sc_17_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_18_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_18_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_18_V_we0 : OUT STD_LOGIC;
    out_buf_sc_18_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_19_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_19_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_19_V_we0 : OUT STD_LOGIC;
    out_buf_sc_19_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_20_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_20_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_20_V_we0 : OUT STD_LOGIC;
    out_buf_sc_20_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_21_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_21_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_21_V_we0 : OUT STD_LOGIC;
    out_buf_sc_21_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_22_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_22_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_22_V_we0 : OUT STD_LOGIC;
    out_buf_sc_22_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_23_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_23_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_23_V_we0 : OUT STD_LOGIC;
    out_buf_sc_23_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_24_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_24_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_24_V_we0 : OUT STD_LOGIC;
    out_buf_sc_24_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_25_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_25_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_25_V_we0 : OUT STD_LOGIC;
    out_buf_sc_25_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_26_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_26_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_26_V_we0 : OUT STD_LOGIC;
    out_buf_sc_26_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_27_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_27_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_27_V_we0 : OUT STD_LOGIC;
    out_buf_sc_27_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_28_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_28_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_28_V_we0 : OUT STD_LOGIC;
    out_buf_sc_28_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_29_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_29_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_29_V_we0 : OUT STD_LOGIC;
    out_buf_sc_29_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_30_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_30_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_30_V_we0 : OUT STD_LOGIC;
    out_buf_sc_30_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_buf_sc_31_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_31_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_31_V_we0 : OUT STD_LOGIC;
    out_buf_sc_31_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_DDR_buf_V_AWVALID : OUT STD_LOGIC;
    m_axi_DDR_buf_V_AWREADY : IN STD_LOGIC;
    m_axi_DDR_buf_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_DDR_buf_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_DDR_buf_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_DDR_buf_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_DDR_buf_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_WVALID : OUT STD_LOGIC;
    m_axi_DDR_buf_V_WREADY : IN STD_LOGIC;
    m_axi_DDR_buf_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_DDR_buf_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_DDR_buf_V_WLAST : OUT STD_LOGIC;
    m_axi_DDR_buf_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_ARVALID : OUT STD_LOGIC;
    m_axi_DDR_buf_V_ARREADY : IN STD_LOGIC;
    m_axi_DDR_buf_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_DDR_buf_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_DDR_buf_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_DDR_buf_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_DDR_buf_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_RVALID : IN STD_LOGIC;
    m_axi_DDR_buf_V_RREADY : OUT STD_LOGIC;
    m_axi_DDR_buf_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_DDR_buf_V_RLAST : IN STD_LOGIC;
    m_axi_DDR_buf_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_BVALID : IN STD_LOGIC;
    m_axi_DDR_buf_V_BREADY : OUT STD_LOGIC;
    m_axi_DDR_buf_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    DDR_buf_V_offset : IN STD_LOGIC_VECTOR (25 downto 0);
    H_fmap_out : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels : IN STD_LOGIC_VECTOR (11 downto 0);
    out_channel_start : IN STD_LOGIC_VECTOR (31 downto 0);
    row_tile_start : IN STD_LOGIC_VECTOR (31 downto 0);
    switch_bank : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of load_shortcut is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv29_20 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_const_lv36_E2 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000011100010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv44_E1 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000011100001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_10F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001111";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_16F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101111";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_18F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101111";
    constant ap_const_lv32_1B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001111";
    constant ap_const_lv32_1D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101111";
    constant ap_const_lv32_1F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv11_71 : STD_LOGIC_VECTOR (10 downto 0) := "00001110001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal DDR_buf_V_blk_n_AR : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln258_reg_1417 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal DDR_buf_V_blk_n_R : STD_LOGIC;
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal icmp_ln258_reg_1417_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_752 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_0_reg_763 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_0_reg_774 : STD_LOGIC_VECTOR (6 downto 0);
    signal ddr_channel_ptr_fu_833_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal ddr_channel_ptr_reg_1374 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln254_fu_885_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln254_reg_1382 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_896_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln261_reg_1402 : STD_LOGIC_VECTOR (35 downto 0);
    signal bound_fu_902_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal bound_reg_1407 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln258_1_fu_910_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln258_1_reg_1412 : STD_LOGIC_VECTOR (43 downto 0);
    signal icmp_ln258_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln258_reg_1417_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1417_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln258_1_fu_928_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln258_fu_940_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln258_reg_1426 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln258_reg_1426_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln258_reg_1426_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln258_reg_1426_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln258_1_fu_948_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln258_1_reg_1432 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_fu_956_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln261_fu_974_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln261_reg_1444 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1366_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal add_ln339_reg_1449_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter9_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter10_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter11_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln339_reg_1449_pp0_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_988_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln261_1_reg_1459 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln261_2_fu_1002_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln261_2_reg_1464 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln647_fu_1017_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln647_reg_1475 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_1_reg_1480 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_2_reg_1485 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_3_reg_1490 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_4_reg_1495 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_5_reg_1500 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_6_reg_1505 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_7_reg_1510 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_8_reg_1515 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_9_reg_1520 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_s_reg_1525 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_10_reg_1530 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_11_reg_1535 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_12_reg_1540 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_13_reg_1545 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_14_reg_1550 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_15_reg_1555 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_16_reg_1560 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_17_reg_1565 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_18_reg_1570 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_19_reg_1575 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_20_reg_1580 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_21_reg_1585 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_22_reg_1590 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_23_reg_1595 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_24_reg_1600 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_25_reg_1605 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_26_reg_1610 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_27_reg_1615 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_28_reg_1620 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_29_reg_1625 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_30_reg_1630 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_phi_mux_row_0_phi_fu_767_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln339_fu_1331_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln261_3_fu_1007_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln253_fu_793_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_799_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln253_fu_809_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1_fu_819_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_4_fu_785_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln253_1_fu_813_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln253_1_fu_829_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln255_4_fu_844_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln255_fu_854_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln255_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln255_fu_863_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ddr_channel_ptr_1_fu_868_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln255_fu_875_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ddr_channel_ptr_2_fu_879_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln253_fu_841_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_896_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln259_fu_914_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln259_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_fu_934_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln258_fu_962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln258_fu_965_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln261_1_fu_970_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_988_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln339_1_fu_994_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln261_1_fu_997_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_1366_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1366_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1366_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_988_ce : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1366_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1366_p20 : STD_LOGIC_VECTOR (10 downto 0);

    component FracNet_mul_29s_9lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (28 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component FracNet_mul_9ns_3mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component FracNet_mac_muladncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    FracNet_mul_29s_9lbW_U777 : component FracNet_mul_29s_9lbW
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 29,
        din1_WIDTH => 9,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln254_reg_1382,
        din1 => grp_fu_896_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_896_p2);

    FracNet_mul_9ns_3mb6_U778 : component FracNet_mul_9ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 9,
        din1_WIDTH => 36,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_988_p0,
        din1 => add_ln261_reg_1444,
        ce => grp_fu_988_ce,
        dout => grp_fu_988_p2);

    FracNet_mac_muladncg_U779 : component FracNet_mac_muladncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        din2_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1366_p0,
        din1 => grp_fu_1366_p1,
        din2 => grp_fu_1366_p2,
        dout => grp_fu_1366_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    col_0_reg_774_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_fu_923_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                col_0_reg_774 <= col_fu_956_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                col_0_reg_774 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_fu_923_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_752 <= add_ln258_1_fu_928_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indvar_flatten_reg_752 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    row_0_reg_763_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                row_0_reg_763 <= select_ln258_1_reg_1432;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                row_0_reg_763 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter3_reg = ap_const_lv1_0))) then
                add_ln261_2_reg_1464 <= add_ln261_2_fu_1002_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln261_reg_1444 <= add_ln261_fu_974_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln339_reg_1449 <= grp_fu_1366_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln339_reg_1449_pp0_iter10_reg <= add_ln339_reg_1449_pp0_iter9_reg;
                add_ln339_reg_1449_pp0_iter11_reg <= add_ln339_reg_1449_pp0_iter10_reg;
                add_ln339_reg_1449_pp0_iter12_reg <= add_ln339_reg_1449_pp0_iter11_reg;
                add_ln339_reg_1449_pp0_iter2_reg <= add_ln339_reg_1449;
                add_ln339_reg_1449_pp0_iter3_reg <= add_ln339_reg_1449_pp0_iter2_reg;
                add_ln339_reg_1449_pp0_iter4_reg <= add_ln339_reg_1449_pp0_iter3_reg;
                add_ln339_reg_1449_pp0_iter5_reg <= add_ln339_reg_1449_pp0_iter4_reg;
                add_ln339_reg_1449_pp0_iter6_reg <= add_ln339_reg_1449_pp0_iter5_reg;
                add_ln339_reg_1449_pp0_iter7_reg <= add_ln339_reg_1449_pp0_iter6_reg;
                add_ln339_reg_1449_pp0_iter8_reg <= add_ln339_reg_1449_pp0_iter7_reg;
                add_ln339_reg_1449_pp0_iter9_reg <= add_ln339_reg_1449_pp0_iter8_reg;
                icmp_ln258_reg_1417_pp0_iter10_reg <= icmp_ln258_reg_1417_pp0_iter9_reg;
                icmp_ln258_reg_1417_pp0_iter11_reg <= icmp_ln258_reg_1417_pp0_iter10_reg;
                icmp_ln258_reg_1417_pp0_iter12_reg <= icmp_ln258_reg_1417_pp0_iter11_reg;
                icmp_ln258_reg_1417_pp0_iter2_reg <= icmp_ln258_reg_1417_pp0_iter1_reg;
                icmp_ln258_reg_1417_pp0_iter3_reg <= icmp_ln258_reg_1417_pp0_iter2_reg;
                icmp_ln258_reg_1417_pp0_iter4_reg <= icmp_ln258_reg_1417_pp0_iter3_reg;
                icmp_ln258_reg_1417_pp0_iter5_reg <= icmp_ln258_reg_1417_pp0_iter4_reg;
                icmp_ln258_reg_1417_pp0_iter6_reg <= icmp_ln258_reg_1417_pp0_iter5_reg;
                icmp_ln258_reg_1417_pp0_iter7_reg <= icmp_ln258_reg_1417_pp0_iter6_reg;
                icmp_ln258_reg_1417_pp0_iter8_reg <= icmp_ln258_reg_1417_pp0_iter7_reg;
                icmp_ln258_reg_1417_pp0_iter9_reg <= icmp_ln258_reg_1417_pp0_iter8_reg;
                select_ln258_reg_1426_pp0_iter2_reg <= select_ln258_reg_1426_pp0_iter1_reg;
                select_ln258_reg_1426_pp0_iter3_reg <= select_ln258_reg_1426_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    bound_reg_1407(10 downto 3) <= bound_fu_902_p3(10 downto 3);
                mul_ln261_reg_1402 <= grp_fu_896_p2;
                    zext_ln258_1_reg_1412(25 downto 0) <= zext_ln258_1_fu_910_p1(25 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                ddr_channel_ptr_reg_1374 <= ddr_channel_ptr_fu_833_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln258_reg_1417 <= icmp_ln258_fu_923_p2;
                icmp_ln258_reg_1417_pp0_iter1_reg <= icmp_ln258_reg_1417;
                select_ln258_reg_1426_pp0_iter1_reg <= select_ln258_reg_1426;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter2_reg = ap_const_lv1_0))) then
                mul_ln261_1_reg_1459 <= grp_fu_988_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter11_reg = ap_const_lv1_0))) then
                p_Result_2_10_reg_1530 <= m_axi_DDR_buf_V_RDATA(191 downto 176);
                p_Result_2_11_reg_1535 <= m_axi_DDR_buf_V_RDATA(207 downto 192);
                p_Result_2_12_reg_1540 <= m_axi_DDR_buf_V_RDATA(223 downto 208);
                p_Result_2_13_reg_1545 <= m_axi_DDR_buf_V_RDATA(239 downto 224);
                p_Result_2_14_reg_1550 <= m_axi_DDR_buf_V_RDATA(255 downto 240);
                p_Result_2_15_reg_1555 <= m_axi_DDR_buf_V_RDATA(271 downto 256);
                p_Result_2_16_reg_1560 <= m_axi_DDR_buf_V_RDATA(287 downto 272);
                p_Result_2_17_reg_1565 <= m_axi_DDR_buf_V_RDATA(303 downto 288);
                p_Result_2_18_reg_1570 <= m_axi_DDR_buf_V_RDATA(319 downto 304);
                p_Result_2_19_reg_1575 <= m_axi_DDR_buf_V_RDATA(335 downto 320);
                p_Result_2_1_reg_1480 <= m_axi_DDR_buf_V_RDATA(31 downto 16);
                p_Result_2_20_reg_1580 <= m_axi_DDR_buf_V_RDATA(351 downto 336);
                p_Result_2_21_reg_1585 <= m_axi_DDR_buf_V_RDATA(367 downto 352);
                p_Result_2_22_reg_1590 <= m_axi_DDR_buf_V_RDATA(383 downto 368);
                p_Result_2_23_reg_1595 <= m_axi_DDR_buf_V_RDATA(399 downto 384);
                p_Result_2_24_reg_1600 <= m_axi_DDR_buf_V_RDATA(415 downto 400);
                p_Result_2_25_reg_1605 <= m_axi_DDR_buf_V_RDATA(431 downto 416);
                p_Result_2_26_reg_1610 <= m_axi_DDR_buf_V_RDATA(447 downto 432);
                p_Result_2_27_reg_1615 <= m_axi_DDR_buf_V_RDATA(463 downto 448);
                p_Result_2_28_reg_1620 <= m_axi_DDR_buf_V_RDATA(479 downto 464);
                p_Result_2_29_reg_1625 <= m_axi_DDR_buf_V_RDATA(495 downto 480);
                p_Result_2_2_reg_1485 <= m_axi_DDR_buf_V_RDATA(47 downto 32);
                p_Result_2_30_reg_1630 <= m_axi_DDR_buf_V_RDATA(511 downto 496);
                p_Result_2_3_reg_1490 <= m_axi_DDR_buf_V_RDATA(63 downto 48);
                p_Result_2_4_reg_1495 <= m_axi_DDR_buf_V_RDATA(79 downto 64);
                p_Result_2_5_reg_1500 <= m_axi_DDR_buf_V_RDATA(95 downto 80);
                p_Result_2_6_reg_1505 <= m_axi_DDR_buf_V_RDATA(111 downto 96);
                p_Result_2_7_reg_1510 <= m_axi_DDR_buf_V_RDATA(127 downto 112);
                p_Result_2_8_reg_1515 <= m_axi_DDR_buf_V_RDATA(143 downto 128);
                p_Result_2_9_reg_1520 <= m_axi_DDR_buf_V_RDATA(159 downto 144);
                p_Result_2_s_reg_1525 <= m_axi_DDR_buf_V_RDATA(175 downto 160);
                trunc_ln647_reg_1475 <= trunc_ln647_fu_1017_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                select_ln254_reg_1382 <= select_ln254_fu_885_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_fu_923_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln258_1_reg_1432 <= select_ln258_1_fu_948_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_fu_923_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln258_reg_1426 <= select_ln258_fu_940_p3;
            end if;
        end if;
    end process;
    bound_reg_1407(2 downto 0) <= "000";
    zext_ln258_1_reg_1412(43 downto 26) <= "000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter12, icmp_ln258_fu_923_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter13)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln258_fu_923_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln258_fu_923_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    DDR_buf_V_blk_n_AR_assign_proc : process(m_axi_DDR_buf_V_ARREADY, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, icmp_ln258_reg_1417_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln258_reg_1417_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            DDR_buf_V_blk_n_AR <= m_axi_DDR_buf_V_ARREADY;
        else 
            DDR_buf_V_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    DDR_buf_V_blk_n_R_assign_proc : process(m_axi_DDR_buf_V_RVALID, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, icmp_ln258_reg_1417_pp0_iter11_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln258_reg_1417_pp0_iter11_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            DDR_buf_V_blk_n_R <= m_axi_DDR_buf_V_RVALID;
        else 
            DDR_buf_V_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    add_ln258_1_fu_928_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_752) + unsigned(ap_const_lv11_1));
    add_ln258_fu_965_p2 <= std_logic_vector(unsigned(zext_ln258_fu_962_p1) + unsigned(row_tile_start));
    add_ln261_1_fu_997_p2 <= std_logic_vector(unsigned(zext_ln339_1_fu_994_p1) + unsigned(mul_ln261_1_reg_1459));
    add_ln261_2_fu_1002_p2 <= std_logic_vector(unsigned(add_ln261_1_fu_997_p2) + unsigned(zext_ln258_1_reg_1412));
    add_ln261_fu_974_p2 <= std_logic_vector(signed(sext_ln261_1_fu_970_p1) + signed(mul_ln261_reg_1402));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_DDR_buf_V_RVALID, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter12, icmp_ln258_reg_1417_pp0_iter11_reg, ap_block_state10_io)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln258_reg_1417_pp0_iter11_reg = ap_const_lv1_0) and (m_axi_DDR_buf_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_DDR_buf_V_RVALID, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter12, icmp_ln258_reg_1417_pp0_iter11_reg, ap_block_state10_io)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln258_reg_1417_pp0_iter11_reg = ap_const_lv1_0) and (m_axi_DDR_buf_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_io)));
    end process;


    ap_block_state10_io_assign_proc : process(m_axi_DDR_buf_V_ARREADY, icmp_ln258_reg_1417_pp0_iter4_reg)
    begin
                ap_block_state10_io <= ((icmp_ln258_reg_1417_pp0_iter4_reg = ap_const_lv1_0) and (m_axi_DDR_buf_V_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_pp0_stage0_iter12_assign_proc : process(m_axi_DDR_buf_V_RVALID, icmp_ln258_reg_1417_pp0_iter11_reg)
    begin
                ap_block_state17_pp0_stage0_iter12 <= ((icmp_ln258_reg_1417_pp0_iter11_reg = ap_const_lv1_0) and (m_axi_DDR_buf_V_RVALID = ap_const_logic_0));
    end process;

        ap_block_state18_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state5_assign_proc : process(icmp_ln258_fu_923_p2)
    begin
        if ((icmp_ln258_fu_923_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_row_0_phi_fu_767_p4_assign_proc : process(ap_block_pp0_stage0, icmp_ln258_reg_1417, row_0_reg_763, ap_CS_fsm_pp0_stage0, select_ln258_1_reg_1432, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln258_reg_1417 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_row_0_phi_fu_767_p4 <= select_ln258_1_reg_1432;
        else 
            ap_phi_mux_row_0_phi_fu_767_p4 <= row_0_reg_763;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_fu_902_p3 <= (H_fmap_out & ap_const_lv3_0);
    col_fu_956_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(select_ln258_fu_940_p3));
    ddr_channel_ptr_1_fu_868_p3 <= 
        ddr_channel_ptr_reg_1374 when (icmp_ln255_fu_858_p2(0) = '1') else 
        sub_ln255_fu_863_p2;
    ddr_channel_ptr_2_fu_879_p2 <= std_logic_vector(signed(sext_ln255_fu_875_p1) + signed(ap_const_lv29_20));
    ddr_channel_ptr_fu_833_p3 <= 
        sub_ln253_1_fu_813_p2 when (tmp_4_fu_785_p3(0) = '1') else 
        zext_ln253_1_fu_829_p1;
    grp_fu_1366_p0 <= ap_const_lv11_71(8 - 1 downto 0);
    grp_fu_1366_p1 <= grp_fu_1366_p10(4 - 1 downto 0);
    grp_fu_1366_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln258_1_reg_1432),11));
    grp_fu_1366_p2 <= grp_fu_1366_p20(7 - 1 downto 0);
    grp_fu_1366_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln258_reg_1426),11));
    grp_fu_896_p1 <= ap_const_lv36_E2(9 - 1 downto 0);

    grp_fu_988_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_988_ce <= ap_const_logic_1;
        else 
            grp_fu_988_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_988_p0 <= ap_const_lv44_E1(9 - 1 downto 0);
    icmp_ln255_fu_858_p2 <= "1" when (signed(ddr_channel_ptr_reg_1374) < signed(zext_ln255_fu_854_p1)) else "0";
    icmp_ln258_fu_923_p2 <= "1" when (indvar_flatten_reg_752 = bound_reg_1407) else "0";
    icmp_ln259_fu_918_p2 <= "1" when (signed(zext_ln259_fu_914_p1) < signed(H_fmap_out)) else "0";
    m_axi_DDR_buf_V_ARADDR <= sext_ln261_3_fu_1007_p1(32 - 1 downto 0);
    m_axi_DDR_buf_V_ARBURST <= ap_const_lv2_0;
    m_axi_DDR_buf_V_ARCACHE <= ap_const_lv4_0;
    m_axi_DDR_buf_V_ARID <= ap_const_lv1_0;
    m_axi_DDR_buf_V_ARLEN <= ap_const_lv32_1;
    m_axi_DDR_buf_V_ARLOCK <= ap_const_lv2_0;
    m_axi_DDR_buf_V_ARPROT <= ap_const_lv3_0;
    m_axi_DDR_buf_V_ARQOS <= ap_const_lv4_0;
    m_axi_DDR_buf_V_ARREGION <= ap_const_lv4_0;
    m_axi_DDR_buf_V_ARSIZE <= ap_const_lv3_0;
    m_axi_DDR_buf_V_ARUSER <= ap_const_lv1_0;

    m_axi_DDR_buf_V_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln258_reg_1417_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            m_axi_DDR_buf_V_ARVALID <= ap_const_logic_1;
        else 
            m_axi_DDR_buf_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_DDR_buf_V_AWADDR <= ap_const_lv32_0;
    m_axi_DDR_buf_V_AWBURST <= ap_const_lv2_0;
    m_axi_DDR_buf_V_AWCACHE <= ap_const_lv4_0;
    m_axi_DDR_buf_V_AWID <= ap_const_lv1_0;
    m_axi_DDR_buf_V_AWLEN <= ap_const_lv32_0;
    m_axi_DDR_buf_V_AWLOCK <= ap_const_lv2_0;
    m_axi_DDR_buf_V_AWPROT <= ap_const_lv3_0;
    m_axi_DDR_buf_V_AWQOS <= ap_const_lv4_0;
    m_axi_DDR_buf_V_AWREGION <= ap_const_lv4_0;
    m_axi_DDR_buf_V_AWSIZE <= ap_const_lv3_0;
    m_axi_DDR_buf_V_AWUSER <= ap_const_lv1_0;
    m_axi_DDR_buf_V_AWVALID <= ap_const_logic_0;
    m_axi_DDR_buf_V_BREADY <= ap_const_logic_0;

    m_axi_DDR_buf_V_RREADY_assign_proc : process(ap_enable_reg_pp0_iter12, icmp_ln258_reg_1417_pp0_iter11_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter11_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            m_axi_DDR_buf_V_RREADY <= ap_const_logic_1;
        else 
            m_axi_DDR_buf_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_DDR_buf_V_WDATA <= ap_const_lv512_lc_1;
    m_axi_DDR_buf_V_WID <= ap_const_lv1_0;
    m_axi_DDR_buf_V_WLAST <= ap_const_logic_0;
    m_axi_DDR_buf_V_WSTRB <= ap_const_lv64_0;
    m_axi_DDR_buf_V_WUSER <= ap_const_lv1_0;
    m_axi_DDR_buf_V_WVALID <= ap_const_logic_0;
    out_buf_sc_0_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_0_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_0_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_0_V_d0 <= trunc_ln647_reg_1475;

    out_buf_sc_0_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_0_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_10_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_10_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_10_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_10_V_d0 <= p_Result_2_s_reg_1525;

    out_buf_sc_10_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_10_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_11_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_11_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_11_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_11_V_d0 <= p_Result_2_10_reg_1530;

    out_buf_sc_11_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_11_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_12_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_12_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_12_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_12_V_d0 <= p_Result_2_11_reg_1535;

    out_buf_sc_12_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_12_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_12_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_13_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_13_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_13_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_13_V_d0 <= p_Result_2_12_reg_1540;

    out_buf_sc_13_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_13_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_13_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_14_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_14_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_14_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_14_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_14_V_d0 <= p_Result_2_13_reg_1545;

    out_buf_sc_14_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_14_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_14_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_15_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_15_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_15_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_15_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_15_V_d0 <= p_Result_2_14_reg_1550;

    out_buf_sc_15_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_15_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_15_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_16_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_16_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_16_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_16_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_16_V_d0 <= p_Result_2_15_reg_1555;

    out_buf_sc_16_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_16_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_16_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_17_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_17_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_17_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_17_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_17_V_d0 <= p_Result_2_16_reg_1560;

    out_buf_sc_17_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_17_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_17_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_18_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_18_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_18_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_18_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_18_V_d0 <= p_Result_2_17_reg_1565;

    out_buf_sc_18_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_18_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_18_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_19_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_19_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_19_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_19_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_19_V_d0 <= p_Result_2_18_reg_1570;

    out_buf_sc_19_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_19_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_19_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_1_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_1_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_1_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_1_V_d0 <= p_Result_2_1_reg_1480;

    out_buf_sc_1_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_1_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_20_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_20_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_20_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_20_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_20_V_d0 <= p_Result_2_19_reg_1575;

    out_buf_sc_20_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_20_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_20_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_21_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_21_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_21_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_21_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_21_V_d0 <= p_Result_2_20_reg_1580;

    out_buf_sc_21_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_21_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_21_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_22_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_22_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_22_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_22_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_22_V_d0 <= p_Result_2_21_reg_1585;

    out_buf_sc_22_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_22_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_22_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_23_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_23_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_23_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_23_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_23_V_d0 <= p_Result_2_22_reg_1590;

    out_buf_sc_23_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_23_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_23_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_24_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_24_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_24_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_24_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_24_V_d0 <= p_Result_2_23_reg_1595;

    out_buf_sc_24_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_24_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_24_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_25_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_25_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_25_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_25_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_25_V_d0 <= p_Result_2_24_reg_1600;

    out_buf_sc_25_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_25_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_25_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_26_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_26_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_26_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_26_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_26_V_d0 <= p_Result_2_25_reg_1605;

    out_buf_sc_26_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_26_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_26_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_27_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_27_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_27_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_27_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_27_V_d0 <= p_Result_2_26_reg_1610;

    out_buf_sc_27_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_27_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_27_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_28_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_28_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_28_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_28_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_28_V_d0 <= p_Result_2_27_reg_1615;

    out_buf_sc_28_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_28_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_28_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_29_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_29_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_29_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_29_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_29_V_d0 <= p_Result_2_28_reg_1620;

    out_buf_sc_29_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_29_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_29_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_2_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_2_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_2_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_2_V_d0 <= p_Result_2_2_reg_1485;

    out_buf_sc_2_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_2_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_30_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_30_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_30_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_30_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_30_V_d0 <= p_Result_2_29_reg_1625;

    out_buf_sc_30_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_30_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_30_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_31_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_31_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_31_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_31_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_31_V_d0 <= p_Result_2_30_reg_1630;

    out_buf_sc_31_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_31_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_31_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_3_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_3_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_3_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_3_V_d0 <= p_Result_2_3_reg_1490;

    out_buf_sc_3_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_3_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_4_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_4_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_4_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_4_V_d0 <= p_Result_2_4_reg_1495;

    out_buf_sc_4_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_4_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_5_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_5_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_5_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_5_V_d0 <= p_Result_2_5_reg_1500;

    out_buf_sc_5_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_5_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_6_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_6_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_6_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_6_V_d0 <= p_Result_2_6_reg_1505;

    out_buf_sc_6_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_6_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_7_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_7_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_7_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_7_V_d0 <= p_Result_2_7_reg_1510;

    out_buf_sc_7_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_7_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_8_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_8_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_8_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_8_V_d0 <= p_Result_2_8_reg_1515;

    out_buf_sc_8_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_8_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_9_V_address0 <= sext_ln339_fu_1331_p1(10 - 1 downto 0);

    out_buf_sc_9_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_9_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_9_V_d0 <= p_Result_2_9_reg_1520;

    out_buf_sc_9_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln258_reg_1417_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln258_reg_1417_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            out_buf_sc_9_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    row_fu_934_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_row_0_phi_fu_767_p4));
    select_ln254_fu_885_p3 <= 
        ddr_channel_ptr_2_fu_879_p2 when (switch_bank(0) = '1') else 
        sext_ln253_fu_841_p1;
    select_ln258_1_fu_948_p3 <= 
        ap_phi_mux_row_0_phi_fu_767_p4 when (icmp_ln259_fu_918_p2(0) = '1') else 
        row_fu_934_p2;
    select_ln258_fu_940_p3 <= 
        col_0_reg_774 when (icmp_ln259_fu_918_p2(0) = '1') else 
        ap_const_lv7_0;
        sext_ln253_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ddr_channel_ptr_reg_1374),29));

        sext_ln255_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ddr_channel_ptr_1_fu_868_p3),29));

        sext_ln261_1_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln258_fu_965_p2),36));

        sext_ln261_3_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln261_2_reg_1464),64));

        sext_ln339_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln339_reg_1449_pp0_iter12_reg),64));

    sub_ln253_1_fu_813_p2 <= std_logic_vector(unsigned(ap_const_lv28_0) - unsigned(zext_ln253_fu_809_p1));
    sub_ln253_fu_793_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(out_channel_start));
    sub_ln255_fu_863_p2 <= std_logic_vector(signed(ddr_channel_ptr_reg_1374) - signed(zext_ln255_fu_854_p1));
    tmp_1_fu_819_p4 <= out_channel_start(31 downto 5);
    tmp_4_fu_785_p3 <= out_channel_start(31 downto 31);
    tmp_s_fu_799_p4 <= sub_ln253_fu_793_p2(31 downto 5);
    trunc_ln255_4_fu_844_p4 <= in_channels(10 downto 5);
    trunc_ln647_fu_1017_p1 <= m_axi_DDR_buf_V_RDATA(16 - 1 downto 0);
    zext_ln253_1_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_819_p4),28));
    zext_ln253_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_799_p4),28));
    zext_ln255_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln255_4_fu_844_p4),28));
    zext_ln258_1_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(DDR_buf_V_offset),44));
    zext_ln258_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln258_1_reg_1432),32));
    zext_ln259_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_0_reg_774),8));
    zext_ln339_1_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln258_reg_1426_pp0_iter3_reg),44));
end behav;
