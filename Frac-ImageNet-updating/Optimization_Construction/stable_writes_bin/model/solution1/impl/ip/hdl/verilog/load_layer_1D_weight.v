// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_layer_1D_weight (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_weights_all_V_AWVALID,
        m_axi_weights_all_V_AWREADY,
        m_axi_weights_all_V_AWADDR,
        m_axi_weights_all_V_AWID,
        m_axi_weights_all_V_AWLEN,
        m_axi_weights_all_V_AWSIZE,
        m_axi_weights_all_V_AWBURST,
        m_axi_weights_all_V_AWLOCK,
        m_axi_weights_all_V_AWCACHE,
        m_axi_weights_all_V_AWPROT,
        m_axi_weights_all_V_AWQOS,
        m_axi_weights_all_V_AWREGION,
        m_axi_weights_all_V_AWUSER,
        m_axi_weights_all_V_WVALID,
        m_axi_weights_all_V_WREADY,
        m_axi_weights_all_V_WDATA,
        m_axi_weights_all_V_WSTRB,
        m_axi_weights_all_V_WLAST,
        m_axi_weights_all_V_WID,
        m_axi_weights_all_V_WUSER,
        m_axi_weights_all_V_ARVALID,
        m_axi_weights_all_V_ARREADY,
        m_axi_weights_all_V_ARADDR,
        m_axi_weights_all_V_ARID,
        m_axi_weights_all_V_ARLEN,
        m_axi_weights_all_V_ARSIZE,
        m_axi_weights_all_V_ARBURST,
        m_axi_weights_all_V_ARLOCK,
        m_axi_weights_all_V_ARCACHE,
        m_axi_weights_all_V_ARPROT,
        m_axi_weights_all_V_ARQOS,
        m_axi_weights_all_V_ARREGION,
        m_axi_weights_all_V_ARUSER,
        m_axi_weights_all_V_RVALID,
        m_axi_weights_all_V_RREADY,
        m_axi_weights_all_V_RDATA,
        m_axi_weights_all_V_RLAST,
        m_axi_weights_all_V_RID,
        m_axi_weights_all_V_RUSER,
        m_axi_weights_all_V_RRESP,
        m_axi_weights_all_V_BVALID,
        m_axi_weights_all_V_BREADY,
        m_axi_weights_all_V_BRESP,
        m_axi_weights_all_V_BID,
        m_axi_weights_all_V_BUSER,
        weights_all_V_offset,
        weights_all_ptr_start_offset,
        c_out,
        conv_out_channels_offset,
        pw_out_channels_offset,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53,
        ap_return_54,
        ap_return_55,
        ap_return_56,
        ap_return_57,
        ap_return_58,
        ap_return_59,
        ap_return_60,
        ap_return_61,
        ap_return_62,
        ap_return_63,
        ap_return_64,
        ap_return_65,
        ap_return_66,
        ap_return_67,
        ap_return_68,
        ap_return_69,
        ap_return_70,
        ap_return_71,
        ap_return_72,
        ap_return_73,
        ap_return_74,
        ap_return_75,
        ap_return_76,
        ap_return_77,
        ap_return_78,
        ap_return_79,
        ap_return_80,
        ap_return_81,
        ap_return_82,
        ap_return_83,
        ap_return_84,
        ap_return_85,
        ap_return_86,
        ap_return_87,
        ap_return_88,
        ap_return_89,
        ap_return_90,
        ap_return_91,
        ap_return_92,
        ap_return_93,
        ap_return_94,
        ap_return_95,
        ap_return_96,
        ap_return_97,
        ap_return_98,
        ap_return_99,
        ap_return_100,
        ap_return_101,
        ap_return_102,
        ap_return_103,
        ap_return_104,
        ap_return_105,
        ap_return_106,
        ap_return_107,
        ap_return_108,
        ap_return_109,
        ap_return_110,
        ap_return_111,
        ap_return_112,
        ap_return_113,
        ap_return_114,
        ap_return_115,
        ap_return_116,
        ap_return_117,
        ap_return_118,
        ap_return_119,
        ap_return_120,
        ap_return_121,
        ap_return_122,
        ap_return_123,
        ap_return_124,
        ap_return_125,
        ap_return_126,
        ap_return_127,
        ap_return_128,
        ap_return_129,
        ap_return_130,
        ap_return_131,
        ap_return_132,
        ap_return_133,
        ap_return_134,
        ap_return_135,
        ap_return_136,
        ap_return_137,
        ap_return_138,
        ap_return_139,
        ap_return_140,
        ap_return_141,
        ap_return_142,
        ap_return_143,
        ap_return_144,
        ap_return_145,
        ap_return_146,
        ap_return_147,
        ap_return_148,
        ap_return_149,
        ap_return_150,
        ap_return_151,
        ap_return_152,
        ap_return_153,
        ap_return_154,
        ap_return_155,
        ap_return_156,
        ap_return_157,
        ap_return_158,
        ap_return_159,
        ap_return_160,
        ap_return_161,
        ap_return_162,
        ap_return_163,
        ap_return_164,
        ap_return_165,
        ap_return_166,
        ap_return_167,
        ap_return_168,
        ap_return_169,
        ap_return_170,
        ap_return_171,
        ap_return_172,
        ap_return_173,
        ap_return_174,
        ap_return_175,
        ap_return_176,
        ap_return_177,
        ap_return_178,
        ap_return_179,
        ap_return_180,
        ap_return_181,
        ap_return_182,
        ap_return_183,
        ap_return_184,
        ap_return_185,
        ap_return_186,
        ap_return_187,
        ap_return_188,
        ap_return_189,
        ap_return_190,
        ap_return_191,
        ap_return_192,
        ap_return_193,
        ap_return_194,
        ap_return_195,
        ap_return_196,
        ap_return_197,
        ap_return_198,
        ap_return_199,
        ap_return_200,
        ap_return_201,
        ap_return_202,
        ap_return_203,
        ap_return_204,
        ap_return_205,
        ap_return_206,
        ap_return_207,
        ap_return_208,
        ap_return_209,
        ap_return_210,
        ap_return_211,
        ap_return_212,
        ap_return_213,
        ap_return_214,
        ap_return_215,
        ap_return_216,
        ap_return_217,
        ap_return_218,
        ap_return_219,
        ap_return_220,
        ap_return_221,
        ap_return_222,
        ap_return_223,
        ap_return_224,
        ap_return_225,
        ap_return_226,
        ap_return_227,
        ap_return_228,
        ap_return_229,
        ap_return_230,
        ap_return_231,
        ap_return_232,
        ap_return_233,
        ap_return_234,
        ap_return_235,
        ap_return_236,
        ap_return_237,
        ap_return_238,
        ap_return_239,
        ap_return_240,
        ap_return_241,
        ap_return_242,
        ap_return_243,
        ap_return_244,
        ap_return_245,
        ap_return_246,
        ap_return_247,
        ap_return_248,
        ap_return_249,
        ap_return_250,
        ap_return_251,
        ap_return_252,
        ap_return_253,
        ap_return_254,
        ap_return_255
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_weights_all_V_AWVALID;
input   m_axi_weights_all_V_AWREADY;
output  [31:0] m_axi_weights_all_V_AWADDR;
output  [0:0] m_axi_weights_all_V_AWID;
output  [31:0] m_axi_weights_all_V_AWLEN;
output  [2:0] m_axi_weights_all_V_AWSIZE;
output  [1:0] m_axi_weights_all_V_AWBURST;
output  [1:0] m_axi_weights_all_V_AWLOCK;
output  [3:0] m_axi_weights_all_V_AWCACHE;
output  [2:0] m_axi_weights_all_V_AWPROT;
output  [3:0] m_axi_weights_all_V_AWQOS;
output  [3:0] m_axi_weights_all_V_AWREGION;
output  [0:0] m_axi_weights_all_V_AWUSER;
output   m_axi_weights_all_V_WVALID;
input   m_axi_weights_all_V_WREADY;
output  [511:0] m_axi_weights_all_V_WDATA;
output  [63:0] m_axi_weights_all_V_WSTRB;
output   m_axi_weights_all_V_WLAST;
output  [0:0] m_axi_weights_all_V_WID;
output  [0:0] m_axi_weights_all_V_WUSER;
output   m_axi_weights_all_V_ARVALID;
input   m_axi_weights_all_V_ARREADY;
output  [31:0] m_axi_weights_all_V_ARADDR;
output  [0:0] m_axi_weights_all_V_ARID;
output  [31:0] m_axi_weights_all_V_ARLEN;
output  [2:0] m_axi_weights_all_V_ARSIZE;
output  [1:0] m_axi_weights_all_V_ARBURST;
output  [1:0] m_axi_weights_all_V_ARLOCK;
output  [3:0] m_axi_weights_all_V_ARCACHE;
output  [2:0] m_axi_weights_all_V_ARPROT;
output  [3:0] m_axi_weights_all_V_ARQOS;
output  [3:0] m_axi_weights_all_V_ARREGION;
output  [0:0] m_axi_weights_all_V_ARUSER;
input   m_axi_weights_all_V_RVALID;
output   m_axi_weights_all_V_RREADY;
input  [511:0] m_axi_weights_all_V_RDATA;
input   m_axi_weights_all_V_RLAST;
input  [0:0] m_axi_weights_all_V_RID;
input  [0:0] m_axi_weights_all_V_RUSER;
input  [1:0] m_axi_weights_all_V_RRESP;
input   m_axi_weights_all_V_BVALID;
output   m_axi_weights_all_V_BREADY;
input  [1:0] m_axi_weights_all_V_BRESP;
input  [0:0] m_axi_weights_all_V_BID;
input  [0:0] m_axi_weights_all_V_BUSER;
input  [25:0] weights_all_V_offset;
input  [12:0] weights_all_ptr_start_offset;
input  [5:0] c_out;
input  [11:0] conv_out_channels_offset;
input  [11:0] pw_out_channels_offset;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;
output  [15:0] ap_return_16;
output  [15:0] ap_return_17;
output  [15:0] ap_return_18;
output  [15:0] ap_return_19;
output  [15:0] ap_return_20;
output  [15:0] ap_return_21;
output  [15:0] ap_return_22;
output  [15:0] ap_return_23;
output  [15:0] ap_return_24;
output  [15:0] ap_return_25;
output  [15:0] ap_return_26;
output  [15:0] ap_return_27;
output  [15:0] ap_return_28;
output  [15:0] ap_return_29;
output  [15:0] ap_return_30;
output  [15:0] ap_return_31;
output  [15:0] ap_return_32;
output  [15:0] ap_return_33;
output  [15:0] ap_return_34;
output  [15:0] ap_return_35;
output  [15:0] ap_return_36;
output  [15:0] ap_return_37;
output  [15:0] ap_return_38;
output  [15:0] ap_return_39;
output  [15:0] ap_return_40;
output  [15:0] ap_return_41;
output  [15:0] ap_return_42;
output  [15:0] ap_return_43;
output  [15:0] ap_return_44;
output  [15:0] ap_return_45;
output  [15:0] ap_return_46;
output  [15:0] ap_return_47;
output  [15:0] ap_return_48;
output  [15:0] ap_return_49;
output  [15:0] ap_return_50;
output  [15:0] ap_return_51;
output  [15:0] ap_return_52;
output  [15:0] ap_return_53;
output  [15:0] ap_return_54;
output  [15:0] ap_return_55;
output  [15:0] ap_return_56;
output  [15:0] ap_return_57;
output  [15:0] ap_return_58;
output  [15:0] ap_return_59;
output  [15:0] ap_return_60;
output  [15:0] ap_return_61;
output  [15:0] ap_return_62;
output  [15:0] ap_return_63;
output  [15:0] ap_return_64;
output  [15:0] ap_return_65;
output  [15:0] ap_return_66;
output  [15:0] ap_return_67;
output  [15:0] ap_return_68;
output  [15:0] ap_return_69;
output  [15:0] ap_return_70;
output  [15:0] ap_return_71;
output  [15:0] ap_return_72;
output  [15:0] ap_return_73;
output  [15:0] ap_return_74;
output  [15:0] ap_return_75;
output  [15:0] ap_return_76;
output  [15:0] ap_return_77;
output  [15:0] ap_return_78;
output  [15:0] ap_return_79;
output  [15:0] ap_return_80;
output  [15:0] ap_return_81;
output  [15:0] ap_return_82;
output  [15:0] ap_return_83;
output  [15:0] ap_return_84;
output  [15:0] ap_return_85;
output  [15:0] ap_return_86;
output  [15:0] ap_return_87;
output  [15:0] ap_return_88;
output  [15:0] ap_return_89;
output  [15:0] ap_return_90;
output  [15:0] ap_return_91;
output  [15:0] ap_return_92;
output  [15:0] ap_return_93;
output  [15:0] ap_return_94;
output  [15:0] ap_return_95;
output  [15:0] ap_return_96;
output  [15:0] ap_return_97;
output  [15:0] ap_return_98;
output  [15:0] ap_return_99;
output  [15:0] ap_return_100;
output  [15:0] ap_return_101;
output  [15:0] ap_return_102;
output  [15:0] ap_return_103;
output  [15:0] ap_return_104;
output  [15:0] ap_return_105;
output  [15:0] ap_return_106;
output  [15:0] ap_return_107;
output  [15:0] ap_return_108;
output  [15:0] ap_return_109;
output  [15:0] ap_return_110;
output  [15:0] ap_return_111;
output  [15:0] ap_return_112;
output  [15:0] ap_return_113;
output  [15:0] ap_return_114;
output  [15:0] ap_return_115;
output  [15:0] ap_return_116;
output  [15:0] ap_return_117;
output  [15:0] ap_return_118;
output  [15:0] ap_return_119;
output  [15:0] ap_return_120;
output  [15:0] ap_return_121;
output  [15:0] ap_return_122;
output  [15:0] ap_return_123;
output  [15:0] ap_return_124;
output  [15:0] ap_return_125;
output  [15:0] ap_return_126;
output  [15:0] ap_return_127;
output  [15:0] ap_return_128;
output  [15:0] ap_return_129;
output  [15:0] ap_return_130;
output  [15:0] ap_return_131;
output  [15:0] ap_return_132;
output  [15:0] ap_return_133;
output  [15:0] ap_return_134;
output  [15:0] ap_return_135;
output  [15:0] ap_return_136;
output  [15:0] ap_return_137;
output  [15:0] ap_return_138;
output  [15:0] ap_return_139;
output  [15:0] ap_return_140;
output  [15:0] ap_return_141;
output  [15:0] ap_return_142;
output  [15:0] ap_return_143;
output  [15:0] ap_return_144;
output  [15:0] ap_return_145;
output  [15:0] ap_return_146;
output  [15:0] ap_return_147;
output  [15:0] ap_return_148;
output  [15:0] ap_return_149;
output  [15:0] ap_return_150;
output  [15:0] ap_return_151;
output  [15:0] ap_return_152;
output  [15:0] ap_return_153;
output  [15:0] ap_return_154;
output  [15:0] ap_return_155;
output  [15:0] ap_return_156;
output  [15:0] ap_return_157;
output  [15:0] ap_return_158;
output  [15:0] ap_return_159;
output  [15:0] ap_return_160;
output  [15:0] ap_return_161;
output  [15:0] ap_return_162;
output  [15:0] ap_return_163;
output  [15:0] ap_return_164;
output  [15:0] ap_return_165;
output  [15:0] ap_return_166;
output  [15:0] ap_return_167;
output  [15:0] ap_return_168;
output  [15:0] ap_return_169;
output  [15:0] ap_return_170;
output  [15:0] ap_return_171;
output  [15:0] ap_return_172;
output  [15:0] ap_return_173;
output  [15:0] ap_return_174;
output  [15:0] ap_return_175;
output  [15:0] ap_return_176;
output  [15:0] ap_return_177;
output  [15:0] ap_return_178;
output  [15:0] ap_return_179;
output  [15:0] ap_return_180;
output  [15:0] ap_return_181;
output  [15:0] ap_return_182;
output  [15:0] ap_return_183;
output  [15:0] ap_return_184;
output  [15:0] ap_return_185;
output  [15:0] ap_return_186;
output  [15:0] ap_return_187;
output  [15:0] ap_return_188;
output  [15:0] ap_return_189;
output  [15:0] ap_return_190;
output  [15:0] ap_return_191;
output  [15:0] ap_return_192;
output  [15:0] ap_return_193;
output  [15:0] ap_return_194;
output  [15:0] ap_return_195;
output  [15:0] ap_return_196;
output  [15:0] ap_return_197;
output  [15:0] ap_return_198;
output  [15:0] ap_return_199;
output  [15:0] ap_return_200;
output  [15:0] ap_return_201;
output  [15:0] ap_return_202;
output  [15:0] ap_return_203;
output  [15:0] ap_return_204;
output  [15:0] ap_return_205;
output  [15:0] ap_return_206;
output  [15:0] ap_return_207;
output  [15:0] ap_return_208;
output  [15:0] ap_return_209;
output  [15:0] ap_return_210;
output  [15:0] ap_return_211;
output  [15:0] ap_return_212;
output  [15:0] ap_return_213;
output  [15:0] ap_return_214;
output  [15:0] ap_return_215;
output  [15:0] ap_return_216;
output  [15:0] ap_return_217;
output  [15:0] ap_return_218;
output  [15:0] ap_return_219;
output  [15:0] ap_return_220;
output  [15:0] ap_return_221;
output  [15:0] ap_return_222;
output  [15:0] ap_return_223;
output  [15:0] ap_return_224;
output  [15:0] ap_return_225;
output  [15:0] ap_return_226;
output  [15:0] ap_return_227;
output  [15:0] ap_return_228;
output  [15:0] ap_return_229;
output  [15:0] ap_return_230;
output  [15:0] ap_return_231;
output  [15:0] ap_return_232;
output  [15:0] ap_return_233;
output  [15:0] ap_return_234;
output  [15:0] ap_return_235;
output  [15:0] ap_return_236;
output  [15:0] ap_return_237;
output  [15:0] ap_return_238;
output  [15:0] ap_return_239;
output  [15:0] ap_return_240;
output  [15:0] ap_return_241;
output  [15:0] ap_return_242;
output  [15:0] ap_return_243;
output  [15:0] ap_return_244;
output  [15:0] ap_return_245;
output  [15:0] ap_return_246;
output  [15:0] ap_return_247;
output  [15:0] ap_return_248;
output  [15:0] ap_return_249;
output  [15:0] ap_return_250;
output  [15:0] ap_return_251;
output  [15:0] ap_return_252;
output  [15:0] ap_return_253;
output  [15:0] ap_return_254;
output  [15:0] ap_return_255;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_weights_all_V_ARVALID;
reg[31:0] m_axi_weights_all_V_ARADDR;
reg m_axi_weights_all_V_RREADY;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weights_all_V_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    weights_all_V_blk_n_R;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire   [11:0] zext_ln120_fu_314_p1;
reg   [11:0] zext_ln120_reg_4409;
wire   [6:0] factor_fu_318_p3;
reg   [6:0] factor_reg_4414;
wire   [11:0] weights_all_ptr_fu_350_p2;
reg   [11:0] weights_all_ptr_reg_4420;
wire   [26:0] zext_ln30_17_fu_360_p1;
reg   [26:0] zext_ln30_17_reg_4425;
wire   [26:0] add_ln30_fu_364_p2;
reg   [26:0] add_ln30_reg_4436;
wire   [11:0] zext_ln121_1_fu_384_p1;
reg   [11:0] zext_ln121_1_reg_4441;
wire   [26:0] add_ln30_8_fu_407_p2;
reg   [26:0] add_ln30_8_reg_4455;
wire   [11:0] weights_all_ptr_11_fu_412_p2;
reg   [11:0] weights_all_ptr_11_reg_4460;
wire   [11:0] weights_all_ptr_12_fu_432_p2;
reg   [11:0] weights_all_ptr_12_reg_4465;
wire   [26:0] add_ln30_9_fu_451_p2;
reg   [26:0] add_ln30_9_reg_4477;
wire   [26:0] add_ln30_10_fu_469_p2;
reg   [26:0] add_ln30_10_reg_4488;
wire   [11:0] weights_all_ptr_13_fu_484_p2;
reg   [11:0] weights_all_ptr_13_reg_4499;
wire   [26:0] add_ln30_11_fu_492_p2;
reg   [26:0] add_ln30_11_reg_4504;
wire   [26:0] add_ln30_12_fu_518_p2;
reg   [26:0] add_ln30_12_reg_4515;
wire   [11:0] weights_all_ptr_15_fu_528_p2;
reg   [11:0] weights_all_ptr_15_reg_4520;
wire   [26:0] add_ln30_13_fu_547_p2;
reg   [26:0] add_ln30_13_reg_4532;
wire   [26:0] add_ln30_14_fu_560_p2;
reg   [26:0] add_ln30_14_reg_4537;
wire   [15:0] trunc_ln647_fu_575_p1;
reg   [15:0] trunc_ln647_reg_4548;
reg   [15:0] weight_buffer_1_V_w_reg_4553;
reg   [15:0] weight_buffer_2_V_w_reg_4558;
reg   [15:0] weight_buffer_3_V_w_reg_4563;
reg   [15:0] weight_buffer_4_V_w_reg_4568;
reg   [15:0] weight_buffer_5_V_w_reg_4573;
reg   [15:0] weight_buffer_6_V_w_reg_4578;
reg   [15:0] weight_buffer_7_V_w_reg_4583;
reg   [15:0] weight_buffer_8_V_w_reg_4588;
reg   [15:0] weight_buffer_9_V_w_reg_4593;
reg   [15:0] weight_buffer_10_V_s_reg_4598;
reg   [15:0] weight_buffer_11_V_s_reg_4603;
reg   [15:0] weight_buffer_12_V_s_reg_4608;
reg   [15:0] weight_buffer_13_V_s_reg_4613;
reg   [15:0] weight_buffer_14_V_s_reg_4618;
reg   [15:0] weight_buffer_15_V_s_reg_4623;
reg   [15:0] weight_buffer_16_V_s_reg_4628;
reg   [15:0] weight_buffer_17_V_s_reg_4633;
reg   [15:0] weight_buffer_18_V_s_reg_4638;
reg   [15:0] weight_buffer_19_V_s_reg_4643;
reg   [15:0] weight_buffer_20_V_s_reg_4648;
reg   [15:0] weight_buffer_21_V_s_reg_4653;
reg   [15:0] weight_buffer_22_V_s_reg_4658;
reg   [15:0] weight_buffer_23_V_s_reg_4663;
reg   [15:0] weight_buffer_24_V_s_reg_4668;
reg   [15:0] weight_buffer_25_V_s_reg_4673;
reg   [15:0] weight_buffer_26_V_s_reg_4678;
reg   [15:0] weight_buffer_27_V_s_reg_4683;
reg   [15:0] weight_buffer_28_V_s_reg_4688;
reg   [15:0] weight_buffer_29_V_s_reg_4693;
reg   [15:0] weight_buffer_30_V_s_reg_4698;
reg   [15:0] weight_buffer_31_V_s_reg_4703;
wire   [15:0] trunc_ln647_8_fu_899_p1;
reg   [15:0] trunc_ln647_8_reg_4714;
reg   [15:0] weight_buffer_1_V_w_8_reg_4719;
reg   [15:0] weight_buffer_2_V_w_8_reg_4724;
reg   [15:0] weight_buffer_3_V_w_8_reg_4729;
reg   [15:0] weight_buffer_4_V_w_8_reg_4734;
reg   [15:0] weight_buffer_5_V_w_8_reg_4739;
reg   [15:0] weight_buffer_6_V_w_8_reg_4744;
reg   [15:0] weight_buffer_7_V_w_8_reg_4749;
reg   [15:0] weight_buffer_8_V_w_8_reg_4754;
reg   [15:0] weight_buffer_9_V_w_8_reg_4759;
reg   [15:0] weight_buffer_10_V_8_reg_4764;
reg   [15:0] weight_buffer_11_V_8_reg_4769;
reg   [15:0] weight_buffer_12_V_8_reg_4774;
reg   [15:0] weight_buffer_13_V_8_reg_4779;
reg   [15:0] weight_buffer_14_V_8_reg_4784;
reg   [15:0] weight_buffer_15_V_8_reg_4789;
reg   [15:0] weight_buffer_16_V_8_reg_4794;
reg   [15:0] weight_buffer_17_V_8_reg_4799;
reg   [15:0] weight_buffer_18_V_8_reg_4804;
reg   [15:0] weight_buffer_19_V_8_reg_4809;
reg   [15:0] weight_buffer_20_V_8_reg_4814;
reg   [15:0] weight_buffer_21_V_8_reg_4819;
reg   [15:0] weight_buffer_22_V_8_reg_4824;
reg   [15:0] weight_buffer_23_V_8_reg_4829;
reg   [15:0] weight_buffer_24_V_8_reg_4834;
reg   [15:0] weight_buffer_25_V_8_reg_4839;
reg   [15:0] weight_buffer_26_V_8_reg_4844;
reg   [15:0] weight_buffer_27_V_8_reg_4849;
reg   [15:0] weight_buffer_28_V_8_reg_4854;
reg   [15:0] weight_buffer_29_V_8_reg_4859;
reg   [15:0] weight_buffer_30_V_8_reg_4864;
reg   [15:0] weight_buffer_31_V_8_reg_4869;
wire   [15:0] trunc_ln647_9_fu_1213_p1;
reg   [15:0] trunc_ln647_9_reg_4874;
reg   [15:0] weight_buffer_1_V_w_9_reg_4879;
reg   [15:0] weight_buffer_2_V_w_9_reg_4884;
reg   [15:0] weight_buffer_3_V_w_9_reg_4889;
reg   [15:0] weight_buffer_4_V_w_9_reg_4894;
reg   [15:0] weight_buffer_5_V_w_9_reg_4899;
reg   [15:0] weight_buffer_6_V_w_9_reg_4904;
reg   [15:0] weight_buffer_7_V_w_9_reg_4909;
reg   [15:0] weight_buffer_8_V_w_9_reg_4914;
reg   [15:0] weight_buffer_9_V_w_9_reg_4919;
reg   [15:0] weight_buffer_10_V_9_reg_4924;
reg   [15:0] weight_buffer_11_V_9_reg_4929;
reg   [15:0] weight_buffer_12_V_9_reg_4934;
reg   [15:0] weight_buffer_13_V_9_reg_4939;
reg   [15:0] weight_buffer_14_V_9_reg_4944;
reg   [15:0] weight_buffer_15_V_9_reg_4949;
reg   [15:0] weight_buffer_16_V_9_reg_4954;
reg   [15:0] weight_buffer_17_V_9_reg_4959;
reg   [15:0] weight_buffer_18_V_9_reg_4964;
reg   [15:0] weight_buffer_19_V_9_reg_4969;
reg   [15:0] weight_buffer_20_V_9_reg_4974;
reg   [15:0] weight_buffer_21_V_9_reg_4979;
reg   [15:0] weight_buffer_22_V_9_reg_4984;
reg   [15:0] weight_buffer_23_V_9_reg_4989;
reg   [15:0] weight_buffer_24_V_9_reg_4994;
reg   [15:0] weight_buffer_25_V_9_reg_4999;
reg   [15:0] weight_buffer_26_V_9_reg_5004;
reg   [15:0] weight_buffer_27_V_9_reg_5009;
reg   [15:0] weight_buffer_28_V_9_reg_5014;
reg   [15:0] weight_buffer_29_V_9_reg_5019;
reg   [15:0] weight_buffer_30_V_9_reg_5024;
reg   [15:0] weight_buffer_31_V_9_reg_5029;
wire   [15:0] trunc_ln647_10_fu_1527_p1;
reg   [15:0] trunc_ln647_10_reg_5034;
reg   [15:0] weight_buffer_1_V_w_5_reg_5039;
reg   [15:0] weight_buffer_2_V_w_5_reg_5044;
reg   [15:0] weight_buffer_3_V_w_5_reg_5049;
reg   [15:0] weight_buffer_4_V_w_5_reg_5054;
reg   [15:0] weight_buffer_5_V_w_5_reg_5059;
reg   [15:0] weight_buffer_6_V_w_5_reg_5064;
reg   [15:0] weight_buffer_7_V_w_5_reg_5069;
reg   [15:0] weight_buffer_8_V_w_5_reg_5074;
reg   [15:0] weight_buffer_9_V_w_5_reg_5079;
reg   [15:0] weight_buffer_10_V_5_reg_5084;
reg   [15:0] weight_buffer_11_V_5_reg_5089;
reg   [15:0] weight_buffer_12_V_5_reg_5094;
reg   [15:0] weight_buffer_13_V_5_reg_5099;
reg   [15:0] weight_buffer_14_V_5_reg_5104;
reg   [15:0] weight_buffer_15_V_5_reg_5109;
reg   [15:0] weight_buffer_16_V_5_reg_5114;
reg   [15:0] weight_buffer_17_V_5_reg_5119;
reg   [15:0] weight_buffer_18_V_5_reg_5124;
reg   [15:0] weight_buffer_19_V_5_reg_5129;
reg   [15:0] weight_buffer_20_V_5_reg_5134;
reg   [15:0] weight_buffer_21_V_5_reg_5139;
reg   [15:0] weight_buffer_22_V_5_reg_5144;
reg   [15:0] weight_buffer_23_V_5_reg_5149;
reg   [15:0] weight_buffer_24_V_5_reg_5154;
reg   [15:0] weight_buffer_25_V_5_reg_5159;
reg   [15:0] weight_buffer_26_V_5_reg_5164;
reg   [15:0] weight_buffer_27_V_5_reg_5169;
reg   [15:0] weight_buffer_28_V_5_reg_5174;
reg   [15:0] weight_buffer_29_V_5_reg_5179;
reg   [15:0] weight_buffer_30_V_5_reg_5184;
reg   [15:0] weight_buffer_31_V_5_reg_5189;
wire   [15:0] trunc_ln647_11_fu_1841_p1;
reg   [15:0] trunc_ln647_11_reg_5194;
reg   [15:0] weight_buffer_1_V_w_1_reg_5199;
reg   [15:0] weight_buffer_2_V_w_1_reg_5204;
reg   [15:0] weight_buffer_3_V_w_1_reg_5209;
reg   [15:0] weight_buffer_4_V_w_1_reg_5214;
reg   [15:0] weight_buffer_5_V_w_1_reg_5219;
reg   [15:0] weight_buffer_6_V_w_1_reg_5224;
reg   [15:0] weight_buffer_7_V_w_1_reg_5229;
reg   [15:0] weight_buffer_8_V_w_1_reg_5234;
reg   [15:0] weight_buffer_9_V_w_1_reg_5239;
reg   [15:0] weight_buffer_10_V_1_reg_5244;
reg   [15:0] weight_buffer_11_V_1_reg_5249;
reg   [15:0] weight_buffer_12_V_1_reg_5254;
reg   [15:0] weight_buffer_13_V_1_reg_5259;
reg   [15:0] weight_buffer_14_V_1_reg_5264;
reg   [15:0] weight_buffer_15_V_1_reg_5269;
reg   [15:0] weight_buffer_16_V_1_reg_5274;
reg   [15:0] weight_buffer_17_V_1_reg_5279;
reg   [15:0] weight_buffer_18_V_1_reg_5284;
reg   [15:0] weight_buffer_19_V_1_reg_5289;
reg   [15:0] weight_buffer_20_V_1_reg_5294;
reg   [15:0] weight_buffer_21_V_1_reg_5299;
reg   [15:0] weight_buffer_22_V_1_reg_5304;
reg   [15:0] weight_buffer_23_V_1_reg_5309;
reg   [15:0] weight_buffer_24_V_1_reg_5314;
reg   [15:0] weight_buffer_25_V_1_reg_5319;
reg   [15:0] weight_buffer_26_V_1_reg_5324;
reg   [15:0] weight_buffer_27_V_1_reg_5329;
reg   [15:0] weight_buffer_28_V_1_reg_5334;
reg   [15:0] weight_buffer_29_V_1_reg_5339;
reg   [15:0] weight_buffer_30_V_1_reg_5344;
reg   [15:0] weight_buffer_31_V_1_reg_5349;
wire   [15:0] trunc_ln647_12_fu_2155_p1;
reg   [15:0] trunc_ln647_12_reg_5354;
reg   [15:0] weight_buffer_1_V_w_2_reg_5359;
reg   [15:0] weight_buffer_2_V_w_2_reg_5364;
reg   [15:0] weight_buffer_3_V_w_2_reg_5369;
reg   [15:0] weight_buffer_4_V_w_2_reg_5374;
reg   [15:0] weight_buffer_5_V_w_2_reg_5379;
reg   [15:0] weight_buffer_6_V_w_2_reg_5384;
reg   [15:0] weight_buffer_7_V_w_2_reg_5389;
reg   [15:0] weight_buffer_8_V_w_2_reg_5394;
reg   [15:0] weight_buffer_9_V_w_2_reg_5399;
reg   [15:0] weight_buffer_10_V_2_reg_5404;
reg   [15:0] weight_buffer_11_V_2_reg_5409;
reg   [15:0] weight_buffer_12_V_2_reg_5414;
reg   [15:0] weight_buffer_13_V_2_reg_5419;
reg   [15:0] weight_buffer_14_V_2_reg_5424;
reg   [15:0] weight_buffer_15_V_2_reg_5429;
reg   [15:0] weight_buffer_16_V_2_reg_5434;
reg   [15:0] weight_buffer_17_V_2_reg_5439;
reg   [15:0] weight_buffer_18_V_2_reg_5444;
reg   [15:0] weight_buffer_19_V_2_reg_5449;
reg   [15:0] weight_buffer_20_V_2_reg_5454;
reg   [15:0] weight_buffer_21_V_2_reg_5459;
reg   [15:0] weight_buffer_22_V_2_reg_5464;
reg   [15:0] weight_buffer_23_V_2_reg_5469;
reg   [15:0] weight_buffer_24_V_2_reg_5474;
reg   [15:0] weight_buffer_25_V_2_reg_5479;
reg   [15:0] weight_buffer_26_V_2_reg_5484;
reg   [15:0] weight_buffer_27_V_2_reg_5489;
reg   [15:0] weight_buffer_28_V_2_reg_5494;
reg   [15:0] weight_buffer_29_V_2_reg_5499;
reg   [15:0] weight_buffer_30_V_2_reg_5504;
reg   [15:0] weight_buffer_31_V_2_reg_5509;
wire   [15:0] trunc_ln647_13_fu_2469_p1;
reg   [15:0] trunc_ln647_13_reg_5514;
reg   [15:0] weight_buffer_1_V_w_3_reg_5519;
reg   [15:0] weight_buffer_2_V_w_3_reg_5524;
reg   [15:0] weight_buffer_3_V_w_3_reg_5529;
reg   [15:0] weight_buffer_4_V_w_3_reg_5534;
reg   [15:0] weight_buffer_5_V_w_3_reg_5539;
reg   [15:0] weight_buffer_6_V_w_3_reg_5544;
reg   [15:0] weight_buffer_7_V_w_3_reg_5549;
reg   [15:0] weight_buffer_8_V_w_3_reg_5554;
reg   [15:0] weight_buffer_9_V_w_3_reg_5559;
reg   [15:0] weight_buffer_10_V_3_reg_5564;
reg   [15:0] weight_buffer_11_V_3_reg_5569;
reg   [15:0] weight_buffer_12_V_3_reg_5574;
reg   [15:0] weight_buffer_13_V_3_reg_5579;
reg   [15:0] weight_buffer_14_V_3_reg_5584;
reg   [15:0] weight_buffer_15_V_3_reg_5589;
reg   [15:0] weight_buffer_16_V_3_reg_5594;
reg   [15:0] weight_buffer_17_V_3_reg_5599;
reg   [15:0] weight_buffer_18_V_3_reg_5604;
reg   [15:0] weight_buffer_19_V_3_reg_5609;
reg   [15:0] weight_buffer_20_V_3_reg_5614;
reg   [15:0] weight_buffer_21_V_3_reg_5619;
reg   [15:0] weight_buffer_22_V_3_reg_5624;
reg   [15:0] weight_buffer_23_V_3_reg_5629;
reg   [15:0] weight_buffer_24_V_3_reg_5634;
reg   [15:0] weight_buffer_25_V_3_reg_5639;
reg   [15:0] weight_buffer_26_V_3_reg_5644;
reg   [15:0] weight_buffer_27_V_3_reg_5649;
reg   [15:0] weight_buffer_28_V_3_reg_5654;
reg   [15:0] weight_buffer_29_V_3_reg_5659;
reg   [15:0] weight_buffer_30_V_3_reg_5664;
reg   [15:0] weight_buffer_31_V_3_reg_5669;
wire   [63:0] zext_ln30_18_fu_388_p1;
wire   [63:0] zext_ln30_20_fu_438_p1;
wire   [63:0] zext_ln30_22_fu_456_p1;
wire   [63:0] zext_ln30_24_fu_474_p1;
wire   [63:0] zext_ln30_26_fu_500_p1;
wire   [63:0] zext_ln30_28_fu_534_p1;
wire   [63:0] zext_ln30_30_fu_565_p1;
wire   [63:0] zext_ln30_32_fu_889_p1;
wire   [5:0] conv_channels_after_s_fu_304_p4;
wire   [11:0] trunc_ln130_fu_326_p1;
wire   [6:0] zext_ln130_fu_336_p1;
wire   [6:0] add_ln130_1_fu_340_p2;
wire   [11:0] zext_ln130_1_fu_346_p1;
wire   [11:0] add_ln130_fu_330_p2;
wire   [26:0] zext_ln30_fu_356_p1;
wire   [5:0] pw_channels_after_ti_fu_370_p4;
wire   [11:0] weights_all_ptr_10_fu_398_p2;
wire   [26:0] zext_ln30_19_fu_403_p1;
wire   [6:0] zext_ln121_fu_380_p1;
wire   [6:0] add_ln144_fu_418_p2;
wire   [11:0] add_ln144_2_fu_427_p2;
wire   [11:0] zext_ln144_fu_423_p1;
wire   [26:0] zext_ln30_21_fu_448_p1;
wire   [26:0] zext_ln30_23_fu_466_p1;
wire   [26:0] zext_ln30_25_fu_488_p1;
wire   [11:0] weights_all_ptr_14_fu_510_p2;
wire   [26:0] zext_ln30_27_fu_514_p1;
wire   [11:0] add_ln156_fu_523_p2;
wire   [11:0] factor_cast_fu_497_p1;
wire   [26:0] zext_ln30_29_fu_544_p1;
wire   [11:0] weights_all_ptr_16_fu_552_p2;
wire   [26:0] zext_ln30_31_fu_556_p1;
wire   [15:0] trunc_ln647_14_fu_2783_p1;
reg   [15:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln30_10_reg_4488 <= add_ln30_10_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln30_11_reg_4504 <= add_ln30_11_fu_492_p2;
        weights_all_ptr_13_reg_4499 <= weights_all_ptr_13_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln30_12_reg_4515 <= add_ln30_12_fu_518_p2;
        weights_all_ptr_15_reg_4520 <= weights_all_ptr_15_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        add_ln30_13_reg_4532 <= add_ln30_13_fu_547_p2;
        add_ln30_14_reg_4537 <= add_ln30_14_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln30_8_reg_4455 <= add_ln30_8_fu_407_p2;
        weights_all_ptr_11_reg_4460 <= weights_all_ptr_11_fu_412_p2;
        weights_all_ptr_12_reg_4465 <= weights_all_ptr_12_fu_432_p2;
        zext_ln121_1_reg_4441[5 : 0] <= zext_ln121_1_fu_384_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln30_9_reg_4477 <= add_ln30_9_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln30_reg_4436 <= add_ln30_fu_364_p2;
        factor_reg_4414[6 : 1] <= factor_fu_318_p3[6 : 1];
        weights_all_ptr_reg_4420 <= weights_all_ptr_fu_350_p2;
        zext_ln120_reg_4409[5 : 0] <= zext_ln120_fu_314_p1[5 : 0];
        zext_ln30_17_reg_4425[25 : 0] <= zext_ln30_17_fu_360_p1[25 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        trunc_ln647_10_reg_5034 <= trunc_ln647_10_fu_1527_p1;
        weight_buffer_10_V_5_reg_5084 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_5_reg_5089 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_5_reg_5094 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_5_reg_5099 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_5_reg_5104 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_5_reg_5109 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_5_reg_5114 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_5_reg_5119 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_5_reg_5124 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_5_reg_5129 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_5_reg_5039 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_5_reg_5134 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_5_reg_5139 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_5_reg_5144 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_5_reg_5149 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_5_reg_5154 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_5_reg_5159 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_5_reg_5164 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_5_reg_5169 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_5_reg_5174 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_5_reg_5179 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_5_reg_5044 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_5_reg_5184 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_5_reg_5189 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_5_reg_5049 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_5_reg_5054 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_5_reg_5059 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_5_reg_5064 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_5_reg_5069 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_5_reg_5074 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_5_reg_5079 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        trunc_ln647_11_reg_5194 <= trunc_ln647_11_fu_1841_p1;
        weight_buffer_10_V_1_reg_5244 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_1_reg_5249 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_1_reg_5254 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_1_reg_5259 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_1_reg_5264 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_1_reg_5269 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_1_reg_5274 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_1_reg_5279 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_1_reg_5284 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_1_reg_5289 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_1_reg_5199 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_1_reg_5294 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_1_reg_5299 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_1_reg_5304 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_1_reg_5309 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_1_reg_5314 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_1_reg_5319 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_1_reg_5324 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_1_reg_5329 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_1_reg_5334 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_1_reg_5339 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_1_reg_5204 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_1_reg_5344 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_1_reg_5349 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_1_reg_5209 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_1_reg_5214 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_1_reg_5219 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_1_reg_5224 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_1_reg_5229 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_1_reg_5234 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_1_reg_5239 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        trunc_ln647_12_reg_5354 <= trunc_ln647_12_fu_2155_p1;
        weight_buffer_10_V_2_reg_5404 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_2_reg_5409 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_2_reg_5414 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_2_reg_5419 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_2_reg_5424 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_2_reg_5429 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_2_reg_5434 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_2_reg_5439 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_2_reg_5444 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_2_reg_5449 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_2_reg_5359 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_2_reg_5454 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_2_reg_5459 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_2_reg_5464 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_2_reg_5469 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_2_reg_5474 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_2_reg_5479 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_2_reg_5484 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_2_reg_5489 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_2_reg_5494 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_2_reg_5499 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_2_reg_5364 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_2_reg_5504 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_2_reg_5509 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_2_reg_5369 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_2_reg_5374 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_2_reg_5379 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_2_reg_5384 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_2_reg_5389 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_2_reg_5394 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_2_reg_5399 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        trunc_ln647_13_reg_5514 <= trunc_ln647_13_fu_2469_p1;
        weight_buffer_10_V_3_reg_5564 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_3_reg_5569 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_3_reg_5574 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_3_reg_5579 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_3_reg_5584 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_3_reg_5589 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_3_reg_5594 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_3_reg_5599 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_3_reg_5604 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_3_reg_5609 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_3_reg_5519 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_3_reg_5614 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_3_reg_5619 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_3_reg_5624 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_3_reg_5629 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_3_reg_5634 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_3_reg_5639 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_3_reg_5644 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_3_reg_5649 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_3_reg_5654 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_3_reg_5659 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_3_reg_5524 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_3_reg_5664 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_3_reg_5669 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_3_reg_5529 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_3_reg_5534 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_3_reg_5539 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_3_reg_5544 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_3_reg_5549 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_3_reg_5554 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_3_reg_5559 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        trunc_ln647_8_reg_4714 <= trunc_ln647_8_fu_899_p1;
        weight_buffer_10_V_8_reg_4764 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_8_reg_4769 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_8_reg_4774 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_8_reg_4779 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_8_reg_4784 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_8_reg_4789 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_8_reg_4794 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_8_reg_4799 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_8_reg_4804 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_8_reg_4809 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_8_reg_4719 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_8_reg_4814 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_8_reg_4819 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_8_reg_4824 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_8_reg_4829 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_8_reg_4834 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_8_reg_4839 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_8_reg_4844 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_8_reg_4849 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_8_reg_4854 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_8_reg_4859 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_8_reg_4724 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_8_reg_4864 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_8_reg_4869 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_8_reg_4729 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_8_reg_4734 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_8_reg_4739 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_8_reg_4744 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_8_reg_4749 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_8_reg_4754 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_8_reg_4759 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        trunc_ln647_9_reg_4874 <= trunc_ln647_9_fu_1213_p1;
        weight_buffer_10_V_9_reg_4924 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_9_reg_4929 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_9_reg_4934 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_9_reg_4939 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_9_reg_4944 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_9_reg_4949 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_9_reg_4954 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_9_reg_4959 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_9_reg_4964 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_9_reg_4969 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_9_reg_4879 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_9_reg_4974 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_9_reg_4979 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_9_reg_4984 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_9_reg_4989 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_9_reg_4994 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_9_reg_4999 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_9_reg_5004 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_9_reg_5009 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_9_reg_5014 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_9_reg_5019 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_9_reg_4884 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_9_reg_5024 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_9_reg_5029 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_9_reg_4889 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_9_reg_4894 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_9_reg_4899 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_9_reg_4904 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_9_reg_4909 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_9_reg_4914 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_9_reg_4919 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        trunc_ln647_reg_4548 <= trunc_ln647_fu_575_p1;
        weight_buffer_10_V_s_reg_4598 <= {{m_axi_weights_all_V_RDATA[175:160]}};
        weight_buffer_11_V_s_reg_4603 <= {{m_axi_weights_all_V_RDATA[191:176]}};
        weight_buffer_12_V_s_reg_4608 <= {{m_axi_weights_all_V_RDATA[207:192]}};
        weight_buffer_13_V_s_reg_4613 <= {{m_axi_weights_all_V_RDATA[223:208]}};
        weight_buffer_14_V_s_reg_4618 <= {{m_axi_weights_all_V_RDATA[239:224]}};
        weight_buffer_15_V_s_reg_4623 <= {{m_axi_weights_all_V_RDATA[255:240]}};
        weight_buffer_16_V_s_reg_4628 <= {{m_axi_weights_all_V_RDATA[271:256]}};
        weight_buffer_17_V_s_reg_4633 <= {{m_axi_weights_all_V_RDATA[287:272]}};
        weight_buffer_18_V_s_reg_4638 <= {{m_axi_weights_all_V_RDATA[303:288]}};
        weight_buffer_19_V_s_reg_4643 <= {{m_axi_weights_all_V_RDATA[319:304]}};
        weight_buffer_1_V_w_reg_4553 <= {{m_axi_weights_all_V_RDATA[31:16]}};
        weight_buffer_20_V_s_reg_4648 <= {{m_axi_weights_all_V_RDATA[335:320]}};
        weight_buffer_21_V_s_reg_4653 <= {{m_axi_weights_all_V_RDATA[351:336]}};
        weight_buffer_22_V_s_reg_4658 <= {{m_axi_weights_all_V_RDATA[367:352]}};
        weight_buffer_23_V_s_reg_4663 <= {{m_axi_weights_all_V_RDATA[383:368]}};
        weight_buffer_24_V_s_reg_4668 <= {{m_axi_weights_all_V_RDATA[399:384]}};
        weight_buffer_25_V_s_reg_4673 <= {{m_axi_weights_all_V_RDATA[415:400]}};
        weight_buffer_26_V_s_reg_4678 <= {{m_axi_weights_all_V_RDATA[431:416]}};
        weight_buffer_27_V_s_reg_4683 <= {{m_axi_weights_all_V_RDATA[447:432]}};
        weight_buffer_28_V_s_reg_4688 <= {{m_axi_weights_all_V_RDATA[463:448]}};
        weight_buffer_29_V_s_reg_4693 <= {{m_axi_weights_all_V_RDATA[479:464]}};
        weight_buffer_2_V_w_reg_4558 <= {{m_axi_weights_all_V_RDATA[47:32]}};
        weight_buffer_30_V_s_reg_4698 <= {{m_axi_weights_all_V_RDATA[495:480]}};
        weight_buffer_31_V_s_reg_4703 <= {{m_axi_weights_all_V_RDATA[511:496]}};
        weight_buffer_3_V_w_reg_4563 <= {{m_axi_weights_all_V_RDATA[63:48]}};
        weight_buffer_4_V_w_reg_4568 <= {{m_axi_weights_all_V_RDATA[79:64]}};
        weight_buffer_5_V_w_reg_4573 <= {{m_axi_weights_all_V_RDATA[95:80]}};
        weight_buffer_6_V_w_reg_4578 <= {{m_axi_weights_all_V_RDATA[111:96]}};
        weight_buffer_7_V_w_reg_4583 <= {{m_axi_weights_all_V_RDATA[127:112]}};
        weight_buffer_8_V_w_reg_4588 <= {{m_axi_weights_all_V_RDATA[143:128]}};
        weight_buffer_9_V_w_reg_4593 <= {{m_axi_weights_all_V_RDATA[159:144]}};
    end
end

always @ (*) begin
    if ((((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_32_fu_889_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_30_fu_565_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_28_fu_534_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_26_fu_500_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_24_fu_474_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_22_fu_456_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_20_fu_438_p1;
    end else if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_weights_all_V_ARADDR = zext_ln30_18_fu_388_p1;
    end else begin
        m_axi_weights_all_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | ((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_weights_all_V_ARVALID = 1'b1;
    end else begin
        m_axi_weights_all_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | (~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        m_axi_weights_all_V_RREADY = 1'b1;
    end else begin
        m_axi_weights_all_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2))) begin
        weights_all_V_blk_n_AR = m_axi_weights_all_V_ARREADY;
    end else begin
        weights_all_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        weights_all_V_blk_n_R = m_axi_weights_all_V_RVALID;
    end else begin
        weights_all_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((m_axi_weights_all_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((m_axi_weights_all_V_RVALID == 1'b0) | (m_axi_weights_all_V_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((m_axi_weights_all_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln130_1_fu_340_p2 = (factor_fu_318_p3 + zext_ln130_fu_336_p1);

assign add_ln130_fu_330_p2 = (zext_ln120_fu_314_p1 + trunc_ln130_fu_326_p1);

assign add_ln144_2_fu_427_p2 = (zext_ln120_reg_4409 + weights_all_ptr_11_fu_412_p2);

assign add_ln144_fu_418_p2 = (factor_reg_4414 + zext_ln121_fu_380_p1);

assign add_ln156_fu_523_p2 = (zext_ln121_1_reg_4441 + weights_all_ptr_14_fu_510_p2);

assign add_ln30_10_fu_469_p2 = (zext_ln30_23_fu_466_p1 + zext_ln30_17_reg_4425);

assign add_ln30_11_fu_492_p2 = (zext_ln30_25_fu_488_p1 + zext_ln30_17_reg_4425);

assign add_ln30_12_fu_518_p2 = (zext_ln30_27_fu_514_p1 + zext_ln30_17_reg_4425);

assign add_ln30_13_fu_547_p2 = (zext_ln30_29_fu_544_p1 + zext_ln30_17_reg_4425);

assign add_ln30_14_fu_560_p2 = (zext_ln30_31_fu_556_p1 + zext_ln30_17_reg_4425);

assign add_ln30_8_fu_407_p2 = (zext_ln30_19_fu_403_p1 + zext_ln30_17_reg_4425);

assign add_ln30_9_fu_451_p2 = (zext_ln30_21_fu_448_p1 + zext_ln30_17_reg_4425);

assign add_ln30_fu_364_p2 = (zext_ln30_fu_356_p1 + zext_ln30_17_fu_360_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return_0 = trunc_ln647_reg_4548;

assign ap_return_1 = weight_buffer_1_V_w_reg_4553;

assign ap_return_10 = weight_buffer_10_V_s_reg_4598;

assign ap_return_100 = weight_buffer_4_V_w_5_reg_5054;

assign ap_return_101 = weight_buffer_5_V_w_5_reg_5059;

assign ap_return_102 = weight_buffer_6_V_w_5_reg_5064;

assign ap_return_103 = weight_buffer_7_V_w_5_reg_5069;

assign ap_return_104 = weight_buffer_8_V_w_5_reg_5074;

assign ap_return_105 = weight_buffer_9_V_w_5_reg_5079;

assign ap_return_106 = weight_buffer_10_V_5_reg_5084;

assign ap_return_107 = weight_buffer_11_V_5_reg_5089;

assign ap_return_108 = weight_buffer_12_V_5_reg_5094;

assign ap_return_109 = weight_buffer_13_V_5_reg_5099;

assign ap_return_11 = weight_buffer_11_V_s_reg_4603;

assign ap_return_110 = weight_buffer_14_V_5_reg_5104;

assign ap_return_111 = weight_buffer_15_V_5_reg_5109;

assign ap_return_112 = weight_buffer_16_V_5_reg_5114;

assign ap_return_113 = weight_buffer_17_V_5_reg_5119;

assign ap_return_114 = weight_buffer_18_V_5_reg_5124;

assign ap_return_115 = weight_buffer_19_V_5_reg_5129;

assign ap_return_116 = weight_buffer_20_V_5_reg_5134;

assign ap_return_117 = weight_buffer_21_V_5_reg_5139;

assign ap_return_118 = weight_buffer_22_V_5_reg_5144;

assign ap_return_119 = weight_buffer_23_V_5_reg_5149;

assign ap_return_12 = weight_buffer_12_V_s_reg_4608;

assign ap_return_120 = weight_buffer_24_V_5_reg_5154;

assign ap_return_121 = weight_buffer_25_V_5_reg_5159;

assign ap_return_122 = weight_buffer_26_V_5_reg_5164;

assign ap_return_123 = weight_buffer_27_V_5_reg_5169;

assign ap_return_124 = weight_buffer_28_V_5_reg_5174;

assign ap_return_125 = weight_buffer_29_V_5_reg_5179;

assign ap_return_126 = weight_buffer_30_V_5_reg_5184;

assign ap_return_127 = weight_buffer_31_V_5_reg_5189;

assign ap_return_128 = trunc_ln647_11_reg_5194;

assign ap_return_129 = weight_buffer_1_V_w_1_reg_5199;

assign ap_return_13 = weight_buffer_13_V_s_reg_4613;

assign ap_return_130 = weight_buffer_2_V_w_1_reg_5204;

assign ap_return_131 = weight_buffer_3_V_w_1_reg_5209;

assign ap_return_132 = weight_buffer_4_V_w_1_reg_5214;

assign ap_return_133 = weight_buffer_5_V_w_1_reg_5219;

assign ap_return_134 = weight_buffer_6_V_w_1_reg_5224;

assign ap_return_135 = weight_buffer_7_V_w_1_reg_5229;

assign ap_return_136 = weight_buffer_8_V_w_1_reg_5234;

assign ap_return_137 = weight_buffer_9_V_w_1_reg_5239;

assign ap_return_138 = weight_buffer_10_V_1_reg_5244;

assign ap_return_139 = weight_buffer_11_V_1_reg_5249;

assign ap_return_14 = weight_buffer_14_V_s_reg_4618;

assign ap_return_140 = weight_buffer_12_V_1_reg_5254;

assign ap_return_141 = weight_buffer_13_V_1_reg_5259;

assign ap_return_142 = weight_buffer_14_V_1_reg_5264;

assign ap_return_143 = weight_buffer_15_V_1_reg_5269;

assign ap_return_144 = weight_buffer_16_V_1_reg_5274;

assign ap_return_145 = weight_buffer_17_V_1_reg_5279;

assign ap_return_146 = weight_buffer_18_V_1_reg_5284;

assign ap_return_147 = weight_buffer_19_V_1_reg_5289;

assign ap_return_148 = weight_buffer_20_V_1_reg_5294;

assign ap_return_149 = weight_buffer_21_V_1_reg_5299;

assign ap_return_15 = weight_buffer_15_V_s_reg_4623;

assign ap_return_150 = weight_buffer_22_V_1_reg_5304;

assign ap_return_151 = weight_buffer_23_V_1_reg_5309;

assign ap_return_152 = weight_buffer_24_V_1_reg_5314;

assign ap_return_153 = weight_buffer_25_V_1_reg_5319;

assign ap_return_154 = weight_buffer_26_V_1_reg_5324;

assign ap_return_155 = weight_buffer_27_V_1_reg_5329;

assign ap_return_156 = weight_buffer_28_V_1_reg_5334;

assign ap_return_157 = weight_buffer_29_V_1_reg_5339;

assign ap_return_158 = weight_buffer_30_V_1_reg_5344;

assign ap_return_159 = weight_buffer_31_V_1_reg_5349;

assign ap_return_16 = weight_buffer_16_V_s_reg_4628;

assign ap_return_160 = trunc_ln647_12_reg_5354;

assign ap_return_161 = weight_buffer_1_V_w_2_reg_5359;

assign ap_return_162 = weight_buffer_2_V_w_2_reg_5364;

assign ap_return_163 = weight_buffer_3_V_w_2_reg_5369;

assign ap_return_164 = weight_buffer_4_V_w_2_reg_5374;

assign ap_return_165 = weight_buffer_5_V_w_2_reg_5379;

assign ap_return_166 = weight_buffer_6_V_w_2_reg_5384;

assign ap_return_167 = weight_buffer_7_V_w_2_reg_5389;

assign ap_return_168 = weight_buffer_8_V_w_2_reg_5394;

assign ap_return_169 = weight_buffer_9_V_w_2_reg_5399;

assign ap_return_17 = weight_buffer_17_V_s_reg_4633;

assign ap_return_170 = weight_buffer_10_V_2_reg_5404;

assign ap_return_171 = weight_buffer_11_V_2_reg_5409;

assign ap_return_172 = weight_buffer_12_V_2_reg_5414;

assign ap_return_173 = weight_buffer_13_V_2_reg_5419;

assign ap_return_174 = weight_buffer_14_V_2_reg_5424;

assign ap_return_175 = weight_buffer_15_V_2_reg_5429;

assign ap_return_176 = weight_buffer_16_V_2_reg_5434;

assign ap_return_177 = weight_buffer_17_V_2_reg_5439;

assign ap_return_178 = weight_buffer_18_V_2_reg_5444;

assign ap_return_179 = weight_buffer_19_V_2_reg_5449;

assign ap_return_18 = weight_buffer_18_V_s_reg_4638;

assign ap_return_180 = weight_buffer_20_V_2_reg_5454;

assign ap_return_181 = weight_buffer_21_V_2_reg_5459;

assign ap_return_182 = weight_buffer_22_V_2_reg_5464;

assign ap_return_183 = weight_buffer_23_V_2_reg_5469;

assign ap_return_184 = weight_buffer_24_V_2_reg_5474;

assign ap_return_185 = weight_buffer_25_V_2_reg_5479;

assign ap_return_186 = weight_buffer_26_V_2_reg_5484;

assign ap_return_187 = weight_buffer_27_V_2_reg_5489;

assign ap_return_188 = weight_buffer_28_V_2_reg_5494;

assign ap_return_189 = weight_buffer_29_V_2_reg_5499;

assign ap_return_19 = weight_buffer_19_V_s_reg_4643;

assign ap_return_190 = weight_buffer_30_V_2_reg_5504;

assign ap_return_191 = weight_buffer_31_V_2_reg_5509;

assign ap_return_192 = trunc_ln647_13_reg_5514;

assign ap_return_193 = weight_buffer_1_V_w_3_reg_5519;

assign ap_return_194 = weight_buffer_2_V_w_3_reg_5524;

assign ap_return_195 = weight_buffer_3_V_w_3_reg_5529;

assign ap_return_196 = weight_buffer_4_V_w_3_reg_5534;

assign ap_return_197 = weight_buffer_5_V_w_3_reg_5539;

assign ap_return_198 = weight_buffer_6_V_w_3_reg_5544;

assign ap_return_199 = weight_buffer_7_V_w_3_reg_5549;

assign ap_return_2 = weight_buffer_2_V_w_reg_4558;

assign ap_return_20 = weight_buffer_20_V_s_reg_4648;

assign ap_return_200 = weight_buffer_8_V_w_3_reg_5554;

assign ap_return_201 = weight_buffer_9_V_w_3_reg_5559;

assign ap_return_202 = weight_buffer_10_V_3_reg_5564;

assign ap_return_203 = weight_buffer_11_V_3_reg_5569;

assign ap_return_204 = weight_buffer_12_V_3_reg_5574;

assign ap_return_205 = weight_buffer_13_V_3_reg_5579;

assign ap_return_206 = weight_buffer_14_V_3_reg_5584;

assign ap_return_207 = weight_buffer_15_V_3_reg_5589;

assign ap_return_208 = weight_buffer_16_V_3_reg_5594;

assign ap_return_209 = weight_buffer_17_V_3_reg_5599;

assign ap_return_21 = weight_buffer_21_V_s_reg_4653;

assign ap_return_210 = weight_buffer_18_V_3_reg_5604;

assign ap_return_211 = weight_buffer_19_V_3_reg_5609;

assign ap_return_212 = weight_buffer_20_V_3_reg_5614;

assign ap_return_213 = weight_buffer_21_V_3_reg_5619;

assign ap_return_214 = weight_buffer_22_V_3_reg_5624;

assign ap_return_215 = weight_buffer_23_V_3_reg_5629;

assign ap_return_216 = weight_buffer_24_V_3_reg_5634;

assign ap_return_217 = weight_buffer_25_V_3_reg_5639;

assign ap_return_218 = weight_buffer_26_V_3_reg_5644;

assign ap_return_219 = weight_buffer_27_V_3_reg_5649;

assign ap_return_22 = weight_buffer_22_V_s_reg_4658;

assign ap_return_220 = weight_buffer_28_V_3_reg_5654;

assign ap_return_221 = weight_buffer_29_V_3_reg_5659;

assign ap_return_222 = weight_buffer_30_V_3_reg_5664;

assign ap_return_223 = weight_buffer_31_V_3_reg_5669;

assign ap_return_224 = trunc_ln647_14_fu_2783_p1;

assign ap_return_225 = {{m_axi_weights_all_V_RDATA[31:16]}};

assign ap_return_226 = {{m_axi_weights_all_V_RDATA[47:32]}};

assign ap_return_227 = {{m_axi_weights_all_V_RDATA[63:48]}};

assign ap_return_228 = {{m_axi_weights_all_V_RDATA[79:64]}};

assign ap_return_229 = {{m_axi_weights_all_V_RDATA[95:80]}};

assign ap_return_23 = weight_buffer_23_V_s_reg_4663;

assign ap_return_230 = {{m_axi_weights_all_V_RDATA[111:96]}};

assign ap_return_231 = {{m_axi_weights_all_V_RDATA[127:112]}};

assign ap_return_232 = {{m_axi_weights_all_V_RDATA[143:128]}};

assign ap_return_233 = {{m_axi_weights_all_V_RDATA[159:144]}};

assign ap_return_234 = {{m_axi_weights_all_V_RDATA[175:160]}};

assign ap_return_235 = {{m_axi_weights_all_V_RDATA[191:176]}};

assign ap_return_236 = {{m_axi_weights_all_V_RDATA[207:192]}};

assign ap_return_237 = {{m_axi_weights_all_V_RDATA[223:208]}};

assign ap_return_238 = {{m_axi_weights_all_V_RDATA[239:224]}};

assign ap_return_239 = {{m_axi_weights_all_V_RDATA[255:240]}};

assign ap_return_24 = weight_buffer_24_V_s_reg_4668;

assign ap_return_240 = {{m_axi_weights_all_V_RDATA[271:256]}};

assign ap_return_241 = {{m_axi_weights_all_V_RDATA[287:272]}};

assign ap_return_242 = {{m_axi_weights_all_V_RDATA[303:288]}};

assign ap_return_243 = {{m_axi_weights_all_V_RDATA[319:304]}};

assign ap_return_244 = {{m_axi_weights_all_V_RDATA[335:320]}};

assign ap_return_245 = {{m_axi_weights_all_V_RDATA[351:336]}};

assign ap_return_246 = {{m_axi_weights_all_V_RDATA[367:352]}};

assign ap_return_247 = {{m_axi_weights_all_V_RDATA[383:368]}};

assign ap_return_248 = {{m_axi_weights_all_V_RDATA[399:384]}};

assign ap_return_249 = {{m_axi_weights_all_V_RDATA[415:400]}};

assign ap_return_25 = weight_buffer_25_V_s_reg_4673;

assign ap_return_250 = {{m_axi_weights_all_V_RDATA[431:416]}};

assign ap_return_251 = {{m_axi_weights_all_V_RDATA[447:432]}};

assign ap_return_252 = {{m_axi_weights_all_V_RDATA[463:448]}};

assign ap_return_253 = {{m_axi_weights_all_V_RDATA[479:464]}};

assign ap_return_254 = {{m_axi_weights_all_V_RDATA[495:480]}};

assign ap_return_255 = {{m_axi_weights_all_V_RDATA[511:496]}};

assign ap_return_26 = weight_buffer_26_V_s_reg_4678;

assign ap_return_27 = weight_buffer_27_V_s_reg_4683;

assign ap_return_28 = weight_buffer_28_V_s_reg_4688;

assign ap_return_29 = weight_buffer_29_V_s_reg_4693;

assign ap_return_3 = weight_buffer_3_V_w_reg_4563;

assign ap_return_30 = weight_buffer_30_V_s_reg_4698;

assign ap_return_31 = weight_buffer_31_V_s_reg_4703;

assign ap_return_32 = trunc_ln647_8_reg_4714;

assign ap_return_33 = weight_buffer_1_V_w_8_reg_4719;

assign ap_return_34 = weight_buffer_2_V_w_8_reg_4724;

assign ap_return_35 = weight_buffer_3_V_w_8_reg_4729;

assign ap_return_36 = weight_buffer_4_V_w_8_reg_4734;

assign ap_return_37 = weight_buffer_5_V_w_8_reg_4739;

assign ap_return_38 = weight_buffer_6_V_w_8_reg_4744;

assign ap_return_39 = weight_buffer_7_V_w_8_reg_4749;

assign ap_return_4 = weight_buffer_4_V_w_reg_4568;

assign ap_return_40 = weight_buffer_8_V_w_8_reg_4754;

assign ap_return_41 = weight_buffer_9_V_w_8_reg_4759;

assign ap_return_42 = weight_buffer_10_V_8_reg_4764;

assign ap_return_43 = weight_buffer_11_V_8_reg_4769;

assign ap_return_44 = weight_buffer_12_V_8_reg_4774;

assign ap_return_45 = weight_buffer_13_V_8_reg_4779;

assign ap_return_46 = weight_buffer_14_V_8_reg_4784;

assign ap_return_47 = weight_buffer_15_V_8_reg_4789;

assign ap_return_48 = weight_buffer_16_V_8_reg_4794;

assign ap_return_49 = weight_buffer_17_V_8_reg_4799;

assign ap_return_5 = weight_buffer_5_V_w_reg_4573;

assign ap_return_50 = weight_buffer_18_V_8_reg_4804;

assign ap_return_51 = weight_buffer_19_V_8_reg_4809;

assign ap_return_52 = weight_buffer_20_V_8_reg_4814;

assign ap_return_53 = weight_buffer_21_V_8_reg_4819;

assign ap_return_54 = weight_buffer_22_V_8_reg_4824;

assign ap_return_55 = weight_buffer_23_V_8_reg_4829;

assign ap_return_56 = weight_buffer_24_V_8_reg_4834;

assign ap_return_57 = weight_buffer_25_V_8_reg_4839;

assign ap_return_58 = weight_buffer_26_V_8_reg_4844;

assign ap_return_59 = weight_buffer_27_V_8_reg_4849;

assign ap_return_6 = weight_buffer_6_V_w_reg_4578;

assign ap_return_60 = weight_buffer_28_V_8_reg_4854;

assign ap_return_61 = weight_buffer_29_V_8_reg_4859;

assign ap_return_62 = weight_buffer_30_V_8_reg_4864;

assign ap_return_63 = weight_buffer_31_V_8_reg_4869;

assign ap_return_64 = trunc_ln647_9_reg_4874;

assign ap_return_65 = weight_buffer_1_V_w_9_reg_4879;

assign ap_return_66 = weight_buffer_2_V_w_9_reg_4884;

assign ap_return_67 = weight_buffer_3_V_w_9_reg_4889;

assign ap_return_68 = weight_buffer_4_V_w_9_reg_4894;

assign ap_return_69 = weight_buffer_5_V_w_9_reg_4899;

assign ap_return_7 = weight_buffer_7_V_w_reg_4583;

assign ap_return_70 = weight_buffer_6_V_w_9_reg_4904;

assign ap_return_71 = weight_buffer_7_V_w_9_reg_4909;

assign ap_return_72 = weight_buffer_8_V_w_9_reg_4914;

assign ap_return_73 = weight_buffer_9_V_w_9_reg_4919;

assign ap_return_74 = weight_buffer_10_V_9_reg_4924;

assign ap_return_75 = weight_buffer_11_V_9_reg_4929;

assign ap_return_76 = weight_buffer_12_V_9_reg_4934;

assign ap_return_77 = weight_buffer_13_V_9_reg_4939;

assign ap_return_78 = weight_buffer_14_V_9_reg_4944;

assign ap_return_79 = weight_buffer_15_V_9_reg_4949;

assign ap_return_8 = weight_buffer_8_V_w_reg_4588;

assign ap_return_80 = weight_buffer_16_V_9_reg_4954;

assign ap_return_81 = weight_buffer_17_V_9_reg_4959;

assign ap_return_82 = weight_buffer_18_V_9_reg_4964;

assign ap_return_83 = weight_buffer_19_V_9_reg_4969;

assign ap_return_84 = weight_buffer_20_V_9_reg_4974;

assign ap_return_85 = weight_buffer_21_V_9_reg_4979;

assign ap_return_86 = weight_buffer_22_V_9_reg_4984;

assign ap_return_87 = weight_buffer_23_V_9_reg_4989;

assign ap_return_88 = weight_buffer_24_V_9_reg_4994;

assign ap_return_89 = weight_buffer_25_V_9_reg_4999;

assign ap_return_9 = weight_buffer_9_V_w_reg_4593;

assign ap_return_90 = weight_buffer_26_V_9_reg_5004;

assign ap_return_91 = weight_buffer_27_V_9_reg_5009;

assign ap_return_92 = weight_buffer_28_V_9_reg_5014;

assign ap_return_93 = weight_buffer_29_V_9_reg_5019;

assign ap_return_94 = weight_buffer_30_V_9_reg_5024;

assign ap_return_95 = weight_buffer_31_V_9_reg_5029;

assign ap_return_96 = trunc_ln647_10_reg_5034;

assign ap_return_97 = weight_buffer_1_V_w_5_reg_5039;

assign ap_return_98 = weight_buffer_2_V_w_5_reg_5044;

assign ap_return_99 = weight_buffer_3_V_w_5_reg_5049;

assign conv_channels_after_s_fu_304_p4 = {{conv_out_channels_offset[10:5]}};

assign factor_cast_fu_497_p1 = factor_reg_4414;

assign factor_fu_318_p3 = {{conv_channels_after_s_fu_304_p4}, {1'd0}};

assign m_axi_weights_all_V_ARBURST = 2'd0;

assign m_axi_weights_all_V_ARCACHE = 4'd0;

assign m_axi_weights_all_V_ARID = 1'd0;

assign m_axi_weights_all_V_ARLEN = 32'd1;

assign m_axi_weights_all_V_ARLOCK = 2'd0;

assign m_axi_weights_all_V_ARPROT = 3'd0;

assign m_axi_weights_all_V_ARQOS = 4'd0;

assign m_axi_weights_all_V_ARREGION = 4'd0;

assign m_axi_weights_all_V_ARSIZE = 3'd0;

assign m_axi_weights_all_V_ARUSER = 1'd0;

assign m_axi_weights_all_V_AWADDR = 32'd0;

assign m_axi_weights_all_V_AWBURST = 2'd0;

assign m_axi_weights_all_V_AWCACHE = 4'd0;

assign m_axi_weights_all_V_AWID = 1'd0;

assign m_axi_weights_all_V_AWLEN = 32'd0;

assign m_axi_weights_all_V_AWLOCK = 2'd0;

assign m_axi_weights_all_V_AWPROT = 3'd0;

assign m_axi_weights_all_V_AWQOS = 4'd0;

assign m_axi_weights_all_V_AWREGION = 4'd0;

assign m_axi_weights_all_V_AWSIZE = 3'd0;

assign m_axi_weights_all_V_AWUSER = 1'd0;

assign m_axi_weights_all_V_AWVALID = 1'b0;

assign m_axi_weights_all_V_BREADY = 1'b0;

assign m_axi_weights_all_V_WDATA = 512'd0;

assign m_axi_weights_all_V_WID = 1'd0;

assign m_axi_weights_all_V_WLAST = 1'b0;

assign m_axi_weights_all_V_WSTRB = 64'd0;

assign m_axi_weights_all_V_WUSER = 1'd0;

assign m_axi_weights_all_V_WVALID = 1'b0;

assign pw_channels_after_ti_fu_370_p4 = {{pw_out_channels_offset[10:5]}};

assign trunc_ln130_fu_326_p1 = weights_all_ptr_start_offset[11:0];

assign trunc_ln647_10_fu_1527_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_11_fu_1841_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_12_fu_2155_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_13_fu_2469_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_14_fu_2783_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_8_fu_899_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_9_fu_1213_p1 = m_axi_weights_all_V_RDATA[15:0];

assign trunc_ln647_fu_575_p1 = m_axi_weights_all_V_RDATA[15:0];

assign weights_all_ptr_10_fu_398_p2 = (zext_ln121_1_fu_384_p1 + weights_all_ptr_reg_4420);

assign weights_all_ptr_11_fu_412_p2 = (zext_ln121_1_fu_384_p1 + weights_all_ptr_10_fu_398_p2);

assign weights_all_ptr_12_fu_432_p2 = (add_ln144_2_fu_427_p2 + zext_ln144_fu_423_p1);

assign weights_all_ptr_13_fu_484_p2 = (zext_ln121_1_reg_4441 + weights_all_ptr_12_reg_4465);

assign weights_all_ptr_14_fu_510_p2 = (zext_ln121_1_reg_4441 + weights_all_ptr_13_reg_4499);

assign weights_all_ptr_15_fu_528_p2 = (add_ln156_fu_523_p2 + factor_cast_fu_497_p1);

assign weights_all_ptr_16_fu_552_p2 = (zext_ln121_1_reg_4441 + weights_all_ptr_15_reg_4520);

assign weights_all_ptr_fu_350_p2 = (zext_ln130_1_fu_346_p1 + add_ln130_fu_330_p2);

assign zext_ln120_fu_314_p1 = conv_channels_after_s_fu_304_p4;

assign zext_ln121_1_fu_384_p1 = pw_channels_after_ti_fu_370_p4;

assign zext_ln121_fu_380_p1 = pw_channels_after_ti_fu_370_p4;

assign zext_ln130_1_fu_346_p1 = add_ln130_1_fu_340_p2;

assign zext_ln130_fu_336_p1 = c_out;

assign zext_ln144_fu_423_p1 = add_ln144_fu_418_p2;

assign zext_ln30_17_fu_360_p1 = weights_all_V_offset;

assign zext_ln30_18_fu_388_p1 = add_ln30_reg_4436;

assign zext_ln30_19_fu_403_p1 = weights_all_ptr_10_fu_398_p2;

assign zext_ln30_20_fu_438_p1 = add_ln30_8_reg_4455;

assign zext_ln30_21_fu_448_p1 = weights_all_ptr_11_reg_4460;

assign zext_ln30_22_fu_456_p1 = add_ln30_9_reg_4477;

assign zext_ln30_23_fu_466_p1 = weights_all_ptr_12_reg_4465;

assign zext_ln30_24_fu_474_p1 = add_ln30_10_reg_4488;

assign zext_ln30_25_fu_488_p1 = weights_all_ptr_13_fu_484_p2;

assign zext_ln30_26_fu_500_p1 = add_ln30_11_reg_4504;

assign zext_ln30_27_fu_514_p1 = weights_all_ptr_14_fu_510_p2;

assign zext_ln30_28_fu_534_p1 = add_ln30_12_reg_4515;

assign zext_ln30_29_fu_544_p1 = weights_all_ptr_15_reg_4520;

assign zext_ln30_30_fu_565_p1 = add_ln30_13_reg_4532;

assign zext_ln30_31_fu_556_p1 = weights_all_ptr_16_fu_552_p2;

assign zext_ln30_32_fu_889_p1 = add_ln30_14_reg_4537;

assign zext_ln30_fu_356_p1 = weights_all_ptr_fu_350_p2;

always @ (posedge ap_clk) begin
    zext_ln120_reg_4409[11:6] <= 6'b000000;
    factor_reg_4414[0] <= 1'b0;
    zext_ln30_17_reg_4425[26] <= 1'b0;
    zext_ln121_1_reg_4441[11:6] <= 6'b000000;
end

endmodule //load_layer_1D_weight
