// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_shortcut (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_buf_sc_0_V_address0,
        out_buf_sc_0_V_ce0,
        out_buf_sc_0_V_we0,
        out_buf_sc_0_V_d0,
        out_buf_sc_1_V_address0,
        out_buf_sc_1_V_ce0,
        out_buf_sc_1_V_we0,
        out_buf_sc_1_V_d0,
        out_buf_sc_2_V_address0,
        out_buf_sc_2_V_ce0,
        out_buf_sc_2_V_we0,
        out_buf_sc_2_V_d0,
        out_buf_sc_3_V_address0,
        out_buf_sc_3_V_ce0,
        out_buf_sc_3_V_we0,
        out_buf_sc_3_V_d0,
        out_buf_sc_4_V_address0,
        out_buf_sc_4_V_ce0,
        out_buf_sc_4_V_we0,
        out_buf_sc_4_V_d0,
        out_buf_sc_5_V_address0,
        out_buf_sc_5_V_ce0,
        out_buf_sc_5_V_we0,
        out_buf_sc_5_V_d0,
        out_buf_sc_6_V_address0,
        out_buf_sc_6_V_ce0,
        out_buf_sc_6_V_we0,
        out_buf_sc_6_V_d0,
        out_buf_sc_7_V_address0,
        out_buf_sc_7_V_ce0,
        out_buf_sc_7_V_we0,
        out_buf_sc_7_V_d0,
        out_buf_sc_8_V_address0,
        out_buf_sc_8_V_ce0,
        out_buf_sc_8_V_we0,
        out_buf_sc_8_V_d0,
        out_buf_sc_9_V_address0,
        out_buf_sc_9_V_ce0,
        out_buf_sc_9_V_we0,
        out_buf_sc_9_V_d0,
        out_buf_sc_10_V_address0,
        out_buf_sc_10_V_ce0,
        out_buf_sc_10_V_we0,
        out_buf_sc_10_V_d0,
        out_buf_sc_11_V_address0,
        out_buf_sc_11_V_ce0,
        out_buf_sc_11_V_we0,
        out_buf_sc_11_V_d0,
        out_buf_sc_12_V_address0,
        out_buf_sc_12_V_ce0,
        out_buf_sc_12_V_we0,
        out_buf_sc_12_V_d0,
        out_buf_sc_13_V_address0,
        out_buf_sc_13_V_ce0,
        out_buf_sc_13_V_we0,
        out_buf_sc_13_V_d0,
        out_buf_sc_14_V_address0,
        out_buf_sc_14_V_ce0,
        out_buf_sc_14_V_we0,
        out_buf_sc_14_V_d0,
        out_buf_sc_15_V_address0,
        out_buf_sc_15_V_ce0,
        out_buf_sc_15_V_we0,
        out_buf_sc_15_V_d0,
        out_buf_sc_16_V_address0,
        out_buf_sc_16_V_ce0,
        out_buf_sc_16_V_we0,
        out_buf_sc_16_V_d0,
        out_buf_sc_17_V_address0,
        out_buf_sc_17_V_ce0,
        out_buf_sc_17_V_we0,
        out_buf_sc_17_V_d0,
        out_buf_sc_18_V_address0,
        out_buf_sc_18_V_ce0,
        out_buf_sc_18_V_we0,
        out_buf_sc_18_V_d0,
        out_buf_sc_19_V_address0,
        out_buf_sc_19_V_ce0,
        out_buf_sc_19_V_we0,
        out_buf_sc_19_V_d0,
        out_buf_sc_20_V_address0,
        out_buf_sc_20_V_ce0,
        out_buf_sc_20_V_we0,
        out_buf_sc_20_V_d0,
        out_buf_sc_21_V_address0,
        out_buf_sc_21_V_ce0,
        out_buf_sc_21_V_we0,
        out_buf_sc_21_V_d0,
        out_buf_sc_22_V_address0,
        out_buf_sc_22_V_ce0,
        out_buf_sc_22_V_we0,
        out_buf_sc_22_V_d0,
        out_buf_sc_23_V_address0,
        out_buf_sc_23_V_ce0,
        out_buf_sc_23_V_we0,
        out_buf_sc_23_V_d0,
        out_buf_sc_24_V_address0,
        out_buf_sc_24_V_ce0,
        out_buf_sc_24_V_we0,
        out_buf_sc_24_V_d0,
        out_buf_sc_25_V_address0,
        out_buf_sc_25_V_ce0,
        out_buf_sc_25_V_we0,
        out_buf_sc_25_V_d0,
        out_buf_sc_26_V_address0,
        out_buf_sc_26_V_ce0,
        out_buf_sc_26_V_we0,
        out_buf_sc_26_V_d0,
        out_buf_sc_27_V_address0,
        out_buf_sc_27_V_ce0,
        out_buf_sc_27_V_we0,
        out_buf_sc_27_V_d0,
        out_buf_sc_28_V_address0,
        out_buf_sc_28_V_ce0,
        out_buf_sc_28_V_we0,
        out_buf_sc_28_V_d0,
        out_buf_sc_29_V_address0,
        out_buf_sc_29_V_ce0,
        out_buf_sc_29_V_we0,
        out_buf_sc_29_V_d0,
        out_buf_sc_30_V_address0,
        out_buf_sc_30_V_ce0,
        out_buf_sc_30_V_we0,
        out_buf_sc_30_V_d0,
        out_buf_sc_31_V_address0,
        out_buf_sc_31_V_ce0,
        out_buf_sc_31_V_we0,
        out_buf_sc_31_V_d0,
        m_axi_DDR_buf_V_AWVALID,
        m_axi_DDR_buf_V_AWREADY,
        m_axi_DDR_buf_V_AWADDR,
        m_axi_DDR_buf_V_AWID,
        m_axi_DDR_buf_V_AWLEN,
        m_axi_DDR_buf_V_AWSIZE,
        m_axi_DDR_buf_V_AWBURST,
        m_axi_DDR_buf_V_AWLOCK,
        m_axi_DDR_buf_V_AWCACHE,
        m_axi_DDR_buf_V_AWPROT,
        m_axi_DDR_buf_V_AWQOS,
        m_axi_DDR_buf_V_AWREGION,
        m_axi_DDR_buf_V_AWUSER,
        m_axi_DDR_buf_V_WVALID,
        m_axi_DDR_buf_V_WREADY,
        m_axi_DDR_buf_V_WDATA,
        m_axi_DDR_buf_V_WSTRB,
        m_axi_DDR_buf_V_WLAST,
        m_axi_DDR_buf_V_WID,
        m_axi_DDR_buf_V_WUSER,
        m_axi_DDR_buf_V_ARVALID,
        m_axi_DDR_buf_V_ARREADY,
        m_axi_DDR_buf_V_ARADDR,
        m_axi_DDR_buf_V_ARID,
        m_axi_DDR_buf_V_ARLEN,
        m_axi_DDR_buf_V_ARSIZE,
        m_axi_DDR_buf_V_ARBURST,
        m_axi_DDR_buf_V_ARLOCK,
        m_axi_DDR_buf_V_ARCACHE,
        m_axi_DDR_buf_V_ARPROT,
        m_axi_DDR_buf_V_ARQOS,
        m_axi_DDR_buf_V_ARREGION,
        m_axi_DDR_buf_V_ARUSER,
        m_axi_DDR_buf_V_RVALID,
        m_axi_DDR_buf_V_RREADY,
        m_axi_DDR_buf_V_RDATA,
        m_axi_DDR_buf_V_RLAST,
        m_axi_DDR_buf_V_RID,
        m_axi_DDR_buf_V_RUSER,
        m_axi_DDR_buf_V_RRESP,
        m_axi_DDR_buf_V_BVALID,
        m_axi_DDR_buf_V_BREADY,
        m_axi_DDR_buf_V_BRESP,
        m_axi_DDR_buf_V_BID,
        m_axi_DDR_buf_V_BUSER,
        DDR_buf_V_offset,
        H_fmap_out,
        in_channels,
        out_channel_start,
        row_tile_start,
        switch_bank
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state19 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] out_buf_sc_0_V_address0;
output   out_buf_sc_0_V_ce0;
output   out_buf_sc_0_V_we0;
output  [15:0] out_buf_sc_0_V_d0;
output  [9:0] out_buf_sc_1_V_address0;
output   out_buf_sc_1_V_ce0;
output   out_buf_sc_1_V_we0;
output  [15:0] out_buf_sc_1_V_d0;
output  [9:0] out_buf_sc_2_V_address0;
output   out_buf_sc_2_V_ce0;
output   out_buf_sc_2_V_we0;
output  [15:0] out_buf_sc_2_V_d0;
output  [9:0] out_buf_sc_3_V_address0;
output   out_buf_sc_3_V_ce0;
output   out_buf_sc_3_V_we0;
output  [15:0] out_buf_sc_3_V_d0;
output  [9:0] out_buf_sc_4_V_address0;
output   out_buf_sc_4_V_ce0;
output   out_buf_sc_4_V_we0;
output  [15:0] out_buf_sc_4_V_d0;
output  [9:0] out_buf_sc_5_V_address0;
output   out_buf_sc_5_V_ce0;
output   out_buf_sc_5_V_we0;
output  [15:0] out_buf_sc_5_V_d0;
output  [9:0] out_buf_sc_6_V_address0;
output   out_buf_sc_6_V_ce0;
output   out_buf_sc_6_V_we0;
output  [15:0] out_buf_sc_6_V_d0;
output  [9:0] out_buf_sc_7_V_address0;
output   out_buf_sc_7_V_ce0;
output   out_buf_sc_7_V_we0;
output  [15:0] out_buf_sc_7_V_d0;
output  [9:0] out_buf_sc_8_V_address0;
output   out_buf_sc_8_V_ce0;
output   out_buf_sc_8_V_we0;
output  [15:0] out_buf_sc_8_V_d0;
output  [9:0] out_buf_sc_9_V_address0;
output   out_buf_sc_9_V_ce0;
output   out_buf_sc_9_V_we0;
output  [15:0] out_buf_sc_9_V_d0;
output  [9:0] out_buf_sc_10_V_address0;
output   out_buf_sc_10_V_ce0;
output   out_buf_sc_10_V_we0;
output  [15:0] out_buf_sc_10_V_d0;
output  [9:0] out_buf_sc_11_V_address0;
output   out_buf_sc_11_V_ce0;
output   out_buf_sc_11_V_we0;
output  [15:0] out_buf_sc_11_V_d0;
output  [9:0] out_buf_sc_12_V_address0;
output   out_buf_sc_12_V_ce0;
output   out_buf_sc_12_V_we0;
output  [15:0] out_buf_sc_12_V_d0;
output  [9:0] out_buf_sc_13_V_address0;
output   out_buf_sc_13_V_ce0;
output   out_buf_sc_13_V_we0;
output  [15:0] out_buf_sc_13_V_d0;
output  [9:0] out_buf_sc_14_V_address0;
output   out_buf_sc_14_V_ce0;
output   out_buf_sc_14_V_we0;
output  [15:0] out_buf_sc_14_V_d0;
output  [9:0] out_buf_sc_15_V_address0;
output   out_buf_sc_15_V_ce0;
output   out_buf_sc_15_V_we0;
output  [15:0] out_buf_sc_15_V_d0;
output  [9:0] out_buf_sc_16_V_address0;
output   out_buf_sc_16_V_ce0;
output   out_buf_sc_16_V_we0;
output  [15:0] out_buf_sc_16_V_d0;
output  [9:0] out_buf_sc_17_V_address0;
output   out_buf_sc_17_V_ce0;
output   out_buf_sc_17_V_we0;
output  [15:0] out_buf_sc_17_V_d0;
output  [9:0] out_buf_sc_18_V_address0;
output   out_buf_sc_18_V_ce0;
output   out_buf_sc_18_V_we0;
output  [15:0] out_buf_sc_18_V_d0;
output  [9:0] out_buf_sc_19_V_address0;
output   out_buf_sc_19_V_ce0;
output   out_buf_sc_19_V_we0;
output  [15:0] out_buf_sc_19_V_d0;
output  [9:0] out_buf_sc_20_V_address0;
output   out_buf_sc_20_V_ce0;
output   out_buf_sc_20_V_we0;
output  [15:0] out_buf_sc_20_V_d0;
output  [9:0] out_buf_sc_21_V_address0;
output   out_buf_sc_21_V_ce0;
output   out_buf_sc_21_V_we0;
output  [15:0] out_buf_sc_21_V_d0;
output  [9:0] out_buf_sc_22_V_address0;
output   out_buf_sc_22_V_ce0;
output   out_buf_sc_22_V_we0;
output  [15:0] out_buf_sc_22_V_d0;
output  [9:0] out_buf_sc_23_V_address0;
output   out_buf_sc_23_V_ce0;
output   out_buf_sc_23_V_we0;
output  [15:0] out_buf_sc_23_V_d0;
output  [9:0] out_buf_sc_24_V_address0;
output   out_buf_sc_24_V_ce0;
output   out_buf_sc_24_V_we0;
output  [15:0] out_buf_sc_24_V_d0;
output  [9:0] out_buf_sc_25_V_address0;
output   out_buf_sc_25_V_ce0;
output   out_buf_sc_25_V_we0;
output  [15:0] out_buf_sc_25_V_d0;
output  [9:0] out_buf_sc_26_V_address0;
output   out_buf_sc_26_V_ce0;
output   out_buf_sc_26_V_we0;
output  [15:0] out_buf_sc_26_V_d0;
output  [9:0] out_buf_sc_27_V_address0;
output   out_buf_sc_27_V_ce0;
output   out_buf_sc_27_V_we0;
output  [15:0] out_buf_sc_27_V_d0;
output  [9:0] out_buf_sc_28_V_address0;
output   out_buf_sc_28_V_ce0;
output   out_buf_sc_28_V_we0;
output  [15:0] out_buf_sc_28_V_d0;
output  [9:0] out_buf_sc_29_V_address0;
output   out_buf_sc_29_V_ce0;
output   out_buf_sc_29_V_we0;
output  [15:0] out_buf_sc_29_V_d0;
output  [9:0] out_buf_sc_30_V_address0;
output   out_buf_sc_30_V_ce0;
output   out_buf_sc_30_V_we0;
output  [15:0] out_buf_sc_30_V_d0;
output  [9:0] out_buf_sc_31_V_address0;
output   out_buf_sc_31_V_ce0;
output   out_buf_sc_31_V_we0;
output  [15:0] out_buf_sc_31_V_d0;
output   m_axi_DDR_buf_V_AWVALID;
input   m_axi_DDR_buf_V_AWREADY;
output  [31:0] m_axi_DDR_buf_V_AWADDR;
output  [0:0] m_axi_DDR_buf_V_AWID;
output  [31:0] m_axi_DDR_buf_V_AWLEN;
output  [2:0] m_axi_DDR_buf_V_AWSIZE;
output  [1:0] m_axi_DDR_buf_V_AWBURST;
output  [1:0] m_axi_DDR_buf_V_AWLOCK;
output  [3:0] m_axi_DDR_buf_V_AWCACHE;
output  [2:0] m_axi_DDR_buf_V_AWPROT;
output  [3:0] m_axi_DDR_buf_V_AWQOS;
output  [3:0] m_axi_DDR_buf_V_AWREGION;
output  [0:0] m_axi_DDR_buf_V_AWUSER;
output   m_axi_DDR_buf_V_WVALID;
input   m_axi_DDR_buf_V_WREADY;
output  [511:0] m_axi_DDR_buf_V_WDATA;
output  [63:0] m_axi_DDR_buf_V_WSTRB;
output   m_axi_DDR_buf_V_WLAST;
output  [0:0] m_axi_DDR_buf_V_WID;
output  [0:0] m_axi_DDR_buf_V_WUSER;
output   m_axi_DDR_buf_V_ARVALID;
input   m_axi_DDR_buf_V_ARREADY;
output  [31:0] m_axi_DDR_buf_V_ARADDR;
output  [0:0] m_axi_DDR_buf_V_ARID;
output  [31:0] m_axi_DDR_buf_V_ARLEN;
output  [2:0] m_axi_DDR_buf_V_ARSIZE;
output  [1:0] m_axi_DDR_buf_V_ARBURST;
output  [1:0] m_axi_DDR_buf_V_ARLOCK;
output  [3:0] m_axi_DDR_buf_V_ARCACHE;
output  [2:0] m_axi_DDR_buf_V_ARPROT;
output  [3:0] m_axi_DDR_buf_V_ARQOS;
output  [3:0] m_axi_DDR_buf_V_ARREGION;
output  [0:0] m_axi_DDR_buf_V_ARUSER;
input   m_axi_DDR_buf_V_RVALID;
output   m_axi_DDR_buf_V_RREADY;
input  [511:0] m_axi_DDR_buf_V_RDATA;
input   m_axi_DDR_buf_V_RLAST;
input  [0:0] m_axi_DDR_buf_V_RID;
input  [0:0] m_axi_DDR_buf_V_RUSER;
input  [1:0] m_axi_DDR_buf_V_RRESP;
input   m_axi_DDR_buf_V_BVALID;
output   m_axi_DDR_buf_V_BREADY;
input  [1:0] m_axi_DDR_buf_V_BRESP;
input  [0:0] m_axi_DDR_buf_V_BID;
input  [0:0] m_axi_DDR_buf_V_BUSER;
input  [25:0] DDR_buf_V_offset;
input  [7:0] H_fmap_out;
input  [11:0] in_channels;
input  [31:0] out_channel_start;
input  [31:0] row_tile_start;
input  [0:0] switch_bank;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_buf_sc_0_V_ce0;
reg out_buf_sc_0_V_we0;
reg out_buf_sc_1_V_ce0;
reg out_buf_sc_1_V_we0;
reg out_buf_sc_2_V_ce0;
reg out_buf_sc_2_V_we0;
reg out_buf_sc_3_V_ce0;
reg out_buf_sc_3_V_we0;
reg out_buf_sc_4_V_ce0;
reg out_buf_sc_4_V_we0;
reg out_buf_sc_5_V_ce0;
reg out_buf_sc_5_V_we0;
reg out_buf_sc_6_V_ce0;
reg out_buf_sc_6_V_we0;
reg out_buf_sc_7_V_ce0;
reg out_buf_sc_7_V_we0;
reg out_buf_sc_8_V_ce0;
reg out_buf_sc_8_V_we0;
reg out_buf_sc_9_V_ce0;
reg out_buf_sc_9_V_we0;
reg out_buf_sc_10_V_ce0;
reg out_buf_sc_10_V_we0;
reg out_buf_sc_11_V_ce0;
reg out_buf_sc_11_V_we0;
reg out_buf_sc_12_V_ce0;
reg out_buf_sc_12_V_we0;
reg out_buf_sc_13_V_ce0;
reg out_buf_sc_13_V_we0;
reg out_buf_sc_14_V_ce0;
reg out_buf_sc_14_V_we0;
reg out_buf_sc_15_V_ce0;
reg out_buf_sc_15_V_we0;
reg out_buf_sc_16_V_ce0;
reg out_buf_sc_16_V_we0;
reg out_buf_sc_17_V_ce0;
reg out_buf_sc_17_V_we0;
reg out_buf_sc_18_V_ce0;
reg out_buf_sc_18_V_we0;
reg out_buf_sc_19_V_ce0;
reg out_buf_sc_19_V_we0;
reg out_buf_sc_20_V_ce0;
reg out_buf_sc_20_V_we0;
reg out_buf_sc_21_V_ce0;
reg out_buf_sc_21_V_we0;
reg out_buf_sc_22_V_ce0;
reg out_buf_sc_22_V_we0;
reg out_buf_sc_23_V_ce0;
reg out_buf_sc_23_V_we0;
reg out_buf_sc_24_V_ce0;
reg out_buf_sc_24_V_we0;
reg out_buf_sc_25_V_ce0;
reg out_buf_sc_25_V_we0;
reg out_buf_sc_26_V_ce0;
reg out_buf_sc_26_V_we0;
reg out_buf_sc_27_V_ce0;
reg out_buf_sc_27_V_we0;
reg out_buf_sc_28_V_ce0;
reg out_buf_sc_28_V_we0;
reg out_buf_sc_29_V_ce0;
reg out_buf_sc_29_V_we0;
reg out_buf_sc_30_V_ce0;
reg out_buf_sc_30_V_we0;
reg out_buf_sc_31_V_ce0;
reg out_buf_sc_31_V_we0;
reg m_axi_DDR_buf_V_ARVALID;
reg m_axi_DDR_buf_V_RREADY;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    DDR_buf_V_blk_n_AR;
reg    ap_enable_reg_pp0_iter5;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln258_reg_1417;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter4_reg;
reg    DDR_buf_V_blk_n_R;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter11_reg;
reg   [10:0] indvar_flatten_reg_752;
reg   [3:0] row_0_reg_763;
reg   [6:0] col_0_reg_774;
wire  signed [27:0] ddr_channel_ptr_fu_833_p3;
reg  signed [27:0] ddr_channel_ptr_reg_1374;
wire   [28:0] select_ln254_fu_885_p3;
reg  signed [28:0] select_ln254_reg_1382;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [35:0] grp_fu_896_p2;
reg   [35:0] mul_ln261_reg_1402;
wire   [10:0] bound_fu_902_p3;
reg   [10:0] bound_reg_1407;
wire   [43:0] zext_ln258_1_fu_910_p1;
reg   [43:0] zext_ln258_1_reg_1412;
wire   [0:0] icmp_ln258_fu_923_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state10_pp0_stage0_iter5;
reg    ap_block_state10_io;
wire    ap_block_state11_pp0_stage0_iter6;
wire    ap_block_state12_pp0_stage0_iter7;
wire    ap_block_state13_pp0_stage0_iter8;
wire    ap_block_state14_pp0_stage0_iter9;
wire    ap_block_state15_pp0_stage0_iter10;
wire    ap_block_state16_pp0_stage0_iter11;
reg    ap_block_state17_pp0_stage0_iter12;
wire    ap_block_state18_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter1_reg;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter2_reg;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter3_reg;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter5_reg;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter6_reg;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter7_reg;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter8_reg;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter9_reg;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter10_reg;
reg   [0:0] icmp_ln258_reg_1417_pp0_iter12_reg;
wire   [10:0] add_ln258_1_fu_928_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [6:0] select_ln258_fu_940_p3;
reg   [6:0] select_ln258_reg_1426;
reg   [6:0] select_ln258_reg_1426_pp0_iter1_reg;
reg   [6:0] select_ln258_reg_1426_pp0_iter2_reg;
reg   [6:0] select_ln258_reg_1426_pp0_iter3_reg;
wire   [3:0] select_ln258_1_fu_948_p3;
reg   [3:0] select_ln258_1_reg_1432;
wire   [6:0] col_fu_956_p2;
wire   [35:0] add_ln261_fu_974_p2;
reg  signed [35:0] add_ln261_reg_1444;
wire   [10:0] grp_fu_1366_p3;
reg   [10:0] add_ln339_reg_1449;
reg    ap_enable_reg_pp0_iter1;
reg   [10:0] add_ln339_reg_1449_pp0_iter2_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter3_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter4_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter5_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter6_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter7_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter8_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter9_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter10_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter11_reg;
reg   [10:0] add_ln339_reg_1449_pp0_iter12_reg;
wire   [43:0] grp_fu_988_p2;
reg   [43:0] mul_ln261_1_reg_1459;
wire   [43:0] add_ln261_2_fu_1002_p2;
reg   [43:0] add_ln261_2_reg_1464;
wire   [15:0] trunc_ln647_fu_1017_p1;
reg   [15:0] trunc_ln647_reg_1475;
reg   [15:0] p_Result_2_1_reg_1480;
reg   [15:0] p_Result_2_2_reg_1485;
reg   [15:0] p_Result_2_3_reg_1490;
reg   [15:0] p_Result_2_4_reg_1495;
reg   [15:0] p_Result_2_5_reg_1500;
reg   [15:0] p_Result_2_6_reg_1505;
reg   [15:0] p_Result_2_7_reg_1510;
reg   [15:0] p_Result_2_8_reg_1515;
reg   [15:0] p_Result_2_9_reg_1520;
reg   [15:0] p_Result_2_s_reg_1525;
reg   [15:0] p_Result_2_10_reg_1530;
reg   [15:0] p_Result_2_11_reg_1535;
reg   [15:0] p_Result_2_12_reg_1540;
reg   [15:0] p_Result_2_13_reg_1545;
reg   [15:0] p_Result_2_14_reg_1550;
reg   [15:0] p_Result_2_15_reg_1555;
reg   [15:0] p_Result_2_16_reg_1560;
reg   [15:0] p_Result_2_17_reg_1565;
reg   [15:0] p_Result_2_18_reg_1570;
reg   [15:0] p_Result_2_19_reg_1575;
reg   [15:0] p_Result_2_20_reg_1580;
reg   [15:0] p_Result_2_21_reg_1585;
reg   [15:0] p_Result_2_22_reg_1590;
reg   [15:0] p_Result_2_23_reg_1595;
reg   [15:0] p_Result_2_24_reg_1600;
reg   [15:0] p_Result_2_25_reg_1605;
reg   [15:0] p_Result_2_26_reg_1610;
reg   [15:0] p_Result_2_27_reg_1615;
reg   [15:0] p_Result_2_28_reg_1620;
reg   [15:0] p_Result_2_29_reg_1625;
reg   [15:0] p_Result_2_30_reg_1630;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter13;
reg   [3:0] ap_phi_mux_row_0_phi_fu_767_p4;
wire  signed [63:0] sext_ln339_fu_1331_p1;
wire  signed [63:0] sext_ln261_3_fu_1007_p1;
wire   [31:0] sub_ln253_fu_793_p2;
wire   [26:0] tmp_s_fu_799_p4;
wire   [27:0] zext_ln253_fu_809_p1;
wire   [26:0] tmp_1_fu_819_p4;
wire   [0:0] tmp_4_fu_785_p3;
wire   [27:0] sub_ln253_1_fu_813_p2;
wire   [27:0] zext_ln253_1_fu_829_p1;
wire   [5:0] trunc_ln255_4_fu_844_p4;
wire   [27:0] zext_ln255_fu_854_p1;
wire   [0:0] icmp_ln255_fu_858_p2;
wire   [27:0] sub_ln255_fu_863_p2;
wire   [27:0] ddr_channel_ptr_1_fu_868_p3;
wire  signed [28:0] sext_ln255_fu_875_p1;
wire   [28:0] ddr_channel_ptr_2_fu_879_p2;
wire  signed [28:0] sext_ln253_fu_841_p1;
wire   [8:0] grp_fu_896_p1;
wire   [7:0] zext_ln259_fu_914_p1;
wire   [0:0] icmp_ln259_fu_918_p2;
wire   [3:0] row_fu_934_p2;
wire   [31:0] zext_ln258_fu_962_p1;
wire   [31:0] add_ln258_fu_965_p2;
wire  signed [35:0] sext_ln261_1_fu_970_p1;
wire   [8:0] grp_fu_988_p0;
wire   [43:0] zext_ln339_1_fu_994_p1;
wire   [43:0] add_ln261_1_fu_997_p2;
wire   [7:0] grp_fu_1366_p0;
wire   [3:0] grp_fu_1366_p1;
wire   [6:0] grp_fu_1366_p2;
reg    grp_fu_988_ce;
wire    ap_CS_fsm_state19;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [10:0] grp_fu_1366_p10;
wire   [10:0] grp_fu_1366_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
end

FracNet_mul_29s_9lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 36 ))
FracNet_mul_29s_9lbW_U777(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln254_reg_1382),
    .din1(grp_fu_896_p1),
    .ce(1'b1),
    .dout(grp_fu_896_p2)
);

FracNet_mul_9ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 44 ))
FracNet_mul_9ns_3mb6_U778(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_988_p0),
    .din1(add_ln261_reg_1444),
    .ce(grp_fu_988_ce),
    .dout(grp_fu_988_p2)
);

FracNet_mac_muladncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
FracNet_mac_muladncg_U779(
    .din0(grp_fu_1366_p0),
    .din1(grp_fu_1366_p1),
    .din2(grp_fu_1366_p2),
    .dout(grp_fu_1366_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_fu_923_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_0_reg_774 <= col_fu_956_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        col_0_reg_774 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_fu_923_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_752 <= add_ln258_1_fu_928_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten_reg_752 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_0_reg_763 <= select_ln258_1_reg_1432;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        row_0_reg_763 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter3_reg == 1'd0))) begin
        add_ln261_2_reg_1464 <= add_ln261_2_fu_1002_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln261_reg_1444 <= add_ln261_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln339_reg_1449 <= grp_fu_1366_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln339_reg_1449_pp0_iter10_reg <= add_ln339_reg_1449_pp0_iter9_reg;
        add_ln339_reg_1449_pp0_iter11_reg <= add_ln339_reg_1449_pp0_iter10_reg;
        add_ln339_reg_1449_pp0_iter12_reg <= add_ln339_reg_1449_pp0_iter11_reg;
        add_ln339_reg_1449_pp0_iter2_reg <= add_ln339_reg_1449;
        add_ln339_reg_1449_pp0_iter3_reg <= add_ln339_reg_1449_pp0_iter2_reg;
        add_ln339_reg_1449_pp0_iter4_reg <= add_ln339_reg_1449_pp0_iter3_reg;
        add_ln339_reg_1449_pp0_iter5_reg <= add_ln339_reg_1449_pp0_iter4_reg;
        add_ln339_reg_1449_pp0_iter6_reg <= add_ln339_reg_1449_pp0_iter5_reg;
        add_ln339_reg_1449_pp0_iter7_reg <= add_ln339_reg_1449_pp0_iter6_reg;
        add_ln339_reg_1449_pp0_iter8_reg <= add_ln339_reg_1449_pp0_iter7_reg;
        add_ln339_reg_1449_pp0_iter9_reg <= add_ln339_reg_1449_pp0_iter8_reg;
        icmp_ln258_reg_1417_pp0_iter10_reg <= icmp_ln258_reg_1417_pp0_iter9_reg;
        icmp_ln258_reg_1417_pp0_iter11_reg <= icmp_ln258_reg_1417_pp0_iter10_reg;
        icmp_ln258_reg_1417_pp0_iter12_reg <= icmp_ln258_reg_1417_pp0_iter11_reg;
        icmp_ln258_reg_1417_pp0_iter2_reg <= icmp_ln258_reg_1417_pp0_iter1_reg;
        icmp_ln258_reg_1417_pp0_iter3_reg <= icmp_ln258_reg_1417_pp0_iter2_reg;
        icmp_ln258_reg_1417_pp0_iter4_reg <= icmp_ln258_reg_1417_pp0_iter3_reg;
        icmp_ln258_reg_1417_pp0_iter5_reg <= icmp_ln258_reg_1417_pp0_iter4_reg;
        icmp_ln258_reg_1417_pp0_iter6_reg <= icmp_ln258_reg_1417_pp0_iter5_reg;
        icmp_ln258_reg_1417_pp0_iter7_reg <= icmp_ln258_reg_1417_pp0_iter6_reg;
        icmp_ln258_reg_1417_pp0_iter8_reg <= icmp_ln258_reg_1417_pp0_iter7_reg;
        icmp_ln258_reg_1417_pp0_iter9_reg <= icmp_ln258_reg_1417_pp0_iter8_reg;
        select_ln258_reg_1426_pp0_iter2_reg <= select_ln258_reg_1426_pp0_iter1_reg;
        select_ln258_reg_1426_pp0_iter3_reg <= select_ln258_reg_1426_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bound_reg_1407[10 : 3] <= bound_fu_902_p3[10 : 3];
        mul_ln261_reg_1402 <= grp_fu_896_p2;
        zext_ln258_1_reg_1412[25 : 0] <= zext_ln258_1_fu_910_p1[25 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ddr_channel_ptr_reg_1374 <= ddr_channel_ptr_fu_833_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln258_reg_1417 <= icmp_ln258_fu_923_p2;
        icmp_ln258_reg_1417_pp0_iter1_reg <= icmp_ln258_reg_1417;
        select_ln258_reg_1426_pp0_iter1_reg <= select_ln258_reg_1426;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter2_reg == 1'd0))) begin
        mul_ln261_1_reg_1459 <= grp_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter11_reg == 1'd0))) begin
        p_Result_2_10_reg_1530 <= {{m_axi_DDR_buf_V_RDATA[191:176]}};
        p_Result_2_11_reg_1535 <= {{m_axi_DDR_buf_V_RDATA[207:192]}};
        p_Result_2_12_reg_1540 <= {{m_axi_DDR_buf_V_RDATA[223:208]}};
        p_Result_2_13_reg_1545 <= {{m_axi_DDR_buf_V_RDATA[239:224]}};
        p_Result_2_14_reg_1550 <= {{m_axi_DDR_buf_V_RDATA[255:240]}};
        p_Result_2_15_reg_1555 <= {{m_axi_DDR_buf_V_RDATA[271:256]}};
        p_Result_2_16_reg_1560 <= {{m_axi_DDR_buf_V_RDATA[287:272]}};
        p_Result_2_17_reg_1565 <= {{m_axi_DDR_buf_V_RDATA[303:288]}};
        p_Result_2_18_reg_1570 <= {{m_axi_DDR_buf_V_RDATA[319:304]}};
        p_Result_2_19_reg_1575 <= {{m_axi_DDR_buf_V_RDATA[335:320]}};
        p_Result_2_1_reg_1480 <= {{m_axi_DDR_buf_V_RDATA[31:16]}};
        p_Result_2_20_reg_1580 <= {{m_axi_DDR_buf_V_RDATA[351:336]}};
        p_Result_2_21_reg_1585 <= {{m_axi_DDR_buf_V_RDATA[367:352]}};
        p_Result_2_22_reg_1590 <= {{m_axi_DDR_buf_V_RDATA[383:368]}};
        p_Result_2_23_reg_1595 <= {{m_axi_DDR_buf_V_RDATA[399:384]}};
        p_Result_2_24_reg_1600 <= {{m_axi_DDR_buf_V_RDATA[415:400]}};
        p_Result_2_25_reg_1605 <= {{m_axi_DDR_buf_V_RDATA[431:416]}};
        p_Result_2_26_reg_1610 <= {{m_axi_DDR_buf_V_RDATA[447:432]}};
        p_Result_2_27_reg_1615 <= {{m_axi_DDR_buf_V_RDATA[463:448]}};
        p_Result_2_28_reg_1620 <= {{m_axi_DDR_buf_V_RDATA[479:464]}};
        p_Result_2_29_reg_1625 <= {{m_axi_DDR_buf_V_RDATA[495:480]}};
        p_Result_2_2_reg_1485 <= {{m_axi_DDR_buf_V_RDATA[47:32]}};
        p_Result_2_30_reg_1630 <= {{m_axi_DDR_buf_V_RDATA[511:496]}};
        p_Result_2_3_reg_1490 <= {{m_axi_DDR_buf_V_RDATA[63:48]}};
        p_Result_2_4_reg_1495 <= {{m_axi_DDR_buf_V_RDATA[79:64]}};
        p_Result_2_5_reg_1500 <= {{m_axi_DDR_buf_V_RDATA[95:80]}};
        p_Result_2_6_reg_1505 <= {{m_axi_DDR_buf_V_RDATA[111:96]}};
        p_Result_2_7_reg_1510 <= {{m_axi_DDR_buf_V_RDATA[127:112]}};
        p_Result_2_8_reg_1515 <= {{m_axi_DDR_buf_V_RDATA[143:128]}};
        p_Result_2_9_reg_1520 <= {{m_axi_DDR_buf_V_RDATA[159:144]}};
        p_Result_2_s_reg_1525 <= {{m_axi_DDR_buf_V_RDATA[175:160]}};
        trunc_ln647_reg_1475 <= trunc_ln647_fu_1017_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        select_ln254_reg_1382 <= select_ln254_fu_885_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_fu_923_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln258_1_reg_1432 <= select_ln258_1_fu_948_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_fu_923_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln258_reg_1426 <= select_ln258_fu_940_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln258_reg_1417_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        DDR_buf_V_blk_n_AR = m_axi_DDR_buf_V_ARREADY;
    end else begin
        DDR_buf_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln258_reg_1417_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        DDR_buf_V_blk_n_R = m_axi_DDR_buf_V_RVALID;
    end else begin
        DDR_buf_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((icmp_ln258_fu_923_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln258_reg_1417 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_row_0_phi_fu_767_p4 = select_ln258_1_reg_1432;
    end else begin
        ap_phi_mux_row_0_phi_fu_767_p4 = row_0_reg_763;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_988_ce = 1'b1;
    end else begin
        grp_fu_988_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        m_axi_DDR_buf_V_ARVALID = 1'b1;
    end else begin
        m_axi_DDR_buf_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        m_axi_DDR_buf_V_RREADY = 1'b1;
    end else begin
        m_axi_DDR_buf_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_0_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_0_V_we0 = 1'b1;
    end else begin
        out_buf_sc_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_10_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_10_V_we0 = 1'b1;
    end else begin
        out_buf_sc_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_11_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_11_V_we0 = 1'b1;
    end else begin
        out_buf_sc_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_12_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_12_V_we0 = 1'b1;
    end else begin
        out_buf_sc_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_13_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_13_V_we0 = 1'b1;
    end else begin
        out_buf_sc_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_14_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_14_V_we0 = 1'b1;
    end else begin
        out_buf_sc_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_15_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_15_V_we0 = 1'b1;
    end else begin
        out_buf_sc_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_16_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_16_V_we0 = 1'b1;
    end else begin
        out_buf_sc_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_17_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_17_V_we0 = 1'b1;
    end else begin
        out_buf_sc_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_18_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_18_V_we0 = 1'b1;
    end else begin
        out_buf_sc_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_19_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_19_V_we0 = 1'b1;
    end else begin
        out_buf_sc_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_1_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_1_V_we0 = 1'b1;
    end else begin
        out_buf_sc_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_20_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_20_V_we0 = 1'b1;
    end else begin
        out_buf_sc_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_21_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_21_V_we0 = 1'b1;
    end else begin
        out_buf_sc_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_22_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_22_V_we0 = 1'b1;
    end else begin
        out_buf_sc_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_23_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_23_V_we0 = 1'b1;
    end else begin
        out_buf_sc_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_24_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_24_V_we0 = 1'b1;
    end else begin
        out_buf_sc_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_25_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_25_V_we0 = 1'b1;
    end else begin
        out_buf_sc_25_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_26_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_26_V_we0 = 1'b1;
    end else begin
        out_buf_sc_26_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_27_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_27_V_we0 = 1'b1;
    end else begin
        out_buf_sc_27_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_28_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_28_V_we0 = 1'b1;
    end else begin
        out_buf_sc_28_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_29_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_29_V_we0 = 1'b1;
    end else begin
        out_buf_sc_29_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_2_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_2_V_we0 = 1'b1;
    end else begin
        out_buf_sc_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_30_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_30_V_we0 = 1'b1;
    end else begin
        out_buf_sc_30_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_31_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_31_V_we0 = 1'b1;
    end else begin
        out_buf_sc_31_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_3_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_3_V_we0 = 1'b1;
    end else begin
        out_buf_sc_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_4_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_4_V_we0 = 1'b1;
    end else begin
        out_buf_sc_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_5_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_5_V_we0 = 1'b1;
    end else begin
        out_buf_sc_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_6_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_6_V_we0 = 1'b1;
    end else begin
        out_buf_sc_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_7_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_7_V_we0 = 1'b1;
    end else begin
        out_buf_sc_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_8_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_8_V_we0 = 1'b1;
    end else begin
        out_buf_sc_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_9_V_ce0 = 1'b1;
    end else begin
        out_buf_sc_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln258_reg_1417_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        out_buf_sc_9_V_we0 = 1'b1;
    end else begin
        out_buf_sc_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln258_fu_923_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln258_fu_923_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln258_1_fu_928_p2 = (indvar_flatten_reg_752 + 11'd1);

assign add_ln258_fu_965_p2 = (zext_ln258_fu_962_p1 + row_tile_start);

assign add_ln261_1_fu_997_p2 = (zext_ln339_1_fu_994_p1 + mul_ln261_1_reg_1459);

assign add_ln261_2_fu_1002_p2 = (add_ln261_1_fu_997_p2 + zext_ln258_1_reg_1412);

assign add_ln261_fu_974_p2 = ($signed(sext_ln261_1_fu_970_p1) + $signed(mul_ln261_reg_1402));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln258_reg_1417_pp0_iter11_reg == 1'd0) & (m_axi_DDR_buf_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state10_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln258_reg_1417_pp0_iter11_reg == 1'd0) & (m_axi_DDR_buf_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state10_io)));
end

always @ (*) begin
    ap_block_state10_io = ((icmp_ln258_reg_1417_pp0_iter4_reg == 1'd0) & (m_axi_DDR_buf_V_ARREADY == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage0_iter12 = ((icmp_ln258_reg_1417_pp0_iter11_reg == 1'd0) & (m_axi_DDR_buf_V_RVALID == 1'b0));
end

assign ap_block_state18_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bound_fu_902_p3 = {{H_fmap_out}, {3'd0}};

assign col_fu_956_p2 = (7'd1 + select_ln258_fu_940_p3);

assign ddr_channel_ptr_1_fu_868_p3 = ((icmp_ln255_fu_858_p2[0:0] === 1'b1) ? ddr_channel_ptr_reg_1374 : sub_ln255_fu_863_p2);

assign ddr_channel_ptr_2_fu_879_p2 = ($signed(sext_ln255_fu_875_p1) + $signed(29'd32));

assign ddr_channel_ptr_fu_833_p3 = ((tmp_4_fu_785_p3[0:0] === 1'b1) ? sub_ln253_1_fu_813_p2 : zext_ln253_1_fu_829_p1);

assign grp_fu_1366_p0 = 11'd113;

assign grp_fu_1366_p1 = grp_fu_1366_p10;

assign grp_fu_1366_p10 = select_ln258_1_reg_1432;

assign grp_fu_1366_p2 = grp_fu_1366_p20;

assign grp_fu_1366_p20 = select_ln258_reg_1426;

assign grp_fu_896_p1 = 36'd226;

assign grp_fu_988_p0 = 44'd225;

assign icmp_ln255_fu_858_p2 = (($signed(ddr_channel_ptr_reg_1374) < $signed(zext_ln255_fu_854_p1)) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_923_p2 = ((indvar_flatten_reg_752 == bound_reg_1407) ? 1'b1 : 1'b0);

assign icmp_ln259_fu_918_p2 = (($signed(zext_ln259_fu_914_p1) < $signed(H_fmap_out)) ? 1'b1 : 1'b0);

assign m_axi_DDR_buf_V_ARADDR = sext_ln261_3_fu_1007_p1;

assign m_axi_DDR_buf_V_ARBURST = 2'd0;

assign m_axi_DDR_buf_V_ARCACHE = 4'd0;

assign m_axi_DDR_buf_V_ARID = 1'd0;

assign m_axi_DDR_buf_V_ARLEN = 32'd1;

assign m_axi_DDR_buf_V_ARLOCK = 2'd0;

assign m_axi_DDR_buf_V_ARPROT = 3'd0;

assign m_axi_DDR_buf_V_ARQOS = 4'd0;

assign m_axi_DDR_buf_V_ARREGION = 4'd0;

assign m_axi_DDR_buf_V_ARSIZE = 3'd0;

assign m_axi_DDR_buf_V_ARUSER = 1'd0;

assign m_axi_DDR_buf_V_AWADDR = 32'd0;

assign m_axi_DDR_buf_V_AWBURST = 2'd0;

assign m_axi_DDR_buf_V_AWCACHE = 4'd0;

assign m_axi_DDR_buf_V_AWID = 1'd0;

assign m_axi_DDR_buf_V_AWLEN = 32'd0;

assign m_axi_DDR_buf_V_AWLOCK = 2'd0;

assign m_axi_DDR_buf_V_AWPROT = 3'd0;

assign m_axi_DDR_buf_V_AWQOS = 4'd0;

assign m_axi_DDR_buf_V_AWREGION = 4'd0;

assign m_axi_DDR_buf_V_AWSIZE = 3'd0;

assign m_axi_DDR_buf_V_AWUSER = 1'd0;

assign m_axi_DDR_buf_V_AWVALID = 1'b0;

assign m_axi_DDR_buf_V_BREADY = 1'b0;

assign m_axi_DDR_buf_V_WDATA = 512'd0;

assign m_axi_DDR_buf_V_WID = 1'd0;

assign m_axi_DDR_buf_V_WLAST = 1'b0;

assign m_axi_DDR_buf_V_WSTRB = 64'd0;

assign m_axi_DDR_buf_V_WUSER = 1'd0;

assign m_axi_DDR_buf_V_WVALID = 1'b0;

assign out_buf_sc_0_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_0_V_d0 = trunc_ln647_reg_1475;

assign out_buf_sc_10_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_10_V_d0 = p_Result_2_s_reg_1525;

assign out_buf_sc_11_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_11_V_d0 = p_Result_2_10_reg_1530;

assign out_buf_sc_12_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_12_V_d0 = p_Result_2_11_reg_1535;

assign out_buf_sc_13_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_13_V_d0 = p_Result_2_12_reg_1540;

assign out_buf_sc_14_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_14_V_d0 = p_Result_2_13_reg_1545;

assign out_buf_sc_15_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_15_V_d0 = p_Result_2_14_reg_1550;

assign out_buf_sc_16_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_16_V_d0 = p_Result_2_15_reg_1555;

assign out_buf_sc_17_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_17_V_d0 = p_Result_2_16_reg_1560;

assign out_buf_sc_18_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_18_V_d0 = p_Result_2_17_reg_1565;

assign out_buf_sc_19_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_19_V_d0 = p_Result_2_18_reg_1570;

assign out_buf_sc_1_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_1_V_d0 = p_Result_2_1_reg_1480;

assign out_buf_sc_20_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_20_V_d0 = p_Result_2_19_reg_1575;

assign out_buf_sc_21_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_21_V_d0 = p_Result_2_20_reg_1580;

assign out_buf_sc_22_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_22_V_d0 = p_Result_2_21_reg_1585;

assign out_buf_sc_23_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_23_V_d0 = p_Result_2_22_reg_1590;

assign out_buf_sc_24_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_24_V_d0 = p_Result_2_23_reg_1595;

assign out_buf_sc_25_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_25_V_d0 = p_Result_2_24_reg_1600;

assign out_buf_sc_26_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_26_V_d0 = p_Result_2_25_reg_1605;

assign out_buf_sc_27_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_27_V_d0 = p_Result_2_26_reg_1610;

assign out_buf_sc_28_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_28_V_d0 = p_Result_2_27_reg_1615;

assign out_buf_sc_29_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_29_V_d0 = p_Result_2_28_reg_1620;

assign out_buf_sc_2_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_2_V_d0 = p_Result_2_2_reg_1485;

assign out_buf_sc_30_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_30_V_d0 = p_Result_2_29_reg_1625;

assign out_buf_sc_31_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_31_V_d0 = p_Result_2_30_reg_1630;

assign out_buf_sc_3_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_3_V_d0 = p_Result_2_3_reg_1490;

assign out_buf_sc_4_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_4_V_d0 = p_Result_2_4_reg_1495;

assign out_buf_sc_5_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_5_V_d0 = p_Result_2_5_reg_1500;

assign out_buf_sc_6_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_6_V_d0 = p_Result_2_6_reg_1505;

assign out_buf_sc_7_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_7_V_d0 = p_Result_2_7_reg_1510;

assign out_buf_sc_8_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_8_V_d0 = p_Result_2_8_reg_1515;

assign out_buf_sc_9_V_address0 = sext_ln339_fu_1331_p1;

assign out_buf_sc_9_V_d0 = p_Result_2_9_reg_1520;

assign row_fu_934_p2 = (4'd1 + ap_phi_mux_row_0_phi_fu_767_p4);

assign select_ln254_fu_885_p3 = ((switch_bank[0:0] === 1'b1) ? ddr_channel_ptr_2_fu_879_p2 : sext_ln253_fu_841_p1);

assign select_ln258_1_fu_948_p3 = ((icmp_ln259_fu_918_p2[0:0] === 1'b1) ? ap_phi_mux_row_0_phi_fu_767_p4 : row_fu_934_p2);

assign select_ln258_fu_940_p3 = ((icmp_ln259_fu_918_p2[0:0] === 1'b1) ? col_0_reg_774 : 7'd0);

assign sext_ln253_fu_841_p1 = ddr_channel_ptr_reg_1374;

assign sext_ln255_fu_875_p1 = $signed(ddr_channel_ptr_1_fu_868_p3);

assign sext_ln261_1_fu_970_p1 = $signed(add_ln258_fu_965_p2);

assign sext_ln261_3_fu_1007_p1 = $signed(add_ln261_2_reg_1464);

assign sext_ln339_fu_1331_p1 = $signed(add_ln339_reg_1449_pp0_iter12_reg);

assign sub_ln253_1_fu_813_p2 = (28'd0 - zext_ln253_fu_809_p1);

assign sub_ln253_fu_793_p2 = (32'd0 - out_channel_start);

assign sub_ln255_fu_863_p2 = ($signed(ddr_channel_ptr_reg_1374) - $signed(zext_ln255_fu_854_p1));

assign tmp_1_fu_819_p4 = {{out_channel_start[31:5]}};

assign tmp_4_fu_785_p3 = out_channel_start[32'd31];

assign tmp_s_fu_799_p4 = {{sub_ln253_fu_793_p2[31:5]}};

assign trunc_ln255_4_fu_844_p4 = {{in_channels[10:5]}};

assign trunc_ln647_fu_1017_p1 = m_axi_DDR_buf_V_RDATA[15:0];

assign zext_ln253_1_fu_829_p1 = tmp_1_fu_819_p4;

assign zext_ln253_fu_809_p1 = tmp_s_fu_799_p4;

assign zext_ln255_fu_854_p1 = trunc_ln255_4_fu_844_p4;

assign zext_ln258_1_fu_910_p1 = DDR_buf_V_offset;

assign zext_ln258_fu_962_p1 = select_ln258_1_reg_1432;

assign zext_ln259_fu_914_p1 = col_0_reg_774;

assign zext_ln339_1_fu_994_p1 = select_ln258_reg_1426_pp0_iter3_reg;

always @ (posedge ap_clk) begin
    bound_reg_1407[2:0] <= 3'b000;
    zext_ln258_1_reg_1412[43:26] <= 18'b000000000000000000;
end

endmodule //load_shortcut
