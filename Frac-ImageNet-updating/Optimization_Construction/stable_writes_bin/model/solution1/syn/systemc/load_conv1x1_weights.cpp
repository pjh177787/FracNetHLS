// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "load_conv1x1_weights.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic load_conv1x1_weights::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic load_conv1x1_weights::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state1 = "1";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state2 = "10";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state3 = "100";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state4 = "1000";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state5 = "10000";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state6 = "100000";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_pp0_stage0 = "1000000000";
const sc_lv<11> load_conv1x1_weights::ap_ST_fsm_state13 = "10000000000";
const bool load_conv1x1_weights::ap_const_boolean_1 = true;
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> load_conv1x1_weights::ap_const_lv1_0 = "0";
const sc_lv<3> load_conv1x1_weights::ap_const_lv3_0 = "000";
const sc_lv<2> load_conv1x1_weights::ap_const_lv2_0 = "00";
const sc_lv<4> load_conv1x1_weights::ap_const_lv4_0 = "0000";
const sc_lv<512> load_conv1x1_weights::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> load_conv1x1_weights::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_2 = "10";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_9 = "1001";
const bool load_conv1x1_weights::ap_const_boolean_0 = false;
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_1 = "1";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_8 = "1000";
const sc_lv<1> load_conv1x1_weights::ap_const_lv1_1 = "1";
const sc_lv<2> load_conv1x1_weights::ap_const_lv2_2 = "10";
const sc_lv<2> load_conv1x1_weights::ap_const_lv2_1 = "1";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_20 = "100000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_3F = "111111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_40 = "1000000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_5F = "1011111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_60 = "1100000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_7F = "1111111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_80 = "10000000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_9F = "10011111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_A0 = "10100000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_BF = "10111111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_C0 = "11000000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_DF = "11011111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_E0 = "11100000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_FF = "11111111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_100 = "100000000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_11F = "100011111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_120 = "100100000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_13F = "100111111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_140 = "101000000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_15F = "101011111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_160 = "101100000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_17F = "101111111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_180 = "110000000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_19F = "110011111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_1A0 = "110100000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_1BF = "110111111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_1C0 = "111000000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_1DF = "111011111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_1E0 = "111100000";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_1FF = "111111111";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_0 = "00000";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_1 = "1";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_2 = "10";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_3 = "11";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_4 = "100";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_5 = "101";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_6 = "110";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_7 = "111";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_8 = "1000";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_9 = "1001";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_A = "1010";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_B = "1011";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_C = "1100";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_D = "1101";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_E = "1110";
const sc_lv<5> load_conv1x1_weights::ap_const_lv5_F = "1111";
const sc_lv<32> load_conv1x1_weights::ap_const_lv32_A = "1010";

load_conv1x1_weights::load_conv1x1_weights(sc_module_name name) : sc_module(name), mVcdFile(0) {
    FracNet_mac_muladcud_U1341 = new FracNet_mac_muladcud<1,1,6,7,6,11>("FracNet_mac_muladcud_U1341");
    FracNet_mac_muladcud_U1341->din0(grp_fu_1447_p0);
    FracNet_mac_muladcud_U1341->din1(grp_fu_1447_p1);
    FracNet_mac_muladcud_U1341->din2(grp_fu_1447_p2);
    FracNet_mac_muladcud_U1341->dout(grp_fu_1447_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln232_1_fu_652_p2);
    sensitive << ( zext_ln232_2_fu_648_p1 );
    sensitive << ( zext_ln232_1_fu_644_p1 );

    SC_METHOD(thread_add_ln232_fu_638_p2);
    sensitive << ( tmp38_cast_fu_626_p1 );
    sensitive << ( zext_ln232_fu_634_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_conv_weight_1x1_all_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln230_reg_1471 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_conv_weight_1x1_all_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln230_reg_1471 );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter1);
    sensitive << ( m_axi_conv_weight_1x1_all_V_RVALID );
    sensitive << ( icmp_ln230_reg_1471 );

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state10);
    sensitive << ( icmp_ln230_fu_668_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( weight1x1_tile_buffe_61_reg_560 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( weight1x1_tile_buffe_58_reg_524 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( weight1x1_tile_buffe_32_reg_212 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_11);
    sensitive << ( weight1x1_tile_buffe_33_reg_224 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_12);
    sensitive << ( weight1x1_tile_buffe_35_reg_248 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_13);
    sensitive << ( weight1x1_tile_buffe_36_reg_260 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_14);
    sensitive << ( weight1x1_tile_buffe_38_reg_284 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_15);
    sensitive << ( weight1x1_tile_buffe_39_reg_296 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_16);
    sensitive << ( weight1x1_tile_buffe_41_reg_320 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_17);
    sensitive << ( weight1x1_tile_buffe_42_reg_332 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_18);
    sensitive << ( weight1x1_tile_buffe_44_reg_356 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_19);
    sensitive << ( weight1x1_tile_buffe_45_reg_368 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( weight1x1_tile_buffe_55_reg_488 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_20);
    sensitive << ( weight1x1_tile_buffe_47_reg_392 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_21);
    sensitive << ( weight1x1_tile_buffe_48_reg_404 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_22);
    sensitive << ( weight1x1_tile_buffe_50_reg_428 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_23);
    sensitive << ( weight1x1_tile_buffe_51_reg_440 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_24);
    sensitive << ( weight1x1_tile_buffe_53_reg_464 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_25);
    sensitive << ( weight1x1_tile_buffe_54_reg_476 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_26);
    sensitive << ( weight1x1_tile_buffe_56_reg_500 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_27);
    sensitive << ( weight1x1_tile_buffe_57_reg_512 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_28);
    sensitive << ( weight1x1_tile_buffe_59_reg_536 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_29);
    sensitive << ( weight1x1_tile_buffe_60_reg_548 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( weight1x1_tile_buffe_52_reg_452 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_30);
    sensitive << ( weight1x1_tile_buffe_62_reg_572 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_31);
    sensitive << ( weight1x1_tile_buffe_63_reg_584 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( weight1x1_tile_buffe_49_reg_416 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( weight1x1_tile_buffe_46_reg_380 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( weight1x1_tile_buffe_43_reg_344 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( weight1x1_tile_buffe_40_reg_308 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( weight1x1_tile_buffe_37_reg_272 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( weight1x1_tile_buffe_34_reg_236 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_conv_weight_1x1_all_V_blk_n_AR);
    sensitive << ( m_axi_conv_weight_1x1_all_V_ARREADY );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_conv_weight_1x1_all_V_blk_n_R);
    sensitive << ( m_axi_conv_weight_1x1_all_V_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln230_reg_1471 );

    SC_METHOD(thread_grp_fu_1447_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_1447_p00 );

    SC_METHOD(thread_grp_fu_1447_p00);
    sensitive << ( c_out );

    SC_METHOD(thread_grp_fu_1447_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_1447_p10 );

    SC_METHOD(thread_grp_fu_1447_p10);
    sensitive << ( in_channels_after_pa );

    SC_METHOD(thread_grp_fu_1447_p2);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_1447_p20 );

    SC_METHOD(thread_grp_fu_1447_p20);
    sensitive << ( c_in );

    SC_METHOD(thread_i_fu_674_p2);
    sensitive << ( i_0_reg_596 );

    SC_METHOD(thread_icmp_ln230_fu_668_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_0_reg_596 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln414_16_fu_871_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_fu_865_p2 );

    SC_METHOD(thread_icmp_ln414_17_fu_897_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_15_fu_891_p2 );

    SC_METHOD(thread_icmp_ln414_18_fu_923_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_16_fu_917_p2 );

    SC_METHOD(thread_icmp_ln414_19_fu_949_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_17_fu_943_p2 );

    SC_METHOD(thread_icmp_ln414_20_fu_975_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_18_fu_969_p2 );

    SC_METHOD(thread_icmp_ln414_21_fu_1001_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_19_fu_995_p2 );

    SC_METHOD(thread_icmp_ln414_22_fu_1027_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_20_fu_1021_p2 );

    SC_METHOD(thread_icmp_ln414_23_fu_1053_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_21_fu_1047_p2 );

    SC_METHOD(thread_icmp_ln414_24_fu_1079_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_22_fu_1073_p2 );

    SC_METHOD(thread_icmp_ln414_25_fu_1105_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_23_fu_1099_p2 );

    SC_METHOD(thread_icmp_ln414_26_fu_1131_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_24_fu_1125_p2 );

    SC_METHOD(thread_icmp_ln414_27_fu_1157_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_25_fu_1151_p2 );

    SC_METHOD(thread_icmp_ln414_28_fu_1183_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_26_fu_1177_p2 );

    SC_METHOD(thread_icmp_ln414_29_fu_1209_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_27_fu_1203_p2 );

    SC_METHOD(thread_icmp_ln414_30_fu_1235_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_ln414_28_fu_1229_p2 );

    SC_METHOD(thread_icmp_ln414_fu_845_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln230_reg_1471_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARADDR);
    sensitive << ( m_axi_conv_weight_1x1_all_V_ARREADY );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln232_3_fu_658_p1 );

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARBURST);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARCACHE);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARID);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARLEN);
    sensitive << ( m_axi_conv_weight_1x1_all_V_ARREADY );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARLOCK);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARPROT);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARQOS);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARREGION);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARSIZE);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARUSER);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_ARVALID);
    sensitive << ( m_axi_conv_weight_1x1_all_V_ARREADY );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWADDR);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWBURST);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWCACHE);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWID);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWLEN);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWLOCK);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWPROT);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWQOS);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWREGION);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWSIZE);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWUSER);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_AWVALID);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_BREADY);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln230_reg_1471 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_WDATA);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_WID);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_WLAST);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_WSTRB);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_WUSER);

    SC_METHOD(thread_m_axi_conv_weight_1x1_all_V_WVALID);

    SC_METHOD(thread_or_ln414_15_fu_891_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_16_fu_917_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_17_fu_943_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_18_fu_969_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_19_fu_995_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_20_fu_1021_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_21_fu_1047_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_22_fu_1073_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_23_fu_1099_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_24_fu_1125_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_25_fu_1151_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_26_fu_1177_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_27_fu_1203_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_28_fu_1229_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_or_ln414_fu_865_p2);
    sensitive << ( shl_ln_fu_838_p3 );

    SC_METHOD(thread_select_ln414_10_fu_981_p3);
    sensitive << ( weight1x1_tile_buffe_46_reg_380 );
    sensitive << ( weight1x1_tile_buffe_68_reg_1515 );
    sensitive << ( icmp_ln414_20_fu_975_p2 );

    SC_METHOD(thread_select_ln414_11_fu_988_p3);
    sensitive << ( weight1x1_tile_buffe_48_reg_404 );
    sensitive << ( weight1x1_tile_buffe_68_reg_1515 );
    sensitive << ( icmp_ln414_20_fu_975_p2 );

    SC_METHOD(thread_select_ln414_12_fu_1007_p3);
    sensitive << ( weight1x1_tile_buffe_43_reg_344 );
    sensitive << ( weight1x1_tile_buffe_69_reg_1521 );
    sensitive << ( icmp_ln414_21_fu_1001_p2 );

    SC_METHOD(thread_select_ln414_13_fu_1014_p3);
    sensitive << ( weight1x1_tile_buffe_50_reg_428 );
    sensitive << ( weight1x1_tile_buffe_69_reg_1521 );
    sensitive << ( icmp_ln414_21_fu_1001_p2 );

    SC_METHOD(thread_select_ln414_14_fu_1033_p3);
    sensitive << ( weight1x1_tile_buffe_40_reg_308 );
    sensitive << ( weight1x1_tile_buffe_70_reg_1527 );
    sensitive << ( icmp_ln414_22_fu_1027_p2 );

    SC_METHOD(thread_select_ln414_15_fu_1040_p3);
    sensitive << ( weight1x1_tile_buffe_51_reg_440 );
    sensitive << ( weight1x1_tile_buffe_70_reg_1527 );
    sensitive << ( icmp_ln414_22_fu_1027_p2 );

    SC_METHOD(thread_select_ln414_16_fu_1059_p3);
    sensitive << ( weight1x1_tile_buffe_37_reg_272 );
    sensitive << ( weight1x1_tile_buffe_71_reg_1533 );
    sensitive << ( icmp_ln414_23_fu_1053_p2 );

    SC_METHOD(thread_select_ln414_17_fu_1066_p3);
    sensitive << ( weight1x1_tile_buffe_53_reg_464 );
    sensitive << ( weight1x1_tile_buffe_71_reg_1533 );
    sensitive << ( icmp_ln414_23_fu_1053_p2 );

    SC_METHOD(thread_select_ln414_18_fu_1085_p3);
    sensitive << ( weight1x1_tile_buffe_34_reg_236 );
    sensitive << ( weight1x1_tile_buffe_72_reg_1539 );
    sensitive << ( icmp_ln414_24_fu_1079_p2 );

    SC_METHOD(thread_select_ln414_19_fu_1092_p3);
    sensitive << ( weight1x1_tile_buffe_54_reg_476 );
    sensitive << ( weight1x1_tile_buffe_72_reg_1539 );
    sensitive << ( icmp_ln414_24_fu_1079_p2 );

    SC_METHOD(thread_select_ln414_1_fu_858_p3);
    sensitive << ( weight1x1_tile_buffe_61_reg_560 );
    sensitive << ( trunc_ln647_reg_1485 );
    sensitive << ( icmp_ln414_fu_845_p2 );

    SC_METHOD(thread_select_ln414_20_fu_1111_p3);
    sensitive << ( weight1x1_tile_buffe_32_reg_212 );
    sensitive << ( weight1x1_tile_buffe_73_reg_1545 );
    sensitive << ( icmp_ln414_25_fu_1105_p2 );

    SC_METHOD(thread_select_ln414_21_fu_1118_p3);
    sensitive << ( weight1x1_tile_buffe_56_reg_500 );
    sensitive << ( weight1x1_tile_buffe_73_reg_1545 );
    sensitive << ( icmp_ln414_25_fu_1105_p2 );

    SC_METHOD(thread_select_ln414_22_fu_1137_p3);
    sensitive << ( weight1x1_tile_buffe_33_reg_224 );
    sensitive << ( weight1x1_tile_buffe_74_reg_1551 );
    sensitive << ( icmp_ln414_26_fu_1131_p2 );

    SC_METHOD(thread_select_ln414_23_fu_1144_p3);
    sensitive << ( weight1x1_tile_buffe_57_reg_512 );
    sensitive << ( weight1x1_tile_buffe_74_reg_1551 );
    sensitive << ( icmp_ln414_26_fu_1131_p2 );

    SC_METHOD(thread_select_ln414_24_fu_1163_p3);
    sensitive << ( weight1x1_tile_buffe_35_reg_248 );
    sensitive << ( weight1x1_tile_buffe_75_reg_1557 );
    sensitive << ( icmp_ln414_27_fu_1157_p2 );

    SC_METHOD(thread_select_ln414_25_fu_1170_p3);
    sensitive << ( weight1x1_tile_buffe_59_reg_536 );
    sensitive << ( weight1x1_tile_buffe_75_reg_1557 );
    sensitive << ( icmp_ln414_27_fu_1157_p2 );

    SC_METHOD(thread_select_ln414_26_fu_1189_p3);
    sensitive << ( weight1x1_tile_buffe_36_reg_260 );
    sensitive << ( weight1x1_tile_buffe_76_reg_1563 );
    sensitive << ( icmp_ln414_28_fu_1183_p2 );

    SC_METHOD(thread_select_ln414_27_fu_1196_p3);
    sensitive << ( weight1x1_tile_buffe_60_reg_548 );
    sensitive << ( weight1x1_tile_buffe_76_reg_1563 );
    sensitive << ( icmp_ln414_28_fu_1183_p2 );

    SC_METHOD(thread_select_ln414_28_fu_1215_p3);
    sensitive << ( weight1x1_tile_buffe_38_reg_284 );
    sensitive << ( weight1x1_tile_buffe_77_reg_1569 );
    sensitive << ( icmp_ln414_29_fu_1209_p2 );

    SC_METHOD(thread_select_ln414_29_fu_1222_p3);
    sensitive << ( weight1x1_tile_buffe_62_reg_572 );
    sensitive << ( weight1x1_tile_buffe_77_reg_1569 );
    sensitive << ( icmp_ln414_29_fu_1209_p2 );

    SC_METHOD(thread_select_ln414_2_fu_877_p3);
    sensitive << ( weight1x1_tile_buffe_42_reg_332 );
    sensitive << ( weight1x1_tile_buffe_64_reg_1491 );
    sensitive << ( icmp_ln414_16_fu_871_p2 );

    SC_METHOD(thread_select_ln414_30_fu_1241_p3);
    sensitive << ( weight1x1_tile_buffe_39_reg_296 );
    sensitive << ( weight1x1_tile_buffe_78_reg_1575 );
    sensitive << ( icmp_ln414_30_fu_1235_p2 );

    SC_METHOD(thread_select_ln414_31_fu_1248_p3);
    sensitive << ( weight1x1_tile_buffe_63_reg_584 );
    sensitive << ( weight1x1_tile_buffe_78_reg_1575 );
    sensitive << ( icmp_ln414_30_fu_1235_p2 );

    SC_METHOD(thread_select_ln414_3_fu_884_p3);
    sensitive << ( weight1x1_tile_buffe_58_reg_524 );
    sensitive << ( weight1x1_tile_buffe_64_reg_1491 );
    sensitive << ( icmp_ln414_16_fu_871_p2 );

    SC_METHOD(thread_select_ln414_4_fu_903_p3);
    sensitive << ( weight1x1_tile_buffe_44_reg_356 );
    sensitive << ( weight1x1_tile_buffe_65_reg_1497 );
    sensitive << ( icmp_ln414_17_fu_897_p2 );

    SC_METHOD(thread_select_ln414_5_fu_910_p3);
    sensitive << ( weight1x1_tile_buffe_55_reg_488 );
    sensitive << ( weight1x1_tile_buffe_65_reg_1497 );
    sensitive << ( icmp_ln414_17_fu_897_p2 );

    SC_METHOD(thread_select_ln414_6_fu_929_p3);
    sensitive << ( weight1x1_tile_buffe_45_reg_368 );
    sensitive << ( weight1x1_tile_buffe_66_reg_1503 );
    sensitive << ( icmp_ln414_18_fu_923_p2 );

    SC_METHOD(thread_select_ln414_7_fu_936_p3);
    sensitive << ( weight1x1_tile_buffe_52_reg_452 );
    sensitive << ( weight1x1_tile_buffe_66_reg_1503 );
    sensitive << ( icmp_ln414_18_fu_923_p2 );

    SC_METHOD(thread_select_ln414_8_fu_955_p3);
    sensitive << ( weight1x1_tile_buffe_47_reg_392 );
    sensitive << ( weight1x1_tile_buffe_67_reg_1509 );
    sensitive << ( icmp_ln414_19_fu_949_p2 );

    SC_METHOD(thread_select_ln414_9_fu_962_p3);
    sensitive << ( weight1x1_tile_buffe_49_reg_416 );
    sensitive << ( weight1x1_tile_buffe_67_reg_1509 );
    sensitive << ( icmp_ln414_19_fu_949_p2 );

    SC_METHOD(thread_select_ln414_fu_851_p3);
    sensitive << ( weight1x1_tile_buffe_41_reg_320 );
    sensitive << ( trunc_ln647_reg_1485 );
    sensitive << ( icmp_ln414_fu_845_p2 );

    SC_METHOD(thread_shl_ln_fu_838_p3);
    sensitive << ( trunc_ln414_reg_1480_pp0_iter1_reg );

    SC_METHOD(thread_tmp38_cast_fu_626_p1);
    sensitive << ( tmp5_fu_619_p3 );

    SC_METHOD(thread_tmp5_fu_619_p3);
    sensitive << ( tmp_reg_1455 );

    SC_METHOD(thread_trunc_ln232_fu_630_p1);
    sensitive << ( conv1x1_weight_ptr );

    SC_METHOD(thread_trunc_ln414_fu_680_p1);
    sensitive << ( i_0_reg_596 );

    SC_METHOD(thread_trunc_ln647_fu_684_p1);
    sensitive << ( m_axi_conv_weight_1x1_all_V_RDATA );

    SC_METHOD(thread_zext_ln232_1_fu_644_p1);
    sensitive << ( add_ln232_fu_638_p2 );

    SC_METHOD(thread_zext_ln232_2_fu_648_p1);
    sensitive << ( conv_weight_1x1_all_V_offset );

    SC_METHOD(thread_zext_ln232_3_fu_658_p1);
    sensitive << ( add_ln232_1_reg_1460 );

    SC_METHOD(thread_zext_ln232_fu_634_p1);
    sensitive << ( trunc_ln232_fu_630_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_conv_weight_1x1_all_V_ARREADY );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln230_fu_668_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "00000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "load_conv1x1_weights_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWVALID, "(port)m_axi_conv_weight_1x1_all_V_AWVALID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWREADY, "(port)m_axi_conv_weight_1x1_all_V_AWREADY");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWADDR, "(port)m_axi_conv_weight_1x1_all_V_AWADDR");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWID, "(port)m_axi_conv_weight_1x1_all_V_AWID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWLEN, "(port)m_axi_conv_weight_1x1_all_V_AWLEN");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWSIZE, "(port)m_axi_conv_weight_1x1_all_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWBURST, "(port)m_axi_conv_weight_1x1_all_V_AWBURST");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWLOCK, "(port)m_axi_conv_weight_1x1_all_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWCACHE, "(port)m_axi_conv_weight_1x1_all_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWPROT, "(port)m_axi_conv_weight_1x1_all_V_AWPROT");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWQOS, "(port)m_axi_conv_weight_1x1_all_V_AWQOS");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWREGION, "(port)m_axi_conv_weight_1x1_all_V_AWREGION");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_AWUSER, "(port)m_axi_conv_weight_1x1_all_V_AWUSER");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_WVALID, "(port)m_axi_conv_weight_1x1_all_V_WVALID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_WREADY, "(port)m_axi_conv_weight_1x1_all_V_WREADY");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_WDATA, "(port)m_axi_conv_weight_1x1_all_V_WDATA");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_WSTRB, "(port)m_axi_conv_weight_1x1_all_V_WSTRB");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_WLAST, "(port)m_axi_conv_weight_1x1_all_V_WLAST");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_WID, "(port)m_axi_conv_weight_1x1_all_V_WID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_WUSER, "(port)m_axi_conv_weight_1x1_all_V_WUSER");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARVALID, "(port)m_axi_conv_weight_1x1_all_V_ARVALID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARREADY, "(port)m_axi_conv_weight_1x1_all_V_ARREADY");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARADDR, "(port)m_axi_conv_weight_1x1_all_V_ARADDR");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARID, "(port)m_axi_conv_weight_1x1_all_V_ARID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARLEN, "(port)m_axi_conv_weight_1x1_all_V_ARLEN");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARSIZE, "(port)m_axi_conv_weight_1x1_all_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARBURST, "(port)m_axi_conv_weight_1x1_all_V_ARBURST");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARLOCK, "(port)m_axi_conv_weight_1x1_all_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARCACHE, "(port)m_axi_conv_weight_1x1_all_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARPROT, "(port)m_axi_conv_weight_1x1_all_V_ARPROT");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARQOS, "(port)m_axi_conv_weight_1x1_all_V_ARQOS");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARREGION, "(port)m_axi_conv_weight_1x1_all_V_ARREGION");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_ARUSER, "(port)m_axi_conv_weight_1x1_all_V_ARUSER");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_RVALID, "(port)m_axi_conv_weight_1x1_all_V_RVALID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_RREADY, "(port)m_axi_conv_weight_1x1_all_V_RREADY");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_RDATA, "(port)m_axi_conv_weight_1x1_all_V_RDATA");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_RLAST, "(port)m_axi_conv_weight_1x1_all_V_RLAST");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_RID, "(port)m_axi_conv_weight_1x1_all_V_RID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_RUSER, "(port)m_axi_conv_weight_1x1_all_V_RUSER");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_RRESP, "(port)m_axi_conv_weight_1x1_all_V_RRESP");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_BVALID, "(port)m_axi_conv_weight_1x1_all_V_BVALID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_BREADY, "(port)m_axi_conv_weight_1x1_all_V_BREADY");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_BRESP, "(port)m_axi_conv_weight_1x1_all_V_BRESP");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_BID, "(port)m_axi_conv_weight_1x1_all_V_BID");
    sc_trace(mVcdFile, m_axi_conv_weight_1x1_all_V_BUSER, "(port)m_axi_conv_weight_1x1_all_V_BUSER");
    sc_trace(mVcdFile, conv_weight_1x1_all_V_offset, "(port)conv_weight_1x1_all_V_offset");
    sc_trace(mVcdFile, conv1x1_weight_ptr, "(port)conv1x1_weight_ptr");
    sc_trace(mVcdFile, c_out, "(port)c_out");
    sc_trace(mVcdFile, c_in, "(port)c_in");
    sc_trace(mVcdFile, in_channels_after_pa, "(port)in_channels_after_pa");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
    sc_trace(mVcdFile, ap_return_11, "(port)ap_return_11");
    sc_trace(mVcdFile, ap_return_12, "(port)ap_return_12");
    sc_trace(mVcdFile, ap_return_13, "(port)ap_return_13");
    sc_trace(mVcdFile, ap_return_14, "(port)ap_return_14");
    sc_trace(mVcdFile, ap_return_15, "(port)ap_return_15");
    sc_trace(mVcdFile, ap_return_16, "(port)ap_return_16");
    sc_trace(mVcdFile, ap_return_17, "(port)ap_return_17");
    sc_trace(mVcdFile, ap_return_18, "(port)ap_return_18");
    sc_trace(mVcdFile, ap_return_19, "(port)ap_return_19");
    sc_trace(mVcdFile, ap_return_20, "(port)ap_return_20");
    sc_trace(mVcdFile, ap_return_21, "(port)ap_return_21");
    sc_trace(mVcdFile, ap_return_22, "(port)ap_return_22");
    sc_trace(mVcdFile, ap_return_23, "(port)ap_return_23");
    sc_trace(mVcdFile, ap_return_24, "(port)ap_return_24");
    sc_trace(mVcdFile, ap_return_25, "(port)ap_return_25");
    sc_trace(mVcdFile, ap_return_26, "(port)ap_return_26");
    sc_trace(mVcdFile, ap_return_27, "(port)ap_return_27");
    sc_trace(mVcdFile, ap_return_28, "(port)ap_return_28");
    sc_trace(mVcdFile, ap_return_29, "(port)ap_return_29");
    sc_trace(mVcdFile, ap_return_30, "(port)ap_return_30");
    sc_trace(mVcdFile, ap_return_31, "(port)ap_return_31");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, conv_weight_1x1_all_V_blk_n_AR, "conv_weight_1x1_all_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, conv_weight_1x1_all_V_blk_n_R, "conv_weight_1x1_all_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln230_reg_1471, "icmp_ln230_reg_1471");
    sc_trace(mVcdFile, weight1x1_tile_buffe_32_reg_212, "weight1x1_tile_buffe_32_reg_212");
    sc_trace(mVcdFile, weight1x1_tile_buffe_33_reg_224, "weight1x1_tile_buffe_33_reg_224");
    sc_trace(mVcdFile, weight1x1_tile_buffe_34_reg_236, "weight1x1_tile_buffe_34_reg_236");
    sc_trace(mVcdFile, weight1x1_tile_buffe_35_reg_248, "weight1x1_tile_buffe_35_reg_248");
    sc_trace(mVcdFile, weight1x1_tile_buffe_36_reg_260, "weight1x1_tile_buffe_36_reg_260");
    sc_trace(mVcdFile, weight1x1_tile_buffe_37_reg_272, "weight1x1_tile_buffe_37_reg_272");
    sc_trace(mVcdFile, weight1x1_tile_buffe_38_reg_284, "weight1x1_tile_buffe_38_reg_284");
    sc_trace(mVcdFile, weight1x1_tile_buffe_39_reg_296, "weight1x1_tile_buffe_39_reg_296");
    sc_trace(mVcdFile, weight1x1_tile_buffe_40_reg_308, "weight1x1_tile_buffe_40_reg_308");
    sc_trace(mVcdFile, weight1x1_tile_buffe_41_reg_320, "weight1x1_tile_buffe_41_reg_320");
    sc_trace(mVcdFile, weight1x1_tile_buffe_42_reg_332, "weight1x1_tile_buffe_42_reg_332");
    sc_trace(mVcdFile, weight1x1_tile_buffe_43_reg_344, "weight1x1_tile_buffe_43_reg_344");
    sc_trace(mVcdFile, weight1x1_tile_buffe_44_reg_356, "weight1x1_tile_buffe_44_reg_356");
    sc_trace(mVcdFile, weight1x1_tile_buffe_45_reg_368, "weight1x1_tile_buffe_45_reg_368");
    sc_trace(mVcdFile, weight1x1_tile_buffe_46_reg_380, "weight1x1_tile_buffe_46_reg_380");
    sc_trace(mVcdFile, weight1x1_tile_buffe_47_reg_392, "weight1x1_tile_buffe_47_reg_392");
    sc_trace(mVcdFile, weight1x1_tile_buffe_48_reg_404, "weight1x1_tile_buffe_48_reg_404");
    sc_trace(mVcdFile, weight1x1_tile_buffe_49_reg_416, "weight1x1_tile_buffe_49_reg_416");
    sc_trace(mVcdFile, weight1x1_tile_buffe_50_reg_428, "weight1x1_tile_buffe_50_reg_428");
    sc_trace(mVcdFile, weight1x1_tile_buffe_51_reg_440, "weight1x1_tile_buffe_51_reg_440");
    sc_trace(mVcdFile, weight1x1_tile_buffe_52_reg_452, "weight1x1_tile_buffe_52_reg_452");
    sc_trace(mVcdFile, weight1x1_tile_buffe_53_reg_464, "weight1x1_tile_buffe_53_reg_464");
    sc_trace(mVcdFile, weight1x1_tile_buffe_54_reg_476, "weight1x1_tile_buffe_54_reg_476");
    sc_trace(mVcdFile, weight1x1_tile_buffe_55_reg_488, "weight1x1_tile_buffe_55_reg_488");
    sc_trace(mVcdFile, weight1x1_tile_buffe_56_reg_500, "weight1x1_tile_buffe_56_reg_500");
    sc_trace(mVcdFile, weight1x1_tile_buffe_57_reg_512, "weight1x1_tile_buffe_57_reg_512");
    sc_trace(mVcdFile, weight1x1_tile_buffe_58_reg_524, "weight1x1_tile_buffe_58_reg_524");
    sc_trace(mVcdFile, weight1x1_tile_buffe_59_reg_536, "weight1x1_tile_buffe_59_reg_536");
    sc_trace(mVcdFile, weight1x1_tile_buffe_60_reg_548, "weight1x1_tile_buffe_60_reg_548");
    sc_trace(mVcdFile, weight1x1_tile_buffe_61_reg_560, "weight1x1_tile_buffe_61_reg_560");
    sc_trace(mVcdFile, weight1x1_tile_buffe_62_reg_572, "weight1x1_tile_buffe_62_reg_572");
    sc_trace(mVcdFile, weight1x1_tile_buffe_63_reg_584, "weight1x1_tile_buffe_63_reg_584");
    sc_trace(mVcdFile, i_0_reg_596, "i_0_reg_596");
    sc_trace(mVcdFile, grp_fu_1447_p3, "grp_fu_1447_p3");
    sc_trace(mVcdFile, tmp_reg_1455, "tmp_reg_1455");
    sc_trace(mVcdFile, add_ln232_1_fu_652_p2, "add_ln232_1_fu_652_p2");
    sc_trace(mVcdFile, add_ln232_1_reg_1460, "add_ln232_1_reg_1460");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln230_fu_668_p2, "icmp_ln230_fu_668_p2");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter0, "ap_block_state10_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter1, "ap_block_state11_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter2, "ap_block_state12_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln230_reg_1471_pp0_iter1_reg, "icmp_ln230_reg_1471_pp0_iter1_reg");
    sc_trace(mVcdFile, i_fu_674_p2, "i_fu_674_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, trunc_ln414_fu_680_p1, "trunc_ln414_fu_680_p1");
    sc_trace(mVcdFile, trunc_ln414_reg_1480, "trunc_ln414_reg_1480");
    sc_trace(mVcdFile, trunc_ln414_reg_1480_pp0_iter1_reg, "trunc_ln414_reg_1480_pp0_iter1_reg");
    sc_trace(mVcdFile, trunc_ln647_fu_684_p1, "trunc_ln647_fu_684_p1");
    sc_trace(mVcdFile, trunc_ln647_reg_1485, "trunc_ln647_reg_1485");
    sc_trace(mVcdFile, weight1x1_tile_buffe_64_reg_1491, "weight1x1_tile_buffe_64_reg_1491");
    sc_trace(mVcdFile, weight1x1_tile_buffe_65_reg_1497, "weight1x1_tile_buffe_65_reg_1497");
    sc_trace(mVcdFile, weight1x1_tile_buffe_66_reg_1503, "weight1x1_tile_buffe_66_reg_1503");
    sc_trace(mVcdFile, weight1x1_tile_buffe_67_reg_1509, "weight1x1_tile_buffe_67_reg_1509");
    sc_trace(mVcdFile, weight1x1_tile_buffe_68_reg_1515, "weight1x1_tile_buffe_68_reg_1515");
    sc_trace(mVcdFile, weight1x1_tile_buffe_69_reg_1521, "weight1x1_tile_buffe_69_reg_1521");
    sc_trace(mVcdFile, weight1x1_tile_buffe_70_reg_1527, "weight1x1_tile_buffe_70_reg_1527");
    sc_trace(mVcdFile, weight1x1_tile_buffe_71_reg_1533, "weight1x1_tile_buffe_71_reg_1533");
    sc_trace(mVcdFile, weight1x1_tile_buffe_72_reg_1539, "weight1x1_tile_buffe_72_reg_1539");
    sc_trace(mVcdFile, weight1x1_tile_buffe_73_reg_1545, "weight1x1_tile_buffe_73_reg_1545");
    sc_trace(mVcdFile, weight1x1_tile_buffe_74_reg_1551, "weight1x1_tile_buffe_74_reg_1551");
    sc_trace(mVcdFile, weight1x1_tile_buffe_75_reg_1557, "weight1x1_tile_buffe_75_reg_1557");
    sc_trace(mVcdFile, weight1x1_tile_buffe_76_reg_1563, "weight1x1_tile_buffe_76_reg_1563");
    sc_trace(mVcdFile, weight1x1_tile_buffe_77_reg_1569, "weight1x1_tile_buffe_77_reg_1569");
    sc_trace(mVcdFile, weight1x1_tile_buffe_78_reg_1575, "weight1x1_tile_buffe_78_reg_1575");
    sc_trace(mVcdFile, select_ln414_fu_851_p3, "select_ln414_fu_851_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, select_ln414_1_fu_858_p3, "select_ln414_1_fu_858_p3");
    sc_trace(mVcdFile, select_ln414_2_fu_877_p3, "select_ln414_2_fu_877_p3");
    sc_trace(mVcdFile, select_ln414_3_fu_884_p3, "select_ln414_3_fu_884_p3");
    sc_trace(mVcdFile, select_ln414_4_fu_903_p3, "select_ln414_4_fu_903_p3");
    sc_trace(mVcdFile, select_ln414_5_fu_910_p3, "select_ln414_5_fu_910_p3");
    sc_trace(mVcdFile, select_ln414_6_fu_929_p3, "select_ln414_6_fu_929_p3");
    sc_trace(mVcdFile, select_ln414_7_fu_936_p3, "select_ln414_7_fu_936_p3");
    sc_trace(mVcdFile, select_ln414_8_fu_955_p3, "select_ln414_8_fu_955_p3");
    sc_trace(mVcdFile, select_ln414_9_fu_962_p3, "select_ln414_9_fu_962_p3");
    sc_trace(mVcdFile, select_ln414_10_fu_981_p3, "select_ln414_10_fu_981_p3");
    sc_trace(mVcdFile, select_ln414_11_fu_988_p3, "select_ln414_11_fu_988_p3");
    sc_trace(mVcdFile, select_ln414_12_fu_1007_p3, "select_ln414_12_fu_1007_p3");
    sc_trace(mVcdFile, select_ln414_13_fu_1014_p3, "select_ln414_13_fu_1014_p3");
    sc_trace(mVcdFile, select_ln414_14_fu_1033_p3, "select_ln414_14_fu_1033_p3");
    sc_trace(mVcdFile, select_ln414_15_fu_1040_p3, "select_ln414_15_fu_1040_p3");
    sc_trace(mVcdFile, select_ln414_16_fu_1059_p3, "select_ln414_16_fu_1059_p3");
    sc_trace(mVcdFile, select_ln414_17_fu_1066_p3, "select_ln414_17_fu_1066_p3");
    sc_trace(mVcdFile, select_ln414_18_fu_1085_p3, "select_ln414_18_fu_1085_p3");
    sc_trace(mVcdFile, select_ln414_19_fu_1092_p3, "select_ln414_19_fu_1092_p3");
    sc_trace(mVcdFile, select_ln414_20_fu_1111_p3, "select_ln414_20_fu_1111_p3");
    sc_trace(mVcdFile, select_ln414_21_fu_1118_p3, "select_ln414_21_fu_1118_p3");
    sc_trace(mVcdFile, select_ln414_22_fu_1137_p3, "select_ln414_22_fu_1137_p3");
    sc_trace(mVcdFile, select_ln414_23_fu_1144_p3, "select_ln414_23_fu_1144_p3");
    sc_trace(mVcdFile, select_ln414_24_fu_1163_p3, "select_ln414_24_fu_1163_p3");
    sc_trace(mVcdFile, select_ln414_25_fu_1170_p3, "select_ln414_25_fu_1170_p3");
    sc_trace(mVcdFile, select_ln414_26_fu_1189_p3, "select_ln414_26_fu_1189_p3");
    sc_trace(mVcdFile, select_ln414_27_fu_1196_p3, "select_ln414_27_fu_1196_p3");
    sc_trace(mVcdFile, select_ln414_28_fu_1215_p3, "select_ln414_28_fu_1215_p3");
    sc_trace(mVcdFile, select_ln414_29_fu_1222_p3, "select_ln414_29_fu_1222_p3");
    sc_trace(mVcdFile, select_ln414_30_fu_1241_p3, "select_ln414_30_fu_1241_p3");
    sc_trace(mVcdFile, select_ln414_31_fu_1248_p3, "select_ln414_31_fu_1248_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state10, "ap_condition_pp0_exit_iter0_state10");
    sc_trace(mVcdFile, zext_ln232_3_fu_658_p1, "zext_ln232_3_fu_658_p1");
    sc_trace(mVcdFile, tmp5_fu_619_p3, "tmp5_fu_619_p3");
    sc_trace(mVcdFile, trunc_ln232_fu_630_p1, "trunc_ln232_fu_630_p1");
    sc_trace(mVcdFile, tmp38_cast_fu_626_p1, "tmp38_cast_fu_626_p1");
    sc_trace(mVcdFile, zext_ln232_fu_634_p1, "zext_ln232_fu_634_p1");
    sc_trace(mVcdFile, add_ln232_fu_638_p2, "add_ln232_fu_638_p2");
    sc_trace(mVcdFile, zext_ln232_2_fu_648_p1, "zext_ln232_2_fu_648_p1");
    sc_trace(mVcdFile, zext_ln232_1_fu_644_p1, "zext_ln232_1_fu_644_p1");
    sc_trace(mVcdFile, shl_ln_fu_838_p3, "shl_ln_fu_838_p3");
    sc_trace(mVcdFile, icmp_ln414_fu_845_p2, "icmp_ln414_fu_845_p2");
    sc_trace(mVcdFile, or_ln414_fu_865_p2, "or_ln414_fu_865_p2");
    sc_trace(mVcdFile, icmp_ln414_16_fu_871_p2, "icmp_ln414_16_fu_871_p2");
    sc_trace(mVcdFile, or_ln414_15_fu_891_p2, "or_ln414_15_fu_891_p2");
    sc_trace(mVcdFile, icmp_ln414_17_fu_897_p2, "icmp_ln414_17_fu_897_p2");
    sc_trace(mVcdFile, or_ln414_16_fu_917_p2, "or_ln414_16_fu_917_p2");
    sc_trace(mVcdFile, icmp_ln414_18_fu_923_p2, "icmp_ln414_18_fu_923_p2");
    sc_trace(mVcdFile, or_ln414_17_fu_943_p2, "or_ln414_17_fu_943_p2");
    sc_trace(mVcdFile, icmp_ln414_19_fu_949_p2, "icmp_ln414_19_fu_949_p2");
    sc_trace(mVcdFile, or_ln414_18_fu_969_p2, "or_ln414_18_fu_969_p2");
    sc_trace(mVcdFile, icmp_ln414_20_fu_975_p2, "icmp_ln414_20_fu_975_p2");
    sc_trace(mVcdFile, or_ln414_19_fu_995_p2, "or_ln414_19_fu_995_p2");
    sc_trace(mVcdFile, icmp_ln414_21_fu_1001_p2, "icmp_ln414_21_fu_1001_p2");
    sc_trace(mVcdFile, or_ln414_20_fu_1021_p2, "or_ln414_20_fu_1021_p2");
    sc_trace(mVcdFile, icmp_ln414_22_fu_1027_p2, "icmp_ln414_22_fu_1027_p2");
    sc_trace(mVcdFile, or_ln414_21_fu_1047_p2, "or_ln414_21_fu_1047_p2");
    sc_trace(mVcdFile, icmp_ln414_23_fu_1053_p2, "icmp_ln414_23_fu_1053_p2");
    sc_trace(mVcdFile, or_ln414_22_fu_1073_p2, "or_ln414_22_fu_1073_p2");
    sc_trace(mVcdFile, icmp_ln414_24_fu_1079_p2, "icmp_ln414_24_fu_1079_p2");
    sc_trace(mVcdFile, or_ln414_23_fu_1099_p2, "or_ln414_23_fu_1099_p2");
    sc_trace(mVcdFile, icmp_ln414_25_fu_1105_p2, "icmp_ln414_25_fu_1105_p2");
    sc_trace(mVcdFile, or_ln414_24_fu_1125_p2, "or_ln414_24_fu_1125_p2");
    sc_trace(mVcdFile, icmp_ln414_26_fu_1131_p2, "icmp_ln414_26_fu_1131_p2");
    sc_trace(mVcdFile, or_ln414_25_fu_1151_p2, "or_ln414_25_fu_1151_p2");
    sc_trace(mVcdFile, icmp_ln414_27_fu_1157_p2, "icmp_ln414_27_fu_1157_p2");
    sc_trace(mVcdFile, or_ln414_26_fu_1177_p2, "or_ln414_26_fu_1177_p2");
    sc_trace(mVcdFile, icmp_ln414_28_fu_1183_p2, "icmp_ln414_28_fu_1183_p2");
    sc_trace(mVcdFile, or_ln414_27_fu_1203_p2, "or_ln414_27_fu_1203_p2");
    sc_trace(mVcdFile, icmp_ln414_29_fu_1209_p2, "icmp_ln414_29_fu_1209_p2");
    sc_trace(mVcdFile, or_ln414_28_fu_1229_p2, "or_ln414_28_fu_1229_p2");
    sc_trace(mVcdFile, icmp_ln414_30_fu_1235_p2, "icmp_ln414_30_fu_1235_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_1447_p0, "grp_fu_1447_p0");
    sc_trace(mVcdFile, grp_fu_1447_p1, "grp_fu_1447_p1");
    sc_trace(mVcdFile, grp_fu_1447_p2, "grp_fu_1447_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_1447_p00, "grp_fu_1447_p00");
    sc_trace(mVcdFile, grp_fu_1447_p10, "grp_fu_1447_p10");
    sc_trace(mVcdFile, grp_fu_1447_p20, "grp_fu_1447_p20");
#endif

    }
}

load_conv1x1_weights::~load_conv1x1_weights() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete FracNet_mac_muladcud_U1341;
}

void load_conv1x1_weights::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state10.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state10.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state10.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_fu_668_p2.read()))) {
        i_0_reg_596 = i_fu_674_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_0_reg_596 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln232_1_reg_1460 = add_ln232_1_fu_652_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln230_reg_1471 = icmp_ln230_fu_668_p2.read();
        icmp_ln230_reg_1471_pp0_iter1_reg = icmp_ln230_reg_1471.read();
        trunc_ln414_reg_1480_pp0_iter1_reg = trunc_ln414_reg_1480.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_reg_1455 = grp_fu_1447_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_fu_668_p2.read()))) {
        trunc_ln414_reg_1480 = trunc_ln414_fu_680_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_reg_1471.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        trunc_ln647_reg_1485 = trunc_ln647_fu_684_p1.read();
        weight1x1_tile_buffe_64_reg_1491 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(63, 32);
        weight1x1_tile_buffe_65_reg_1497 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(95, 64);
        weight1x1_tile_buffe_66_reg_1503 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(127, 96);
        weight1x1_tile_buffe_67_reg_1509 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(159, 128);
        weight1x1_tile_buffe_68_reg_1515 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(191, 160);
        weight1x1_tile_buffe_69_reg_1521 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(223, 192);
        weight1x1_tile_buffe_70_reg_1527 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(255, 224);
        weight1x1_tile_buffe_71_reg_1533 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(287, 256);
        weight1x1_tile_buffe_72_reg_1539 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(319, 288);
        weight1x1_tile_buffe_73_reg_1545 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(351, 320);
        weight1x1_tile_buffe_74_reg_1551 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(383, 352);
        weight1x1_tile_buffe_75_reg_1557 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(415, 384);
        weight1x1_tile_buffe_76_reg_1563 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(447, 416);
        weight1x1_tile_buffe_77_reg_1569 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(479, 448);
        weight1x1_tile_buffe_78_reg_1575 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(511, 480);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_reg_1471_pp0_iter1_reg.read()))) {
        weight1x1_tile_buffe_32_reg_212 = select_ln414_20_fu_1111_p3.read();
        weight1x1_tile_buffe_33_reg_224 = select_ln414_22_fu_1137_p3.read();
        weight1x1_tile_buffe_34_reg_236 = select_ln414_18_fu_1085_p3.read();
        weight1x1_tile_buffe_35_reg_248 = select_ln414_24_fu_1163_p3.read();
        weight1x1_tile_buffe_36_reg_260 = select_ln414_26_fu_1189_p3.read();
        weight1x1_tile_buffe_37_reg_272 = select_ln414_16_fu_1059_p3.read();
        weight1x1_tile_buffe_38_reg_284 = select_ln414_28_fu_1215_p3.read();
        weight1x1_tile_buffe_39_reg_296 = select_ln414_30_fu_1241_p3.read();
        weight1x1_tile_buffe_40_reg_308 = select_ln414_14_fu_1033_p3.read();
        weight1x1_tile_buffe_41_reg_320 = select_ln414_fu_851_p3.read();
        weight1x1_tile_buffe_42_reg_332 = select_ln414_2_fu_877_p3.read();
        weight1x1_tile_buffe_43_reg_344 = select_ln414_12_fu_1007_p3.read();
        weight1x1_tile_buffe_44_reg_356 = select_ln414_4_fu_903_p3.read();
        weight1x1_tile_buffe_45_reg_368 = select_ln414_6_fu_929_p3.read();
        weight1x1_tile_buffe_46_reg_380 = select_ln414_10_fu_981_p3.read();
        weight1x1_tile_buffe_47_reg_392 = select_ln414_8_fu_955_p3.read();
        weight1x1_tile_buffe_48_reg_404 = select_ln414_11_fu_988_p3.read();
        weight1x1_tile_buffe_49_reg_416 = select_ln414_9_fu_962_p3.read();
        weight1x1_tile_buffe_50_reg_428 = select_ln414_13_fu_1014_p3.read();
        weight1x1_tile_buffe_51_reg_440 = select_ln414_15_fu_1040_p3.read();
        weight1x1_tile_buffe_52_reg_452 = select_ln414_7_fu_936_p3.read();
        weight1x1_tile_buffe_53_reg_464 = select_ln414_17_fu_1066_p3.read();
        weight1x1_tile_buffe_54_reg_476 = select_ln414_19_fu_1092_p3.read();
        weight1x1_tile_buffe_55_reg_488 = select_ln414_5_fu_910_p3.read();
        weight1x1_tile_buffe_56_reg_500 = select_ln414_21_fu_1118_p3.read();
        weight1x1_tile_buffe_57_reg_512 = select_ln414_23_fu_1144_p3.read();
        weight1x1_tile_buffe_58_reg_524 = select_ln414_3_fu_884_p3.read();
        weight1x1_tile_buffe_59_reg_536 = select_ln414_25_fu_1170_p3.read();
        weight1x1_tile_buffe_60_reg_548 = select_ln414_27_fu_1196_p3.read();
        weight1x1_tile_buffe_61_reg_560 = select_ln414_1_fu_858_p3.read();
        weight1x1_tile_buffe_62_reg_572 = select_ln414_29_fu_1222_p3.read();
        weight1x1_tile_buffe_63_reg_584 = select_ln414_31_fu_1248_p3.read();
    }
}

void load_conv1x1_weights::thread_add_ln232_1_fu_652_p2() {
    add_ln232_1_fu_652_p2 = (!zext_ln232_2_fu_648_p1.read().is_01() || !zext_ln232_1_fu_644_p1.read().is_01())? sc_lv<27>(): (sc_biguint<27>(zext_ln232_2_fu_648_p1.read()) + sc_biguint<27>(zext_ln232_1_fu_644_p1.read()));
}

void load_conv1x1_weights::thread_add_ln232_fu_638_p2() {
    add_ln232_fu_638_p2 = (!tmp38_cast_fu_626_p1.read().is_01() || !zext_ln232_fu_634_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp38_cast_fu_626_p1.read()) + sc_biguint<13>(zext_ln232_fu_634_p1.read()));
}

void load_conv1x1_weights::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[9];
}

void load_conv1x1_weights::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void load_conv1x1_weights::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[10];
}

void load_conv1x1_weights::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void load_conv1x1_weights::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void load_conv1x1_weights::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void load_conv1x1_weights::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_conv1x1_weights::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_reg_1471.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_conv_weight_1x1_all_V_RVALID.read()));
}

void load_conv1x1_weights::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_reg_1471.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_conv_weight_1x1_all_V_RVALID.read()));
}

void load_conv1x1_weights::thread_ap_block_state10_pp0_stage0_iter0() {
    ap_block_state10_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_conv1x1_weights::thread_ap_block_state11_pp0_stage0_iter1() {
    ap_block_state11_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_reg_1471.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_conv_weight_1x1_all_V_RVALID.read()));
}

void load_conv1x1_weights::thread_ap_block_state12_pp0_stage0_iter2() {
    ap_block_state12_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_conv1x1_weights::thread_ap_condition_pp0_exit_iter0_state10() {
    if (esl_seteq<1,1,1>(icmp_ln230_fu_668_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state10 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state10 = ap_const_logic_0;
    }
}

void load_conv1x1_weights::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void load_conv1x1_weights::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void load_conv1x1_weights::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void load_conv1x1_weights::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void load_conv1x1_weights::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void load_conv1x1_weights::thread_ap_return_0() {
    ap_return_0 = weight1x1_tile_buffe_61_reg_560.read();
}

void load_conv1x1_weights::thread_ap_return_1() {
    ap_return_1 = weight1x1_tile_buffe_58_reg_524.read();
}

void load_conv1x1_weights::thread_ap_return_10() {
    ap_return_10 = weight1x1_tile_buffe_32_reg_212.read();
}

void load_conv1x1_weights::thread_ap_return_11() {
    ap_return_11 = weight1x1_tile_buffe_33_reg_224.read();
}

void load_conv1x1_weights::thread_ap_return_12() {
    ap_return_12 = weight1x1_tile_buffe_35_reg_248.read();
}

void load_conv1x1_weights::thread_ap_return_13() {
    ap_return_13 = weight1x1_tile_buffe_36_reg_260.read();
}

void load_conv1x1_weights::thread_ap_return_14() {
    ap_return_14 = weight1x1_tile_buffe_38_reg_284.read();
}

void load_conv1x1_weights::thread_ap_return_15() {
    ap_return_15 = weight1x1_tile_buffe_39_reg_296.read();
}

void load_conv1x1_weights::thread_ap_return_16() {
    ap_return_16 = weight1x1_tile_buffe_41_reg_320.read();
}

void load_conv1x1_weights::thread_ap_return_17() {
    ap_return_17 = weight1x1_tile_buffe_42_reg_332.read();
}

void load_conv1x1_weights::thread_ap_return_18() {
    ap_return_18 = weight1x1_tile_buffe_44_reg_356.read();
}

void load_conv1x1_weights::thread_ap_return_19() {
    ap_return_19 = weight1x1_tile_buffe_45_reg_368.read();
}

void load_conv1x1_weights::thread_ap_return_2() {
    ap_return_2 = weight1x1_tile_buffe_55_reg_488.read();
}

void load_conv1x1_weights::thread_ap_return_20() {
    ap_return_20 = weight1x1_tile_buffe_47_reg_392.read();
}

void load_conv1x1_weights::thread_ap_return_21() {
    ap_return_21 = weight1x1_tile_buffe_48_reg_404.read();
}

void load_conv1x1_weights::thread_ap_return_22() {
    ap_return_22 = weight1x1_tile_buffe_50_reg_428.read();
}

void load_conv1x1_weights::thread_ap_return_23() {
    ap_return_23 = weight1x1_tile_buffe_51_reg_440.read();
}

void load_conv1x1_weights::thread_ap_return_24() {
    ap_return_24 = weight1x1_tile_buffe_53_reg_464.read();
}

void load_conv1x1_weights::thread_ap_return_25() {
    ap_return_25 = weight1x1_tile_buffe_54_reg_476.read();
}

void load_conv1x1_weights::thread_ap_return_26() {
    ap_return_26 = weight1x1_tile_buffe_56_reg_500.read();
}

void load_conv1x1_weights::thread_ap_return_27() {
    ap_return_27 = weight1x1_tile_buffe_57_reg_512.read();
}

void load_conv1x1_weights::thread_ap_return_28() {
    ap_return_28 = weight1x1_tile_buffe_59_reg_536.read();
}

void load_conv1x1_weights::thread_ap_return_29() {
    ap_return_29 = weight1x1_tile_buffe_60_reg_548.read();
}

void load_conv1x1_weights::thread_ap_return_3() {
    ap_return_3 = weight1x1_tile_buffe_52_reg_452.read();
}

void load_conv1x1_weights::thread_ap_return_30() {
    ap_return_30 = weight1x1_tile_buffe_62_reg_572.read();
}

void load_conv1x1_weights::thread_ap_return_31() {
    ap_return_31 = weight1x1_tile_buffe_63_reg_584.read();
}

void load_conv1x1_weights::thread_ap_return_4() {
    ap_return_4 = weight1x1_tile_buffe_49_reg_416.read();
}

void load_conv1x1_weights::thread_ap_return_5() {
    ap_return_5 = weight1x1_tile_buffe_46_reg_380.read();
}

void load_conv1x1_weights::thread_ap_return_6() {
    ap_return_6 = weight1x1_tile_buffe_43_reg_344.read();
}

void load_conv1x1_weights::thread_ap_return_7() {
    ap_return_7 = weight1x1_tile_buffe_40_reg_308.read();
}

void load_conv1x1_weights::thread_ap_return_8() {
    ap_return_8 = weight1x1_tile_buffe_37_reg_272.read();
}

void load_conv1x1_weights::thread_ap_return_9() {
    ap_return_9 = weight1x1_tile_buffe_34_reg_236.read();
}

void load_conv1x1_weights::thread_conv_weight_1x1_all_V_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        conv_weight_1x1_all_V_blk_n_AR = m_axi_conv_weight_1x1_all_V_ARREADY.read();
    } else {
        conv_weight_1x1_all_V_blk_n_AR = ap_const_logic_1;
    }
}

void load_conv1x1_weights::thread_conv_weight_1x1_all_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_reg_1471.read()))) {
        conv_weight_1x1_all_V_blk_n_R = m_axi_conv_weight_1x1_all_V_RVALID.read();
    } else {
        conv_weight_1x1_all_V_blk_n_R = ap_const_logic_1;
    }
}

void load_conv1x1_weights::thread_grp_fu_1447_p0() {
    grp_fu_1447_p0 =  (sc_lv<6>) (grp_fu_1447_p00.read());
}

void load_conv1x1_weights::thread_grp_fu_1447_p00() {
    grp_fu_1447_p00 = esl_zext<11,6>(c_out.read());
}

void load_conv1x1_weights::thread_grp_fu_1447_p1() {
    grp_fu_1447_p1 =  (sc_lv<7>) (grp_fu_1447_p10.read());
}

void load_conv1x1_weights::thread_grp_fu_1447_p10() {
    grp_fu_1447_p10 = esl_zext<11,7>(in_channels_after_pa.read());
}

void load_conv1x1_weights::thread_grp_fu_1447_p2() {
    grp_fu_1447_p2 =  (sc_lv<6>) (grp_fu_1447_p20.read());
}

void load_conv1x1_weights::thread_grp_fu_1447_p20() {
    grp_fu_1447_p20 = esl_zext<11,6>(c_in.read());
}

void load_conv1x1_weights::thread_i_fu_674_p2() {
    i_fu_674_p2 = (!i_0_reg_596.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_reg_596.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void load_conv1x1_weights::thread_icmp_ln230_fu_668_p2() {
    icmp_ln230_fu_668_p2 = (!i_0_reg_596.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_596.read() == ap_const_lv2_2);
}

void load_conv1x1_weights::thread_icmp_ln414_16_fu_871_p2() {
    icmp_ln414_16_fu_871_p2 = (!or_ln414_fu_865_p2.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_fu_865_p2.read() == ap_const_lv5_1);
}

void load_conv1x1_weights::thread_icmp_ln414_17_fu_897_p2() {
    icmp_ln414_17_fu_897_p2 = (!or_ln414_15_fu_891_p2.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_15_fu_891_p2.read() == ap_const_lv5_2);
}

void load_conv1x1_weights::thread_icmp_ln414_18_fu_923_p2() {
    icmp_ln414_18_fu_923_p2 = (!or_ln414_16_fu_917_p2.read().is_01() || !ap_const_lv5_3.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_16_fu_917_p2.read() == ap_const_lv5_3);
}

void load_conv1x1_weights::thread_icmp_ln414_19_fu_949_p2() {
    icmp_ln414_19_fu_949_p2 = (!or_ln414_17_fu_943_p2.read().is_01() || !ap_const_lv5_4.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_17_fu_943_p2.read() == ap_const_lv5_4);
}

void load_conv1x1_weights::thread_icmp_ln414_20_fu_975_p2() {
    icmp_ln414_20_fu_975_p2 = (!or_ln414_18_fu_969_p2.read().is_01() || !ap_const_lv5_5.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_18_fu_969_p2.read() == ap_const_lv5_5);
}

void load_conv1x1_weights::thread_icmp_ln414_21_fu_1001_p2() {
    icmp_ln414_21_fu_1001_p2 = (!or_ln414_19_fu_995_p2.read().is_01() || !ap_const_lv5_6.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_19_fu_995_p2.read() == ap_const_lv5_6);
}

void load_conv1x1_weights::thread_icmp_ln414_22_fu_1027_p2() {
    icmp_ln414_22_fu_1027_p2 = (!or_ln414_20_fu_1021_p2.read().is_01() || !ap_const_lv5_7.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_20_fu_1021_p2.read() == ap_const_lv5_7);
}

void load_conv1x1_weights::thread_icmp_ln414_23_fu_1053_p2() {
    icmp_ln414_23_fu_1053_p2 = (!or_ln414_21_fu_1047_p2.read().is_01() || !ap_const_lv5_8.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_21_fu_1047_p2.read() == ap_const_lv5_8);
}

void load_conv1x1_weights::thread_icmp_ln414_24_fu_1079_p2() {
    icmp_ln414_24_fu_1079_p2 = (!or_ln414_22_fu_1073_p2.read().is_01() || !ap_const_lv5_9.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_22_fu_1073_p2.read() == ap_const_lv5_9);
}

void load_conv1x1_weights::thread_icmp_ln414_25_fu_1105_p2() {
    icmp_ln414_25_fu_1105_p2 = (!or_ln414_23_fu_1099_p2.read().is_01() || !ap_const_lv5_A.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_23_fu_1099_p2.read() == ap_const_lv5_A);
}

void load_conv1x1_weights::thread_icmp_ln414_26_fu_1131_p2() {
    icmp_ln414_26_fu_1131_p2 = (!or_ln414_24_fu_1125_p2.read().is_01() || !ap_const_lv5_B.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_24_fu_1125_p2.read() == ap_const_lv5_B);
}

void load_conv1x1_weights::thread_icmp_ln414_27_fu_1157_p2() {
    icmp_ln414_27_fu_1157_p2 = (!or_ln414_25_fu_1151_p2.read().is_01() || !ap_const_lv5_C.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_25_fu_1151_p2.read() == ap_const_lv5_C);
}

void load_conv1x1_weights::thread_icmp_ln414_28_fu_1183_p2() {
    icmp_ln414_28_fu_1183_p2 = (!or_ln414_26_fu_1177_p2.read().is_01() || !ap_const_lv5_D.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_26_fu_1177_p2.read() == ap_const_lv5_D);
}

void load_conv1x1_weights::thread_icmp_ln414_29_fu_1209_p2() {
    icmp_ln414_29_fu_1209_p2 = (!or_ln414_27_fu_1203_p2.read().is_01() || !ap_const_lv5_E.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_27_fu_1203_p2.read() == ap_const_lv5_E);
}

void load_conv1x1_weights::thread_icmp_ln414_30_fu_1235_p2() {
    icmp_ln414_30_fu_1235_p2 = (!or_ln414_28_fu_1229_p2.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<1>(): sc_lv<1>(or_ln414_28_fu_1229_p2.read() == ap_const_lv5_F);
}

void load_conv1x1_weights::thread_icmp_ln414_fu_845_p2() {
    icmp_ln414_fu_845_p2 = (!shl_ln_fu_838_p3.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(shl_ln_fu_838_p3.read() == ap_const_lv5_0);
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARADDR() {
    m_axi_conv_weight_1x1_all_V_ARADDR =  (sc_lv<32>) (zext_ln232_3_fu_658_p1.read());
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARBURST() {
    m_axi_conv_weight_1x1_all_V_ARBURST = ap_const_lv2_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARCACHE() {
    m_axi_conv_weight_1x1_all_V_ARCACHE = ap_const_lv4_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARID() {
    m_axi_conv_weight_1x1_all_V_ARID = ap_const_lv1_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARLEN() {
    m_axi_conv_weight_1x1_all_V_ARLEN = ap_const_lv32_2;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARLOCK() {
    m_axi_conv_weight_1x1_all_V_ARLOCK = ap_const_lv2_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARPROT() {
    m_axi_conv_weight_1x1_all_V_ARPROT = ap_const_lv3_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARQOS() {
    m_axi_conv_weight_1x1_all_V_ARQOS = ap_const_lv4_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARREGION() {
    m_axi_conv_weight_1x1_all_V_ARREGION = ap_const_lv4_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARSIZE() {
    m_axi_conv_weight_1x1_all_V_ARSIZE = ap_const_lv3_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARUSER() {
    m_axi_conv_weight_1x1_all_V_ARUSER = ap_const_lv1_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(m_axi_conv_weight_1x1_all_V_ARREADY.read(), ap_const_logic_1))) {
        m_axi_conv_weight_1x1_all_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_conv_weight_1x1_all_V_ARVALID = ap_const_logic_0;
    }
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWADDR() {
    m_axi_conv_weight_1x1_all_V_AWADDR = ap_const_lv32_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWBURST() {
    m_axi_conv_weight_1x1_all_V_AWBURST = ap_const_lv2_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWCACHE() {
    m_axi_conv_weight_1x1_all_V_AWCACHE = ap_const_lv4_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWID() {
    m_axi_conv_weight_1x1_all_V_AWID = ap_const_lv1_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWLEN() {
    m_axi_conv_weight_1x1_all_V_AWLEN = ap_const_lv32_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWLOCK() {
    m_axi_conv_weight_1x1_all_V_AWLOCK = ap_const_lv2_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWPROT() {
    m_axi_conv_weight_1x1_all_V_AWPROT = ap_const_lv3_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWQOS() {
    m_axi_conv_weight_1x1_all_V_AWQOS = ap_const_lv4_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWREGION() {
    m_axi_conv_weight_1x1_all_V_AWREGION = ap_const_lv4_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWSIZE() {
    m_axi_conv_weight_1x1_all_V_AWSIZE = ap_const_lv3_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWUSER() {
    m_axi_conv_weight_1x1_all_V_AWUSER = ap_const_lv1_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_AWVALID() {
    m_axi_conv_weight_1x1_all_V_AWVALID = ap_const_logic_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_BREADY() {
    m_axi_conv_weight_1x1_all_V_BREADY = ap_const_logic_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_reg_1471.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_conv_weight_1x1_all_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_conv_weight_1x1_all_V_RREADY = ap_const_logic_0;
    }
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_WDATA() {
    m_axi_conv_weight_1x1_all_V_WDATA = ap_const_lv512_lc_1;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_WID() {
    m_axi_conv_weight_1x1_all_V_WID = ap_const_lv1_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_WLAST() {
    m_axi_conv_weight_1x1_all_V_WLAST = ap_const_logic_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_WSTRB() {
    m_axi_conv_weight_1x1_all_V_WSTRB = ap_const_lv64_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_WUSER() {
    m_axi_conv_weight_1x1_all_V_WUSER = ap_const_lv1_0;
}

void load_conv1x1_weights::thread_m_axi_conv_weight_1x1_all_V_WVALID() {
    m_axi_conv_weight_1x1_all_V_WVALID = ap_const_logic_0;
}

void load_conv1x1_weights::thread_or_ln414_15_fu_891_p2() {
    or_ln414_15_fu_891_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_2);
}

void load_conv1x1_weights::thread_or_ln414_16_fu_917_p2() {
    or_ln414_16_fu_917_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_3);
}

void load_conv1x1_weights::thread_or_ln414_17_fu_943_p2() {
    or_ln414_17_fu_943_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_4);
}

void load_conv1x1_weights::thread_or_ln414_18_fu_969_p2() {
    or_ln414_18_fu_969_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_5);
}

void load_conv1x1_weights::thread_or_ln414_19_fu_995_p2() {
    or_ln414_19_fu_995_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_6);
}

void load_conv1x1_weights::thread_or_ln414_20_fu_1021_p2() {
    or_ln414_20_fu_1021_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_7);
}

void load_conv1x1_weights::thread_or_ln414_21_fu_1047_p2() {
    or_ln414_21_fu_1047_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_8);
}

void load_conv1x1_weights::thread_or_ln414_22_fu_1073_p2() {
    or_ln414_22_fu_1073_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_9);
}

void load_conv1x1_weights::thread_or_ln414_23_fu_1099_p2() {
    or_ln414_23_fu_1099_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_A);
}

void load_conv1x1_weights::thread_or_ln414_24_fu_1125_p2() {
    or_ln414_24_fu_1125_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_B);
}

void load_conv1x1_weights::thread_or_ln414_25_fu_1151_p2() {
    or_ln414_25_fu_1151_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_C);
}

void load_conv1x1_weights::thread_or_ln414_26_fu_1177_p2() {
    or_ln414_26_fu_1177_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_D);
}

void load_conv1x1_weights::thread_or_ln414_27_fu_1203_p2() {
    or_ln414_27_fu_1203_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_E);
}

void load_conv1x1_weights::thread_or_ln414_28_fu_1229_p2() {
    or_ln414_28_fu_1229_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_F);
}

void load_conv1x1_weights::thread_or_ln414_fu_865_p2() {
    or_ln414_fu_865_p2 = (shl_ln_fu_838_p3.read() | ap_const_lv5_1);
}

void load_conv1x1_weights::thread_select_ln414_10_fu_981_p3() {
    select_ln414_10_fu_981_p3 = (!icmp_ln414_20_fu_975_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_20_fu_975_p2.read()[0].to_bool())? weight1x1_tile_buffe_68_reg_1515.read(): weight1x1_tile_buffe_46_reg_380.read());
}

void load_conv1x1_weights::thread_select_ln414_11_fu_988_p3() {
    select_ln414_11_fu_988_p3 = (!icmp_ln414_20_fu_975_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_20_fu_975_p2.read()[0].to_bool())? weight1x1_tile_buffe_48_reg_404.read(): weight1x1_tile_buffe_68_reg_1515.read());
}

void load_conv1x1_weights::thread_select_ln414_12_fu_1007_p3() {
    select_ln414_12_fu_1007_p3 = (!icmp_ln414_21_fu_1001_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_21_fu_1001_p2.read()[0].to_bool())? weight1x1_tile_buffe_69_reg_1521.read(): weight1x1_tile_buffe_43_reg_344.read());
}

void load_conv1x1_weights::thread_select_ln414_13_fu_1014_p3() {
    select_ln414_13_fu_1014_p3 = (!icmp_ln414_21_fu_1001_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_21_fu_1001_p2.read()[0].to_bool())? weight1x1_tile_buffe_50_reg_428.read(): weight1x1_tile_buffe_69_reg_1521.read());
}

void load_conv1x1_weights::thread_select_ln414_14_fu_1033_p3() {
    select_ln414_14_fu_1033_p3 = (!icmp_ln414_22_fu_1027_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_22_fu_1027_p2.read()[0].to_bool())? weight1x1_tile_buffe_70_reg_1527.read(): weight1x1_tile_buffe_40_reg_308.read());
}

void load_conv1x1_weights::thread_select_ln414_15_fu_1040_p3() {
    select_ln414_15_fu_1040_p3 = (!icmp_ln414_22_fu_1027_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_22_fu_1027_p2.read()[0].to_bool())? weight1x1_tile_buffe_51_reg_440.read(): weight1x1_tile_buffe_70_reg_1527.read());
}

void load_conv1x1_weights::thread_select_ln414_16_fu_1059_p3() {
    select_ln414_16_fu_1059_p3 = (!icmp_ln414_23_fu_1053_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_23_fu_1053_p2.read()[0].to_bool())? weight1x1_tile_buffe_71_reg_1533.read(): weight1x1_tile_buffe_37_reg_272.read());
}

void load_conv1x1_weights::thread_select_ln414_17_fu_1066_p3() {
    select_ln414_17_fu_1066_p3 = (!icmp_ln414_23_fu_1053_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_23_fu_1053_p2.read()[0].to_bool())? weight1x1_tile_buffe_53_reg_464.read(): weight1x1_tile_buffe_71_reg_1533.read());
}

void load_conv1x1_weights::thread_select_ln414_18_fu_1085_p3() {
    select_ln414_18_fu_1085_p3 = (!icmp_ln414_24_fu_1079_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_24_fu_1079_p2.read()[0].to_bool())? weight1x1_tile_buffe_72_reg_1539.read(): weight1x1_tile_buffe_34_reg_236.read());
}

void load_conv1x1_weights::thread_select_ln414_19_fu_1092_p3() {
    select_ln414_19_fu_1092_p3 = (!icmp_ln414_24_fu_1079_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_24_fu_1079_p2.read()[0].to_bool())? weight1x1_tile_buffe_54_reg_476.read(): weight1x1_tile_buffe_72_reg_1539.read());
}

void load_conv1x1_weights::thread_select_ln414_1_fu_858_p3() {
    select_ln414_1_fu_858_p3 = (!icmp_ln414_fu_845_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_fu_845_p2.read()[0].to_bool())? trunc_ln647_reg_1485.read(): weight1x1_tile_buffe_61_reg_560.read());
}

void load_conv1x1_weights::thread_select_ln414_20_fu_1111_p3() {
    select_ln414_20_fu_1111_p3 = (!icmp_ln414_25_fu_1105_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_25_fu_1105_p2.read()[0].to_bool())? weight1x1_tile_buffe_73_reg_1545.read(): weight1x1_tile_buffe_32_reg_212.read());
}

void load_conv1x1_weights::thread_select_ln414_21_fu_1118_p3() {
    select_ln414_21_fu_1118_p3 = (!icmp_ln414_25_fu_1105_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_25_fu_1105_p2.read()[0].to_bool())? weight1x1_tile_buffe_56_reg_500.read(): weight1x1_tile_buffe_73_reg_1545.read());
}

void load_conv1x1_weights::thread_select_ln414_22_fu_1137_p3() {
    select_ln414_22_fu_1137_p3 = (!icmp_ln414_26_fu_1131_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_26_fu_1131_p2.read()[0].to_bool())? weight1x1_tile_buffe_74_reg_1551.read(): weight1x1_tile_buffe_33_reg_224.read());
}

void load_conv1x1_weights::thread_select_ln414_23_fu_1144_p3() {
    select_ln414_23_fu_1144_p3 = (!icmp_ln414_26_fu_1131_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_26_fu_1131_p2.read()[0].to_bool())? weight1x1_tile_buffe_57_reg_512.read(): weight1x1_tile_buffe_74_reg_1551.read());
}

void load_conv1x1_weights::thread_select_ln414_24_fu_1163_p3() {
    select_ln414_24_fu_1163_p3 = (!icmp_ln414_27_fu_1157_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_27_fu_1157_p2.read()[0].to_bool())? weight1x1_tile_buffe_75_reg_1557.read(): weight1x1_tile_buffe_35_reg_248.read());
}

void load_conv1x1_weights::thread_select_ln414_25_fu_1170_p3() {
    select_ln414_25_fu_1170_p3 = (!icmp_ln414_27_fu_1157_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_27_fu_1157_p2.read()[0].to_bool())? weight1x1_tile_buffe_59_reg_536.read(): weight1x1_tile_buffe_75_reg_1557.read());
}

void load_conv1x1_weights::thread_select_ln414_26_fu_1189_p3() {
    select_ln414_26_fu_1189_p3 = (!icmp_ln414_28_fu_1183_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_28_fu_1183_p2.read()[0].to_bool())? weight1x1_tile_buffe_76_reg_1563.read(): weight1x1_tile_buffe_36_reg_260.read());
}

void load_conv1x1_weights::thread_select_ln414_27_fu_1196_p3() {
    select_ln414_27_fu_1196_p3 = (!icmp_ln414_28_fu_1183_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_28_fu_1183_p2.read()[0].to_bool())? weight1x1_tile_buffe_60_reg_548.read(): weight1x1_tile_buffe_76_reg_1563.read());
}

void load_conv1x1_weights::thread_select_ln414_28_fu_1215_p3() {
    select_ln414_28_fu_1215_p3 = (!icmp_ln414_29_fu_1209_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_29_fu_1209_p2.read()[0].to_bool())? weight1x1_tile_buffe_77_reg_1569.read(): weight1x1_tile_buffe_38_reg_284.read());
}

void load_conv1x1_weights::thread_select_ln414_29_fu_1222_p3() {
    select_ln414_29_fu_1222_p3 = (!icmp_ln414_29_fu_1209_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_29_fu_1209_p2.read()[0].to_bool())? weight1x1_tile_buffe_62_reg_572.read(): weight1x1_tile_buffe_77_reg_1569.read());
}

void load_conv1x1_weights::thread_select_ln414_2_fu_877_p3() {
    select_ln414_2_fu_877_p3 = (!icmp_ln414_16_fu_871_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_16_fu_871_p2.read()[0].to_bool())? weight1x1_tile_buffe_42_reg_332.read(): weight1x1_tile_buffe_64_reg_1491.read());
}

void load_conv1x1_weights::thread_select_ln414_30_fu_1241_p3() {
    select_ln414_30_fu_1241_p3 = (!icmp_ln414_30_fu_1235_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_30_fu_1235_p2.read()[0].to_bool())? weight1x1_tile_buffe_78_reg_1575.read(): weight1x1_tile_buffe_39_reg_296.read());
}

void load_conv1x1_weights::thread_select_ln414_31_fu_1248_p3() {
    select_ln414_31_fu_1248_p3 = (!icmp_ln414_30_fu_1235_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_30_fu_1235_p2.read()[0].to_bool())? weight1x1_tile_buffe_63_reg_584.read(): weight1x1_tile_buffe_78_reg_1575.read());
}

void load_conv1x1_weights::thread_select_ln414_3_fu_884_p3() {
    select_ln414_3_fu_884_p3 = (!icmp_ln414_16_fu_871_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_16_fu_871_p2.read()[0].to_bool())? weight1x1_tile_buffe_64_reg_1491.read(): weight1x1_tile_buffe_58_reg_524.read());
}

void load_conv1x1_weights::thread_select_ln414_4_fu_903_p3() {
    select_ln414_4_fu_903_p3 = (!icmp_ln414_17_fu_897_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_17_fu_897_p2.read()[0].to_bool())? weight1x1_tile_buffe_44_reg_356.read(): weight1x1_tile_buffe_65_reg_1497.read());
}

void load_conv1x1_weights::thread_select_ln414_5_fu_910_p3() {
    select_ln414_5_fu_910_p3 = (!icmp_ln414_17_fu_897_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_17_fu_897_p2.read()[0].to_bool())? weight1x1_tile_buffe_65_reg_1497.read(): weight1x1_tile_buffe_55_reg_488.read());
}

void load_conv1x1_weights::thread_select_ln414_6_fu_929_p3() {
    select_ln414_6_fu_929_p3 = (!icmp_ln414_18_fu_923_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_18_fu_923_p2.read()[0].to_bool())? weight1x1_tile_buffe_45_reg_368.read(): weight1x1_tile_buffe_66_reg_1503.read());
}

void load_conv1x1_weights::thread_select_ln414_7_fu_936_p3() {
    select_ln414_7_fu_936_p3 = (!icmp_ln414_18_fu_923_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_18_fu_923_p2.read()[0].to_bool())? weight1x1_tile_buffe_66_reg_1503.read(): weight1x1_tile_buffe_52_reg_452.read());
}

void load_conv1x1_weights::thread_select_ln414_8_fu_955_p3() {
    select_ln414_8_fu_955_p3 = (!icmp_ln414_19_fu_949_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_19_fu_949_p2.read()[0].to_bool())? weight1x1_tile_buffe_47_reg_392.read(): weight1x1_tile_buffe_67_reg_1509.read());
}

void load_conv1x1_weights::thread_select_ln414_9_fu_962_p3() {
    select_ln414_9_fu_962_p3 = (!icmp_ln414_19_fu_949_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_19_fu_949_p2.read()[0].to_bool())? weight1x1_tile_buffe_67_reg_1509.read(): weight1x1_tile_buffe_49_reg_416.read());
}

void load_conv1x1_weights::thread_select_ln414_fu_851_p3() {
    select_ln414_fu_851_p3 = (!icmp_ln414_fu_845_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln414_fu_845_p2.read()[0].to_bool())? weight1x1_tile_buffe_41_reg_320.read(): trunc_ln647_reg_1485.read());
}

void load_conv1x1_weights::thread_shl_ln_fu_838_p3() {
    shl_ln_fu_838_p3 = esl_concat<1,4>(trunc_ln414_reg_1480_pp0_iter1_reg.read(), ap_const_lv4_0);
}

void load_conv1x1_weights::thread_tmp38_cast_fu_626_p1() {
    tmp38_cast_fu_626_p1 = esl_zext<13,12>(tmp5_fu_619_p3.read());
}

void load_conv1x1_weights::thread_tmp5_fu_619_p3() {
    tmp5_fu_619_p3 = esl_concat<11,1>(tmp_reg_1455.read(), ap_const_lv1_0);
}

void load_conv1x1_weights::thread_trunc_ln232_fu_630_p1() {
    trunc_ln232_fu_630_p1 = conv1x1_weight_ptr.read().range(12-1, 0);
}

void load_conv1x1_weights::thread_trunc_ln414_fu_680_p1() {
    trunc_ln414_fu_680_p1 = i_0_reg_596.read().range(1-1, 0);
}

void load_conv1x1_weights::thread_trunc_ln647_fu_684_p1() {
    trunc_ln647_fu_684_p1 = m_axi_conv_weight_1x1_all_V_RDATA.read().range(32-1, 0);
}

void load_conv1x1_weights::thread_zext_ln232_1_fu_644_p1() {
    zext_ln232_1_fu_644_p1 = esl_zext<27,13>(add_ln232_fu_638_p2.read());
}

void load_conv1x1_weights::thread_zext_ln232_2_fu_648_p1() {
    zext_ln232_2_fu_648_p1 = esl_zext<27,26>(conv_weight_1x1_all_V_offset.read());
}

void load_conv1x1_weights::thread_zext_ln232_3_fu_658_p1() {
    zext_ln232_3_fu_658_p1 = esl_zext<64,27>(add_ln232_1_reg_1460.read());
}

void load_conv1x1_weights::thread_zext_ln232_fu_634_p1() {
    zext_ln232_fu_634_p1 = esl_zext<13,12>(trunc_ln232_fu_630_p1.read());
}

void load_conv1x1_weights::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(m_axi_conv_weight_1x1_all_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 512 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln230_fu_668_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln230_fu_668_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXX";
            break;
    }
}

}

