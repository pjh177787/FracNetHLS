// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _load_conv1x1_weights_HH_
#define _load_conv1x1_weights_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "FracNet_mac_muladcud.h"

namespace ap_rtl {

struct load_conv1x1_weights : public sc_module {
    // Port declarations 88
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_conv_weight_1x1_all_V_AWVALID;
    sc_in< sc_logic > m_axi_conv_weight_1x1_all_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_conv_weight_1x1_all_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_conv_weight_1x1_all_V_AWID;
    sc_out< sc_lv<32> > m_axi_conv_weight_1x1_all_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_conv_weight_1x1_all_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_conv_weight_1x1_all_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_conv_weight_1x1_all_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_conv_weight_1x1_all_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_conv_weight_1x1_all_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_conv_weight_1x1_all_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_conv_weight_1x1_all_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_conv_weight_1x1_all_V_AWUSER;
    sc_out< sc_logic > m_axi_conv_weight_1x1_all_V_WVALID;
    sc_in< sc_logic > m_axi_conv_weight_1x1_all_V_WREADY;
    sc_out< sc_lv<512> > m_axi_conv_weight_1x1_all_V_WDATA;
    sc_out< sc_lv<64> > m_axi_conv_weight_1x1_all_V_WSTRB;
    sc_out< sc_logic > m_axi_conv_weight_1x1_all_V_WLAST;
    sc_out< sc_lv<1> > m_axi_conv_weight_1x1_all_V_WID;
    sc_out< sc_lv<1> > m_axi_conv_weight_1x1_all_V_WUSER;
    sc_out< sc_logic > m_axi_conv_weight_1x1_all_V_ARVALID;
    sc_in< sc_logic > m_axi_conv_weight_1x1_all_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_conv_weight_1x1_all_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_conv_weight_1x1_all_V_ARID;
    sc_out< sc_lv<32> > m_axi_conv_weight_1x1_all_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_conv_weight_1x1_all_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_conv_weight_1x1_all_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_conv_weight_1x1_all_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_conv_weight_1x1_all_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_conv_weight_1x1_all_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_conv_weight_1x1_all_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_conv_weight_1x1_all_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_conv_weight_1x1_all_V_ARUSER;
    sc_in< sc_logic > m_axi_conv_weight_1x1_all_V_RVALID;
    sc_out< sc_logic > m_axi_conv_weight_1x1_all_V_RREADY;
    sc_in< sc_lv<512> > m_axi_conv_weight_1x1_all_V_RDATA;
    sc_in< sc_logic > m_axi_conv_weight_1x1_all_V_RLAST;
    sc_in< sc_lv<1> > m_axi_conv_weight_1x1_all_V_RID;
    sc_in< sc_lv<1> > m_axi_conv_weight_1x1_all_V_RUSER;
    sc_in< sc_lv<2> > m_axi_conv_weight_1x1_all_V_RRESP;
    sc_in< sc_logic > m_axi_conv_weight_1x1_all_V_BVALID;
    sc_out< sc_logic > m_axi_conv_weight_1x1_all_V_BREADY;
    sc_in< sc_lv<2> > m_axi_conv_weight_1x1_all_V_BRESP;
    sc_in< sc_lv<1> > m_axi_conv_weight_1x1_all_V_BID;
    sc_in< sc_lv<1> > m_axi_conv_weight_1x1_all_V_BUSER;
    sc_in< sc_lv<26> > conv_weight_1x1_all_V_offset;
    sc_in< sc_lv<13> > conv1x1_weight_ptr;
    sc_in< sc_lv<6> > c_out;
    sc_in< sc_lv<6> > c_in;
    sc_in< sc_lv<7> > in_channels_after_pa;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;
    sc_out< sc_lv<32> > ap_return_3;
    sc_out< sc_lv<32> > ap_return_4;
    sc_out< sc_lv<32> > ap_return_5;
    sc_out< sc_lv<32> > ap_return_6;
    sc_out< sc_lv<32> > ap_return_7;
    sc_out< sc_lv<32> > ap_return_8;
    sc_out< sc_lv<32> > ap_return_9;
    sc_out< sc_lv<32> > ap_return_10;
    sc_out< sc_lv<32> > ap_return_11;
    sc_out< sc_lv<32> > ap_return_12;
    sc_out< sc_lv<32> > ap_return_13;
    sc_out< sc_lv<32> > ap_return_14;
    sc_out< sc_lv<32> > ap_return_15;
    sc_out< sc_lv<32> > ap_return_16;
    sc_out< sc_lv<32> > ap_return_17;
    sc_out< sc_lv<32> > ap_return_18;
    sc_out< sc_lv<32> > ap_return_19;
    sc_out< sc_lv<32> > ap_return_20;
    sc_out< sc_lv<32> > ap_return_21;
    sc_out< sc_lv<32> > ap_return_22;
    sc_out< sc_lv<32> > ap_return_23;
    sc_out< sc_lv<32> > ap_return_24;
    sc_out< sc_lv<32> > ap_return_25;
    sc_out< sc_lv<32> > ap_return_26;
    sc_out< sc_lv<32> > ap_return_27;
    sc_out< sc_lv<32> > ap_return_28;
    sc_out< sc_lv<32> > ap_return_29;
    sc_out< sc_lv<32> > ap_return_30;
    sc_out< sc_lv<32> > ap_return_31;


    // Module declarations
    load_conv1x1_weights(sc_module_name name);
    SC_HAS_PROCESS(load_conv1x1_weights);

    ~load_conv1x1_weights();

    sc_trace_file* mVcdFile;

    FracNet_mac_muladcud<1,1,6,7,6,11>* FracNet_mac_muladcud_U1341;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > conv_weight_1x1_all_V_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > conv_weight_1x1_all_V_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln230_reg_1471;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_32_reg_212;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_33_reg_224;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_34_reg_236;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_35_reg_248;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_36_reg_260;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_37_reg_272;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_38_reg_284;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_39_reg_296;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_40_reg_308;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_41_reg_320;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_42_reg_332;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_43_reg_344;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_44_reg_356;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_45_reg_368;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_46_reg_380;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_47_reg_392;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_48_reg_404;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_49_reg_416;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_50_reg_428;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_51_reg_440;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_52_reg_452;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_53_reg_464;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_54_reg_476;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_55_reg_488;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_56_reg_500;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_57_reg_512;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_58_reg_524;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_59_reg_536;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_60_reg_548;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_61_reg_560;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_62_reg_572;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_63_reg_584;
    sc_signal< sc_lv<2> > i_0_reg_596;
    sc_signal< sc_lv<11> > grp_fu_1447_p3;
    sc_signal< sc_lv<11> > tmp_reg_1455;
    sc_signal< sc_lv<27> > add_ln232_1_fu_652_p2;
    sc_signal< sc_lv<27> > add_ln232_1_reg_1460;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln230_fu_668_p2;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln230_reg_1471_pp0_iter1_reg;
    sc_signal< sc_lv<2> > i_fu_674_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > trunc_ln414_fu_680_p1;
    sc_signal< sc_lv<1> > trunc_ln414_reg_1480;
    sc_signal< sc_lv<1> > trunc_ln414_reg_1480_pp0_iter1_reg;
    sc_signal< sc_lv<32> > trunc_ln647_fu_684_p1;
    sc_signal< sc_lv<32> > trunc_ln647_reg_1485;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_64_reg_1491;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_65_reg_1497;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_66_reg_1503;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_67_reg_1509;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_68_reg_1515;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_69_reg_1521;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_70_reg_1527;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_71_reg_1533;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_72_reg_1539;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_73_reg_1545;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_74_reg_1551;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_75_reg_1557;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_76_reg_1563;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_77_reg_1569;
    sc_signal< sc_lv<32> > weight1x1_tile_buffe_78_reg_1575;
    sc_signal< sc_lv<32> > select_ln414_fu_851_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<32> > select_ln414_1_fu_858_p3;
    sc_signal< sc_lv<32> > select_ln414_2_fu_877_p3;
    sc_signal< sc_lv<32> > select_ln414_3_fu_884_p3;
    sc_signal< sc_lv<32> > select_ln414_4_fu_903_p3;
    sc_signal< sc_lv<32> > select_ln414_5_fu_910_p3;
    sc_signal< sc_lv<32> > select_ln414_6_fu_929_p3;
    sc_signal< sc_lv<32> > select_ln414_7_fu_936_p3;
    sc_signal< sc_lv<32> > select_ln414_8_fu_955_p3;
    sc_signal< sc_lv<32> > select_ln414_9_fu_962_p3;
    sc_signal< sc_lv<32> > select_ln414_10_fu_981_p3;
    sc_signal< sc_lv<32> > select_ln414_11_fu_988_p3;
    sc_signal< sc_lv<32> > select_ln414_12_fu_1007_p3;
    sc_signal< sc_lv<32> > select_ln414_13_fu_1014_p3;
    sc_signal< sc_lv<32> > select_ln414_14_fu_1033_p3;
    sc_signal< sc_lv<32> > select_ln414_15_fu_1040_p3;
    sc_signal< sc_lv<32> > select_ln414_16_fu_1059_p3;
    sc_signal< sc_lv<32> > select_ln414_17_fu_1066_p3;
    sc_signal< sc_lv<32> > select_ln414_18_fu_1085_p3;
    sc_signal< sc_lv<32> > select_ln414_19_fu_1092_p3;
    sc_signal< sc_lv<32> > select_ln414_20_fu_1111_p3;
    sc_signal< sc_lv<32> > select_ln414_21_fu_1118_p3;
    sc_signal< sc_lv<32> > select_ln414_22_fu_1137_p3;
    sc_signal< sc_lv<32> > select_ln414_23_fu_1144_p3;
    sc_signal< sc_lv<32> > select_ln414_24_fu_1163_p3;
    sc_signal< sc_lv<32> > select_ln414_25_fu_1170_p3;
    sc_signal< sc_lv<32> > select_ln414_26_fu_1189_p3;
    sc_signal< sc_lv<32> > select_ln414_27_fu_1196_p3;
    sc_signal< sc_lv<32> > select_ln414_28_fu_1215_p3;
    sc_signal< sc_lv<32> > select_ln414_29_fu_1222_p3;
    sc_signal< sc_lv<32> > select_ln414_30_fu_1241_p3;
    sc_signal< sc_lv<32> > select_ln414_31_fu_1248_p3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state10;
    sc_signal< sc_lv<64> > zext_ln232_3_fu_658_p1;
    sc_signal< sc_lv<12> > tmp5_fu_619_p3;
    sc_signal< sc_lv<12> > trunc_ln232_fu_630_p1;
    sc_signal< sc_lv<13> > tmp38_cast_fu_626_p1;
    sc_signal< sc_lv<13> > zext_ln232_fu_634_p1;
    sc_signal< sc_lv<13> > add_ln232_fu_638_p2;
    sc_signal< sc_lv<27> > zext_ln232_2_fu_648_p1;
    sc_signal< sc_lv<27> > zext_ln232_1_fu_644_p1;
    sc_signal< sc_lv<5> > shl_ln_fu_838_p3;
    sc_signal< sc_lv<1> > icmp_ln414_fu_845_p2;
    sc_signal< sc_lv<5> > or_ln414_fu_865_p2;
    sc_signal< sc_lv<1> > icmp_ln414_16_fu_871_p2;
    sc_signal< sc_lv<5> > or_ln414_15_fu_891_p2;
    sc_signal< sc_lv<1> > icmp_ln414_17_fu_897_p2;
    sc_signal< sc_lv<5> > or_ln414_16_fu_917_p2;
    sc_signal< sc_lv<1> > icmp_ln414_18_fu_923_p2;
    sc_signal< sc_lv<5> > or_ln414_17_fu_943_p2;
    sc_signal< sc_lv<1> > icmp_ln414_19_fu_949_p2;
    sc_signal< sc_lv<5> > or_ln414_18_fu_969_p2;
    sc_signal< sc_lv<1> > icmp_ln414_20_fu_975_p2;
    sc_signal< sc_lv<5> > or_ln414_19_fu_995_p2;
    sc_signal< sc_lv<1> > icmp_ln414_21_fu_1001_p2;
    sc_signal< sc_lv<5> > or_ln414_20_fu_1021_p2;
    sc_signal< sc_lv<1> > icmp_ln414_22_fu_1027_p2;
    sc_signal< sc_lv<5> > or_ln414_21_fu_1047_p2;
    sc_signal< sc_lv<1> > icmp_ln414_23_fu_1053_p2;
    sc_signal< sc_lv<5> > or_ln414_22_fu_1073_p2;
    sc_signal< sc_lv<1> > icmp_ln414_24_fu_1079_p2;
    sc_signal< sc_lv<5> > or_ln414_23_fu_1099_p2;
    sc_signal< sc_lv<1> > icmp_ln414_25_fu_1105_p2;
    sc_signal< sc_lv<5> > or_ln414_24_fu_1125_p2;
    sc_signal< sc_lv<1> > icmp_ln414_26_fu_1131_p2;
    sc_signal< sc_lv<5> > or_ln414_25_fu_1151_p2;
    sc_signal< sc_lv<1> > icmp_ln414_27_fu_1157_p2;
    sc_signal< sc_lv<5> > or_ln414_26_fu_1177_p2;
    sc_signal< sc_lv<1> > icmp_ln414_28_fu_1183_p2;
    sc_signal< sc_lv<5> > or_ln414_27_fu_1203_p2;
    sc_signal< sc_lv<1> > icmp_ln414_29_fu_1209_p2;
    sc_signal< sc_lv<5> > or_ln414_28_fu_1229_p2;
    sc_signal< sc_lv<1> > icmp_ln414_30_fu_1235_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<6> > grp_fu_1447_p0;
    sc_signal< sc_lv<7> > grp_fu_1447_p1;
    sc_signal< sc_lv<6> > grp_fu_1447_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<11> > grp_fu_1447_p00;
    sc_signal< sc_lv<11> > grp_fu_1447_p10;
    sc_signal< sc_lv<11> > grp_fu_1447_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_pp0_stage0;
    static const sc_lv<11> ap_ST_fsm_state13;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_120;
    static const sc_lv<32> ap_const_lv32_13F;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<32> ap_const_lv32_15F;
    static const sc_lv<32> ap_const_lv32_160;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<32> ap_const_lv32_180;
    static const sc_lv<32> ap_const_lv32_19F;
    static const sc_lv<32> ap_const_lv32_1A0;
    static const sc_lv<32> ap_const_lv32_1BF;
    static const sc_lv<32> ap_const_lv32_1C0;
    static const sc_lv<32> ap_const_lv32_1DF;
    static const sc_lv<32> ap_const_lv32_1E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<32> ap_const_lv32_A;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln232_1_fu_652_p2();
    void thread_add_ln232_fu_638_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter0();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state12_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state10();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_16();
    void thread_ap_return_17();
    void thread_ap_return_18();
    void thread_ap_return_19();
    void thread_ap_return_2();
    void thread_ap_return_20();
    void thread_ap_return_21();
    void thread_ap_return_22();
    void thread_ap_return_23();
    void thread_ap_return_24();
    void thread_ap_return_25();
    void thread_ap_return_26();
    void thread_ap_return_27();
    void thread_ap_return_28();
    void thread_ap_return_29();
    void thread_ap_return_3();
    void thread_ap_return_30();
    void thread_ap_return_31();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_conv_weight_1x1_all_V_blk_n_AR();
    void thread_conv_weight_1x1_all_V_blk_n_R();
    void thread_grp_fu_1447_p0();
    void thread_grp_fu_1447_p00();
    void thread_grp_fu_1447_p1();
    void thread_grp_fu_1447_p10();
    void thread_grp_fu_1447_p2();
    void thread_grp_fu_1447_p20();
    void thread_i_fu_674_p2();
    void thread_icmp_ln230_fu_668_p2();
    void thread_icmp_ln414_16_fu_871_p2();
    void thread_icmp_ln414_17_fu_897_p2();
    void thread_icmp_ln414_18_fu_923_p2();
    void thread_icmp_ln414_19_fu_949_p2();
    void thread_icmp_ln414_20_fu_975_p2();
    void thread_icmp_ln414_21_fu_1001_p2();
    void thread_icmp_ln414_22_fu_1027_p2();
    void thread_icmp_ln414_23_fu_1053_p2();
    void thread_icmp_ln414_24_fu_1079_p2();
    void thread_icmp_ln414_25_fu_1105_p2();
    void thread_icmp_ln414_26_fu_1131_p2();
    void thread_icmp_ln414_27_fu_1157_p2();
    void thread_icmp_ln414_28_fu_1183_p2();
    void thread_icmp_ln414_29_fu_1209_p2();
    void thread_icmp_ln414_30_fu_1235_p2();
    void thread_icmp_ln414_fu_845_p2();
    void thread_m_axi_conv_weight_1x1_all_V_ARADDR();
    void thread_m_axi_conv_weight_1x1_all_V_ARBURST();
    void thread_m_axi_conv_weight_1x1_all_V_ARCACHE();
    void thread_m_axi_conv_weight_1x1_all_V_ARID();
    void thread_m_axi_conv_weight_1x1_all_V_ARLEN();
    void thread_m_axi_conv_weight_1x1_all_V_ARLOCK();
    void thread_m_axi_conv_weight_1x1_all_V_ARPROT();
    void thread_m_axi_conv_weight_1x1_all_V_ARQOS();
    void thread_m_axi_conv_weight_1x1_all_V_ARREGION();
    void thread_m_axi_conv_weight_1x1_all_V_ARSIZE();
    void thread_m_axi_conv_weight_1x1_all_V_ARUSER();
    void thread_m_axi_conv_weight_1x1_all_V_ARVALID();
    void thread_m_axi_conv_weight_1x1_all_V_AWADDR();
    void thread_m_axi_conv_weight_1x1_all_V_AWBURST();
    void thread_m_axi_conv_weight_1x1_all_V_AWCACHE();
    void thread_m_axi_conv_weight_1x1_all_V_AWID();
    void thread_m_axi_conv_weight_1x1_all_V_AWLEN();
    void thread_m_axi_conv_weight_1x1_all_V_AWLOCK();
    void thread_m_axi_conv_weight_1x1_all_V_AWPROT();
    void thread_m_axi_conv_weight_1x1_all_V_AWQOS();
    void thread_m_axi_conv_weight_1x1_all_V_AWREGION();
    void thread_m_axi_conv_weight_1x1_all_V_AWSIZE();
    void thread_m_axi_conv_weight_1x1_all_V_AWUSER();
    void thread_m_axi_conv_weight_1x1_all_V_AWVALID();
    void thread_m_axi_conv_weight_1x1_all_V_BREADY();
    void thread_m_axi_conv_weight_1x1_all_V_RREADY();
    void thread_m_axi_conv_weight_1x1_all_V_WDATA();
    void thread_m_axi_conv_weight_1x1_all_V_WID();
    void thread_m_axi_conv_weight_1x1_all_V_WLAST();
    void thread_m_axi_conv_weight_1x1_all_V_WSTRB();
    void thread_m_axi_conv_weight_1x1_all_V_WUSER();
    void thread_m_axi_conv_weight_1x1_all_V_WVALID();
    void thread_or_ln414_15_fu_891_p2();
    void thread_or_ln414_16_fu_917_p2();
    void thread_or_ln414_17_fu_943_p2();
    void thread_or_ln414_18_fu_969_p2();
    void thread_or_ln414_19_fu_995_p2();
    void thread_or_ln414_20_fu_1021_p2();
    void thread_or_ln414_21_fu_1047_p2();
    void thread_or_ln414_22_fu_1073_p2();
    void thread_or_ln414_23_fu_1099_p2();
    void thread_or_ln414_24_fu_1125_p2();
    void thread_or_ln414_25_fu_1151_p2();
    void thread_or_ln414_26_fu_1177_p2();
    void thread_or_ln414_27_fu_1203_p2();
    void thread_or_ln414_28_fu_1229_p2();
    void thread_or_ln414_fu_865_p2();
    void thread_select_ln414_10_fu_981_p3();
    void thread_select_ln414_11_fu_988_p3();
    void thread_select_ln414_12_fu_1007_p3();
    void thread_select_ln414_13_fu_1014_p3();
    void thread_select_ln414_14_fu_1033_p3();
    void thread_select_ln414_15_fu_1040_p3();
    void thread_select_ln414_16_fu_1059_p3();
    void thread_select_ln414_17_fu_1066_p3();
    void thread_select_ln414_18_fu_1085_p3();
    void thread_select_ln414_19_fu_1092_p3();
    void thread_select_ln414_1_fu_858_p3();
    void thread_select_ln414_20_fu_1111_p3();
    void thread_select_ln414_21_fu_1118_p3();
    void thread_select_ln414_22_fu_1137_p3();
    void thread_select_ln414_23_fu_1144_p3();
    void thread_select_ln414_24_fu_1163_p3();
    void thread_select_ln414_25_fu_1170_p3();
    void thread_select_ln414_26_fu_1189_p3();
    void thread_select_ln414_27_fu_1196_p3();
    void thread_select_ln414_28_fu_1215_p3();
    void thread_select_ln414_29_fu_1222_p3();
    void thread_select_ln414_2_fu_877_p3();
    void thread_select_ln414_30_fu_1241_p3();
    void thread_select_ln414_31_fu_1248_p3();
    void thread_select_ln414_3_fu_884_p3();
    void thread_select_ln414_4_fu_903_p3();
    void thread_select_ln414_5_fu_910_p3();
    void thread_select_ln414_6_fu_929_p3();
    void thread_select_ln414_7_fu_936_p3();
    void thread_select_ln414_8_fu_955_p3();
    void thread_select_ln414_9_fu_962_p3();
    void thread_select_ln414_fu_851_p3();
    void thread_shl_ln_fu_838_p3();
    void thread_tmp38_cast_fu_626_p1();
    void thread_tmp5_fu_619_p3();
    void thread_trunc_ln232_fu_630_p1();
    void thread_trunc_ln414_fu_680_p1();
    void thread_trunc_ln647_fu_684_p1();
    void thread_zext_ln232_1_fu_644_p1();
    void thread_zext_ln232_2_fu_648_p1();
    void thread_zext_ln232_3_fu_658_p1();
    void thread_zext_ln232_fu_634_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
