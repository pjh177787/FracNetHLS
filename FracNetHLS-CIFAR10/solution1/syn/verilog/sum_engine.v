// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sum_engine (
        ap_ready,
        t0_V,
        t1_V,
        t2_V,
        t3_V,
        t4_V,
        t5_V,
        t6_V,
        t7_V,
        t8_V,
        ap_return
);


output   ap_ready;
input  [5:0] t0_V;
input  [5:0] t1_V;
input  [5:0] t2_V;
input  [5:0] t3_V;
input  [5:0] t4_V;
input  [5:0] t5_V;
input  [5:0] t6_V;
input  [5:0] t7_V;
input  [5:0] t8_V;
output  [7:0] ap_return;

wire   [5:0] add0_V_fu_84_p2;
wire   [5:0] add1_V_fu_90_p2;
wire   [5:0] add2_V_fu_96_p2;
wire   [5:0] add3_V_fu_102_p2;
wire  signed [6:0] rhs_V_fu_112_p1;
wire  signed [6:0] lhs_V_fu_108_p1;
wire  signed [6:0] lhs_V_1_fu_116_p1;
wire  signed [6:0] rhs_V_1_fu_120_p1;
wire   [6:0] add_ln68_1_fu_130_p2;
wire   [6:0] add_ln68_fu_124_p2;
wire   [6:0] add6_V_fu_136_p2;
wire  signed [7:0] lhs_V_2_fu_142_p1;
wire   [7:0] rhs_V_2_fu_146_p1;

assign add0_V_fu_84_p2 = (t1_V + t0_V);

assign add1_V_fu_90_p2 = (t3_V + t2_V);

assign add2_V_fu_96_p2 = (t5_V + t4_V);

assign add3_V_fu_102_p2 = (t7_V + t6_V);

assign add6_V_fu_136_p2 = (add_ln68_1_fu_130_p2 + add_ln68_fu_124_p2);

assign add_ln68_1_fu_130_p2 = ($signed(lhs_V_1_fu_116_p1) + $signed(rhs_V_1_fu_120_p1));

assign add_ln68_fu_124_p2 = ($signed(rhs_V_fu_112_p1) + $signed(lhs_V_fu_108_p1));

assign ap_ready = 1'b1;

assign ap_return = ($signed(lhs_V_2_fu_142_p1) + $signed(rhs_V_2_fu_146_p1));

assign lhs_V_1_fu_116_p1 = $signed(add2_V_fu_96_p2);

assign lhs_V_2_fu_142_p1 = $signed(add6_V_fu_136_p2);

assign lhs_V_fu_108_p1 = $signed(add0_V_fu_84_p2);

assign rhs_V_1_fu_120_p1 = $signed(add3_V_fu_102_p2);

assign rhs_V_2_fu_146_p1 = t8_V;

assign rhs_V_fu_112_p1 = $signed(add1_V_fu_90_p2);

endmodule //sum_engine
