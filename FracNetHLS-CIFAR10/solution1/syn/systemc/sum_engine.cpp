// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sum_engine.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sum_engine::ap_const_logic_1 = sc_dt::Log_1;
const bool sum_engine::ap_const_boolean_1 = true;
const sc_logic sum_engine::ap_const_logic_0 = sc_dt::Log_0;

sum_engine::sum_engine(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_add0_V_fu_84_p2);
    sensitive << ( t0_V );
    sensitive << ( t1_V );

    SC_METHOD(thread_add1_V_fu_90_p2);
    sensitive << ( t2_V );
    sensitive << ( t3_V );

    SC_METHOD(thread_add2_V_fu_96_p2);
    sensitive << ( t4_V );
    sensitive << ( t5_V );

    SC_METHOD(thread_add3_V_fu_102_p2);
    sensitive << ( t6_V );
    sensitive << ( t7_V );

    SC_METHOD(thread_add6_V_fu_136_p2);
    sensitive << ( add_ln68_1_fu_130_p2 );
    sensitive << ( add_ln68_fu_124_p2 );

    SC_METHOD(thread_add_ln68_1_fu_130_p2);
    sensitive << ( lhs_V_1_fu_116_p1 );
    sensitive << ( rhs_V_1_fu_120_p1 );

    SC_METHOD(thread_add_ln68_fu_124_p2);
    sensitive << ( rhs_V_fu_112_p1 );
    sensitive << ( lhs_V_fu_108_p1 );

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( lhs_V_2_fu_142_p1 );
    sensitive << ( rhs_V_2_fu_146_p1 );

    SC_METHOD(thread_lhs_V_1_fu_116_p1);
    sensitive << ( add2_V_fu_96_p2 );

    SC_METHOD(thread_lhs_V_2_fu_142_p1);
    sensitive << ( add6_V_fu_136_p2 );

    SC_METHOD(thread_lhs_V_fu_108_p1);
    sensitive << ( add0_V_fu_84_p2 );

    SC_METHOD(thread_rhs_V_1_fu_120_p1);
    sensitive << ( add3_V_fu_102_p2 );

    SC_METHOD(thread_rhs_V_2_fu_146_p1);
    sensitive << ( t8_V );

    SC_METHOD(thread_rhs_V_fu_112_p1);
    sensitive << ( add1_V_fu_90_p2 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sum_engine_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, t0_V, "(port)t0_V");
    sc_trace(mVcdFile, t1_V, "(port)t1_V");
    sc_trace(mVcdFile, t2_V, "(port)t2_V");
    sc_trace(mVcdFile, t3_V, "(port)t3_V");
    sc_trace(mVcdFile, t4_V, "(port)t4_V");
    sc_trace(mVcdFile, t5_V, "(port)t5_V");
    sc_trace(mVcdFile, t6_V, "(port)t6_V");
    sc_trace(mVcdFile, t7_V, "(port)t7_V");
    sc_trace(mVcdFile, t8_V, "(port)t8_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, add0_V_fu_84_p2, "add0_V_fu_84_p2");
    sc_trace(mVcdFile, add1_V_fu_90_p2, "add1_V_fu_90_p2");
    sc_trace(mVcdFile, add2_V_fu_96_p2, "add2_V_fu_96_p2");
    sc_trace(mVcdFile, add3_V_fu_102_p2, "add3_V_fu_102_p2");
    sc_trace(mVcdFile, rhs_V_fu_112_p1, "rhs_V_fu_112_p1");
    sc_trace(mVcdFile, lhs_V_fu_108_p1, "lhs_V_fu_108_p1");
    sc_trace(mVcdFile, lhs_V_1_fu_116_p1, "lhs_V_1_fu_116_p1");
    sc_trace(mVcdFile, rhs_V_1_fu_120_p1, "rhs_V_1_fu_120_p1");
    sc_trace(mVcdFile, add_ln68_1_fu_130_p2, "add_ln68_1_fu_130_p2");
    sc_trace(mVcdFile, add_ln68_fu_124_p2, "add_ln68_fu_124_p2");
    sc_trace(mVcdFile, add6_V_fu_136_p2, "add6_V_fu_136_p2");
    sc_trace(mVcdFile, lhs_V_2_fu_142_p1, "lhs_V_2_fu_142_p1");
    sc_trace(mVcdFile, rhs_V_2_fu_146_p1, "rhs_V_2_fu_146_p1");
#endif

    }
}

sum_engine::~sum_engine() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void sum_engine::thread_add0_V_fu_84_p2() {
    add0_V_fu_84_p2 = (!t1_V.read().is_01() || !t0_V.read().is_01())? sc_lv<6>(): (sc_biguint<6>(t1_V.read()) + sc_biguint<6>(t0_V.read()));
}

void sum_engine::thread_add1_V_fu_90_p2() {
    add1_V_fu_90_p2 = (!t3_V.read().is_01() || !t2_V.read().is_01())? sc_lv<6>(): (sc_biguint<6>(t3_V.read()) + sc_biguint<6>(t2_V.read()));
}

void sum_engine::thread_add2_V_fu_96_p2() {
    add2_V_fu_96_p2 = (!t5_V.read().is_01() || !t4_V.read().is_01())? sc_lv<6>(): (sc_biguint<6>(t5_V.read()) + sc_biguint<6>(t4_V.read()));
}

void sum_engine::thread_add3_V_fu_102_p2() {
    add3_V_fu_102_p2 = (!t7_V.read().is_01() || !t6_V.read().is_01())? sc_lv<6>(): (sc_biguint<6>(t7_V.read()) + sc_biguint<6>(t6_V.read()));
}

void sum_engine::thread_add6_V_fu_136_p2() {
    add6_V_fu_136_p2 = (!add_ln68_1_fu_130_p2.read().is_01() || !add_ln68_fu_124_p2.read().is_01())? sc_lv<7>(): (sc_biguint<7>(add_ln68_1_fu_130_p2.read()) + sc_biguint<7>(add_ln68_fu_124_p2.read()));
}

void sum_engine::thread_add_ln68_1_fu_130_p2() {
    add_ln68_1_fu_130_p2 = (!lhs_V_1_fu_116_p1.read().is_01() || !rhs_V_1_fu_120_p1.read().is_01())? sc_lv<7>(): (sc_bigint<7>(lhs_V_1_fu_116_p1.read()) + sc_bigint<7>(rhs_V_1_fu_120_p1.read()));
}

void sum_engine::thread_add_ln68_fu_124_p2() {
    add_ln68_fu_124_p2 = (!rhs_V_fu_112_p1.read().is_01() || !lhs_V_fu_108_p1.read().is_01())? sc_lv<7>(): (sc_bigint<7>(rhs_V_fu_112_p1.read()) + sc_bigint<7>(lhs_V_fu_108_p1.read()));
}

void sum_engine::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void sum_engine::thread_ap_return() {
    ap_return = (!lhs_V_2_fu_142_p1.read().is_01() || !rhs_V_2_fu_146_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(lhs_V_2_fu_142_p1.read()) + sc_biguint<8>(rhs_V_2_fu_146_p1.read()));
}

void sum_engine::thread_lhs_V_1_fu_116_p1() {
    lhs_V_1_fu_116_p1 = esl_sext<7,6>(add2_V_fu_96_p2.read());
}

void sum_engine::thread_lhs_V_2_fu_142_p1() {
    lhs_V_2_fu_142_p1 = esl_sext<8,7>(add6_V_fu_136_p2.read());
}

void sum_engine::thread_lhs_V_fu_108_p1() {
    lhs_V_fu_108_p1 = esl_sext<7,6>(add0_V_fu_84_p2.read());
}

void sum_engine::thread_rhs_V_1_fu_120_p1() {
    rhs_V_1_fu_120_p1 = esl_sext<7,6>(add3_V_fu_102_p2.read());
}

void sum_engine::thread_rhs_V_2_fu_146_p1() {
    rhs_V_2_fu_146_p1 = esl_zext<8,6>(t8_V.read());
}

void sum_engine::thread_rhs_V_fu_112_p1() {
    rhs_V_fu_112_p1 = esl_sext<7,6>(add1_V_fu_90_p2.read());
}

}

