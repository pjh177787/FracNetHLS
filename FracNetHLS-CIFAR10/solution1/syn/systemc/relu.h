// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_HH_
#define _relu_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pgconv32_2bit_macdEe.h"

namespace ap_rtl {

struct relu : public sc_module {
    // Port declarations 6
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<14> > norm_V;
    sc_in< sc_lv<11> > shiftx_V;
    sc_in< sc_lv<11> > shifty_V;
    sc_in< sc_lv<11> > weight_V;
    sc_out< sc_lv<14> > ap_return;


    // Module declarations
    relu(sc_module_name name);
    SC_HAS_PROCESS(relu);

    ~relu();

    sc_trace_file* mVcdFile;

    pgconv32_2bit_macdEe<1,1,11,14,19,25>* pgconv32_2bit_macdEe_U18;
    sc_signal< sc_lv<14> > lhs_V_fu_86_p0;
    sc_signal< sc_lv<12> > rhs_V_fu_90_p3;
    sc_signal< sc_lv<15> > lhs_V_fu_86_p1;
    sc_signal< sc_lv<15> > sext_ln728_fu_98_p1;
    sc_signal< sc_lv<15> > ret_V_fu_106_p2;
    sc_signal< sc_lv<14> > tmp_V_fu_120_p0;
    sc_signal< sc_lv<14> > sext_ln1192_fu_102_p1;
    sc_signal< sc_lv<14> > tmp_V_fu_120_p2;
    sc_signal< sc_lv<1> > p_Result_1_fu_126_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_112_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_134_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_152_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_146_p2;
    sc_signal< sc_lv<1> > underflow_fu_140_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_158_p2;
    sc_signal< sc_lv<14> > select_ln340_fu_164_p3;
    sc_signal< sc_lv<14> > select_ln388_fu_172_p3;
    sc_signal< sc_lv<14> > p_Val2_2_fu_180_p3;
    sc_signal< sc_lv<12> > rhs_V_3_fu_198_p3;
    sc_signal< sc_lv<15> > lhs_V_3_fu_194_p1;
    sc_signal< sc_lv<15> > sext_ln728_1_fu_206_p1;
    sc_signal< sc_lv<15> > ret_V_1_fu_214_p2;
    sc_signal< sc_lv<14> > sext_ln1192_1_fu_210_p1;
    sc_signal< sc_lv<14> > p_Val2_4_fu_228_p2;
    sc_signal< sc_lv<19> > rhs_V_4_fu_250_p3;
    sc_signal< sc_lv<25> > grp_fu_583_p3;
    sc_signal< sc_lv<1> > tmp_fu_285_p3;
    sc_signal< sc_lv<14> > p_Val2_7_fu_269_p4;
    sc_signal< sc_lv<14> > zext_ln415_fu_292_p1;
    sc_signal< sc_lv<14> > p_Val2_8_fu_296_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_302_p3;
    sc_signal< sc_lv<1> > p_Result_5_fu_278_p3;
    sc_signal< sc_lv<1> > xor_ln416_fu_310_p2;
    sc_signal< sc_lv<3> > tmp_1_fu_330_p4;
    sc_signal< sc_lv<4> > tmp_2_fu_345_p4;
    sc_signal< sc_lv<1> > carry_1_fu_316_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_354_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_360_p2;
    sc_signal< sc_lv<1> > p_Result_3_fu_234_p3;
    sc_signal< sc_lv<1> > p_Result_2_fu_220_p3;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_374_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_392_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_386_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_412_p3;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_339_p2;
    sc_signal< sc_lv<1> > xor_ln779_fu_419_p2;
    sc_signal< sc_lv<1> > and_ln779_fu_425_p2;
    sc_signal< sc_lv<1> > underflow_1_fu_380_p2;
    sc_signal< sc_lv<1> > deleted_zeros_fu_366_p3;
    sc_signal< sc_lv<1> > p_Result_6_fu_322_p3;
    sc_signal< sc_lv<1> > xor_ln785_fu_453_p2;
    sc_signal< sc_lv<1> > p_Result_4_fu_262_p3;
    sc_signal< sc_lv<1> > or_ln785_fu_459_p2;
    sc_signal< sc_lv<1> > xor_ln785_1_fu_465_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_431_p3;
    sc_signal< sc_lv<1> > and_ln781_fu_447_p2;
    sc_signal< sc_lv<1> > and_ln786_fu_477_p2;
    sc_signal< sc_lv<1> > or_ln786_fu_483_p2;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_489_p2;
    sc_signal< sc_lv<1> > underflow_2_fu_495_p2;
    sc_signal< sc_lv<1> > overflow_fu_471_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_507_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_501_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_188_p2;
    sc_signal< sc_lv<1> > and_ln340_fu_535_p2;
    sc_signal< sc_lv<14> > select_ln388_1_fu_439_p3;
    sc_signal< sc_lv<14> > select_ln388_2_fu_527_p3;
    sc_signal< sc_lv<1> > or_ln340_1_fu_398_p2;
    sc_signal< sc_lv<1> > and_ln340_1_fu_549_p2;
    sc_signal< sc_lv<14> > select_ln340_1_fu_404_p3;
    sc_signal< sc_lv<14> > select_ln340_4_fu_541_p3;
    sc_signal< sc_lv<1> > or_ln340_4_fu_513_p2;
    sc_signal< sc_lv<1> > xor_ln1494_fu_563_p2;
    sc_signal< sc_lv<1> > and_ln340_2_fu_569_p2;
    sc_signal< sc_lv<14> > select_ln340_2_fu_519_p3;
    sc_signal< sc_lv<14> > select_ln340_5_fu_555_p3;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_1FFF;
    static const sc_lv<14> ap_const_lv14_2000;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_Range1_all_ones_fu_354_p2();
    void thread_Range1_all_zeros_fu_360_p2();
    void thread_Range2_all_ones_fu_339_p2();
    void thread_and_ln340_1_fu_549_p2();
    void thread_and_ln340_2_fu_569_p2();
    void thread_and_ln340_fu_535_p2();
    void thread_and_ln779_fu_425_p2();
    void thread_and_ln781_fu_447_p2();
    void thread_and_ln786_fu_477_p2();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_carry_1_fu_316_p2();
    void thread_deleted_ones_fu_431_p3();
    void thread_deleted_zeros_fu_366_p3();
    void thread_icmp_ln1494_fu_188_p2();
    void thread_lhs_V_3_fu_194_p1();
    void thread_lhs_V_fu_86_p0();
    void thread_lhs_V_fu_86_p1();
    void thread_or_ln340_1_fu_398_p2();
    void thread_or_ln340_2_fu_501_p2();
    void thread_or_ln340_3_fu_507_p2();
    void thread_or_ln340_4_fu_513_p2();
    void thread_or_ln340_fu_158_p2();
    void thread_or_ln785_fu_459_p2();
    void thread_or_ln786_fu_483_p2();
    void thread_overflow_fu_471_p2();
    void thread_p_Result_1_fu_126_p3();
    void thread_p_Result_2_fu_220_p3();
    void thread_p_Result_3_fu_234_p3();
    void thread_p_Result_4_fu_262_p3();
    void thread_p_Result_5_fu_278_p3();
    void thread_p_Result_6_fu_322_p3();
    void thread_p_Result_s_fu_112_p3();
    void thread_p_Val2_2_fu_180_p3();
    void thread_p_Val2_4_fu_228_p2();
    void thread_p_Val2_7_fu_269_p4();
    void thread_p_Val2_8_fu_296_p2();
    void thread_ret_V_1_fu_214_p2();
    void thread_ret_V_fu_106_p2();
    void thread_rhs_V_3_fu_198_p3();
    void thread_rhs_V_4_fu_250_p3();
    void thread_rhs_V_fu_90_p3();
    void thread_select_ln340_1_fu_404_p3();
    void thread_select_ln340_2_fu_519_p3();
    void thread_select_ln340_4_fu_541_p3();
    void thread_select_ln340_5_fu_555_p3();
    void thread_select_ln340_fu_164_p3();
    void thread_select_ln388_1_fu_439_p3();
    void thread_select_ln388_2_fu_527_p3();
    void thread_select_ln388_fu_172_p3();
    void thread_sext_ln1192_1_fu_210_p1();
    void thread_sext_ln1192_fu_102_p1();
    void thread_sext_ln728_1_fu_206_p1();
    void thread_sext_ln728_fu_98_p1();
    void thread_tmp_1_fu_330_p4();
    void thread_tmp_2_fu_345_p4();
    void thread_tmp_3_fu_302_p3();
    void thread_tmp_5_fu_412_p3();
    void thread_tmp_V_fu_120_p0();
    void thread_tmp_V_fu_120_p2();
    void thread_tmp_fu_285_p3();
    void thread_underflow_1_fu_380_p2();
    void thread_underflow_2_fu_495_p2();
    void thread_underflow_fu_140_p2();
    void thread_xor_ln1494_fu_563_p2();
    void thread_xor_ln340_1_fu_392_p2();
    void thread_xor_ln340_2_fu_146_p2();
    void thread_xor_ln340_3_fu_386_p2();
    void thread_xor_ln340_fu_152_p2();
    void thread_xor_ln416_fu_310_p2();
    void thread_xor_ln779_fu_419_p2();
    void thread_xor_ln785_1_fu_465_p2();
    void thread_xor_ln785_fu_453_p2();
    void thread_xor_ln786_1_fu_374_p2();
    void thread_xor_ln786_2_fu_489_p2();
    void thread_xor_ln786_fu_134_p2();
    void thread_zext_ln415_fu_292_p1();
};

}

using namespace ap_rtl;

#endif
