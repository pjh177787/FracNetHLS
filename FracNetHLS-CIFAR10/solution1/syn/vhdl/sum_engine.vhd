-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sum_engine is
port (
    ap_ready : OUT STD_LOGIC;
    t0_V : IN STD_LOGIC_VECTOR (5 downto 0);
    t1_V : IN STD_LOGIC_VECTOR (5 downto 0);
    t2_V : IN STD_LOGIC_VECTOR (5 downto 0);
    t3_V : IN STD_LOGIC_VECTOR (5 downto 0);
    t4_V : IN STD_LOGIC_VECTOR (5 downto 0);
    t5_V : IN STD_LOGIC_VECTOR (5 downto 0);
    t6_V : IN STD_LOGIC_VECTOR (5 downto 0);
    t7_V : IN STD_LOGIC_VECTOR (5 downto 0);
    t8_V : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of sum_engine is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal add0_V_fu_84_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add1_V_fu_90_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add2_V_fu_96_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add3_V_fu_102_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal rhs_V_fu_112_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_fu_108_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_1_fu_116_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal rhs_V_1_fu_120_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln68_1_fu_130_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln68_fu_124_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add6_V_fu_136_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_2_fu_142_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_2_fu_146_p1 : STD_LOGIC_VECTOR (7 downto 0);


begin



    add0_V_fu_84_p2 <= std_logic_vector(unsigned(t1_V) + unsigned(t0_V));
    add1_V_fu_90_p2 <= std_logic_vector(unsigned(t3_V) + unsigned(t2_V));
    add2_V_fu_96_p2 <= std_logic_vector(unsigned(t5_V) + unsigned(t4_V));
    add3_V_fu_102_p2 <= std_logic_vector(unsigned(t7_V) + unsigned(t6_V));
    add6_V_fu_136_p2 <= std_logic_vector(unsigned(add_ln68_1_fu_130_p2) + unsigned(add_ln68_fu_124_p2));
    add_ln68_1_fu_130_p2 <= std_logic_vector(signed(lhs_V_1_fu_116_p1) + signed(rhs_V_1_fu_120_p1));
    add_ln68_fu_124_p2 <= std_logic_vector(signed(rhs_V_fu_112_p1) + signed(lhs_V_fu_108_p1));
    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(signed(lhs_V_2_fu_142_p1) + signed(rhs_V_2_fu_146_p1));
        lhs_V_1_fu_116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add2_V_fu_96_p2),7));

        lhs_V_2_fu_142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add6_V_fu_136_p2),8));

        lhs_V_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add0_V_fu_84_p2),7));

        rhs_V_1_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add3_V_fu_102_p2),7));

    rhs_V_2_fu_146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t8_V),8));
        rhs_V_fu_112_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add1_V_fu_90_p2),7));

end behav;
