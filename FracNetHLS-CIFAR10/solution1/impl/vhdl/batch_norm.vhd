-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity batch_norm is
port (
    ap_ready : OUT STD_LOGIC;
    sum_V : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_V : IN STD_LOGIC_VECTOR (10 downto 0);
    bias_V : IN STD_LOGIC_VECTOR (10 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of batch_norm is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv14_1FFF : STD_LOGIC_VECTOR (13 downto 0) := "01111111111111";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal sext_ln703_fu_62_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_fu_62_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_4_fu_208_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_66_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_fu_66_p2 : signal is "no";
    signal sext_ln731_fu_79_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln731_fu_79_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln731_fu_83_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln731_fu_86_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_fu_108_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_7_fu_100_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln785_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_71_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln786_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_fu_92_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln340_5_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_184_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln388_fu_192_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_4_fu_208_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_fu_208_p00 : STD_LOGIC_VECTOR (18 downto 0);

    component pgconv32_2bit_mulcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;



begin
    pgconv32_2bit_mulcud_U13 : component pgconv32_2bit_mulcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        dout_WIDTH => 19)
    port map (
        din0 => r_V_4_fu_208_p0,
        din1 => weight_V,
        dout => r_V_4_fu_208_p2);




    add_ln731_fu_86_p2 <= std_logic_vector(signed(sext_ln731_fu_79_p1) + signed(trunc_ln731_fu_83_p1));
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        select_ln340_fu_184_p3 when (or_ln340_5_fu_178_p2(0) = '1') else 
        select_ln388_fu_192_p3;
    icmp_ln785_fu_118_p2 <= "0" when (tmp_fu_108_p4 = ap_const_lv6_0) else "1";
    icmp_ln786_fu_148_p2 <= "0" when (tmp_fu_108_p4 = ap_const_lv6_3F) else "1";
    or_ln340_5_fu_178_p2 <= (xor_ln340_fu_172_p2 or overflow_fu_136_p2);
    or_ln340_fu_166_p2 <= (underflow_fu_160_p2 or overflow_fu_136_p2);
    or_ln785_fu_124_p2 <= (p_Result_7_fu_100_p3 or icmp_ln785_fu_118_p2);
    or_ln786_fu_154_p2 <= (xor_ln786_fu_142_p2 or icmp_ln786_fu_148_p2);
    overflow_fu_136_p2 <= (xor_ln785_fu_130_p2 and or_ln785_fu_124_p2);
    p_Result_7_fu_100_p3 <= add_ln731_fu_86_p2(12 downto 12);
    p_Result_s_fu_71_p3 <= ret_V_fu_66_p2(18 downto 18);
    p_Val2_10_fu_92_p3 <= (add_ln731_fu_86_p2 & ap_const_lv1_0);
    r_V_4_fu_208_p0 <= r_V_4_fu_208_p00(8 - 1 downto 0);
    r_V_4_fu_208_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_V),19));
    ret_V_fu_66_p2 <= std_logic_vector(signed(sext_ln703_fu_62_p1) + signed(r_V_4_fu_208_p2));
    select_ln340_fu_184_p3 <= 
        ap_const_lv14_1FFF when (or_ln340_fu_166_p2(0) = '1') else 
        p_Val2_10_fu_92_p3;
    select_ln388_fu_192_p3 <= 
        ap_const_lv14_2000 when (underflow_fu_160_p2(0) = '1') else 
        p_Val2_10_fu_92_p3;
    sext_ln703_fu_62_p0 <= bias_V;
        sext_ln703_fu_62_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_fu_62_p0),19));

    sext_ln731_fu_79_p0 <= bias_V;
        sext_ln731_fu_79_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln731_fu_79_p0),13));

    tmp_fu_108_p4 <= ret_V_fu_66_p2(18 downto 13);
    trunc_ln731_fu_83_p1 <= r_V_4_fu_208_p2(13 - 1 downto 0);
    underflow_fu_160_p2 <= (p_Result_s_fu_71_p3 and or_ln786_fu_154_p2);
    xor_ln340_fu_172_p2 <= (underflow_fu_160_p2 xor ap_const_lv1_1);
    xor_ln785_fu_130_p2 <= (p_Result_s_fu_71_p3 xor ap_const_lv1_1);
    xor_ln786_fu_142_p2 <= (p_Result_7_fu_100_p3 xor ap_const_lv1_1);
end behav;
