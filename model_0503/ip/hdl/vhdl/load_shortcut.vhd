-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity load_shortcut is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_buf_sc_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_0_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_0_V_we0 : OUT STD_LOGIC;
    out_buf_sc_0_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_1_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_1_V_we0 : OUT STD_LOGIC;
    out_buf_sc_1_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_2_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_2_V_we0 : OUT STD_LOGIC;
    out_buf_sc_2_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_3_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_3_V_we0 : OUT STD_LOGIC;
    out_buf_sc_3_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_4_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_4_V_we0 : OUT STD_LOGIC;
    out_buf_sc_4_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_5_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_5_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_5_V_we0 : OUT STD_LOGIC;
    out_buf_sc_5_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_6_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_6_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_6_V_we0 : OUT STD_LOGIC;
    out_buf_sc_6_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_7_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_7_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_7_V_we0 : OUT STD_LOGIC;
    out_buf_sc_7_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_8_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_8_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_8_V_we0 : OUT STD_LOGIC;
    out_buf_sc_8_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_9_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_9_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_9_V_we0 : OUT STD_LOGIC;
    out_buf_sc_9_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_10_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_10_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_10_V_we0 : OUT STD_LOGIC;
    out_buf_sc_10_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_11_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_11_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_11_V_we0 : OUT STD_LOGIC;
    out_buf_sc_11_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_12_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_12_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_12_V_we0 : OUT STD_LOGIC;
    out_buf_sc_12_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_13_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_13_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_13_V_we0 : OUT STD_LOGIC;
    out_buf_sc_13_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_14_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_14_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_14_V_we0 : OUT STD_LOGIC;
    out_buf_sc_14_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_15_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_15_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_15_V_we0 : OUT STD_LOGIC;
    out_buf_sc_15_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_16_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_16_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_16_V_we0 : OUT STD_LOGIC;
    out_buf_sc_16_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_17_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_17_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_17_V_we0 : OUT STD_LOGIC;
    out_buf_sc_17_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_18_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_18_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_18_V_we0 : OUT STD_LOGIC;
    out_buf_sc_18_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_19_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_19_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_19_V_we0 : OUT STD_LOGIC;
    out_buf_sc_19_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_20_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_20_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_20_V_we0 : OUT STD_LOGIC;
    out_buf_sc_20_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_21_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_21_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_21_V_we0 : OUT STD_LOGIC;
    out_buf_sc_21_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_22_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_22_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_22_V_we0 : OUT STD_LOGIC;
    out_buf_sc_22_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_23_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_23_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_23_V_we0 : OUT STD_LOGIC;
    out_buf_sc_23_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_24_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_24_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_24_V_we0 : OUT STD_LOGIC;
    out_buf_sc_24_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_25_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_25_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_25_V_we0 : OUT STD_LOGIC;
    out_buf_sc_25_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_26_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_26_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_26_V_we0 : OUT STD_LOGIC;
    out_buf_sc_26_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_27_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_27_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_27_V_we0 : OUT STD_LOGIC;
    out_buf_sc_27_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_28_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_28_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_28_V_we0 : OUT STD_LOGIC;
    out_buf_sc_28_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_29_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_29_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_29_V_we0 : OUT STD_LOGIC;
    out_buf_sc_29_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_30_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_30_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_30_V_we0 : OUT STD_LOGIC;
    out_buf_sc_30_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_buf_sc_31_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_buf_sc_31_V_ce0 : OUT STD_LOGIC;
    out_buf_sc_31_V_we0 : OUT STD_LOGIC;
    out_buf_sc_31_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_AWVALID : OUT STD_LOGIC;
    m_axi_DDR_buf_V_AWREADY : IN STD_LOGIC;
    m_axi_DDR_buf_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_DDR_buf_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_DDR_buf_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_DDR_buf_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_DDR_buf_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_WVALID : OUT STD_LOGIC;
    m_axi_DDR_buf_V_WREADY : IN STD_LOGIC;
    m_axi_DDR_buf_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_DDR_buf_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_DDR_buf_V_WLAST : OUT STD_LOGIC;
    m_axi_DDR_buf_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_ARVALID : OUT STD_LOGIC;
    m_axi_DDR_buf_V_ARREADY : IN STD_LOGIC;
    m_axi_DDR_buf_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_DDR_buf_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_DDR_buf_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_DDR_buf_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_DDR_buf_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_DDR_buf_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_RVALID : IN STD_LOGIC;
    m_axi_DDR_buf_V_RREADY : OUT STD_LOGIC;
    m_axi_DDR_buf_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_DDR_buf_V_RLAST : IN STD_LOGIC;
    m_axi_DDR_buf_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_BVALID : IN STD_LOGIC;
    m_axi_DDR_buf_V_BREADY : OUT STD_LOGIC;
    m_axi_DDR_buf_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_DDR_buf_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_DDR_buf_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    DDR_buf_V_offset : IN STD_LOGIC_VECTOR (25 downto 0);
    H_fmap_out : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels : IN STD_LOGIC_VECTOR (11 downto 0);
    out_channel_start : IN STD_LOGIC_VECTOR (31 downto 0);
    row_tile_start : IN STD_LOGIC_VECTOR (31 downto 0);
    switch_bank : IN STD_LOGIC_VECTOR (0 downto 0);
    ddr_stage_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ddr_stage_V_ce0 : OUT STD_LOGIC;
    ddr_stage_V_we0 : OUT STD_LOGIC;
    ddr_stage_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
    ddr_stage_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    ddr_tmp_V_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ddr_tmp_V_0_ce0 : OUT STD_LOGIC;
    ddr_tmp_V_0_we0 : OUT STD_LOGIC;
    ddr_tmp_V_0_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    ddr_tmp_V_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    ddr_tmp_V_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ddr_tmp_V_1_ce0 : OUT STD_LOGIC;
    ddr_tmp_V_1_we0 : OUT STD_LOGIC;
    ddr_tmp_V_1_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    ddr_tmp_V_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    ddr_tmp_V_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ddr_tmp_V_2_ce0 : OUT STD_LOGIC;
    ddr_tmp_V_2_we0 : OUT STD_LOGIC;
    ddr_tmp_V_2_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    ddr_tmp_V_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    ddr_tmp_V_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ddr_tmp_V_3_ce0 : OUT STD_LOGIC;
    ddr_tmp_V_3_we0 : OUT STD_LOGIC;
    ddr_tmp_V_3_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    ddr_tmp_V_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0) );
end;


architecture behav of load_shortcut is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv29_20 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv9_1D : STD_LOGIC_VECTOR (8 downto 0) := "000011101";
    constant ap_const_lv11_71 : STD_LOGIC_VECTOR (10 downto 0) := "00001110001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal DDR_buf_V_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal DDR_buf_V_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln272_reg_1988 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_reg_919 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_0_reg_919_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state16_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_reg_931 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_0_reg_942 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_0_reg_953 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten8_reg_964 : STD_LOGIC_VECTOR (10 downto 0);
    signal row1_0_reg_975 : STD_LOGIC_VECTOR (3 downto 0);
    signal col2_0_reg_986 : STD_LOGIC_VECTOR (6 downto 0);
    signal ddr_channel_ptr_fu_1058_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal ddr_channel_ptr_reg_1904 : STD_LOGIC_VECTOR (27 downto 0);
    signal ddr_channel_ptr_3_fu_1110_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal ddr_channel_ptr_3_reg_1912 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal col_lim_fu_1151_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_lim_reg_1933 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1159_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln274_reg_1941 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln274_fu_1165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln274_reg_1946 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_1173_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln274_1_reg_1956 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln321_fu_1185_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln321_reg_1961 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal shl_ln_fu_1191_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_reg_1966 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln281_1_fu_1213_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln281_1_reg_1983 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln272_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_reg_1988_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1221_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_1992 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal DDR_buf_V_addr_read_reg_1997 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln278_fu_1232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_reg_2002 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state20_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln278_reg_2002_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_reg_2002_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln278_fu_1237_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln281_fu_1254_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln281_reg_2011 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln281_reg_2011_pp1_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln281_1_fu_1262_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln281_1_reg_2017 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln281_1_reg_2017_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal col_fu_1270_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1872_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln281_reg_2031 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal grp_fu_1879_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln414_reg_2041 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal add_ln414_1_fu_1316_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln414_1_reg_2046 : STD_LOGIC_VECTOR (8 downto 0);
    signal bound5_fu_1370_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal bound5_reg_2051 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal icmp_ln289_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_2056 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state25_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state26_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state27_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln289_reg_2056_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_2056_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_2056_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln289_fu_1391_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln292_fu_1403_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln292_reg_2065 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln292_reg_2065_pp2_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln292_1_fu_1411_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln292_1_reg_2070 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln292_1_reg_2070_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln292_fu_1419_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln292_reg_2079 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln292_reg_2079_pp2_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln292_reg_2079_pp2_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_reg_2083 : STD_LOGIC_VECTOR (4 downto 0);
    signal col_1_fu_1433_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln292_3_fu_1442_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln292_3_reg_2093 : STD_LOGIC_VECTOR (8 downto 0);
    signal ddr_tmp_V_0_addr_1_reg_2098 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1896_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln414_2_reg_2103 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal add_ln414_2_reg_2103_pp2_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state16 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state20 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state25 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_phi_mux_i_0_phi_fu_923_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_row_0_phi_fu_946_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_row1_0_phi_fu_979_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_reg_pp2_iter0_ddr_tt_V_reg_997 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter1_ddr_tt_V_reg_997 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter2_ddr_tt_V_reg_997 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter3_ddr_tt_V_reg_997 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln274_fu_1227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln281_fu_1309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln414_fu_1327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln414_1_fu_1331_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln292_fu_1445_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln292_1_fu_1484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln414_2_fu_1491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln321_1_fu_1198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln264_fu_1018_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1024_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln264_fu_1034_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1_fu_1044_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_4_fu_1010_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln264_1_fu_1038_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln264_1_fu_1054_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln266_4_fu_1069_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln266_fu_1079_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln266_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln266_fu_1088_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ddr_channel_ptr_1_fu_1093_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln266_fu_1100_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ddr_channel_ptr_2_fu_1104_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln264_fu_1066_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_mask_V_fu_1125_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_fu_1135_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln879_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln42_fu_1145_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1159_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1173_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln321_fu_1178_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln321_fu_1181_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln279_fu_1249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_fu_1243_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_1292_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_fu_1285_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln414_1_fu_1299_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln414_2_fu_1313_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln414_fu_1303_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln290_fu_1377_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln290_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_2_fu_1397_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1887_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_1459_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_1452_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln292_2_fu_1466_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln292_fu_1470_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln292_1_fu_1479_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1872_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1872_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1872_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1879_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1879_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1879_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1887_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1887_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1887_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1896_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1896_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1896_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal grp_fu_1159_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1173_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1872_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1872_p20 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1879_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1887_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1887_p20 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1896_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1896_p20 : STD_LOGIC_VECTOR (10 downto 0);

    component FracNet_mul_29s_8lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (28 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FracNet_mul_5ns_3mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FracNet_mac_muladncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component FracNet_mac_muladocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component FracNet_mac_muladpcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    FracNet_mul_29s_8lbW_U780 : component FracNet_mul_29s_8lbW
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 29,
        din1_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ddr_channel_ptr_3_reg_1912,
        din1 => grp_fu_1159_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1159_p2);

    FracNet_mul_5ns_3mb6_U781 : component FracNet_mul_5ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 5,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1173_p0,
        din1 => add_ln274_reg_1946,
        ce => ap_const_logic_1,
        dout => grp_fu_1173_p2);

    FracNet_mac_muladncg_U782 : component FracNet_mac_muladncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 4,
        din2_WIDTH => 5,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_1872_p0,
        din1 => grp_fu_1872_p1,
        din2 => grp_fu_1872_p2,
        dout => grp_fu_1872_p3);

    FracNet_mac_muladocq_U783 : component FracNet_mac_muladocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 4,
        din2_WIDTH => 5,
        dout_WIDTH => 9)
    port map (
        din0 => grp_fu_1879_p0,
        din1 => grp_fu_1879_p1,
        din2 => grp_fu_1879_p2,
        dout => grp_fu_1879_p3);

    FracNet_mac_muladocq_U784 : component FracNet_mac_muladocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 4,
        din2_WIDTH => 5,
        dout_WIDTH => 9)
    port map (
        din0 => grp_fu_1887_p0,
        din1 => grp_fu_1887_p1,
        din2 => grp_fu_1887_p2,
        dout => grp_fu_1887_p3);

    FracNet_mac_muladpcA_U785 : component FracNet_mac_muladpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        din2_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1896_p0,
        din1 => grp_fu_1896_p1,
        din2 => grp_fu_1896_p2,
        dout => grp_fu_1896_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state16)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state16);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state20) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state20)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state20);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state25) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state25)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state25);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then
                if (((trunc_ln292_reg_2079_pp2_iter2_reg = ap_const_lv2_3) and (icmp_ln289_reg_2056_pp2_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997 <= ddr_tmp_V_3_q0;
                elsif (((trunc_ln292_reg_2079_pp2_iter2_reg = ap_const_lv2_2) and (icmp_ln289_reg_2056_pp2_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997 <= ddr_tmp_V_2_q0;
                elsif (((trunc_ln292_reg_2079_pp2_iter2_reg = ap_const_lv2_1) and (icmp_ln289_reg_2056_pp2_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997 <= ddr_tmp_V_1_q0;
                elsif (((trunc_ln292_reg_2079_pp2_iter2_reg = ap_const_lv2_0) and (icmp_ln289_reg_2056_pp2_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997 <= ddr_tmp_V_0_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997 <= ap_phi_reg_pp2_iter3_ddr_tt_V_reg_997;
                end if;
            end if; 
        end if;
    end process;

    col2_0_reg_986_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_fu_1386_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                col2_0_reg_986 <= col_1_fu_1433_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                col2_0_reg_986 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    col_0_reg_953_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                col_0_reg_953 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_fu_1232_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                col_0_reg_953 <= col_fu_1270_p2;
            end if; 
        end if;
    end process;

    i_0_reg_919_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln272_reg_1988 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_0_reg_919 <= i_reg_1992;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                i_0_reg_919 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten8_reg_964_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_fu_1386_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                indvar_flatten8_reg_964 <= add_ln289_fu_1391_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                indvar_flatten8_reg_964 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_931_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                indvar_flatten_reg_931 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_fu_1232_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                indvar_flatten_reg_931 <= add_ln278_fu_1237_p2;
            end if; 
        end if;
    end process;

    row1_0_reg_975_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                row1_0_reg_975 <= select_ln292_1_reg_2070;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                row1_0_reg_975 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    row_0_reg_942_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                row_0_reg_942 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_reg_2002 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                row_0_reg_942 <= select_ln281_1_reg_2017;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln272_reg_1988 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                DDR_buf_V_addr_read_reg_1997 <= m_axi_DDR_buf_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln274_reg_1946 <= add_ln274_fu_1165_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_reg_2002 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                add_ln281_reg_2031 <= grp_fu_1872_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln321_reg_1961 <= add_ln321_fu_1185_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_reg_2002_pp1_iter1_reg = ap_const_lv1_0))) then
                add_ln414_1_reg_2046 <= add_ln414_1_fu_1316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then
                add_ln414_2_reg_2103 <= grp_fu_1896_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                add_ln414_2_reg_2103_pp2_iter3_reg <= add_ln414_2_reg_2103;
                icmp_ln289_reg_2056_pp2_iter2_reg <= icmp_ln289_reg_2056_pp2_iter1_reg;
                icmp_ln289_reg_2056_pp2_iter3_reg <= icmp_ln289_reg_2056_pp2_iter2_reg;
                trunc_ln292_reg_2079_pp2_iter2_reg <= trunc_ln292_reg_2079_pp2_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_reg_2002_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then
                add_ln414_reg_2041 <= grp_fu_1879_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                ap_phi_reg_pp2_iter1_ddr_tt_V_reg_997 <= ap_phi_reg_pp2_iter0_ddr_tt_V_reg_997;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                ap_phi_reg_pp2_iter2_ddr_tt_V_reg_997 <= ap_phi_reg_pp2_iter1_ddr_tt_V_reg_997;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter3_ddr_tt_V_reg_997 <= ap_phi_reg_pp2_iter2_ddr_tt_V_reg_997;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                    bound5_reg_2051(10 downto 3) <= bound5_fu_1370_p3(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                col_lim_reg_1933 <= col_lim_fu_1151_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                ddr_channel_ptr_3_reg_1912 <= ddr_channel_ptr_3_fu_1110_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                ddr_channel_ptr_reg_1904 <= ddr_channel_ptr_fu_1058_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                ddr_tmp_V_0_addr_1_reg_2098 <= sext_ln292_fu_1445_p1(8 - 1 downto 0);
                    zext_ln292_3_reg_2093(4 downto 0) <= zext_ln292_3_fu_1442_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_0_reg_919_pp0_iter1_reg <= i_0_reg_919;
                icmp_ln272_reg_1988 <= icmp_ln272_fu_1216_p2;
                icmp_ln272_reg_1988_pp0_iter1_reg <= icmp_ln272_reg_1988;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_1992 <= i_fu_1221_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln278_reg_2002 <= icmp_ln278_fu_1232_p2;
                icmp_ln278_reg_2002_pp1_iter1_reg <= icmp_ln278_reg_2002;
                select_ln281_1_reg_2017_pp1_iter1_reg <= select_ln281_1_reg_2017;
                select_ln281_reg_2011_pp1_iter1_reg <= select_ln281_reg_2011;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln278_reg_2002_pp1_iter2_reg <= icmp_ln278_reg_2002_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln289_reg_2056 <= icmp_ln289_fu_1386_p2;
                icmp_ln289_reg_2056_pp2_iter1_reg <= icmp_ln289_reg_2056;
                select_ln292_1_reg_2070_pp2_iter1_reg <= select_ln292_1_reg_2070;
                select_ln292_reg_2065_pp2_iter1_reg <= select_ln292_reg_2065;
                trunc_ln292_reg_2079_pp2_iter1_reg <= trunc_ln292_reg_2079;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                mul_ln274_1_reg_1956 <= grp_fu_1173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                mul_ln274_reg_1941 <= grp_fu_1159_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_fu_1232_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                select_ln281_1_reg_2017 <= select_ln281_1_fu_1262_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_fu_1232_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                select_ln281_reg_2011 <= select_ln281_fu_1254_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_fu_1386_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln292_1_reg_2070 <= select_ln292_1_fu_1411_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_fu_1386_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln292_reg_2065 <= select_ln292_fu_1403_p3;
                tmp_9_reg_2083 <= select_ln292_fu_1403_p3(6 downto 2);
                trunc_ln292_reg_2079 <= trunc_ln292_fu_1419_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((m_axi_DDR_buf_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    shl_ln_reg_1966(7 downto 3) <= shl_ln_fu_1191_p3(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                    zext_ln281_1_reg_1983(4 downto 0) <= zext_ln281_1_fu_1213_p1(4 downto 0);
            end if;
        end if;
    end process;
    shl_ln_reg_1966(2 downto 0) <= "000";
    zext_ln281_1_reg_1983(7 downto 5) <= "000";
    bound5_reg_2051(2 downto 0) <= "000";
    zext_ln292_3_reg_2093(8 downto 5) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_DDR_buf_V_ARREADY, ap_CS_fsm_state9, ap_enable_reg_pp0_iter1, icmp_ln272_fu_1216_p2, ap_enable_reg_pp0_iter0, icmp_ln278_fu_1232_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, icmp_ln289_fu_1386_p2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter3, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((m_axi_DDR_buf_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln272_fu_1216_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln272_fu_1216_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln278_fu_1232_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln278_fu_1232_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln289_fu_1386_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln289_fu_1386_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    DDR_buf_V_blk_n_AR_assign_proc : process(m_axi_DDR_buf_V_ARREADY, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            DDR_buf_V_blk_n_AR <= m_axi_DDR_buf_V_ARREADY;
        else 
            DDR_buf_V_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    DDR_buf_V_blk_n_R_assign_proc : process(m_axi_DDR_buf_V_RVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln272_reg_1988)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln272_reg_1988 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DDR_buf_V_blk_n_R <= m_axi_DDR_buf_V_RVALID;
        else 
            DDR_buf_V_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    add_ln274_fu_1165_p2 <= std_logic_vector(unsigned(mul_ln274_reg_1941) + unsigned(row_tile_start));
    add_ln278_fu_1237_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_931) + unsigned(ap_const_lv8_1));
    add_ln289_fu_1391_p2 <= std_logic_vector(unsigned(indvar_flatten8_reg_964) + unsigned(ap_const_lv11_1));
    add_ln292_1_fu_1479_p2 <= std_logic_vector(unsigned(zext_ln292_3_reg_2093) + unsigned(sub_ln292_fu_1470_p2));
    add_ln321_fu_1185_p2 <= std_logic_vector(signed(sext_ln321_fu_1178_p1) + signed(zext_ln321_fu_1181_p1));
    add_ln414_1_fu_1316_p2 <= std_logic_vector(unsigned(zext_ln414_2_fu_1313_p1) + unsigned(sub_ln414_fu_1303_p2));
    add_ln42_fu_1145_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(trunc_ln2_fu_1135_p4));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(19);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state19 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state24 <= ap_CS_fsm(18);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(20);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_DDR_buf_V_RVALID, ap_enable_reg_pp0_iter1, icmp_ln272_reg_1988)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln272_reg_1988 = ap_const_lv1_0) and (m_axi_DDR_buf_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_DDR_buf_V_RVALID, ap_enable_reg_pp0_iter1, icmp_ln272_reg_1988)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln272_reg_1988 = ap_const_lv1_0) and (m_axi_DDR_buf_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_pp0_stage0_iter1_assign_proc : process(m_axi_DDR_buf_V_RVALID, icmp_ln272_reg_1988)
    begin
                ap_block_state17_pp0_stage0_iter1 <= ((icmp_ln272_reg_1988 = ap_const_lv1_0) and (m_axi_DDR_buf_V_RVALID = ap_const_logic_0));
    end process;

        ap_block_state18_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state16_assign_proc : process(icmp_ln272_fu_1216_p2)
    begin
        if ((icmp_ln272_fu_1216_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state16 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state20_assign_proc : process(icmp_ln278_fu_1232_p2)
    begin
        if ((icmp_ln278_fu_1232_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state20 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state25_assign_proc : process(icmp_ln289_fu_1386_p2)
    begin
        if ((icmp_ln289_fu_1386_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state25 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_923_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln272_reg_1988, i_0_reg_919, i_reg_1992)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln272_reg_1988 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_0_phi_fu_923_p4 <= i_reg_1992;
        else 
            ap_phi_mux_i_0_phi_fu_923_p4 <= i_0_reg_919;
        end if; 
    end process;


    ap_phi_mux_row1_0_phi_fu_979_p4_assign_proc : process(row1_0_reg_975, icmp_ln289_reg_2056, ap_CS_fsm_pp2_stage0, select_ln292_1_reg_2070, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln289_reg_2056 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_row1_0_phi_fu_979_p4 <= select_ln292_1_reg_2070;
        else 
            ap_phi_mux_row1_0_phi_fu_979_p4 <= row1_0_reg_975;
        end if; 
    end process;


    ap_phi_mux_row_0_phi_fu_946_p4_assign_proc : process(row_0_reg_942, icmp_ln278_reg_2002, ap_CS_fsm_pp1_stage0, select_ln281_1_reg_2017, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln278_reg_2002 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_row_0_phi_fu_946_p4 <= select_ln281_1_reg_2017;
        else 
            ap_phi_mux_row_0_phi_fu_946_p4 <= row_0_reg_942;
        end if; 
    end process;

    ap_phi_reg_pp2_iter0_ddr_tt_V_reg_997 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound5_fu_1370_p3 <= (H_fmap_out & ap_const_lv3_0);
    col_1_fu_1433_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(select_ln292_fu_1403_p3));
    col_fu_1270_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(select_ln281_fu_1254_p3));
    col_lim_fu_1151_p3 <= 
        trunc_ln2_fu_1135_p4 when (icmp_ln879_fu_1129_p2(0) = '1') else 
        add_ln42_fu_1145_p2;
    ddr_channel_ptr_1_fu_1093_p3 <= 
        ddr_channel_ptr_reg_1904 when (icmp_ln266_fu_1083_p2(0) = '1') else 
        sub_ln266_fu_1088_p2;
    ddr_channel_ptr_2_fu_1104_p2 <= std_logic_vector(unsigned(ap_const_lv29_20) + unsigned(sext_ln266_fu_1100_p1));
    ddr_channel_ptr_3_fu_1110_p3 <= 
        ddr_channel_ptr_2_fu_1104_p2 when (switch_bank(0) = '1') else 
        sext_ln264_fu_1066_p1;
    ddr_channel_ptr_fu_1058_p3 <= 
        sub_ln264_1_fu_1038_p2 when (tmp_4_fu_1010_p3(0) = '1') else 
        zext_ln264_1_fu_1054_p1;

    ddr_stage_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp1_iter2, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0, zext_ln274_fu_1227_p1, zext_ln281_fu_1309_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            ddr_stage_V_address0 <= zext_ln281_fu_1309_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ddr_stage_V_address0 <= zext_ln274_fu_1227_p1(8 - 1 downto 0);
        else 
            ddr_stage_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ddr_stage_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            ddr_stage_V_ce0 <= ap_const_logic_1;
        else 
            ddr_stage_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ddr_stage_V_d0 <= DDR_buf_V_addr_read_reg_1997;

    ddr_stage_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln272_reg_1988_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln272_reg_1988_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ddr_stage_V_we0 <= ap_const_logic_1;
        else 
            ddr_stage_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ddr_tmp_V_0_address0_assign_proc : process(ddr_tmp_V_0_addr_1_reg_2098, ap_enable_reg_pp2_iter2, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, ap_block_pp2_stage0, sext_ln414_fu_1327_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            ddr_tmp_V_0_address0 <= ddr_tmp_V_0_addr_1_reg_2098;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ddr_tmp_V_0_address0 <= sext_ln414_fu_1327_p1(8 - 1 downto 0);
        else 
            ddr_tmp_V_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ddr_tmp_V_0_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2, ap_enable_reg_pp1_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then 
            ddr_tmp_V_0_ce0 <= ap_const_logic_1;
        else 
            ddr_tmp_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ddr_tmp_V_0_d0 <= ddr_stage_V_q0(128 - 1 downto 0);

    ddr_tmp_V_0_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln278_reg_2002_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_reg_2002_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ddr_tmp_V_0_we0 <= ap_const_logic_1;
        else 
            ddr_tmp_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ddr_tmp_V_1_address0_assign_proc : process(ap_enable_reg_pp2_iter2, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, ap_block_pp2_stage0, sext_ln414_1_fu_1331_p1, sext_ln292_1_fu_1484_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            ddr_tmp_V_1_address0 <= sext_ln292_1_fu_1484_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ddr_tmp_V_1_address0 <= sext_ln414_1_fu_1331_p1(8 - 1 downto 0);
        else 
            ddr_tmp_V_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ddr_tmp_V_1_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2, ap_enable_reg_pp1_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then 
            ddr_tmp_V_1_ce0 <= ap_const_logic_1;
        else 
            ddr_tmp_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ddr_tmp_V_1_d0 <= ddr_stage_V_q0(255 downto 128);

    ddr_tmp_V_1_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln278_reg_2002_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_reg_2002_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ddr_tmp_V_1_we0 <= ap_const_logic_1;
        else 
            ddr_tmp_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ddr_tmp_V_2_address0_assign_proc : process(ap_enable_reg_pp2_iter2, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, ap_block_pp2_stage0, sext_ln414_1_fu_1331_p1, sext_ln292_1_fu_1484_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            ddr_tmp_V_2_address0 <= sext_ln292_1_fu_1484_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ddr_tmp_V_2_address0 <= sext_ln414_1_fu_1331_p1(8 - 1 downto 0);
        else 
            ddr_tmp_V_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ddr_tmp_V_2_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2, ap_enable_reg_pp1_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then 
            ddr_tmp_V_2_ce0 <= ap_const_logic_1;
        else 
            ddr_tmp_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ddr_tmp_V_2_d0 <= ddr_stage_V_q0(383 downto 256);

    ddr_tmp_V_2_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln278_reg_2002_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_reg_2002_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ddr_tmp_V_2_we0 <= ap_const_logic_1;
        else 
            ddr_tmp_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ddr_tmp_V_3_address0_assign_proc : process(ap_enable_reg_pp2_iter2, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, ap_block_pp2_stage0, sext_ln414_1_fu_1331_p1, sext_ln292_1_fu_1484_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            ddr_tmp_V_3_address0 <= sext_ln292_1_fu_1484_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ddr_tmp_V_3_address0 <= sext_ln414_1_fu_1331_p1(8 - 1 downto 0);
        else 
            ddr_tmp_V_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ddr_tmp_V_3_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2, ap_enable_reg_pp1_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then 
            ddr_tmp_V_3_ce0 <= ap_const_logic_1;
        else 
            ddr_tmp_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ddr_tmp_V_3_d0 <= ddr_stage_V_q0(511 downto 384);

    ddr_tmp_V_3_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln278_reg_2002_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln278_reg_2002_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ddr_tmp_V_3_we0 <= ap_const_logic_1;
        else 
            ddr_tmp_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1159_p1 <= grp_fu_1159_p10(8 - 1 downto 0);
    grp_fu_1159_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(H_fmap_out),32));
    grp_fu_1173_p0 <= grp_fu_1173_p00(5 - 1 downto 0);
    grp_fu_1173_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_lim_reg_1933),32));
    grp_fu_1872_p0 <= zext_ln281_1_reg_1983(5 - 1 downto 0);
    grp_fu_1872_p1 <= grp_fu_1872_p10(4 - 1 downto 0);
    grp_fu_1872_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln281_1_reg_2017),8));
    grp_fu_1872_p2 <= grp_fu_1872_p20(5 - 1 downto 0);
    grp_fu_1872_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln281_reg_2011),8));
    grp_fu_1879_p0 <= ap_const_lv9_1D(6 - 1 downto 0);
    grp_fu_1879_p1 <= grp_fu_1879_p10(4 - 1 downto 0);
    grp_fu_1879_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln281_1_reg_2017_pp1_iter1_reg),9));
    grp_fu_1879_p2 <= zext_ln414_2_fu_1313_p1(5 - 1 downto 0);
    grp_fu_1887_p0 <= ap_const_lv9_1D(6 - 1 downto 0);
    grp_fu_1887_p1 <= grp_fu_1887_p10(4 - 1 downto 0);
    grp_fu_1887_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln292_1_reg_2070),9));
    grp_fu_1887_p2 <= grp_fu_1887_p20(5 - 1 downto 0);
    grp_fu_1887_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_2083),9));
    grp_fu_1896_p0 <= ap_const_lv11_71(8 - 1 downto 0);
    grp_fu_1896_p1 <= grp_fu_1896_p10(4 - 1 downto 0);
    grp_fu_1896_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln292_1_reg_2070_pp2_iter1_reg),11));
    grp_fu_1896_p2 <= grp_fu_1896_p20(7 - 1 downto 0);
    grp_fu_1896_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln292_reg_2065_pp2_iter1_reg),11));
    i_fu_1221_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_923_p4) + unsigned(ap_const_lv8_1));
    icmp_ln266_fu_1083_p2 <= "1" when (signed(ddr_channel_ptr_reg_1904) < signed(zext_ln266_fu_1079_p1)) else "0";
    icmp_ln272_fu_1216_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_923_p4 = shl_ln_reg_1966) else "0";
    icmp_ln278_fu_1232_p2 <= "1" when (indvar_flatten_reg_931 = shl_ln_reg_1966) else "0";
    icmp_ln279_fu_1249_p2 <= "0" when (col_0_reg_953 = col_lim_reg_1933) else "1";
    icmp_ln289_fu_1386_p2 <= "1" when (indvar_flatten8_reg_964 = bound5_reg_2051) else "0";
    icmp_ln290_fu_1381_p2 <= "1" when (signed(zext_ln290_fu_1377_p1) < signed(H_fmap_out)) else "0";
    icmp_ln879_fu_1129_p2 <= "1" when (ret_mask_V_fu_1125_p1 = ap_const_lv2_0) else "0";
    m_axi_DDR_buf_V_ARADDR <= sext_ln321_1_fu_1198_p1(32 - 1 downto 0);
    m_axi_DDR_buf_V_ARBURST <= ap_const_lv2_0;
    m_axi_DDR_buf_V_ARCACHE <= ap_const_lv4_0;
    m_axi_DDR_buf_V_ARID <= ap_const_lv1_0;
    m_axi_DDR_buf_V_ARLEN <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1191_p3),32));
    m_axi_DDR_buf_V_ARLOCK <= ap_const_lv2_0;
    m_axi_DDR_buf_V_ARPROT <= ap_const_lv3_0;
    m_axi_DDR_buf_V_ARQOS <= ap_const_lv4_0;
    m_axi_DDR_buf_V_ARREGION <= ap_const_lv4_0;
    m_axi_DDR_buf_V_ARSIZE <= ap_const_lv3_0;
    m_axi_DDR_buf_V_ARUSER <= ap_const_lv1_0;

    m_axi_DDR_buf_V_ARVALID_assign_proc : process(m_axi_DDR_buf_V_ARREADY, ap_CS_fsm_state9)
    begin
        if (((m_axi_DDR_buf_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_DDR_buf_V_ARVALID <= ap_const_logic_1;
        else 
            m_axi_DDR_buf_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_DDR_buf_V_AWADDR <= ap_const_lv32_0;
    m_axi_DDR_buf_V_AWBURST <= ap_const_lv2_0;
    m_axi_DDR_buf_V_AWCACHE <= ap_const_lv4_0;
    m_axi_DDR_buf_V_AWID <= ap_const_lv1_0;
    m_axi_DDR_buf_V_AWLEN <= ap_const_lv32_0;
    m_axi_DDR_buf_V_AWLOCK <= ap_const_lv2_0;
    m_axi_DDR_buf_V_AWPROT <= ap_const_lv3_0;
    m_axi_DDR_buf_V_AWQOS <= ap_const_lv4_0;
    m_axi_DDR_buf_V_AWREGION <= ap_const_lv4_0;
    m_axi_DDR_buf_V_AWSIZE <= ap_const_lv3_0;
    m_axi_DDR_buf_V_AWUSER <= ap_const_lv1_0;
    m_axi_DDR_buf_V_AWVALID <= ap_const_logic_0;
    m_axi_DDR_buf_V_BREADY <= ap_const_logic_0;

    m_axi_DDR_buf_V_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln272_reg_1988, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln272_reg_1988 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_DDR_buf_V_RREADY <= ap_const_logic_1;
        else 
            m_axi_DDR_buf_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_DDR_buf_V_WDATA <= ap_const_lv512_lc_1;
    m_axi_DDR_buf_V_WID <= ap_const_lv1_0;
    m_axi_DDR_buf_V_WLAST <= ap_const_logic_0;
    m_axi_DDR_buf_V_WSTRB <= ap_const_lv64_0;
    m_axi_DDR_buf_V_WUSER <= ap_const_lv1_0;
    m_axi_DDR_buf_V_WVALID <= ap_const_logic_0;
    out_buf_sc_0_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_0_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_0_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_0_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(4 - 1 downto 0);

    out_buf_sc_0_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_0_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_10_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_10_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_10_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_10_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(43 downto 40);

    out_buf_sc_10_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_10_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_11_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_11_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_11_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_11_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(47 downto 44);

    out_buf_sc_11_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_11_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_12_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_12_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_12_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_12_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(51 downto 48);

    out_buf_sc_12_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_12_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_12_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_13_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_13_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_13_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_13_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(55 downto 52);

    out_buf_sc_13_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_13_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_13_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_14_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_14_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_14_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_14_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_14_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(59 downto 56);

    out_buf_sc_14_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_14_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_14_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_15_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_15_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_15_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_15_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_15_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(63 downto 60);

    out_buf_sc_15_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_15_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_15_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_16_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_16_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_16_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_16_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_16_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(67 downto 64);

    out_buf_sc_16_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_16_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_16_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_17_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_17_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_17_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_17_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_17_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(71 downto 68);

    out_buf_sc_17_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_17_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_17_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_18_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_18_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_18_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_18_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_18_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(75 downto 72);

    out_buf_sc_18_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_18_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_18_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_19_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_19_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_19_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_19_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_19_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(79 downto 76);

    out_buf_sc_19_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_19_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_19_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_1_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_1_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_1_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_1_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(7 downto 4);

    out_buf_sc_1_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_1_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_20_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_20_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_20_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_20_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_20_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(83 downto 80);

    out_buf_sc_20_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_20_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_20_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_21_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_21_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_21_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_21_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_21_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(87 downto 84);

    out_buf_sc_21_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_21_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_21_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_22_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_22_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_22_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_22_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_22_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(91 downto 88);

    out_buf_sc_22_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_22_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_22_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_23_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_23_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_23_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_23_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_23_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(95 downto 92);

    out_buf_sc_23_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_23_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_23_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_24_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_24_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_24_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_24_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_24_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(99 downto 96);

    out_buf_sc_24_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_24_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_24_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_25_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_25_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_25_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_25_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_25_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(103 downto 100);

    out_buf_sc_25_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_25_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_25_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_26_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_26_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_26_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_26_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_26_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(107 downto 104);

    out_buf_sc_26_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_26_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_26_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_27_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_27_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_27_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_27_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_27_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(111 downto 108);

    out_buf_sc_27_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_27_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_27_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_28_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_28_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_28_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_28_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_28_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(115 downto 112);

    out_buf_sc_28_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_28_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_28_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_29_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_29_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_29_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_29_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_29_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(119 downto 116);

    out_buf_sc_29_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_29_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_29_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_2_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_2_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_2_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_2_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(11 downto 8);

    out_buf_sc_2_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_2_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_30_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_30_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_30_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_30_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_30_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(123 downto 120);

    out_buf_sc_30_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_30_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_30_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_31_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_31_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_31_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_31_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_31_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(127 downto 124);

    out_buf_sc_31_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_31_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_31_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_3_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_3_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_3_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_3_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(15 downto 12);

    out_buf_sc_3_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_3_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_4_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_4_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_4_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_4_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(19 downto 16);

    out_buf_sc_4_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_4_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_5_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_5_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_5_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_5_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(23 downto 20);

    out_buf_sc_5_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_5_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_6_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_6_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_6_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_6_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(27 downto 24);

    out_buf_sc_6_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_6_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_7_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_7_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_7_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_7_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(31 downto 28);

    out_buf_sc_7_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_7_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_8_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_8_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_8_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_8_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(35 downto 32);

    out_buf_sc_8_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_8_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_9_V_address0 <= sext_ln414_2_fu_1491_p1(10 - 1 downto 0);

    out_buf_sc_9_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_9_V_ce0 <= ap_const_logic_1;
        else 
            out_buf_sc_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_buf_sc_9_V_d0 <= ap_phi_reg_pp2_iter4_ddr_tt_V_reg_997(39 downto 36);

    out_buf_sc_9_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln289_reg_2056_pp2_iter3_reg, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln289_reg_2056_pp2_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            out_buf_sc_9_V_we0 <= ap_const_logic_1;
        else 
            out_buf_sc_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_mask_V_fu_1125_p1 <= H_fmap_out(2 - 1 downto 0);
    row_2_fu_1397_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_row1_0_phi_fu_979_p4));
    row_fu_1243_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_row_0_phi_fu_946_p4));
    select_ln281_1_fu_1262_p3 <= 
        ap_phi_mux_row_0_phi_fu_946_p4 when (icmp_ln279_fu_1249_p2(0) = '1') else 
        row_fu_1243_p2;
    select_ln281_fu_1254_p3 <= 
        col_0_reg_953 when (icmp_ln279_fu_1249_p2(0) = '1') else 
        ap_const_lv5_0;
    select_ln292_1_fu_1411_p3 <= 
        ap_phi_mux_row1_0_phi_fu_979_p4 when (icmp_ln290_fu_1381_p2(0) = '1') else 
        row_2_fu_1397_p2;
    select_ln292_fu_1403_p3 <= 
        col2_0_reg_986 when (icmp_ln290_fu_1381_p2(0) = '1') else 
        ap_const_lv7_0;
        sext_ln264_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ddr_channel_ptr_reg_1904),29));

        sext_ln266_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ddr_channel_ptr_1_fu_1093_p3),29));

        sext_ln292_1_fu_1484_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln292_1_fu_1479_p2),64));

        sext_ln292_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1887_p3),64));

        sext_ln321_1_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln321_reg_1961),64));

        sext_ln321_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln274_1_reg_1956),33));

        sext_ln414_1_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln414_1_reg_2046),64));

        sext_ln414_2_fu_1491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln414_2_reg_2103_pp2_iter3_reg),64));

        sext_ln414_fu_1327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln414_reg_2041),64));

    shl_ln_fu_1191_p3 <= (col_lim_reg_1933 & ap_const_lv3_0);
    sub_ln264_1_fu_1038_p2 <= std_logic_vector(unsigned(ap_const_lv28_0) - unsigned(zext_ln264_fu_1034_p1));
    sub_ln264_fu_1018_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(out_channel_start));
    sub_ln266_fu_1088_p2 <= std_logic_vector(signed(ddr_channel_ptr_reg_1904) - signed(zext_ln266_fu_1079_p1));
    sub_ln292_fu_1470_p2 <= std_logic_vector(unsigned(tmp_7_fu_1452_p3) - unsigned(zext_ln292_2_fu_1466_p1));
    sub_ln414_fu_1303_p2 <= std_logic_vector(unsigned(tmp_5_fu_1285_p3) - unsigned(zext_ln414_1_fu_1299_p1));
    tmp_1_fu_1044_p4 <= out_channel_start(31 downto 5);
    tmp_4_fu_1010_p3 <= out_channel_start(31 downto 31);
    tmp_5_fu_1285_p3 <= (select_ln281_1_reg_2017_pp1_iter1_reg & ap_const_lv5_0);
    tmp_6_fu_1292_p3 <= (select_ln281_1_reg_2017_pp1_iter1_reg & ap_const_lv2_0);
    tmp_7_fu_1452_p3 <= (select_ln292_1_reg_2070_pp2_iter1_reg & ap_const_lv5_0);
    tmp_8_fu_1459_p3 <= (select_ln292_1_reg_2070_pp2_iter1_reg & ap_const_lv2_0);
    tmp_s_fu_1024_p4 <= sub_ln264_fu_1018_p2(31 downto 5);
    trunc_ln266_4_fu_1069_p4 <= in_channels(10 downto 5);
    trunc_ln292_fu_1419_p1 <= select_ln292_fu_1403_p3(2 - 1 downto 0);
    trunc_ln2_fu_1135_p4 <= H_fmap_out(6 downto 2);
    zext_ln264_1_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1044_p4),28));
    zext_ln264_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1024_p4),28));
    zext_ln266_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln266_4_fu_1069_p4),28));
    zext_ln274_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_919_pp0_iter1_reg),64));
    zext_ln281_1_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_lim_reg_1933),8));
    zext_ln281_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln281_reg_2031),64));
    zext_ln290_fu_1377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col2_0_reg_986),8));
    zext_ln292_2_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1459_p3),9));
    zext_ln292_3_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_2083),9));
    zext_ln321_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(DDR_buf_V_offset),33));
    zext_ln414_1_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1292_p3),9));
    zext_ln414_2_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln281_reg_2011_pp1_iter1_reg),9));
end behav;
